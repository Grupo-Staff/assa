Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: DBT

; Microsoft Dynamics AX Table : VendInvoiceJour unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #VendInvoiceJour
    EnforceFKRelation 0
    PROPERTIES
      Name                #VendInvoiceJour
      Label               #@SYS12872
      FormRef             #VendInvoiceJournal
      TitleField1         #InvoiceId
      TitleField2         #InvoiceAccount
      ConfigurationKey    #LedgerBasic
      SecurityKey         #VendTables
      MaxAccessMode       #Edit
      CacheLookup         #NotInTTS
      CreateRecIdIndex    #Yes
      TableGroup          #Transaction
      PrimaryIndex        #RecId
      ClusterIndex        #RecId
      SingularLabel       #@SYS3179
      ModifiedDateTime    #Yes
      CreatedDateTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@SYS124493
      Origin              #{2C0F01EB-0000-1000-69E0-44AF5BC56CEB}
      LegacyId            #491
    ENDPROPERTIES
    
    FIELDS
      FIELD #AttorneyDate_RU
        DATE
        PROPERTIES
          Name                #AttorneyDate_RU
          Table               #VendInvoiceJour
          Origin              #{2A0F3E9B-01EB-1000-6D12-8CDDF6A6F181}
          LegacyId            #16027
          ExtendedDataType    #AttorneyDate_RU
        ENDPROPERTIES
        
      FIELD #AttorneyId_RU
        STRING
        PROPERTIES
          Name                #AttorneyId_RU
          Table               #VendInvoiceJour
          Origin              #{2A0D3E9A-01EB-1000-F426-CBA7FE767279}
          LegacyId            #16026
          ExtendedDataType    #AttorneyId_RU
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #AttorneyIssuedName_RU
        STRING
        PROPERTIES
          Name                #AttorneyIssuedName_RU
          Table               #VendInvoiceJour
          Origin              #{2A153E99-01EB-1000-7309-B5A1968202AE}
          LegacyId            #16025
          ExtendedDataType    #AttorneyIssuedName_RU
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #BankLCImportLine
        INT64
        PROPERTIES
          Name                #BankLCImportLine
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{31DAA8E2-1BB4-4C19-A3F5-573CFF809E73}
          LegacyId            #140
          ExtendedDataType    #BankLCLineRefRecId
        ENDPROPERTIES
        
      FIELD #CashDisc
        REAL
        PROPERTIES
          Name                #CashDisc
          Label               #@SYS4376
          HelpText            #@SYS17142
          Table               #VendInvoiceJour
          Origin              #{83D73B99-786B-4BCC-81E0-D50C7011667A}
          LegacyId            #8
          ExtendedDataType    #VendCashDiscAmount
        ENDPROPERTIES
        
      FIELD #CashDiscCode
        STRING
        PROPERTIES
          Name                #CashDiscCode
          HelpText            #@SYS7944
          Table               #VendInvoiceJour
          Origin              #{A14BC793-2998-41FD-B8A7-127B8ED7E825}
          LegacyId            #35
          ExtendedDataType    #VendCashDiscCode
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #CashDiscDate
        DATE
        PROPERTIES
          Name                #CashDiscDate
          HelpText            #@SYS10266
          Table               #VendInvoiceJour
          Origin              #{E84F4A61-CC09-4A97-9BC2-42723ADA4827}
          LegacyId            #9
          ExtendedDataType    #VendCashDiscDate
        ENDPROPERTIES
        
      FIELD #CashDiscPercent
        REAL
        PROPERTIES
          Name                #CashDiscPercent
          Table               #VendInvoiceJour
          CountryRegionCodes  #ES
          Origin              #{FC3BEABA-2634-479D-BE5E-E5AB367E60C5}
          LegacyId            #36
          ExtendedDataType    #DiscPct
        ENDPROPERTIES
        
      FIELD #CFDIUUID_MX
        STRING
        PROPERTIES
          Name                #CFDIUUID_MX
          Table               #VendInvoiceJour
          CountryRegionCodes  #MX
          Origin              #{C1B1AD14-437C-4D2F-BFA2-88243E841DE5}
          ExtendedDataType    #EInvoiceCFDIUUID_MX
          StringSize          #36
        ENDPROPERTIES
        
      FIELD #ConsigneeAccount_RU
        STRING
        PROPERTIES
          Name                #ConsigneeAccount_RU
          Table               #VendInvoiceJour
          Origin              #{2A133E96-01EB-1000-EFE0-68165AC2F880}
          LegacyId            #16022
          ExtendedDataType    #CustAccountConsignee_RU
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ConsignorAccount_RU
        STRING
        PROPERTIES
          Name                #ConsignorAccount_RU
          Table               #VendInvoiceJour
          Origin              #{2A133E97-01EB-1000-4EDD-6A165AC2F88A}
          LegacyId            #16023
          ExtendedDataType    #VendAccountConsignor_RU
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ConsTarget_JP
        ENUM
        PROPERTIES
          Name                #ConsTarget_JP
          Table               #VendInvoiceJour
          Origin              #{2A0D0000-01EB-1000-EA18-3BD620A57E67}
          ExtendedDataType    #VendConsTarget_JP
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ContractNum_SA
        STRING
        PROPERTIES
          Name                #ContractNum_SA
          Table               #VendInvoiceJour
          Origin              #{CDB15D42-6177-417F-89E7-DE0319595044}
          LegacyId            #89
          ExtendedDataType    #VendContractNumZakat_SA
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #Correct_RU
        ENUM
        PROPERTIES
          Name                #Correct_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{2A0A1F52-01EB-1000-E9EC-7A7F6563745F}
          LegacyId            #8018
          ExtendedDataType    #Correct_RU
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CorrectedInvoiceDate_RU
        DATE
        PROPERTIES
          Name                #CorrectedInvoiceDate_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{2A171F87-01EB-1000-FB06-5A2BB6B58C44}
          LegacyId            #8071
          ExtendedDataType    #CorrectedInvoiceDate_RU
        ENDPROPERTIES
        
      FIELD #CorrectedInvoiceId_RU
        STRING
        PROPERTIES
          Name                #CorrectedInvoiceId_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{2A150000-01EB-1000-821B-99F5BD850D3C}
          ExtendedDataType    #CorrectedInvoiceId_RU
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #CorrectionType_RU
        ENUM
        PROPERTIES
          Name                #CorrectionType_RU
          Table               #VendInvoiceJour
          CountryRegionCodes  #RU
          Origin              #{7E8F714C-F65B-476C-B62B-7D1962682885}
          EnumType            #FactureCorrectionType_RU
        ENDPROPERTIES
        
      FIELD #CostLedgerVoucher
        STRING
        PROPERTIES
          Name                #CostLedgerVoucher
          Label               #@SYS22878
          Table               #VendInvoiceJour
          Origin              #{ACE2DF0C-39A2-456E-96AC-E3E32D16E9D5}
          LegacyId            #105
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #CountryRegionId
        STRING
        PROPERTIES
          Name                #CountryRegionId
          Table               #VendInvoiceJour
          Origin              #{216324AD-F4C4-4C95-95BC-D08DEB4DA4AF}
          LegacyId            #29
          ExtendedDataType    #AddressCountryRegionId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS20783
          Mandatory           #Yes
          Table               #VendInvoiceJour
          Origin              #{4A77F37D-AF7A-47E9-9CDD-616E2ECE9C85}
          LegacyId            #18
          ExtendedDataType    #VendCurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          Visible             #No
          Table               #VendInvoiceJour
          Origin              #{60B6145C-7A39-43B3-9332-5477652521D6}
          LegacyId            #85
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DeliveryAddress_LT
        STRING
        PROPERTIES
          Name                #DeliveryAddress_LT
          Label               #@SYS7924
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          CountryRegionCodes  #LT
          Origin              #{9A0A3037-D4A7-404A-9586-047A6E67369C}
          LegacyId            #8114
          ExtendedDataType    #Addressing
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #DeliveryDate_ES
        DATE
        PROPERTIES
          Name                #DeliveryDate_ES
          HelpText            #@SYS2261
          Visible             #No
          Table               #VendInvoiceJour
          CountryRegionCodes  #ES
          Origin              #{2A0F0000-01EB-1000-7003-84D7FA3ECC31}
          LegacyId            #228
          ExtendedDataType    #DlvDate
        ENDPROPERTIES
        
      FIELD #DeliveryName
        STRING
        PROPERTIES
          Name                #DeliveryName
          Label               #@SYS22058
          HelpText            #@SYS17217
          GroupPrompt         #@SYS7399
          Table               #VendInvoiceJour
          Origin              #{4A4B1A90-057A-4CB5-B8FE-58736E0E65D5}
          LegacyId            #152
          ExtendedDataType    #VendName
          StringSize          #100
        ENDPROPERTIES
        
      FIELD #DeliveryName_LT
        STRING
        PROPERTIES
          Name                #DeliveryName_LT
          Table               #VendInvoiceJour
          CountryRegionCodes  #LT
          Origin              #{CE28B260-038C-401A-811B-D6CB4DE8F777}
          LegacyId            #8113
          ExtendedDataType    #VendName
          StringSize          #100
        ENDPROPERTIES
        
      FIELD #DeliveryPostalAddress
        INT64
        PROPERTIES
          Name                #DeliveryPostalAddress
          Visible             #No
          Table               #VendInvoiceJour
          Origin              #{77C21B50-CEEA-406B-AB7B-F9051DC9BC25}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #Description
        STRING
        PROPERTIES
          Name                #Description
          Table               #VendInvoiceJour
          Origin              #{0C88FE2A-3333-49DA-A400-08B740AF48CD}
          LegacyId            #88
          ExtendedDataType    #InvoiceDescription
          StringSize          #50
        ENDPROPERTIES
        
      FIELD #DlvAddress_LV
        STRING
        PROPERTIES
          Name                #DlvAddress_LV
          Label               #@SYS7924
          Table               #VendInvoiceJour
          CountryRegionCodes  #LV
          Origin              #{257C2343-C042-44F6-9117-6549D38D7ADB}
          LegacyId            #16036
          ExtendedDataType    #Addressing
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #DlvMode
        STRING
        PROPERTIES
          Name                #DlvMode
          HelpText            #@SYS971
          Table               #VendInvoiceJour
          Origin              #{00A46825-4323-4564-855C-61F417197293}
          LegacyId            #57
          ExtendedDataType    #VendDlvModeId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #DlvTerm
        STRING
        PROPERTIES
          Name                #DlvTerm
          Label               #@SYS5280
          HelpText            #@SYS13498
          Table               #VendInvoiceJour
          Origin              #{A1C8A7C9-4E27-42AA-A7D7-0A195122ED7D}
          LegacyId            #56
          ExtendedDataType    #VendDlvTermId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #DocumentDate
        DATE
        PROPERTIES
          Name                #DocumentDate
          HelpText            #@SYS724
          Table               #VendInvoiceJour
          Origin              #{EF08BBFA-C904-4B64-9239-9E2830AAD62E}
          LegacyId            #28
          ExtendedDataType    #DocumentDate
        ENDPROPERTIES
        
      FIELD #DocumentNum
        STRING
        PROPERTIES
          Name                #DocumentNum
          Label               #@SYS8434
          HelpText            #@SYS17472
          Table               #VendInvoiceJour
          Origin              #{FF933D4A-734C-432E-A6E7-A128A8412821}
          LegacyId            #27
          ExtendedDataType    #DocumentNum
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DocumentOrigin
        ENUM
        PROPERTIES
          Name                #DocumentOrigin
          Table               #VendInvoiceJour
          Origin              #{069AABD3-3854-4B0E-945B-778566FBC825}
          LegacyId            #76
          EnumType            #DocumentOrigin
        ENDPROPERTIES
        
      FIELD #DueDate
        DATE
        PROPERTIES
          Name                #DueDate
          HelpText            #@SYS7525
          GroupPrompt         #@SYS14588
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{82816FAD-7F1A-4A1F-AA98-B324C63E90F4}
          LegacyId            #7
          ExtendedDataType    #DueDate
        ENDPROPERTIES
        
      FIELD #EndDisc
        REAL
        PROPERTIES
          Name                #EndDisc
          HelpText            #@SYS12931
          Table               #VendInvoiceJour
          Origin              #{45BD5147-D7BC-4B7C-94F3-C0C960FF1C71}
          LegacyId            #16
          ExtendedDataType    #PurchEndDiscAmount
        ENDPROPERTIES
        
      FIELD #EndDiscMST
        REAL
        PROPERTIES
          Name                #EndDiscMST
          Table               #VendInvoiceJour
          Origin              #{A5D0E399-0CD0-4943-A899-CC5BE321A521}
          LegacyId            #72
          ExtendedDataType    #PurchEndDiscAmountMST
        ENDPROPERTIES
        
      FIELD #EnterpriseNumber
        STRING
        PROPERTIES
          Name                #EnterpriseNumber
          Table               #VendInvoiceJour
          Origin              #{9772E8F0-00C2-4254-827F-1FA9A42D6E3A}
          LegacyId            #20
          ExtendedDataType    #TaxEnterpriseNumber
          StringSize          #50
        ENDPROPERTIES
        
      FIELD #EUSalesList
        STRING
        PROPERTIES
          Name                #EUSalesList
          Table               #VendInvoiceJour
          Origin              #{61BF1E85-4EB9-4A1A-862A-C4F5DFF6CBB6}
          LegacyId            #117
          ExtendedDataType    #ListDispatchId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ExchRate
        REAL
        PROPERTIES
          Name                #ExchRate
          Table               #VendInvoiceJour
          Origin              #{2908E991-4B1E-4D21-AB06-D1550F65FC2E}
          LegacyId            #19
          ExtendedDataType    #VendExchRate
        ENDPROPERTIES
        
      FIELD #ExchRateSecondary
        REAL
        PROPERTIES
          Name                #ExchRateSecondary
          Table               #VendInvoiceJour
          Origin              #{4CEF2FFC-9DB6-4580-900A-18FD167BC821}
          LegacyId            #46
          ExtendedDataType    #ExchrateSecondary
        ENDPROPERTIES
        
      FIELD #FacturedFully_RU
        ENUM
        PROPERTIES
          Name                #FacturedFully_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{2A103E98-01EB-1000-A869-B169C803A1F0}
          LegacyId            #16024
          ExtendedDataType    #FacturedFully_RU
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #FiscalDocumentType_BR
        INT64
        PROPERTIES
          Name                #FiscalDocumentType_BR
          Label               #@GLS108
          HelpText            #@GLS263
          Table               #VendInvoiceJour
          CountryRegionCodes  #BR
          Origin              #{2A150000-01EB-1000-87A2-644B4316F618}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #FixedDueDate
        DATE
        PROPERTIES
          Name                #FixedDueDate
          Table               #VendInvoiceJour
          Origin              #{C1219A53-AA33-4A90-B555-7C74176EED8D}
          LegacyId            #59
          ExtendedDataType    #PurchFixedDueDate
        ENDPROPERTIES
        
      FIELD #InclTax
        ENUM
        PROPERTIES
          Name                #InclTax
          Table               #VendInvoiceJour
          Origin              #{17163A94-0D15-44DA-9E51-ECAE7DA426D2}
          LegacyId            #54
          ExtendedDataType    #InclTax
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanyCompanyId
        STRING
        PROPERTIES
          Name                #InterCompanyCompanyId
          Table               #VendInvoiceJour
          Origin              #{D7C86BF7-A6E0-4C6A-810D-0D36C7C7D01C}
          LegacyId            #65
          ExtendedDataType    #InterCompanyCompanyId
          StringSize          #4
        ENDPROPERTIES
        
      FIELD #InterCompanyLedgerVoucher
        STRING
        PROPERTIES
          Name                #InterCompanyLedgerVoucher
          Table               #VendInvoiceJour
          Origin              #{8A93E10F-3376-41EB-A117-0ABB21B9A85E}
          LegacyId            #67
          ExtendedDataType    #InterCompanyVoucher
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyPosted
        ENUM
        PROPERTIES
          Name                #InterCompanyPosted
          Table               #VendInvoiceJour
          Origin              #{E6200AA5-1992-47F7-B666-073070A96B2C}
          LegacyId            #41
          ExtendedDataType    #InterCompanyPosted
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InterCompanySalesId
        STRING
        PROPERTIES
          Name                #InterCompanySalesId
          Table               #VendInvoiceJour
          Origin              #{F10E1E11-BCB4-45FF-904E-955603B08572}
          LegacyId            #66
          ExtendedDataType    #InterCompanySalesId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InternalInvoiceId
        STRING
        PROPERTIES
          Name                #InternalInvoiceId
          Table               #VendInvoiceJour
          Origin              #{7932D01D-41E8-49E9-8CAF-047850FF1226}
          LegacyId            #51
          ExtendedDataType    #PurchInternalInvoiceId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #IntrastatAddValue_LV
        REAL
        PROPERTIES
          Name                #IntrastatAddValue_LV
          Table               #VendInvoiceJour
          Origin              #{EA71D5BB-BB42-4009-B043-973CD5567044}
          LegacyId            #16037
          ExtendedDataType    #LvIntrastatAddValue
        ENDPROPERTIES
        
      FIELD #IntrastatDispatch
        STRING
        PROPERTIES
          Name                #IntrastatDispatch
          Table               #VendInvoiceJour
          Origin              #{D9F8B1E8-00DE-4311-9AF2-197CB0694C52}
          LegacyId            #30
          ExtendedDataType    #IntrastatDispatchId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #IntrastatFulfillmentDate_HU
        DATE
        PROPERTIES
          Name                #IntrastatFulfillmentDate_HU
          Table               #VendInvoiceJour
          Origin              #{7B4FB61F-C5DB-4260-B606-07DCEF36C978}
          LegacyId            #8116
          ExtendedDataType    #IntrastatFulfillmentDate_HU
        ENDPROPERTIES
        
      FIELD #InventBaileeReceiptReportId_RU
        STRING
        PROPERTIES
          Name                #InventBaileeReceiptReportId_RU
          Table               #VendInvoiceJour
          Origin              #{2A1E0000-01EB-1000-AB21-D95009881650}
          ExtendedDataType    #InventBaileeReceiptReportId_RU
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventProfileType_RU
        ENUM
        PROPERTIES
          Name                #InventProfileType_RU
          Table               #VendInvoiceJour
          Origin              #{2A141F59-01EB-1000-A597-676FADDBF7CA}
          LegacyId            #8025
          EnumType            #InventProfileType_RU
        ENDPROPERTIES
        
      FIELD #InvoiceAccount
        STRING
        PROPERTIES
          Name                #InvoiceAccount
          HelpText            #@SYS13904
          Table               #VendInvoiceJour
          Origin              #{D608AA10-CAC2-486A-8712-EB8A07C85251}
          LegacyId            #4
          ExtendedDataType    #VendInvoiceAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InvoiceAmount
        REAL
        PROPERTIES
          Name                #InvoiceAmount
          Label               #@SYS9458
          HelpText            #@SYS12633
          Table               #VendInvoiceJour
          Origin              #{9B82A7E5-DDBA-45CD-B2B4-5FD1C7F61B78}
          LegacyId            #17
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #InvoiceAmountMST
        REAL
        PROPERTIES
          Name                #InvoiceAmountMST
          Label               #@SYS71013
          HelpText            #@SYS71014
          Table               #VendInvoiceJour
          Origin              #{17A28E9D-FA94-490A-A300-B4EC9B3598CE}
          LegacyId            #70
          ExtendedDataType    #AmountMST
        ENDPROPERTIES
        
      FIELD #InvoiceDate
        DATE
        PROPERTIES
          Name                #InvoiceDate
          HelpText            #@SYS2388
          GroupPrompt         #@SYS7402
          Mandatory           #Yes
          Table               #VendInvoiceJour
          Origin              #{E35819AA-D19D-41E8-BAEB-B20211B8D62A}
          LegacyId            #6
          ExtendedDataType    #TransDate
        ENDPROPERTIES
        
      FIELD #InvoiceId
        STRING
        PROPERTIES
          Name                #InvoiceId
          HelpText            #@SYS4726
          GroupPrompt         #@SYS13864
          Mandatory           #Yes
          Table               #VendInvoiceJour
          Origin              #{28423BBF-7A7B-4917-964D-CE8BEA193734}
          LegacyId            #5
          ExtendedDataType    #VendInvoiceId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InvoiceRegister_LT
        ENUM
        PROPERTIES
          Name                #InvoiceRegister_LT
          Label               #@GLS113460
          Table               #VendInvoiceJour
          CountryRegionCodes  #LT,LV
          Origin              #{B2A18B65-B627-4D38-BA69-C2FD8BBEC0AB}
          LegacyId            #16042
          ExtendedDataType    #LtDocRegister
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InvoiceRoundOff
        REAL
        PROPERTIES
          Name                #InvoiceRoundOff
          HelpText            #@SYS2961
          Table               #VendInvoiceJour
          Origin              #{D3448798-3E8C-4D23-A285-6B9869053833}
          LegacyId            #31
          ExtendedDataType    #RoundOff
        ENDPROPERTIES
        
      FIELD #InvoiceSeries_MX
        STRING
        PROPERTIES
          Name                #InvoiceSeries_MX
          Table               #VendInvoiceJour
          Origin              #{39E7D100-5696-4805-AB5F-5C4FBBDB5347}
          ExtendedDataType    #InvoiceSeries_MX
        ENDPROPERTIES
        
      FIELD #InvoiceStatus_LT
        ENUM
        PROPERTIES
          Name                #InvoiceStatus_LT
          Table               #VendInvoiceJour
          CountryRegionCodes  #LT,LV
          Origin              #{D1D99D45-EB51-4CC0-B114-13E40AD8934B}
          LegacyId            #8024
          EnumType            #LtDocStatus
        ENDPROPERTIES
        
      FIELD #InvoiceType
        ENUM
        PROPERTIES
          Name                #InvoiceType
          Table               #VendInvoiceJour
          Origin              #{8480B54D-200E-4C45-86C7-220488848130}
          LegacyId            #145
          EnumType            #PurchInvoiceType
        ENDPROPERTIES
        
      FIELD #ISBudgetKeyId
        STRING
        PROPERTIES
          Name                #ISBudgetKeyId
          Table               #VendInvoiceJour
          Origin              #{DA8D377E-98AF-45C7-9343-2067F47CB69E}
          ExtendedDataType    #ISBudgetKeyId
        ENDPROPERTIES
        
      FIELD #ItemBuyerGroupId
        STRING
        PROPERTIES
          Name                #ItemBuyerGroupId
          Table               #VendInvoiceJour
          Origin              #{EC8355CF-C800-4058-9F57-E5E5BBE6083B}
          LegacyId            #48
          ExtendedDataType    #ItemBuyerGroupId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #LanguageId
        STRING
        PROPERTIES
          Name                #LanguageId
          Mandatory           #Yes
          Table               #VendInvoiceJour
          Origin              #{3067DA7C-0B36-483A-85F2-C9720320CF27}
          LegacyId            #69
          ExtendedDataType    #VendLanguageId
          StringSize          #7
        ENDPROPERTIES
        
      FIELD #LedgerVoucher
        STRING
        PROPERTIES
          Name                #LedgerVoucher
          HelpText            #@SYS15596
          Table               #VendInvoiceJour
          Origin              #{D242F57C-0E03-4986-AAF2-05B7B632E77E}
          LegacyId            #23
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Listcode
        ENUM
        PROPERTIES
          Name                #Listcode
          Table               #VendInvoiceJour
          Origin              #{A9440422-049F-489E-A59D-321BF8FCFE67}
          LegacyId            #116
          ExtendedDataType    #ListcodeId
          EnumType            #Listcode
        ENDPROPERTIES
        
      FIELD #LogisticsElectronicAddress
        INT64
        PROPERTIES
          Name                #LogisticsElectronicAddress
          Table               #VendInvoiceJour
          Origin              #{B59D2549-46B8-4B38-BBF2-135EF31299BA}
          LegacyId            #132
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #NonRealRevenue_RU
        ENUM
        PROPERTIES
          Name                #NonRealRevenue_RU
          Table               #VendInvoiceJour
          Origin              #{2A113E94-01EB-1000-EC4A-386C99F8F08A}
          LegacyId            #16020
          ExtendedDataType    #NonRealRevenue_RU
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #NumberSequenceCode_LT
        STRING
        PROPERTIES
          Name                #NumberSequenceCode_LT
          Visible             #No
          Table               #VendInvoiceJour
          CountryRegionCodes  #LT,LV
          Origin              #{1E66A240-82E0-484A-98FC-05517DE1BA43}
          LegacyId            #8068
          ExtendedDataType    #NumberSequenceCode
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #numberSequenceGroup
        STRING
        PROPERTIES
          Name                #numberSequenceGroup
          Table               #VendInvoiceJour
          Origin              #{7B335570-6ECC-4AED-A515-536A21766577}
          LegacyId            #53
          ExtendedDataType    #NumberSequenceGroupId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #OffsessionId_RU
        STRING
        PROPERTIES
          Name                #OffsessionId_RU
          Table               #VendInvoiceJour
          Origin              #{2A0F3E95-01EB-1000-04F5-F736BCABFF71}
          LegacyId            #16021
          ExtendedDataType    #OffSessionId_RU
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #OperationType_MX
        ENUM
        PROPERTIES
          Name                #OperationType_MX
          Table               #VendInvoiceJour
          Origin              #{A2CFF456-DA3C-48C9-9951-B6847D24BCA7}
          LegacyId            #108
          EnumType            #VendorOperationType_MX
        ENDPROPERTIES
        
      FIELD #OrderAccount
        STRING
        PROPERTIES
          Name                #OrderAccount
          HelpText            #@SYS6656
          Table               #VendInvoiceJour
          Origin              #{D6C7966F-10FF-41F4-BCC9-DCED9ACECF1E}
          LegacyId            #3
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PackedExtensions
        QUEUE
        PROPERTIES
          Name                #PackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #VendInvoiceJour
          Origin              #{F7BD0209-4FEB-4F1B-99ED-E2D387E0DE48}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #ParmId
        STRING
        PROPERTIES
          Name                #ParmId
          Table               #VendInvoiceJour
          Origin              #{B68DE60B-F8ED-447A-8B70-27FB7355C647}
          LegacyId            #45
          ExtendedDataType    #ParmId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PaymDayId
        STRING
        PROPERTIES
          Name                #PaymDayId
          Table               #VendInvoiceJour
          Origin              #{6E32E60C-EC4E-4EE9-ABCB-E6EF66D1E3A2}
          LegacyId            #55
          ExtendedDataType    #VendPaymDayId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #Payment
        STRING
        PROPERTIES
          Name                #Payment
          HelpText            #@SYS15231
          Table               #VendInvoiceJour
          Origin              #{43869ABE-6EF2-49FA-9ED3-064B6F2B56CE}
          LegacyId            #37
          ExtendedDataType    #VendPaymTermId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #PaymentSched
        STRING
        PROPERTIES
          Name                #PaymentSched
          Table               #VendInvoiceJour
          Origin              #{90E806E7-1FE2-4F7F-9F2A-C5C8439CCEEA}
          LegacyId            #40
          ExtendedDataType    #PaymSchedId
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #PaymId
        STRING
        PROPERTIES
          Name                #PaymId
          HelpText            #@SYS174
          Table               #VendInvoiceJour
          Origin              #{4A8889EB-B306-4EBC-A455-4EC153A2D7D0}
          LegacyId            #33
          ExtendedDataType    #PaymId
          StringSize          #200
        ENDPROPERTIES
        
      FIELD #PostingProfile
        STRING
        PROPERTIES
          Name                #PostingProfile
          Table               #VendInvoiceJour
          Origin              #{6B8DDDC4-DAA3-4607-B165-2D3015A6A207}
          LegacyId            #38
          ExtendedDataType    #VendPostingProfile
        ENDPROPERTIES
        
      FIELD #Prepayment
        ENUM
        PROPERTIES
          Name                #Prepayment
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #VendInvoiceJour
          Origin              #{FE132B58-05E4-4FD9-8993-592D3259B3A6}
          LegacyId            #14
          ExtendedDataType    #CustVendPrepayment
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #Proforma
        ENUM
        PROPERTIES
          Name                #Proforma
          Table               #VendInvoiceJour
          Origin              #{152F857F-008B-462F-B003-519A71C627F2}
          LegacyId            #68
          ExtendedDataType    #CustVendProforma
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PurchAgreementHeader_PSN
        INT64
        PROPERTIES
          Name                #PurchAgreementHeader_PSN
          ConfigurationKey    #PublicSector
          Table               #VendInvoiceJour
          Origin              #{2CBDBE2E-D000-4C65-A5A3-328C16B1A2A8}
          LegacyId            #18000
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #PurchaseType
        ENUM
        PROPERTIES
          Name                #PurchaseType
          Table               #VendInvoiceJour
          Origin              #{6455AFCD-F1AD-49E5-A81B-42C5F607ECD0}
          LegacyId            #42
          EnumType            #PurchaseType
        ENDPROPERTIES
        
      FIELD #PurchId
        STRING
        PROPERTIES
          Name                #PurchId
          HelpText            #@SYS8429
          Table               #VendInvoiceJour
          Origin              #{2BD9428C-87C4-4A3F-936F-B6805E65E313}
          LegacyId            #2
          ExtendedDataType    #PurchIdBase
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PurchReceiptDate_W
        DATE
        PROPERTIES
          Name                #PurchReceiptDate_W
          Table               #VendInvoiceJour
          Origin              #{2A121F40-01EB-1000-FCA5-B4D85D027DD1}
          LegacyId            #8000
          ExtendedDataType    #PurchReceiptDate_W
        ENDPROPERTIES
        
      FIELD #Qty
        REAL
        PROPERTIES
          Name                #Qty
          HelpText            #@SYS2946
          Table               #VendInvoiceJour
          Origin              #{50D86617-8436-48E0-8D4B-8E61CDF3351B}
          LegacyId            #10
          ExtendedDataType    #PurchInvoicedQty
        ENDPROPERTIES
        
      FIELD #ReasonTableRef_BR
        INT64
        PROPERTIES
          Name                #ReasonTableRef_BR
          Visible             #No
          Table               #VendInvoiceJour
          CountryRegionCodes  #BR
          Origin              #{290CF67D-8692-46D3-A230-154C80BE88A7}
          ExtendedDataType    #ReasonTableRefRecId
        ENDPROPERTIES
        
      FIELD #RemittanceAddress
        INT64
        PROPERTIES
          Name                #RemittanceAddress
          Table               #VendInvoiceJour
          Origin              #{F6C0DB92-7158-45BE-A456-92B2C4E09590}
          LegacyId            #94
          ExtendedDataType    #RemittanceAddress
        ENDPROPERTIES
        
      FIELD #ReturnItemNum
        STRING
        PROPERTIES
          Name                #ReturnItemNum
          Table               #VendInvoiceJour
          Origin              #{D75F428B-6A8C-4E84-A8B3-825E20439393}
          LegacyId            #21
          ExtendedDataType    #ReturnItemNum
        ENDPROPERTIES
        
      FIELD #ReverseCharge_UK
        REAL
        PROPERTIES
          Name                #ReverseCharge_UK
          Table               #VendInvoiceJour
          Origin              #{65A69ABB-0C5C-4E12-9920-802EEF9B69F6}
          LegacyId            #75
          ExtendedDataType    #TaxAmountCur
        ENDPROPERTIES
        
      FIELD #SalesBalance
        REAL
        PROPERTIES
          Name                #SalesBalance
          Label               #@SYS343995
          HelpText            #@SYS21169
          Table               #VendInvoiceJour
          Origin              #{F1CD886F-5DB3-4C5D-8AEB-4C144DFB3B14}
          LegacyId            #15
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #SalesPurchOperationType_BR
        INT64
        PROPERTIES
          Name                #SalesPurchOperationType_BR
          Table               #VendInvoiceJour
          Origin              #{2A1A0000-01EB-1000-CDF2-E21DEB2DFF14}
          ExtendedDataType    #SalesPurchOperationTypeRecId_BR
        ENDPROPERTIES
        
      FIELD #ServiceCodeOnDlvAddress_BR
        ENUM
        PROPERTIES
          Name                #ServiceCodeOnDlvAddress_BR
          Table               #VendInvoiceJour
          Origin              #{2A1A0000-01EB-1000-D91A-DEB04409FFE6}
          ExtendedDataType    #TaxServiceCodeOnDlvAddress_BR
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SourceDocumentHeader
        INT64
        PROPERTIES
          Name                #SourceDocumentHeader
          Table               #VendInvoiceJour
          Origin              #{F7F499E3-87D0-4634-AC54-ACB0BEA559C1}
          LegacyId            #106
          ExtendedDataType    #SourceDocumentHeaderRecId
        ENDPROPERTIES
        
      FIELD #SourceDocumentLine
        INT64
        PROPERTIES
          Name                #SourceDocumentLine
          Table               #VendInvoiceJour
          Origin              #{029C604F-DA42-4182-8BF9-867D950C70BD}
          LegacyId            #107
          ExtendedDataType    #SourceDocumentLineRecId
        ENDPROPERTIES
        
      FIELD #StateInvoicePrinted_LV
        ENUM
        PROPERTIES
          Name                #StateInvoicePrinted_LV
          Label               #@SYS5308
          HelpText            #@GLS100692
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #VendInvoiceJour
          CountryRegionCodes  #LV
          Origin              #{E8F97002-FA07-4714-9A5C-06B161D689B1}
          LegacyId            #16035
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #STF_ForeignInvoiceCode
        STRING
        PROPERTIES
          Name                #STF_ForeignInvoiceCode
          Label               #@BLA53
          Table               #VendInvoiceJour
          Origin              #{22D2124A-62A7-43F3-B2D7-FAAA585360E3}
          ExtendedDataType    #STF_ForeignInvoiceCode
          StringSize          #50
        ENDPROPERTIES
        
      FIELD #STF_SettleMode
        ENUM
        PROPERTIES
          Name                #STF_SettleMode
          Table               #VendInvoiceJour
          Origin              #{83DB935A-FD3C-4C3B-A4AC-C4D2F1FFEFE3}
          EnumType            #STF_SettleMode
        ENDPROPERTIES
        
      FIELD #STF_UUID
        STRING
        PROPERTIES
          Name                #STF_UUID
          Table               #VendInvoiceJour
          Origin              #{FA5A7DCA-2D45-4160-A2D7-35799E169DC8}
          ExtendedDataType    #STF_UUID
          StringSize          #36
        ENDPROPERTIES
        
      FIELD #STF_ValidCFDI
        ENUM
        PROPERTIES
          Name                #STF_ValidCFDI
          Table               #VendInvoiceJour
          Origin              #{4E7BB05D-F457-44DC-9CF3-C7C2023CB481}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #STFxCustomsRef
        STRING
        PROPERTIES
          Name                #STFxCustomsRef
          Label               #Pedimento
          HelpText            #Pedimento indicado en el diario de facturas.
          Table               #VendInvoiceJour
          Origin              #{565E1271-0457-47C9-8AC9-7D2E47C06A96}
          ExtendedDataType    #LedgerJournalTransTxt
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #STFxExcludeOfIETU
        ENUM
        PROPERTIES
          Name                #STFxExcludeOfIETU
          Label               #Excluir de IETU/DIOT
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{2CA29052-FDB4-4E11-A04E-E46A168C1AA3}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #STFxImportTax
        ENUM
        PROPERTIES
          Name                #STFxImportTax
          Label               #IVA de importación
          HelpText            #Si se activa este check el sistema ligará la facura generada con el proveedor de la orden de compra indicada en el campo 'Orden de compra'.
          Table               #VendInvoiceJour
          Origin              #{912DF359-D17A-485C-B717-B01E1977EB4A}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #STFxPurchId
        STRING
        PROPERTIES
          Name                #STFxPurchId
          HelpText            #Orden de compra de referencia.
          Table               #VendInvoiceJour
          Origin              #{9A71D01A-E790-4E84-8882-AA563CF737D2}
          ExtendedDataType    #PurchId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #STFxVendAccount
        STRING
        PROPERTIES
          Name                #STFxVendAccount
          Table               #VendInvoiceJour
          Origin              #{093BD1AA-2085-4001-94ED-1347F08E120A}
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #SumLineDisc
        REAL
        PROPERTIES
          Name                #SumLineDisc
          HelpText            #@SYS14407
          Table               #VendInvoiceJour
          Origin              #{61E5673E-6A00-4D85-A9BF-6CE139B7B8BF}
          LegacyId            #13
          ExtendedDataType    #PurchSumLineDiscAmount
        ENDPROPERTIES
        
      FIELD #SumMarkup
        REAL
        PROPERTIES
          Name                #SumMarkup
          Table               #VendInvoiceJour
          Origin              #{67CF9875-BDE8-46F7-A278-B5C0B99DD5E7}
          LegacyId            #32
          ExtendedDataType    #MarkupSumPurch
        ENDPROPERTIES
        
      FIELD #SumMarkupMST
        REAL
        PROPERTIES
          Name                #SumMarkupMST
          Table               #VendInvoiceJour
          Origin              #{E9879AEB-9BF3-4AD0-81CB-A59D95DE2C31}
          LegacyId            #71
          ExtendedDataType    #AmountMST
        ENDPROPERTIES
        
      FIELD #SumTax
        REAL
        PROPERTIES
          Name                #SumTax
          Label               #@SYS5878
          HelpText            #@SYS60727
          Table               #VendInvoiceJour
          Origin              #{03A97061-48E0-47E5-B6FF-2816BF8E429E}
          LegacyId            #44
          ExtendedDataType    #TaxAmountCur
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          Table               #VendInvoiceJour
          Origin              #{C9B93FFD-5CC5-4942-B759-12A5C78ADAA8}
          LegacyId            #34
          ExtendedDataType    #TaxGroup
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #TaxInvoicePurchId
        STRING
        PROPERTIES
          Name                #TaxInvoicePurchId
          Label               #@GLS221798
          Table               #VendInvoiceJour
          Origin              #{4C4FEE08-08D1-428A-BC05-191B88EB9FEE}
          LegacyId            #8036
          ExtendedDataType    #TaxInvoicePurchId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TaxPrintOnInvoice
        ENUM
        PROPERTIES
          Name                #TaxPrintOnInvoice
          Table               #VendInvoiceJour
          Origin              #{C8B01D46-022B-42DB-9C13-7B3059547B4B}
          LegacyId            #25
          ExtendedDataType    #TaxPrintOnInvoice
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TaxRoundOff
        REAL
        PROPERTIES
          Name                #TaxRoundOff
          Label               #@SYS24823
          HelpText            #@SYS24824
          Table               #VendInvoiceJour
          Origin              #{DB3AE102-1878-40F4-B501-4498B62003EF}
          LegacyId            #22
          ExtendedDataType    #TaxAmountCur
        ENDPROPERTIES
        
      FIELD #TaxSetoffVoucher_IN
        STRING
        PROPERTIES
          Name                #TaxSetoffVoucher_IN
          Label               #@GLS221798
          Table               #VendInvoiceJour
          CountryRegionCodes  #IN
          Origin              #{BA774B17-A07B-4C43-A84A-A7E549A21958}
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TaxSpecifyByLine
        ENUM
        PROPERTIES
          Name                #TaxSpecifyByLine
          Table               #VendInvoiceJour
          Origin              #{7C108230-EA9D-4010-958D-3938C6457B56}
          LegacyId            #26
          ExtendedDataType    #TaxSpecifyLine
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TaxWithholdAmount_IN
        REAL
        PROPERTIES
          Name                #TaxWithholdAmount_IN
          Visible             #No
          Table               #VendInvoiceJour
          CountryRegionCodes  #IN
          Origin              #{2A141F90-01EB-1000-4577-DCF8DAE5C4F2}
          LegacyId            #8080
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #TransitControlVoucher_BR
        STRING
        PROPERTIES
          Name                #TransitControlVoucher_BR
          Visible             #No
          Table               #VendInvoiceJour
          CountryRegionCodes  #BR
          Origin              #{2A180000-01EB-1000-6051-A5D62752A1F5}
          ExtendedDataType    #Voucher
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TransportationDocument
        INT64
        PROPERTIES
          Name                #TransportationDocument
          Visible             #No
          Table               #VendInvoiceJour
          Origin              #{2A160000-01EB-1000-01DC-EDA75C2843AD}
          ExtendedDataType    #TransportationDocumentRecId
        ENDPROPERTIES
        
      FIELD #Triangulation
        ENUM
        PROPERTIES
          Name                #Triangulation
          Table               #VendInvoiceJour
          Origin              #{AD50BE53-8945-42C7-A610-15D219CADA89}
          LegacyId            #47
          ExtendedDataType    #EUROTriangulation
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #UnitedVATInvoice_LT
        ENUM
        PROPERTIES
          Name                #UnitedVATInvoice_LT
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{2A131FB5-01EB-1000-367D-BD9F3E7EE217}
          LegacyId            #8117
          ExtendedDataType    #UnitedVATInvoice_LT
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #VATAmount_IN
        REAL
        PROPERTIES
          Name                #VATAmount_IN
          Label               #@SYS79746
          HelpText            #@GLS5583
          Table               #VendInvoiceJour
          CountryRegionCodes  #IN
          Origin              #{2A0C1F88-01EB-1000-92FE-9BB0627B756E}
          LegacyId            #8072
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #VATNum
        STRING
        PROPERTIES
          Name                #VATNum
          Table               #VendInvoiceJour
          Origin              #{528DEA93-923D-4A68-95BE-1CBE66478805}
          LegacyId            #49
          ExtendedDataType    #VATNumJournal
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #VATOnPayment_RU
        ENUM
        PROPERTIES
          Name                #VATOnPayment_RU
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #VendInvoiceJour
          Origin              #{2A0F1F51-01EB-1000-D58E-6C683C8BED81}
          LegacyId            #8017
          ExtendedDataType    #VATOnPayment_RU
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #VendConsInvoice_JP
        INT64
        PROPERTIES
          Name                #VendConsInvoice_JP
          Table               #VendInvoiceJour
          CountryRegionCodes  #JP
          Origin              #{2A121FA5-01EB-1000-D7E3-FC3C5DFB44F5}
          LegacyId            #8101
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #VendFinalUser_BR
        ENUM
        PROPERTIES
          Name                #VendFinalUser_BR
          Label               #@GLS933
          HelpText            #@GLS290
          Table               #VendInvoiceJour
          Origin              #{2A100000-01EB-1000-BADB-9BA9CBE7F82A}
          ExtendedDataType    #CustVendFinalUser_BR
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #VendGroup
        STRING
        PROPERTIES
          Name                #VendGroup
          HelpText            #@SYS6773
          Mandatory           #Yes
          Table               #VendInvoiceJour
          Origin              #{3EA27982-CD76-4841-A2FF-8C898CD4BCDD}
          LegacyId            #1
          ExtendedDataType    #VendGroupId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #VendInvoiceDeclaration_IS
        INT64
        PROPERTIES
          Name                #VendInvoiceDeclaration_IS
          Table               #VendInvoiceJour
          Origin              #{843C065E-2939-4CB2-92DA-BA3336C3603F}
          LegacyId            #100
          ExtendedDataType    #InvoiceDeclarationId_IS
        ENDPROPERTIES
        
      FIELD #VendInvoiceGroup
        STRING
        PROPERTIES
          Name                #VendInvoiceGroup
          Table               #VendInvoiceJour
          Origin              #{4655ABF0-80E2-4709-9B8F-87ED229DD779}
          LegacyId            #81
          ExtendedDataType    #VendInvoiceGrouping
        ENDPROPERTIES
        
      FIELD #VendorRequestedWorkerEmail
        STRING
        PROPERTIES
          Name                #VendorRequestedWorkerEmail
          Label               #@SYS330340
          HelpText            #@SYS314855
          Table               #VendInvoiceJour
          Origin              #{0D469A50-41D5-432E-B72D-B8B0FC3C3467}
          LegacyId            #131
          ExtendedDataType    #Email
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #VendPaymentGroup
        STRING
        PROPERTIES
          Name                #VendPaymentGroup
          Table               #VendInvoiceJour
          Origin              #{3EEB31AB-E794-4D6D-B8D8-27D78CE87702}
          LegacyId            #82
          ExtendedDataType    #VendPaymentGrouping
        ENDPROPERTIES
        
      FIELD #Volume
        REAL
        PROPERTIES
          Name                #Volume
          HelpText            #@SYS5040
          Table               #VendInvoiceJour
          Origin              #{D0947E4F-3A44-4C0D-83FF-22E45DB3DDDF}
          LegacyId            #11
          ExtendedDataType    #Volume
        ENDPROPERTIES
        
      FIELD #Weight
        REAL
        PROPERTIES
          Name                #Weight
          HelpText            #@SYS12973
          Table               #VendInvoiceJour
          Origin              #{D9D221F2-315F-45D6-BD0D-FE986D7C294D}
          LegacyId            #12
          ExtendedDataType    #Weight
        ENDPROPERTIES
        
      FIELD #WhoIsAuthor_LT
        ENUM
        PROPERTIES
          Name                #WhoIsAuthor_LT
          Table               #VendInvoiceJour
          CountryRegionCodes  #LT
          Origin              #{45E51A71-23BE-4929-9F4F-B032E2EE0041}
          LegacyId            #8019
          EnumType            #LtDocOriginator
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoSummary
        PROPERTIES
          Name                #AutoSummary
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceId
          #DueDate
          #Payment
          #CurrencyCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceAmount
          #VendorRequestedWorkerEmail
          #DueDate
          #InvoiceDate
          #InvoiceId
          #InvoiceAccount
          #OrderAccount
          #PurchId
          #LogisticsElectronicAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnItemNum
          #InvoiceId
          #InvoiceSeries_MX
          #InvoiceDate
          #DueDate
          #DocumentNum
          #DocumentDate
          #InclTax
          #InternalInvoiceId
          #numberSequenceGroup
          #DocumentOrigin
          #OffsessionId_RU
          #FacturedFully_RU
          #PurchReceiptDate_W
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Advance
        PROPERTIES
          Name                #Advance
          Label               #@SYS7604
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AmountInDefaultCurrency
        PROPERTIES
          Name                #AmountInDefaultCurrency
          Label               #@SYS84859
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceAmountMST
          #SumMarkupMST
          #EndDiscMST
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Attorney_RU
        PROPERTIES
          Name                #Attorney_RU
          Label               #@GLS104525
        ENDPROPERTIES
        
        GROUPFIELDS
          #AttorneyIssuedName_RU
          #AttorneyId_RU
          #AttorneyDate_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BankLCImportGroup
        PROPERTIES
          Name                #BankLCImportGroup
          Label               #@SYS316286
        ENDPROPERTIES
        
        GROUPFIELDS
          #BankLCImportLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CaseMoreInformation
        PROPERTIES
          Name                #CaseMoreInformation
          Label               #@SYS314356
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceId
          #InvoiceDate
          #OrderAccount
          #vendName
          #PurchId
          #CurrencyCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CFDI_MX
        PROPERTIES
          Name                #CFDI_MX
          Label               #@SYS4081641
        ENDPROPERTIES
        
        GROUPFIELDS
          #CFDIUUID_MX
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Contract_SA
        PROPERTIES
          Name                #Contract_SA
          Label               #@SYS73302
        ENDPROPERTIES
        
        GROUPFIELDS
          #ContractNum_SA
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Correct_RU
        PROPERTIES
          Name                #Correct_RU
          Label               #@SYS13069
        ENDPROPERTIES
        
        GROUPFIELDS
          #CorrectionType_RU
          #Correct_RU
          #CorrectedInvoiceId_RU
          #CorrectedInvoiceDate_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CreditNote_LV
        PROPERTIES
          Name                #CreditNote_LV
          Label               #@SYS8125
        ENDPROPERTIES
        
        GROUPFIELDS
          #DlvAddress_LV
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Currency
        PROPERTIES
          Name                #Currency
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #CurrencyCode
          #ExchRate
          #ExchRateSecondary
          #Triangulation
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery_LT
        PROPERTIES
          Name                #Delivery_LT
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryAddress_LT
          #DeliveryName_LT
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Description
        PROPERTIES
          Name                #Description
          Label               #@SYS7576
        ENDPROPERTIES
        
        GROUPFIELDS
          #Volume
          #Weight
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS14926
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DiotInformation_MX
        PROPERTIES
          Name                #DiotInformation_MX
          Label               #@SYS312478
        ENDPROPERTIES
        
        GROUPFIELDS
          #OperationType_MX
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FiscalInformation_BR
        PROPERTIES
          Name                #FiscalInformation_BR
          Label               #@GLS56
        ENDPROPERTIES
        
        GROUPFIELDS
          #FiscalDocumentType_BR
          #ServiceCodeOnDlvAddress_BR
          #VendFinalUser_BR
          #SalesPurchOperationType_BR
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ForeignTrade
        PROPERTIES
          Name                #ForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #IntrastatDispatch
          #CountryRegionId
          #Listcode
          #IntrastatAddValue_LV
          #IntrastatFulfillmentDate_HU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #PurchAgreementHeader_PSN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intercompany
        PROPERTIES
          Name                #Intercompany
          Label               #@SYS74106
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyCompanyId
          #InterCompanySalesId
          #InterCompanyLedgerVoucher
          #InterCompanyPosted
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InventBailee_RU
        PROPERTIES
          Name                #InventBailee_RU
          Label               #@GLS115581
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventBaileeReceiptReportId_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InventPackaging
        PROPERTIES
          Name                #InventPackaging
          Label               #@SYS72995
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #InvoiceDate
          #InvoiceId
          #InvoiceAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InventProfile_RU
        PROPERTIES
          Name                #InventProfile_RU
          Label               #@GLS113772
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventProfileType_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InvoiceDetails
        PROPERTIES
          Name                #InvoiceDetails
          Label               #@SYS119043
        ENDPROPERTIES
        
        GROUPFIELDS
          #Description
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InvoiceGrouping
        PROPERTIES
          Name                #InvoiceGrouping
          Label               #@SYS130609
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendInvoiceGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Ledger
        PROPERTIES
          Name                #Ledger
          Label               #@SYS13356
        ENDPROPERTIES
        
        GROUPFIELDS
          #LedgerVoucher
          #PostingProfile
          #CostLedgerVoucher
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #LogisticsElectronicAddress
        PROPERTIES
          Name                #LogisticsElectronicAddress
          Label               #@SYS315655
        ENDPROPERTIES
        
        GROUPFIELDS
          #LogisticsElectronicAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #NonRealRevenue_RU
        PROPERTIES
          Name                #NonRealRevenue_RU
          Label               #@GLS101295
        ENDPROPERTIES
        
        GROUPFIELDS
          #NonRealRevenue_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Payment
        PROPERTIES
          Name                #Payment
          Label               #@SYS828
        ENDPROPERTIES
        
        GROUPFIELDS
          #Payment
          #FixedDueDate
          #PaymId
          #PaymDayId
          #CashDisc
          #CashDiscDate
          #CashDiscCode
          #CashDiscPercent
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PaymentSchedule
        PROPERTIES
          Name                #PaymentSchedule
          Label               #@SYS23027
        ENDPROPERTIES
        
        GROUPFIELDS
          #PaymentSched
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PrintManagement
        PROPERTIES
          Name                #PrintManagement
          Label               #@SYS54502
        ENDPROPERTIES
        
        GROUPFIELDS
          #Proforma
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseOrder
        PROPERTIES
          Name                #PurchaseOrder
          Label               #@SYS15812
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemBuyerGroupId
          #EUSalesList
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Quantity
        PROPERTIES
          Name                #Quantity
          Label               #@SYS14578
        ENDPROPERTIES
        
        GROUPFIELDS
          #Qty
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Remittance
        PROPERTIES
          Name                #Remittance
          Label               #@sys152838
        ENDPROPERTIES
        
        GROUPFIELDS
          #RemittanceAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReverseCharge_UK
        PROPERTIES
          Name                #ReverseCharge_UK
          Label               #@SYS118818
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReverseCharge_UK
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxPrintOnInvoice
          #TaxSpecifyByLine
          #TaxGroup
          #TaxInvoicePurchId
          #VATOnPayment_RU
          #UnitedVATInvoice_LT
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SourceDocument
        PROPERTIES
          Name                #SourceDocument
          Label               #@sys127863
        ENDPROPERTIES
        
        GROUPFIELDS
          #SourceDocumentHeader
          #SourceDocumentLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SpecialReport
        PROPERTIES
          Name                #SpecialReport
          Label               #@SYS10223
        ENDPROPERTIES
        
        GROUPFIELDS
          #ParmId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #StateNumbering
        PROPERTIES
          Name                #StateNumbering
          Label               #@GLS112826
        ENDPROPERTIES
        
        GROUPFIELDS
          #WhoIsAuthor_LT
          #InvoiceRegister_LT
          #InvoiceStatus_LT
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #STF_ElectronicAccounting
        PROPERTIES
          Name                #STF_ElectronicAccounting
        ENDPROPERTIES
        
        GROUPFIELDS
          #STF_ValidCFDI
          #STF_UUID
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #STFxFiscal
        PROPERTIES
          Name                #STFxFiscal
        ENDPROPERTIES
        
        GROUPFIELDS
          #STFxExcludeOfIETU
          #STFxImportTax
          #STFxPurchId
          #STFxVendAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TaxSetoffVoucher_IN
        PROPERTIES
          Name                #TaxSetoffVoucher_IN
          Label               #@GLS221798
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxSetoffVoucher_IN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TermsOfDelivery
        PROPERTIES
          Name                #TermsOfDelivery
          Label               #@SYS6576
        ENDPROPERTIES
        
        GROUPFIELDS
          #DlvTerm
          #DlvMode
          #ConsigneeAccount_RU
          #ConsignorAccount_RU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Totals
        PROPERTIES
          Name                #Totals
          Label               #@SYS8311
        ENDPROPERTIES
        
        GROUPFIELDS
          #SumTax
          #SumMarkup
          #SalesBalance
          #InvoiceAmount
          #InvoiceRoundOff
          #TaxRoundOff
          #SumLineDisc
          #EndDisc
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VAT_IN
        PROPERTIES
          Name                #VAT_IN
          Label               #@GLS5004
        ENDPROPERTIES
        
        GROUPFIELDS
          #VATAmount_IN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendConsInvoice_JP
        PROPERTIES
          Name                #VendConsInvoice_JP
          Label               #@SYS106495
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendConsInvoice_JP
          #ConsTarget_JP
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendInvoiceDeclaration
        PROPERTIES
          Name                #VendInvoiceDeclaration
          Label               #@SYS126906
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendInvoiceDeclaration_IS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Vendor
        PROPERTIES
          Name                #Vendor
          Label               #@SYS9455
        ENDPROPERTIES
        
        GROUPFIELDS
          #OrderAccount
          #InvoiceAccount
          #VATNum
          #EnterpriseNumber
          #PurchaseType
          #VendGroup
          #LanguageId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VendPaymentGroup
        PROPERTIES
          Name                #VendPaymentGroup
          Label               #@SYS133130
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendPaymentGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSDeliveryAddress
        PROPERTIES
          Name                #VSSDeliveryAddress
          Label               #@SYS7924
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #deliveryAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSElectronicAddress
        PROPERTIES
          Name                #VSSElectronicAddress
          Label               #@SYS315655
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendorRequestedWorkerEmail
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSInvoiceApproval
        PROPERTIES
          Name                #VSSInvoiceApproval
          Label               #@SYS315655
        ENDPROPERTIES
        
        GROUPFIELDS
          #VendorRequestedWorkerEmail
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSInvoiceDates
        PROPERTIES
          Name                #VSSInvoiceDates
          Label               #@SYS315666
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceDate
          #DocumentDate
          #DueDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSInvoiceIdentification
        PROPERTIES
          Name                #VSSInvoiceIdentification
          Label               #@SYS315693
        ENDPROPERTIES
        
        GROUPFIELDS
          #InvoiceId
          #Description
          #PurchId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #VSSOtherDetails
        PROPERTIES
          Name                #VSSOtherDetails
          Label               #@SYS315677
        ENDPROPERTIES
        
        GROUPFIELDS
          #displayIsVendorAdvance
          #displayInvoiceStatus
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #VendIdx
      PROPERTIES
        Name                #VendIdx
        Origin              #{2B070001-01EB-1000-5665-6E6449647800}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #OrderAccount
        #InvoiceDate
      ENDINDEXFIELDS
      
      #PurchIdx
      PROPERTIES
        Name                #PurchIdx
        Origin              #{2B080002-01EB-1000-5075-726368496478}
        LegacyId            #2
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #InvoiceType
      ENDINDEXFIELDS
      
      #InvoiceAccountIdx
      PROPERTIES
        Name                #InvoiceAccountIdx
        Origin              #{2B110003-01EB-1000-6253-6CCAF37EE105}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #InvoiceAccount
        #InvoiceDate
      ENDINDEXFIELDS
      
      #InvoiceIdx
      PROPERTIES
        Name                #InvoiceIdx
        Origin              #{2B0A0004-01EB-1000-D55C-DA8169636549}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #InvoiceId
        #InvoiceDate
        #numberSequenceGroup
      ENDINDEXFIELDS
      
      #VATNumIdx
      PROPERTIES
        Name                #VATNumIdx
        Origin              #{2B090005-01EB-1000-FE95-664E756D4964}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #VATNum
      ENDINDEXFIELDS
      
      #ParmIdx
      PROPERTIES
        Name                #ParmIdx
        Origin              #{2B070006-01EB-1000-5061-726D49647800}
        LegacyId            #6
      ENDPROPERTIES
      
      INDEXFIELDS
        #ParmId
      ENDINDEXFIELDS
      
      #DefaultDimensionIdx
      PROPERTIES
        Name                #DefaultDimensionIdx
        Origin              #{2B130008-01EB-1000-0AA1-BDDD852145E3}
        LegacyId            #8
      ENDPROPERTIES
      
      INDEXFIELDS
        #DefaultDimension
      ENDINDEXFIELDS
      
      #VendInvoiceDeclaration_ISIdx
      PROPERTIES
        Name                #VendInvoiceDeclaration_ISIdx
        Origin              #{2B1C000C-01EB-1000-30E6-22E19708ED7F}
        LegacyId            #12
      ENDPROPERTIES
      
      INDEXFIELDS
        #VendInvoiceDeclaration_IS
      ENDINDEXFIELDS
      
      #SourceDocumentLine
      PROPERTIES
        Name                #SourceDocumentLine
        UniqueAcrossCompanies #Yes
        Origin              #{DA1440AD-C83D-4064-8689-701F68D6DECC}
        LegacyId            #13
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentLine
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
      #SourceDocumentHeader
      PROPERTIES
        Name                #SourceDocumentHeader
        Origin              #{FDB234B7-CE10-4D3B-9D9C-A20879549094}
        LegacyId            #14
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentHeader
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
      #VendConsInvoice_JPIdx
      PROPERTIES
        Name                #VendConsInvoice_JPIdx
        Origin              #{2B151F42-01EB-1000-D7E3-AFEF565F57F5}
        LegacyId            #8002
      ENDPROPERTIES
      
      INDEXFIELDS
        #VendConsInvoice_JP
      ENDINDEXFIELDS
      
      #FiscalDocumentType_BRIdx
      PROPERTIES
        Name                #FiscalDocumentType_BRIdx
        Origin              #{2B180000-01EB-1000-87A2-644B43C9A812}
      ENDPROPERTIES
      
      INDEXFIELDS
        #FiscalDocumentType_BR
      ENDINDEXFIELDS
      
      #CostLedgerVoucherInvoiceDateIdx
      PROPERTIES
        Name                #CostLedgerVoucherInvoiceDateIdx
        Origin              #{1E1EEC30-BCC5-4866-B0D2-5A3866753BA1}
      ENDPROPERTIES
      
      INDEXFIELDS
        #CostLedgerVoucher
        #InvoiceDate
      ENDINDEXFIELDS
      
      #LedgerVoucherInvoiceDateIdx
      PROPERTIES
        Name                #LedgerVoucherInvoiceDateIdx
        Origin              #{83252226-D05E-4AC1-8666-37ED75110E63}
      ENDPROPERTIES
      
      INDEXFIELDS
        #LedgerVoucher
        #InvoiceDate
      ENDINDEXFIELDS
      
      #STFxVoucherAccountIdx
      PROPERTIES
        Name                #STFxVoucherAccountIdx
        Origin              #{1792CDEF-30EB-4C0B-BD83-377A892A2677}
      ENDPROPERTIES
      
      INDEXFIELDS
        #InvoiceAccount
        #LedgerVoucher
      ENDINDEXFIELDS
      
      #STF_CustomIdx
      PROPERTIES
        Name                #STF_CustomIdx
        Origin              #{C8835B9D-4C2B-40D8-BDD2-B70CC8DD160D}
      ENDPROPERTIES
      
      INDEXFIELDS
        #InvoiceAccount
        #InvoiceDate
        #LedgerVoucher
        #Partition
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #BankLCImportLine
        PROPERTIES
          Name                #BankLCImportLine
          Table               #BankLCImportLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #BankLCImportLine
          Role                #BankLCImportLine_VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BankLCImportLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CashDisc
        PROPERTIES
          Name                #CashDisc
          Table               #CashDisc
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CashDiscCode
            RelatedField        #CashDiscCode
            SourceEDT           #VendCashDiscCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #VendCurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustTableConsignee
        PROPERTIES
          Name                #CustTableConsignee
          Table               #CustTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #CustTable_Consignee
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ConsigneeAccount_RU
            RelatedField        #AccountNum
            SourceEDT           #CustAccountConsignee_RU
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DataArea
        PROPERTIES
          Name                #DataArea
          Table               #DataArea
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InterCompanyCompanyId
            RelatedField        #id
            SourceEDT           #InterCompanyCompanyId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Table               #DataArea
            RelatedField        #isVirtual
            SourceEDT           #InterCompanyCompanyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DefaultDimension
          Role                #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DeliveryPostalAddress_FK
        PROPERTIES
          Name                #DeliveryPostalAddress_FK
          Table               #LogisticsPostalAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DeliveryPostalAddress_FK
          Role                #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DeliveryPostalAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DlvMode
        PROPERTIES
          Name                #DlvMode
          Table               #DlvMode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DlvMode
            RelatedField        #Code
            SourceEDT           #VendDlvModeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DlvTerm
        PROPERTIES
          Name                #DlvTerm
          Table               #DlvTerm
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DlvTerm
            RelatedField        #Code
            SourceEDT           #VendDlvTermId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #FiscalDocumentType_BR
        PROPERTIES
          Name                #FiscalDocumentType_BR
          Table               #FiscalDocumentType_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #FiscalDocumentType_BR
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventBuyerGroup
        PROPERTIES
          Name                #InventBuyerGroup
          Table               #InventBuyerGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemBuyerGroupId
            RelatedField        #Group
            SourceEDT           #ItemBuyerGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InvoiceDeclarationId_FK
        PROPERTIES
          Name                #InvoiceDeclarationId_FK
          Table               #VendInvoiceDeclaration_IS
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DeclarationUsedForReporting
          Role                #VendorInvoiceJournal
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendInvoiceDeclaration_IS
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LanguageTable
        PROPERTIES
          Name                #LanguageTable
          Table               #LanguageTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #LanguageId
            RelatedField        #LanguageId
            SourceEDT           #VendLanguageId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #LanguageTable
            RelatedField        #LabelFile
            SourceEDT           #VendLanguageId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LogisticsAddressCountryRegion
        PROPERTIES
          Name                #LogisticsAddressCountryRegion
          Table               #LogisticsAddressCountryRegion
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CountryRegionId
            RelatedField        #CountryRegionId
            SourceEDT           #AddressCountryRegionId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LogisticsElectronicAddress_FK
        PROPERTIES
          Name                #LogisticsElectronicAddress_FK
          Table               #LogisticsElectronicAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsElectronicAddress
          Role                #LogisticsElectronicAddress_VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LogisticsElectronicAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #NumberSequenceGroup
        PROPERTIES
          Name                #NumberSequenceGroup
          Table               #NumberSequenceGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #numberSequenceGroup
            RelatedField        #numberSequenceGroupId
            SourceEDT           #NumberSequenceGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #OfficialsTrans
        PROPERTIES
          Name                #OfficialsTrans
          Table               #OfficialsTrans_RU
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Link
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #OffsessionId_RU
            RelatedField        #OffSessionId
            SourceEDT           #OffSessionId_RU
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PaymDay
        PROPERTIES
          Name                #PaymDay
          Table               #PaymDay
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PaymDayId
            RelatedField        #PaymDayId
            SourceEDT           #VendPaymDayId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PaymSched
        PROPERTIES
          Name                #PaymSched
          Table               #PaymSched
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PaymentSched
            RelatedField        #Name
            SourceEDT           #PaymSchedId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PaymTerm
        PROPERTIES
          Name                #PaymTerm
          Table               #PaymTerm
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Payment
            RelatedField        #PaymTermId
            SourceEDT           #VendPaymTermId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchAgreementHeader
        PROPERTIES
          Name                #PurchAgreementHeader
          Table               #PurchAgreementHeader
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchAgreementHeader
          Role                #PurchAgreementHeader_PSN
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchAgreementHeader_PSN
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTable_PurchId
        PROPERTIES
          Name                #PurchTable_PurchId
          Table               #PurchTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchTable_PurchId
          Role                #VendInvoiceJour
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchId
            RelatedField        #PurchId
            SourceEDT           #PurchIdBase
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReasonTableRef
        PROPERTIES
          Name                #ReasonTableRef
          Table               #ReasonTableRef
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ReasonTableRef_BR
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RemittanceAddress_FK
        PROPERTIES
          Name                #RemittanceAddress_FK
          Table               #LogisticsPostalAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #RemittanceAddress_FK
          Role                #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #RemittanceAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesPurchOperationType_BR
        PROPERTIES
          Name                #SalesPurchOperationType_BR
          Table               #SalesPurchOperationType_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #SalesPurchOperationType_BR
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentHeader
        PROPERTIES
          Name                #SourceDocumentHeader
          Table               #SourceDocumentHeader
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #SourceDocumentHeader
          Role                #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #491
            Table               #SourceDocumentHeader
            RelatedField        #SourceRelationType
            SourceEDT           #RefTableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #SourceDocumentHeader
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Table               #SourceDocumentLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #SourceDocumentLine
          Role                #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #491
            Table               #SourceDocumentLine
            RelatedField        #SourceRelationType
            SourceEDT           #RefTableId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #SourceDocumentLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGroupHeading
        PROPERTIES
          Name                #TaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGroup
            RelatedField        #TaxGroup
            SourceEDT           #TaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TransportationDocument
        PROPERTIES
          Name                #TransportationDocument
          Table               #TransportationDocument
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TransportationDocument
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendConsInvoice_JP
        PROPERTIES
          Name                #VendConsInvoice_JP
          Table               #VendConsInvoice_JP
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendConsInvoice_JP
          Role                #VendConsInvoice_JP_VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendConsInvoice_JP
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendGroup
        PROPERTIES
          Name                #VendGroup
          Table               #VendGroup
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendGroup
            RelatedField        #VendGroup
            SourceEDT           #VendGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInvoiceJour
        PROPERTIES
          Name                #VendInvoiceJour
          Table               #VendInvoiceJour
          RelationshipType    #Link
          RelatedTableRole    #VendInvoiceJour
          Role                #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InvoiceId
            RelatedField        #InvoiceId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendLedger
        PROPERTIES
          Name                #VendLedger
          Table               #VendLedger
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendLedger
          Role                #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PostingProfile
            RelatedField        #PostingProfile
            SourceEDT           #VendPostingProfile
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable_InvoiceAccount
        PROPERTIES
          Name                #VendTable_InvoiceAccount
          Table               #VendTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendTable_InvoiceAccount
          Role                #VendInvoiceJour
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InvoiceAccount
            RelatedField        #AccountNum
            SourceEDT           #VendInvoiceAccount
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable_OrderAccount
        PROPERTIES
          Name                #VendTable_OrderAccount
          Table               #VendTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #OrderAccount
            RelatedField        #AccountNum
            SourceEDT           #VendAccount
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTableConsignor
        PROPERTIES
          Name                #VendTableConsignor
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #VendTable_Consignor
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ConsignorAccount_RU
            RelatedField        #AccountNum
            SourceEDT           #VendAccountConsignor_RU
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #VendInvoiceJour_W(VendInvoiceJour)
      PROPERTIES
        Table               #VendInvoiceJour_W
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #VendInvoiceJourCorrLink_RU(VendInvoiceJour)
      PROPERTIES
        Table               #VendInvoiceJourCorrLink_RU
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #VendInvoiceJourExtensionTH(VendInvoiceJour)
      PROPERTIES
        Table               #VendInvoiceJourExtensionTH
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #VendInvoiceJour_Intrastat(VendInvoiceJour)
      PROPERTIES
        Table               #VendInvoiceJour_Intrastat
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #VendInternalIntraCommunityInvoice(VendInvoiceJour)
      PROPERTIES
        Table               #VendInternalIntraCommunityInvoice
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #VendInvoiceJourSymbol(VendInvoiceJour)
      PROPERTIES
        Table               #VendInvoiceJourSymbol
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #SalesTaxTransactionExchangeRate(VendInvoiceJour)
      PROPERTIES
        Table               #SalesTaxTransactionExchangeRate
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #TransportationDocument
      PROPERTIES
        Table               #TransportationDocument
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CustVendCreditInvoicingJour
      PROPERTIES
        Table               #CustVendCreditInvoicingJour
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #DocuRef(VendInvoiceJour)
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
        Relation            #VendInvoiceJour
      ENDPROPERTIES
      
      #MarkupTrans
      PROPERTIES
        Table               #MarkupTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #SourceDocumentHeader
      PROPERTIES
        Table               #SourceDocumentHeader
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #SourceDocumentLine
      PROPERTIES
        Table               #SourceDocumentLine
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #VendInvoiceInfoLine(VendInvoiceJourAdvanceApplicationId)
      PROPERTIES
        Table               #VendInvoiceInfoLine
        DeleteAction        #Restricted
        Relation            #VendInvoiceJourAdvanceApplicationId
      ENDPROPERTIES
      
      #VendInvoicePurchLink
      PROPERTIES
        Table               #VendInvoicePurchLink
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #VendInvoiceTrans
      PROPERTIES
        Table               #VendInvoiceTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #VendInvoiceTrans(VendInvoiceJourAdvanceApplication)
      PROPERTIES
        Table               #VendInvoiceTrans
        DeleteAction        #Restricted
        Relation            #VendInvoiceJourAdvanceApplication
      ENDPROPERTIES
      
      #VendPaymSched
      PROPERTIES
        Table               #VendPaymSched
        DeleteAction        #Cascade
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #accDistributionTemplateRecId
        #/// <summary>
        #/// Determines the <c>AccountingDistributionTemplateRecId</c> value that is associated with the invoice.
        #/// </summary>
        #/// <returns>
        #/// The <c>AccountingDistributionTemplateRecId</c> value that is associated with this invoice.
        #/// </returns>
        #public AccountingDistributionTemplateRecId accDistributionTemplateRecId()
        #{
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #allocateInternalInvoiceId
        #NumberSequenceCode allocateInternalInvoiceId(AmountCur invoiceAmount)
        #{
        #    RefRecId                numberSequenceId;
        #    NumberSequenceReference reference;
        #
        #     // <GMY>
        #    if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        #    {
        #        switch (this.vendInvoiceJour_W().NoteType_MY)
        #        {
        #            case NoteType_MY::DebitNote:
        #                reference = PurchParameters::numRefPurchDebitNoteId();
        #                break;
        #            case NoteType_MY::CreditNote:
        #                reference = PurchParameters::numRefPurchCreditNoteId();
        #                break;
        #            case NoteType_MY::Blank:
        #                reference = PurchParameters::numRefPurchInvoiceId();
        #                break;
        #        }
        #    }
        #    else
        #    {
        #    // </GMY>
        #
        #    if (invoiceAmount < 0)
        #        reference = PurchParameters::numRefPurchCreditNoteId();
        #    else
        #        reference = PurchParameters::numRefPurchInvoiceId();
        #    // <GMY>
        #    }
        #    // </GMY>
        #
        #    numberSequenceId = NumberSequenceGroupRef::findNaturalKey(reference.NumberSequenceDatatype,
        #        NumberSeqScopeFactory::createDefaultScope().getId(),
        #        this.NumberSequenceGroup).NumberSequenceId;
        #
        #    if (!numberSequenceId)
        #        numberSequenceId = reference.NumberSequenceId;
        #
        #    return NumberSequenceTable::find(numberSequenceId).NumberSequence;
        #}
      ENDSOURCE
      SOURCE #amountMST
        #AmountMST amountMST(AmountCur amountCur)
        #{
        #    return Currency::mstAmount(amountCur,this.CurrencyCode,this.InvoiceDate,
        #                               Currency::noYes2UnknownNoYes(this.Triangulation),this.ExchRate,this.ExchRateSecondary);
        #
        #}
      ENDSOURCE
      SOURCE #calcCashDiscDate
        #void  calcCashDiscDate()
        #{
        #    this.CustVendInvoiceJour::calcCashDiscDate();
        #}
      ENDSOURCE
      SOURCE #calcDue
        #/// <summary>
        #/// Calculates the due date for the invoice.
        #/// </summary>
        #public void calcDue()
        #{
        #    this.CustVendInvoiceJour::calcDue();
        #}
      ENDSOURCE
      SOURCE #calcDueDateLimit_ES
        #PaymDueDateLimit_ES calcDueDateLimit_ES(PaymTerm _paymTerm, TransDate _transDate)
        #{
        #    return this.CustVendInvoiceJour::calcDueDateLimit_ES(_paymTerm, _transDate);
        #}
      ENDSOURCE
      SOURCE #calcMSTAmounts
        #public void calcMSTAmounts()
        #{
        #    this.InvoiceAmountMST   = this.amountMST(this.InvoiceAmount);
        #    this.SumMarkupMST       = this.amountMST(this.SumMarkup);
        #    this.EndDiscMST         = this.amountMST(this.EndDisc);
        #}
      ENDSOURCE
      SOURCE #cashDiscTxt
        #//BP Deviation Documented
        #display CashDiscFreeTxt cashDiscTxt()
        #{
        #    return CashDisc::cashDiscTxt(this.CashDiscCode,
        #                                 this.DocumentDate ? this.DocumentDate : this.InvoiceDate,
        #                                 VendParameters::find().CashDiscVAT,
        #                                 this.InvoiceAmount,
        #                                 this.InvoiceAmount - this.SumTax,
        #                                 this.CurrencyCode,
        #                                 this.CashDiscDate,
        #                                 this.CashDisc);
        #}
        #
      ENDSOURCE
      SOURCE #checkVATTaxAgentChargeType_RU
        #/// <summary>
        #/// Checks if VAT tax agent charge source is correct
        #/// </summary>
        #/// <returns>
        #/// True if correct; Otherwise false
        #/// </returns>
        #public boolean checkVATTaxAgentChargeType_RU()
        #{
        #    VendInvoiceTrans    vendInvoiceTrans;
        #    VATChargeSource_RU  chargeSource;
        #    PurchAgreementHeaderExt_RU purchAgreementHeaderExt;
        #    boolean             firstIteration = true;
        #
        #    if (! VendTable::find(this.OrderAccount).vatTaxAgent_RU)
        #    {
        #        return true;
        #    }
        #
        #    while select TaxGroup, TaxItemGroup from vendInvoiceTrans
        #        where vendInvoiceTrans.PurchID             == this.PurchId             &&
        #              vendInvoiceTrans.InvoiceId           == this.InvoiceId           &&
        #              vendInvoiceTrans.InvoiceDate         == this.InvoiceDate         &&
        #              vendInvoiceTrans.NumberSequenceGroup == this.NumberSequenceGroup &&
        #              vendInvoiceTrans.InternalInvoiceId   == this.InternalInvoiceId
        #    {
        #        if (vendInvoiceTrans.TaxGroup && vendInvoiceTrans.TaxItemGroup)
        #        {
        #            if (firstIteration)
        #            {
        #                chargeSource   = TaxTable::find(TaxTable::vatCode_RU(vendInvoiceTrans.TaxGroup,
        #                                                                     vendInvoiceTrans.TaxItemGroup)).vatChargeSource_RU;
        #                firstIteration = false;
        #            }
        #            else if (chargeSource != TaxTable::find(TaxTable::vatCode_RU(vendInvoiceTrans.TaxGroup,
        #                                                                         vendInvoiceTrans.TaxItemGroup)).vatChargeSource_RU)
        #            {
        #                return checkFailed(strFmt("@GLS115946", this.InvoiceId));
        #            }
        #        }
        #    }
        #
        #    purchAgreementHeaderExt = AgreementHeaderExt_RU::findByDefaultDimension(this.DefaultDimension) as PurchAgreementHeaderExt_RU;
        #
        #    if (! firstIteration && purchAgreementHeaderExt.RecId && chargeSource != purchAgreementHeaderExt.vatChargeSource)
        #    {
        #        return checkFailed(strFmt("@GLS115947", this.InvoiceId));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #costValue
        #//BP Deviation Documented
        #server display CostAmount costValue()
        #{
        #    CostAmount              costValue       = 0;
        #    QueryRun                queryRun        = new QueryRun(this.queryVendInvoiceTrans());
        #    VendInvoiceTrans        vendInvoiceTrans;
        #    ;
        #
        #    while (queryRun.next())
        #    {
        #        if (queryRun.changed(tableNum(VendInvoiceTrans)))
        #        {
        #            vendInvoiceTrans = queryRun.get(tableNum(VendInvoiceTrans)) as VendInvoiceTrans;
        #            if (vendInvoiceTrans)
        #            {
        #                costValue += vendInvoiceTrans.costValue();
        #            }
        #        }
        #    }
        #
        #    return costValue;
        #}
      ENDSOURCE
      SOURCE #createPaymentSched
        #
        #void createPaymentSched(boolean  _skipVersionChangeCheck = false)
        #{
        #    ;
        #    this.CustVendInvoiceJour::createPaymentSched(null, _skipVersionChangeCheck);
        #
        #}
      ENDSOURCE
      SOURCE #createVendTrans_BR
        #/// <summary>
        #///     Indicates whether the corresponding fiscal document will create vendor transactions based on <c>SalesPurchOperationTye_BR</c> configuration.
        #/// </summary>
        #/// <returns>
        #///     Returns true if operation type is not set on <c>VendInvoiceJour</c> or the operation type is configured to create vendor transactions.
        #/// </returns>
        #public boolean createVendTrans_BR()
        #{
        #    return this.SalesPurchOperationType_BR == 0
        #        || SalesPurchOperationType_BR::find(this.SalesPurchOperationType_BR).CreateFinancialTrans;
        #}
        #
      ENDSOURCE
      SOURCE #creditNote
        #// no prefix; used through CustVendInvoiceJour map
        #public boolean creditNote()
        #{
        #    VendInvoiceTrans vendInvoiceTrans;
        #
        #    boolean ret = this.InvoiceAmount < 0;
        #
        #    if (! ret)
        #    {
        #        select firstonly RecId from vendInvoiceTrans
        #            where vendInvoiceTrans.PurchID             == this.PurchId             &&
        #                  vendInvoiceTrans.InvoiceId           == this.InvoiceId           &&
        #                  vendInvoiceTrans.InvoiceDate         == this.InvoiceDate         &&
        #                  vendInvoiceTrans.NumberSequenceGroup == this.NumberSequenceGroup &&
        #                  vendInvoiceTrans.InternalInvoiceId   == this.InternalInvoiceId   &&
        #                  vendInvoiceTrans.RefReturnInvoiceTrans_W;
        #
        #        ret = vendInvoiceTrans.RecId != 0;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #debitCreditNoteReasonCode_MY
        #/// <summary>
        #/// Displays reason code of debit note or credit note.
        #/// </summary>
        #/// <returns>
        #/// The reason code of debit note or credit note.
        #/// </returns>
        #// <GMY>
        #display ReasonCode debitCreditNoteReasonCode_MY()
        #{
        #    return ReasonTableRef::find(this.vendInvoiceJour_W().ReasonTableRef).Reason;
        #}
        #// </GMY>
      ENDSOURCE
      SOURCE #deliveryAddress
        #/// <summary>
        #/// Retrieves the delivery address for the invoice.
        #/// </summary>
        #/// <returns>
        #/// The delivery address for the invoice.
        #/// </returns>
        #//BP deviation documented
        #display LogisticsAddressing deliveryAddress()
        #{
        #    return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress).Address;
        #}
      ENDSOURCE
      SOURCE #deliveryAddress_RU
        #public LogisticsAddressing deliveryAddress_RU()
        #{
        #    if (this.ConsigneeAccount_RU)
        #    {
        #        return CustTable::find(this.ConsigneeAccount_RU).address();
        #    }
        #    else
        #    {
        #        return this.PurchId ? PurchTable::find(this.PurchId).deliveryAddressing() : '';
        #    }
        #}
      ENDSOURCE
      SOURCE #deliveryPostalAddressRecId_RU
        #/// <summary>
        #/// Returns delivery postal address record id for current invoice
        #/// </summary>
        #/// <returns>
        #/// Delivery postal address record id for current invoice
        #/// </returns>
        #public LogisticsPostalAddressRecId deliveryPostalAddressRecId_RU()
        #{
        #    return this.PurchId ? PurchTable::find(this.PurchId).deliveryAddress().RecId : 0;
        #}
      ENDSOURCE
      SOURCE #displayInvoiceStatus
        #/// <summary>
        #/// Displays the invoice status of unposted invoices.
        #/// </summary>
        #/// <returns>
        #/// An <c>InvoiceStatus</c> enumeration value that indicates the status in the posting and payment
        #/// process of the invoice.
        #/// </returns>
        #/// <remarks>
        #/// The <c>InvoiceStatus</c> enumeration value contains five possible values. Posted values only
        #/// represent three of those and therefore only three possible values are returned by this method. The
        #/// <c>displayInvoiceStatus</c> method in the <c>VendInvoiceInfoTable</c> table contains the other
        #/// three statuses.
        #/// </remarks>
        #//BP deviation documented
        #public display InvoiceStatus displayInvoiceStatus()
        #{
        #    VendTrans               vendTrans;
        #
        #    select firstonly Closed, LastSettleVoucher from vendTrans
        #        where vendTrans.Voucher     == this.LedgerVoucher &&
        #            vendTrans.AccountNum    == this.InvoiceAccount &&
        #            vendTrans.TransDate     == this.InvoiceDate;
        #
        #    if(vendTrans.LastSettleVoucher == "" && vendTrans.Closed == dateNull())
        #    {
        #        return InvoiceStatus::Posted;
        #    }
        #    else if(vendTrans.Closed == dateNull() && vendTrans.LastSettleVoucher != "")
        #    {
        #        return InvoiceStatus::PartiallyPaid;
        #    }
        #    else
        #    {
        #        return InvoiceStatus::Paid;
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #displayIsVendorAdvance
        #// <summary>
        #/// Sets or retrieves the <c>Vendor Advance</c> field value.
        #/// </summary>
        #/// A Boolean value that specifies whether the caller is supplying a new value or wants to retrieve the current value.
        #/// <returns>
        #/// Yes if the invoice is marked as vendor advance; otherwise, No.
        #/// </returns>
        #//BP Deviation documented
        #display NoYes displayIsVendorAdvance()
        #{
        #
        #    NoYes isVendorAdvance;
        #    if (this.InvoiceType == PurchInvoiceType::VendorAdvance)
        #    {
        #        isVendorAdvance = NoYes::Yes;
        #    }
        #    else
        #    {
        #        isVendorAdvance = NoYes::No;
        #    }
        #
        #    return isVendorAdvance;
        #}
      ENDSOURCE
      SOURCE #displayOnHold
        #display NoYes displayOnHold()
        #{
        #    return NoYes::No;
        #}
      ENDSOURCE
      SOURCE #displayOrderAccountName
        #// <summary>
        #/// Sets or retrieves the <c>Order Account Name</c> value.
        #/// </summary>
        #/// A string value that is the Order Account Name
        #/// <returns>
        #/// A string value that is the Order Account Name
        #/// </returns>
        #//BP deviation documented
        #public display Name displayOrderAccountName()
        #{
        #    return this.vendTable_OrderAccount().name();
        #}
      ENDSOURCE
      SOURCE #displayPackingSlipId
        #/// <summary>
        #/// Retrieves the packing slip number that is associated with the invoice.
        #/// </summary>
        #/// <returns>
        #/// '*' if there is more than one packing slip that is associated with the invoice, the packing slip ID
        #/// if there is one packing slip that is associated with the invoice, or an empty string if there are
        #/// no packing slips that are associated with the invoice.
        #/// </returns>
        #//BP Deviation Documented
        #public display PackingSlipId displayPackingSlipId()
        #{
        #    VendInvoiceTrans                    vendInvoiceTrans;
        #    VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;
        #    VendPackingSlipTrans                vendPackingSlipTrans;
        #
        #    select count(RecId) from vendInvoiceTrans
        #        where vendInvoiceTrans.PurchID == this.PurchId &&
        #            vendInvoiceTrans.InvoiceId == this.InvoiceId &&
        #            vendInvoiceTrans.InvoiceDate == this.InvoiceDate &&
        #            vendInvoiceTrans.NumberSequenceGroup == this.NumberSequenceGroup &&
        #            vendInvoiceTrans.InternalInvoiceId == this.InternalInvoiceId
        #        exists join vendInvoicePackingSlipQuantityMatch
        #            where vendInvoicePackingSlipQuantityMatch.InvoiceSourceDocumentLIne == vendInvoiceTrans.SourceDocumentLine
        #        exists join vendPackingSlipTrans
        #            where vendPackingSlipTrans.SourceDocumentLine == vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine;
        #
        #    switch(vendInvoiceTrans.RecId)
        #    {
        #        case 0 :
        #            return '';
        #
        #        case 1 :
        #                select PackingSlipId from vendPackingSlipTrans
        #                    exists join vendInvoicePackingSlipQuantityMatch
        #                        where vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine == vendPackingSlipTrans.SourceDocumentLine
        #                    exists join vendInvoiceTrans
        #                        where vendInvoiceTrans.SourceDocumentLine == vendInvoicePackingSlipQuantityMatch.InvoiceSourceDocumentLIne &&
        #                            vendInvoiceTrans.PurchID == this.PurchId &&
        #                            vendInvoiceTrans.InvoiceId == this.InvoiceId &&
        #                            vendInvoiceTrans.InvoiceDate == this.InvoiceDate &&
        #                            vendInvoiceTrans.NumberSequenceGroup == this.NumberSequenceGroup &&
        #                            vendInvoiceTrans.InternalInvoiceId == this.InternalInvoiceId;
        #
        #            return vendPackingSlipTrans.PackingSlipId;
        #
        #        default :
        #            return "@SYS342615";
        #    }
        #}
      ENDSOURCE
      SOURCE #displayRemittanceAddress
        #/// <summary>
        #/// Retrieves the vendor remittance address that is associated with the vendor <c>RemittanceAddress</c>
        #/// field on the <c>VendInvoiceJour</c> table.
        #/// </summary>
        #/// <returns>
        #/// The remittance address.
        #/// </returns>
        #//BP Deviation Documented
        #public display RemittanceAddressing displayRemittanceAddress()
        #{
        #    if(!hasFieldAccess(tableNum(LogisticsPostalAddress), fieldNum(LogisticsPostalAddress, Address),AccessType::View))
        #    {
        #        error("@SYS57330");
        #    }
        #
        #    //Address based off of the address table recid on the table
        #    return LogisticsPostalAddress::addressFromRecId(this.RemittanceAddress);
        #}
      ENDSOURCE
      SOURCE #displayRemittanceLocation
        #/// <summary>
        #/// Retrieves the vendor remittance location name that is associated with the vendor
        #/// <c>RemittanceAddress</c> field on the <c>VendInvoiceJour</c> table.
        #/// </summary>
        #/// <returns>
        #/// The remittance location name.
        #/// </returns>
        #//BP Deviation Documented
        #public display RemittanceLocationName displayRemittanceLocation()
        #{
        #    return LogisticsPostalAddress::locationNameFromRecId(this.RemittanceAddress);
        #}
      ENDSOURCE
      SOURCE #displayTaxBranchDimension
        #/// <summary>
        #/// Displays the tax branch code depending on the default dimension.
        #/// </summary>
        #/// <returns>
        #/// Returns tax branch code getted by default dimension.
        #/// </returns>
        #//<GTH>
        #display TaxBranchCode displayTaxBranchDimension()
        #{
        #    return TaxBranchType::getTBDisplayValueByDefaultDimension(this.DefaultDimension);
        #}
        #//</GTH>
      ENDSOURCE
      SOURCE #docuAllowEdit_W
        #// Documents attached to customer invoice are read only, but
        #// some fields of invoice itself can be
        #boolean docuAllowEdit_W()
        #{
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existForCostAllocation_RU
        #/// <summary>
        #/// Checks if cost accocations exist for current invoice
        #/// </summary>
        #/// <returns>
        #/// True if cost allocation exist, otherwise false
        #/// </returns>
        #public boolean existForCostAllocation_RU()
        #{
        #    return (select firstonly RecId from costAllocationHistory_RU
        #        where costAllocationHistory_RU.AllocatedInvoiceJourRecId == this.RecId).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #factureJourSortedList_RU
        #/// <summary>
        #/// Return <c>List</c> object with factures created by current invoice
        #/// </summary>
        #/// <returns>
        #/// <c>List</c> object with factures created by current invoice
        #/// </returns>
        #public RecordSortedList factureJourSortedList_RU()
        #{
        #    FactureJour_RU   factureJour;
        #    FactureTrans_RU  factureTrans;
        #
        #    MarkupTrans      markupTrans;
        #    VendInvoiceTrans vendInvoiceTrans;
        #
        #    RecordSortedList ret = this.CustVendInvoiceJour::factureJourSortedList_RU();
        #
        #    while select factureJour
        #        join RecId from factureTrans
        #        where factureJour.Module                 == FactureModule_RU::Vend          &&
        #              factureJour.CustVendInvoiceAccount == this.InvoiceAccount             &&
        #              factureTrans.FactureId             == factureJour.FactureId           &&
        #              factureTrans.Module                == FactureModule_RU::Vend          &&
        #              factureTrans.FactureLineType       == FactureLineType_RU::InvoiceLine &&
        #              factureTrans.InvoiceDate           == this.InvoiceDate                &&
        #              factureTrans.InvoiceId             == this.InvoiceId                  &&
        #              factureTrans.SalesPurchId          == this.PurchId                    &&
        #              factureTrans.NumberSequenceGroup   == this.NumberSequenceGroup        &&
        #              factureTrans.InternalInvoiceId     == this.InternalInvoiceId
        #    {
        #        if (! ret.find(factureJour))
        #        {
        #            ret.ins(factureJour);
        #        }
        #    }
        #
        #    // Header markups
        #    while select factureJour
        #        join RecId from factureTrans
        #        join RecId from markupTrans
        #        where factureJour.Module                 == FactureModule_RU::Vend          &&
        #              factureJour.CustVendInvoiceAccount == this.InvoiceAccount             &&
        #              factureTrans.FactureId             == factureJour.FactureId           &&
        #              factureTrans.Module                == FactureModule_RU::Vend          &&
        #              factureTrans.FactureLineType       == FactureLineType_RU::Markup      &&
        #              markupTrans.RecId                  == factureTrans.MarkupRefRecId     &&
        #              markupTrans.TransTableId           == this.TableId                    &&
        #              markupTrans.TransRecId             == this.RecId
        #    {
        #        if ( ! ret.find(factureJour))
        #        {
        #            ret.ins(factureJour);
        #        }
        #    }
        #
        #    // Line markups
        #    while select factureJour
        #        join RecId from factureTrans
        #        join RecId from markupTrans
        #        join RecId from vendInvoiceTrans
        #        where factureJour.Module                   == FactureModule_RU::Vend        &&
        #              factureJour.CustVendInvoiceAccount   == this.InvoiceAccount           &&
        #              factureTrans.FactureId               == factureJour.FactureId         &&
        #              factureTrans.Module                  == FactureModule_RU::Vend        &&
        #              factureTrans.FactureLineType         == FactureLineType_RU::Markup    &&
        #              markupTrans.RecId                    == factureTrans.MarkupRefRecId   &&
        #              markupTrans.TransTableId             == vendInvoiceTrans.TableId      &&
        #              vendInvoiceTrans.RecId               == markupTrans.TransRecId        &&
        #              vendInvoiceTrans.PurchID             == this.PurchId                  &&
        #              vendInvoiceTrans.InvoiceId           == this.InvoiceId                &&
        #              vendInvoiceTrans.InternalInvoiceId   == this.InternalInvoiceId        &&
        #              vendInvoiceTrans.InvoiceDate         == this.InvoiceDate              &&
        #              vendInvoiceTrans.NumberSequenceGroup == this.NumberSequenceGroup
        #    {
        #        if ( ! ret.find(factureJour))
        #        {
        #            ret.ins(factureJour);
        #        }
        #    }
        #
        #    // Invoice round-offs && discounts
        #    while select factureJour
        #        exists join factureTrans
        #        where factureJour.Module                  == FactureModule_RU::Vend               &&
        #              factureJour.CustVendInvoiceAccount  == this.InvoiceAccount                  &&
        #              factureTrans.FactureId              == factureJour.FactureId                &&
        #              factureTrans.Module                 == FactureModule_RU::Vend               &&
        #             (factureTrans.FactureLineType        == FactureLineType_RU::InvoiceEndDisc   ||
        #              factureTrans.FactureLineType        == FactureLineType_RU::InvoiceRoundOff) &&
        #              factureTrans.InvoiceDate            == this.InvoiceDate                     &&
        #              factureTrans.InvoiceId              == this.InvoiceId                       &&
        #              factureTrans.SalesPurchId           == this.PurchId                         &&
        #              factureTrans.NumberSequenceGroup    == this.NumberSequenceGroup             &&
        #              factureTrans.InternalInvoiceId      == this.InternalInvoiceId
        #    {
        #        if (! ret.find(factureJour))
        #        {
        #            ret.ins(factureJour);
        #        }
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #fiscalDocument_BR
        #/// <summary>
        #///     Returns the <c>FiscalDocument_BR</c> related to the <c>vendInvoiceJour</c>
        #/// </summary>
        #/// <returns>
        #///     Returns a record of <c>FiscalDocument_BR</c>.
        #/// </returns>
        #public FiscalDocument_BR fiscalDocument_BR()
        #{
        #    FiscalDocument_BR fiscalDocument;
        #
        #    select fiscalDocument
        #        where fiscalDocument.RefTableId == this.TableId
        #            && fiscalDocument.RefRecId == this.RecId;
        #
        #    return fiscalDocument;
        #}
      ENDSOURCE
      SOURCE #getCFDIUUID_MX
        #/// <summary>
        #/// Gets the unique identification of CDFI document
        #/// </summary>
        #/// <returns>
        #/// The CFDI identification
        #/// </returns>
        #public EInvoiceCFDIUUID_MX getCFDIUUID_MX()
        #{
        #    return this.CFDIUUID_MX;
        #}
      ENDSOURCE
      SOURCE #getCorrectedInvoiceDate_RU
        #/// <summary>
        #/// Method created for use when calling <c>CustVendInvoiceJour</c> map method.
        #/// </summary>
        #/// <returns>
        #/// Date of corrected invoice.
        #/// </returns>
        #public CorrectedInvoiceDate_RU getCorrectedInvoiceDate_RU()
        #{
        #    return this.CorrectedInvoiceDate_RU;
        #}
      ENDSOURCE
      SOURCE #getCorrectedInvoiceId_RU
        #/// <summary>
        #/// Method created for use when calling <c>CustVendInvoiceJour</c> map method.
        #/// </summary>
        #/// <returns>
        #/// Id of corrected invoice.
        #/// </returns>
        #public CorrectedInvoiceId_RU getCorrectedInvoiceId_RU()
        #{
        #    return this.CorrectedInvoiceId_RU;
        #}
      ENDSOURCE
      SOURCE #getInternalInvoiceId
        #PurchInternalInvoiceId getInternalInvoiceId(NumberSequenceCode numberSequence)
        #{
        #    if (numberSequence)
        #    {
        #        return NumberSeq::newGetNumFromCode(numberSequence).num();
        #    }
        #    return '';
        #}
      ENDSOURCE
      SOURCE #getInternalInvoiceIdFromVendTrans
        #PurchInternalInvoiceId getInternalInvoiceIdFromVendTrans(AmountCur invoiceAmount)
        #{
        #    NumberSequenceAllowSameAs   allowSameAs;
        #    PurchInternalInvoiceId      internalInvoiceId;
        #
        #    // <GMY>
        #    if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        #    {
        #        switch (this.vendInvoiceJour_W().NoteType_MY)
        #        {
        #            case NoteType_MY::DebitNote:
        #                allowSameAs = PurchParameters::numRefPurchDebitNoteVoucher().AllowSameAs;
        #                break;
        #            case NoteType_MY::CreditNote:
        #                allowSameAs = PurchParameters::numRefPurchCreditNoteVoucher().AllowSameAs;
        #                break;
        #            case NoteType_MY::Blank:
        #                allowSameAs = PurchParameters::numRefPurchInvoiceVoucher().AllowSameAs;
        #                break;
        #        }
        #    }
        #    else
        #    // </GMY>
        #
        #    // <GEERU>
        #    if (! this.Correct_RU)
        #    {
        #    // </GEERU>
        #        if (invoiceAmount < 0)
        #        {
        #            allowSameAs = PurchParameters::numRefPurchCreditNoteVoucher().AllowSameAs;
        #        }
        #        else
        #        {
        #            allowSameAs = PurchParameters::numRefPurchInvoiceVoucher().AllowSameAs;
        #        }
        #    // <GEERU>
        #    }
        #    // </GEERU>
        #
        #    if (allowSameAs)
        #    {
        #        internalInvoiceId = this.LedgerVoucher;
        #    }
        #    else
        #    {
        #        internalInvoiceId = this.getInternalInvoiceId(this.allocateInternalInvoiceId(invoiceAmount));
        #    }
        #
        #    return internalInvoiceId;
        #}
      ENDSOURCE
      SOURCE #getNoteType_MY
        #// <GMY>
        #private NoteType_MY getNoteType_MY()
        #{
        #    if (this.InvoiceAmount < 0)
        #    {
        #        return NoteType_MY::CreditNote;
        #    }
        #    else if (this.InvoiceAmount >= 0 && this.vendInvoiceJour_W().HasReference_MY)
        #    {
        #        return NoteType_MY::DebitNote;
        #    }
        #    else
        #    {
        #        return NoteType_MY::Blank;
        #    }
        #}
        #// </GMY>
        #
      ENDSOURCE
      SOURCE #getRFC_MX
        #/// <summary>
        #/// Gets the vendor RFC
        #/// </summary>
        #/// <returns>
        #/// The RFC number
        #/// </returns>
        #public RFC_MX getRFC_MX()
        #{
        #    return this.vendTable_InvoiceAccount().RFC_MX;
        #}
      ENDSOURCE
      SOURCE #groupId
        #CustVendGroupId groupId()
        #{
        #    return this.vendTable_InvoiceAccount().VendGroup;
        #}
        #
      ENDSOURCE
      SOURCE #hasPositiveTrans_RU
        #/// <summary>
        #/// Checks if exists any lines for current invoice with positive quantity
        #/// </summary>
        #/// <returns>
        #/// True if exists any lines for current invoice with positive quantity, otherwise  false
        #/// </returns>
        #public boolean hasPositiveTrans_RU()
        #{
        #    VendInvoiceTrans    vendInvoiceTrans;
        #
        #    select firstonly RecId from vendInvoiceTrans
        #        where vendInvoiceTrans.PurchID              == this.PurchId
        #           && vendInvoiceTrans.InvoiceId            == this.InvoiceId
        #           && vendInvoiceTrans.InvoiceDate          == this.InvoiceDate
        #           && vendInvoiceTrans.NumberSequenceGroup  == this.NumberSequenceGroup
        #           && vendInvoiceTrans.InternalInvoiceId    == this.InternalInvoiceId
        #           && vendInvoiceTrans.Qty                  >  0;
        #
        #    return vendInvoiceTrans.RecId != 0;
        #}
        #
      ENDSOURCE
      SOURCE #initApprovalFromPurchTotals
        #server void initApprovalFromPurchTotals(PurchTotals _purchTotals)
        #{
        #    AmountCur invoiceAmount = this.InvoiceAmount;
        #
        #    this.initFromPurchTotals(_purchTotals);
        #
        #    this.InvoiceAmount = invoiceAmount;
        #}
        #
      ENDSOURCE
      SOURCE #initFromLedgerJournalTrans
        #// Code was merged automatically.
        #void initFromLedgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans)
        #{
        #    #EECountryRegionCodes
        #    // <GMX>
        #    #isoCountryRegionCodes
        #    // </GMX>
        #
        #    //<GTH>
        #    LedgerJournalTransExtensionTH   ledgerJournalTransExtensionTH;
        #    VendInvoiceJourExtensionTH      vendInvoiceJourExtensionTH;
        #    //</GTH>
        #
        #    if (!_ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
        #    {
        #        return;
        #    }
        #
        #    this.initFromVendTable(VendTable::findByLedgerDimension(_ledgerJournalTrans.parmLedgerDimension()));
        #
        #    this.CustVendInvoiceJour::initFromLedgerJournalTrans(_ledgerJournalTrans);
        #
        #    this.PaymId   = _ledgerJournalTrans.PaymId;
        #    this.Listcode = _ledgerJournalTrans.Listcode;
        #
        #// The following was merged successfully, but should be reviewed.
        #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
        #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
        #    // <GMX>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #    {
        #        this.CFDIUUID_MX        = _ledgerJournalTrans.CFDIUUID_MX;
        #    }
        #    // </GMX>
        #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
        #//     // <GMX>
        #//     if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #//     {
        #//         this.CFDIUUID_MX        = _ledgerJournalTrans.CFDIUUID_MX;
        #        this.InvoiceSeries_MX   = _ledgerJournalTrans.InvoiceSeries_MX;
        #//     }
        #//     // </GMX>
        #// End
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion(#easternEuropeAll))
        #    {
        #        this.PurchReceiptDate_W = _ledgerJournalTrans.ReceiptDate_W;
        #    }
        #    //<GTH>
        #    if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
        #    {
        #        ledgerJournalTransExtensionTH   = LedgerJournalTransExtensionTH::findByLedgerJournalTrans(_ledgerJournalTrans.RecId);
        #        vendInvoiceJourExtensionTH      = this.vendInvoiceJourExtensionTH();
        #
        #        vendInvoiceJourExtensionTH.InvoiceDate              = ledgerJournalTransExtensionTH.InvoiceDate;
        #        vendInvoiceJourExtensionTH.InvoiceReceiptDate       = ledgerJournalTransExtensionTH.InvoiceReceiptDate;
        #        this.DocumentNum                                    = _ledgerJournalTrans.DocumentNum;
        #        this.DocumentDate                                   = _ledgerJournalTrans.DocumentDate;
        #        vendInvoiceJourExtensionTH.TaxInvoiceReceiptDate    = ledgerJournalTransExtensionTH.TaxInvoiceReceiptDate;
        #        vendInvoiceJourExtensionTH.RealVendName             = ledgerJournalTransExtensionTH.RealVendName;
        #
        #        this.SysExtensionSerializerMap::packExtensionTable(vendInvoiceJourExtensionTH);
        #    }
        #    //</GTH>
        #// The following was merged successfully, but should be reviewed.
        #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
        #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
        #
        #    //Begin update STFxDIOT_IETU ArlyRubio 28.8.2012 -->
        #    this.STFxExcludeOfIETU  = _ledgerJournalTrans.STFxExcludeOfIETU;
        #    this.STFxImportTax      = _ledgerJournalTrans.STFxImportTax;
        #    this.STFxPurchId        = _ledgerJournalTrans.STFxPurchId;
        #
        #    if (this.STFxImportTax)
        #    {
        #        this.STFxVendAccount = PurchTable::find(this.STFxPurchId).InvoiceAccount;
        #        this.STFxCustomsRef  = _ledgerJournalTrans.Txt;
        #    }
        #    //End update STFxDIOT_IETU ArlyRubio 28.8.2012 <--
        #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
        #// End
        #}
      ENDSOURCE
      SOURCE #initFromParmTable
        #// Code was merged automatically.
        #/// <summary>
        #/// Initializes the current <c>VendInvoiceJour</c> record based on the data in the specified
        #/// <c>VendInvoiceInfoTable</c> record.
        #/// </summary>
        #/// <param name="_parmTable">
        #/// A <c>VendInvoiceInfoTable</c> record that contains the data to copy.
        #/// </param>
        #void initFromParmTable(VendInvoiceInfoTable _parmTable)
        #{
        #// The following was merged successfully, but should be reviewed.
        #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
        #//     // <GEERU>
        #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
        #    // <GEERU><GMX>
        #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
        #//     // <GEERU><GMX>
        #// End
        #    #ISOCountryRegionCodes
        #// The following was merged successfully, but should be reviewed.
        #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
        #//     // </GEERU>
        #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
        #    // </GMX></GEERU>
        #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
        #//     // </GMX></GEERU>
        #// End
        #    VendTable   vendTable;
        #    VendInvoiceInfoTable_RU     vendInvoiceInfoTable_RU;
        #    //<GTH>
        #    VendInvoiceJourExtensionTH      vendInvoiceJourExtensionTH;
        #    VendInvoiceInfoTableExtensionTH vendInvoiceInfoTableExtensionTH;
        #    //</GTH>
        #
        #    if (_parmTable.isNonPO() || _parmTable.isAdvance())
        #    {
        #        vendTable = _parmTable.vendTable_InvoiceAccount();
        #
        #        this.PurchaseType           = PurchaseType::Purch;
        #        this.PurchId                = _parmTable.isAdvance() ? _parmTable.PurchId : '';
        #        this.OrderAccount           = _parmTable.OrderAccount;
        #        this.InvoiceAccount         = _parmTable.InvoiceAccount;
        #        this.TaxGroup               = _parmTable.TaxGroup;
        #        this.vatNum                 = _parmTable.vatNum;
        #        this.VendGroup              = vendTable.VendGroup;
        #        this.ItemBuyerGroupId       = vendTable.ItemBuyerGroupId;
        #        this.DlvTerm                = vendTable.DlvTerm;
        #        this.DlvMode                = vendTable.DlvMode;
        #        this.Payment                = _parmTable.Payment;
        #        this.PaymentSched           = _parmTable.PaymentSched;
        #        this.PaymDayId              = _parmTable.paymDayId();
        #        this.CashDiscCode           = _parmTable.CashDiscCode;
        #
        #        if(TaxParameters::find().CashDiscOnInvoice)
        #            this.CashDiscPercent    = _parmTable.CashDiscPercent;
        #
        #        this.CashDisc               = 0;
        #        this.CashDiscDate           = naDate();
        #        this.InclTax                = _parmTable.InclTax;
        #//        this.ReturnItemNum          = _parmTable.ReturnItemNum;
        #        this.PostingProfile         = _parmTable.PostingProfile;
        #        this.NumberSequenceGroup    = _parmTable.NumberSequenceGroup;
        #        this.LanguageId             = DirPartyTable::findRec(vendTable.Party).LanguageId;
        #
        #        this.Qty                    = 0;
        #        this.Volume                 = 0;
        #        this.Weight                 = 0;
        #
        #        this.SumLineDisc            = 0;
        #        this.SalesBalance           = 0;
        #        this.EndDisc                = 0;
        #        this.InvoiceAmount          = 0;
        #        this.CurrencyCode           = _parmTable.CurrencyCode;
        #
        #        this.DefaultDimension       = _parmTable.DefaultDimension;
        #        this.CountryRegionId        = LogisticsPostalAddress::findRecId(_parmTable.DeliveryPostalAddress).CountryRegionId;
        #
        #        this.EnterpriseNumber       = _parmTable.EnterpriseNumber;
        #
        #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #        {
        #            this.PurchAgreementHeader_PSN = _parmTable.PurchAgreementHeader_PSN;
        #        }
        #    }
        #
        #    this.DocumentNum            = _parmTable.DocumentNum;
        #    this.DocumentDate           = _parmTable.DocumentDate;
        #    this.PaymId                 = _parmTable.PaymId;
        #    this.FixedDueDate           = _parmTable.FixedDueDate;
        #    this.VendInvoiceGroup       = _parmTable.VendInvoiceGroup;
        #    this.DocumentOrigin         = _parmTable.DocumentOrigin;
        #    this.VendPaymentGroup       = _parmTable.VendPaymentGroup;
        #    this.Description            = _parmTable.Description;
        #
        #    this.SourceDocumentHeader   = _parmTable.SourceDocumentHeader;
        #    this.SourceDocumentLine     = _parmTable.SourceDocumentLine;
        #// The following was merged successfully, but should be reviewed.
        #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
        #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
        #    //Begin update STFxDIOT_IETU ArlyRubio 28.8.2012 -->
        #    this.STFxExcludeOfIETU      = _parmTable.STFxCancelInvoice;
        #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
        #// End
        #
        #    if (_parmTable.FixedExchRate || _parmTable.ExchRate != 0.0)
        #    {
        #        this.ExchRate            = _parmTable.ExchRate;
        #        this.ExchRateSecondary   = _parmTable.ExchRateSecondary;
        #        this.Triangulation       = _parmTable.euroTriangulation;
        #    }
        #    else
        #    {
        #        this.Triangulation          = Currency::triangulation(this.CurrencyCode,this.InvoiceDate);
        #        this.ExchRate               = Currency::exchRate(this.CurrencyCode, this.InvoiceDate);
        #        this.ExchRateSecondary      = Currency::exchRateSecond(this.CurrencyCode, this.InvoiceDate);
        #    }
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        vendInvoiceInfoTable_RU = _parmTable.vendInvoiceInfoTable_RU();
        #        this.AttorneyId_RU           = vendInvoiceInfoTable_RU.AttorneyId_RU;
        #        this.AttorneyDate_RU         = vendInvoiceInfoTable_RU.AttorneyDate_RU;
        #        this.AttorneyIssuedName_RU   = vendInvoiceInfoTable_RU.AttorneyIssuedName_RU;
        #
        #        this.vatOnPayment_RU         = vendInvoiceInfoTable_RU.vatOnPayment_RU;
        #        this.Correct_RU              = vendInvoiceInfoTable_RU.Correct_RU;
        #        this.CorrectedInvoiceId_RU   = vendInvoiceInfoTable_RU.CorrectedInvoiceId_RU;
        #        this.CorrectedInvoiceDate_RU = vendInvoiceInfoTable_RU.CorrectedInvoiceDate_RU;
        #
        #        if (_parmTable.PostingProfile)
        #        {
        #            this.PostingProfile      = _parmTable.PostingProfile;
        #        }
        #        this.InventProfileType_RU    = vendInvoiceInfoTable_RU.InventProfileType_RU;
        #        if (_parmTable.isNonPO())
        #        {
        #            this.ConsigneeAccount_RU = vendInvoiceInfoTable_RU.ConsigneeAccount_RU;
        #            this.ConsignorAccount_RU = vendInvoiceInfoTable_RU.ConsignorAccount_RU;
        #        }
        #
        #        this.CorrectionType_RU       = vendInvoiceInfoTable_RU.correctionType_RU();
        #    }
        #    // </GEERU>
        #
        #    if (BankLCImportFeatureChecker::checkBankLCImportEnabled())
        #    {
        #        this.BankLCImportLine = _parmTable.BankLCImportLine;
        #    }
        #
        #    //<GTH>
        #    if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
        #    {
        #        vendInvoiceJourExtensionTH          = this.vendInvoiceJourExtensionTH();
        #        vendInvoiceInfoTableExtensionTH     = _parmTable.vendInvoiceInfoTableExtensionTH();
        #
        #        vendInvoiceJourExtensionTH.InvoiceDate              = vendInvoiceInfoTableExtensionTH.InvoiceDate;
        #        vendInvoiceJourExtensionTH.InvoiceReceiptDate       = vendInvoiceInfoTableExtensionTH.InvoiceReceiptDate;
        #        this.DocumentNum                                    = _parmTable.DocumentNum;
        #        this.DocumentDate                                   = _parmTable.DocumentDate;
        #        vendInvoiceJourExtensionTH.TaxInvoiceReceiptDate    = vendInvoiceInfoTableExtensionTH.TaxInvoiceReceiptDate;
        #        vendInvoiceJourExtensionTH.RealVendName             = vendInvoiceInfoTableExtensionTH.RealVendName;
        #        vendInvoiceJourExtensionTH.InvoicePostalAddress     = vendInvoiceInfoTableExtensionTH.PostalAddress;
        #
        #        this.SysExtensionSerializerMap::packExtensionTable(vendInvoiceJourExtensionTH);
        #    }
        #    //</GTH>
        #// The following was merged successfully, but should be reviewed.
        #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
        #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
        #
        #    // <GMX>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #    {
        #        this.CFDIUUID_MX        = _parmTable.vendInvoiceInfoTable_W().CFDIUUID_MX;
        #    }
        #    // </GMX>
        #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
        #//
        #//     // <GMX>
        #//     if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #//     {
        #//         this.CFDIUUID_MX        = _parmTable.vendInvoiceInfoTable_W().CFDIUUID_MX;
        #        this.InvoiceSeries_MX   = _parmTable.vendInvoiceInfoTable_W().InvoiceSeries_MX;
        #//     }
        #//     // </GMX>
        #// End
        #}
      ENDSOURCE
      SOURCE #initFromPurchTable
        #void  initFromPurchTable(PurchTable purchTable)
        #{
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    PurchTable_RU       purchTable_RU;
        #    // <GEERU>
        #    // <GIN>
        #    VendInvoiceJour_IN  vendInvoiceJourIN;
        #    // </GIN>
        #    // <GMY>
        #    VendInvoiceJour_W   vendInvoiceJour_W;
        #    PurchTable_W        purchTable_W;
        #    // </GMY>
        #
        #    VendInvoiceJour_Intrastat vendInvoiceJour_Intrastat;
        #
        #    if (SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(VendInvoiceJour_Intrastat)))
        #    {
        #        vendInvoiceJour_Intrastat = this.vendInvoiceJour_Intrastat();
        #    }
        #
        #    this.PurchaseType           = purchTable.PurchaseType;
        #    this.PurchId                = purchTable.PurchId;
        #    this.OrderAccount           = purchTable.OrderAccount;
        #    this.InvoiceAccount         = purchTable.InvoiceAccount;
        #    this.TaxGroup               = purchTable.TaxGroup;
        #    this.vatNum                 = purchTable.vatNum;
        #    this.VendGroup              = purchTable.VendGroup;
        #    this.ItemBuyerGroupId       = purchTable.ItemBuyerGroupId;
        #    this.DlvTerm                = purchTable.DlvTerm;
        #    this.DlvMode                = purchTable.DlvMode;
        #    this.Payment                = purchTable.Payment;
        #    this.PaymentSched           = purchTable.PaymentSched;
        #    this.PaymDayId              = purchTable.paymDayId();
        #
        #    //Begin STF Presupuesto Mega / FPE
        #    this.ISBudgetKeyId = purchTable.ISBudgetKeyId;
        #
        #    //End STF Presupuesto Mega
        #
        #    this.CashDiscCode           = purchTable.CashDisc;
        #
        #    if(TaxParameters::find().CashDiscOnInvoice)
        #        this.CashDiscPercent    = purchTable.CashDiscPercent;
        #
        #    this.CashDisc               = 0;
        #    this.CashDiscDate           = naDate();
        #
        #    this.InclTax                = purchTable.InclTax;
        #    this.ReturnItemNum          = purchTable.ReturnItemNum;
        #    // <GEERU>
        #    if (! SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) ||
        #        ! this.PostingProfile)
        #    {
        #    // </GEERU>
        #        this.PostingProfile     = purchTable.PostingProfile;
        #    // <GEERU>
        #    }
        #    // </GEERU>
        #    this.NumberSequenceGroup    = purchTable.NumberSequenceGroup;
        #    this.LanguageId             = purchTable.LanguageId;
        #
        #    this.Qty                    = 0;
        #    this.Volume                 = 0;
        #    this.Weight                 = 0;
        #
        #    this.SumLineDisc            = 0;
        #    this.SalesBalance           = 0;
        #    this.EndDisc                = 0;
        #    this.InvoiceAmount          = 0;
        #    this.CurrencyCode           = purchTable.CurrencyCode;
        #
        #    this.DefaultDimension       = purchTable.DefaultDimension;
        #    this.CountryRegionId        = purchTable.deliveryAddress().CountryRegionId;
        #
        #    this.InterCompanyCompanyId  = purchTable.InterCompanyCompanyId;
        #    this.InterCompanySalesId    = purchTable.InterCompanySalesId;
        #    this.EnterpriseNumber       = purchTable.EnterpriseNumber;
        #    this.Listcode               = purchTable.ListCode;
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIS]))
        #    {
        #        this.VendInvoiceDeclaration_IS = purchTable.VendInvoiceDeclaration_IS;
        #    }
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchTable_RU = purchTable.purchTable_RU();
        #        this.ConsigneeAccount_RU    = purchTable_RU.ConsigneeAccount_RU;
        #        this.ConsignorAccount_RU    = purchTable_RU.ConsignorAccount_RU;
        #    }
        #    // </GEERU>
        #
        #    // <GEELT>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]))
        #    {
        #        this.UnitedVATInvoice_LT = purchTable.UnitedVATInvoice_LT;
        #        this.WhoIsAuthor_LT      = LtDocOriginator::Vendor;
        #    }
        #    // </GEELT>
        #
        #    // <GEEU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoLV]))
        #    {
        #        TransportationDocument::copy(purchTable, this);
        #    }
        #    // </GEEU>
        #
        #    // <GEEHU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        #    {
        #        this.IntrastatFulfillmentDate_HU = purchTable.IntrastatFulfillmentDate_HU;
        #    }
        #    // </GEEHU>
        #
        #    if (BrazilParameters::isEnabled())
        #    {
        #        this.initFromPurchTablePost_BR(purchTable);
        #    }
        #    // <GEECZ>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
        #    {
        #        vendInvoiceJour_Intrastat.SpecialMovement_CZ = purchTable.purchTable_Intrastat().SpecialMovement_CZ;
        #        this.packVendInvoiceJour_Intrastat(vendInvoiceJour_Intrastat);
        #    }
        #    // </GEECZ>
        #    // <GEELV>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLV]))
        #    {
        #        this.IntrastatAddValue_LV = purchTable.IntrastatAddValue_LV;
        #    }
        #    // </GEELV>
        #
        #    // <GMY>
        #    if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        #    {
        #        vendInvoiceJour_W                       = this.vendInvoiceJour_W();
        #        vendInvoiceJour_W.ReasonTableRef        = purchTable.ReasonTableRef;
        #        vendInvoiceJour_W.HasReference_MY       = purchTable.hasLinesWithRefrence_MY();
        #
        #        purchTable_W                            = purchTable.purchTable_W();
        #        vendInvoiceJour_W.GSTApprovalNumber_MY  = purchTable_W.GSTApprovalNumber_MY;
        #        this.packVendInvoiceJour_W(vendInvoiceJour_W);
        #    }
        #    // </GMY>
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #    {
        #        vendInvoiceJourIN.ExciseVendorType = purchTable.purchTable_W().ExciseVendorType_IN;
        #        vendInvoiceJourIN.ExciseManufactureImporterTable = purchTable.purchTable_W().ExciseManufactureImporterTable_IN;
        #        this.packVendInvoiceJour_IN(vendInvoiceJourIN);
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #initFromPurchTablePost_BR
        #/// <summary>
        #/// Initializes brazilian fields
        #/// </summary>
        #/// <param name="purchTable">
        #/// <c>PurchTable</c> record
        #/// </param>
        #public void initFromPurchTablePost_BR(PurchTable purchTable)
        #{
        #    PurchTable_BR   purchTable_BR = purchTable.purchTable_BR();
        #
        #    this.ServiceCodeOnDlvAddress_BR     = purchTable_BR.ServiceCodeOnDlvAddress_BR;
        #    this.SalesPurchOperationType_BR     = purchTable_BR.SalesPurchOperationType_BR;
        #    this.VendFinalUser_BR               = purchTable_BR.VendFinalUser_BR;
        #}
      ENDSOURCE
      SOURCE #initFromPurchTotals
        #public server void initFromPurchTotals(
        #    PurchTotals _purchTotals,
        #    AmountCur _reverseChargeTotal = 0.0)
        #{
        #
        #    // <GMY>
        #    VendInvoiceJour_W       vendInvoiceJour_W;
        #    // </GMY>
        #
        #    this.CurrencyCode       = _purchTotals.purchCurrency();
        #
        #    this.Qty                = _purchTotals.purchQty();
        #    this.Weight             = _purchTotals.purchWeight();
        #    this.Volume             = _purchTotals.purchVolume();
        #
        #    this.SalesBalance       = _purchTotals.purchBalance();
        #
        #    this.EndDisc            = _purchTotals.purchEndDisc();
        #
        #    this.SumMarkup          = _purchTotals.purchMarkup();
        #    this.ReverseCharge_UK   = _reverseChargeTotal;
        #
        #    this.SumTax             = _purchTotals.purchTaxTotal();
        #    this.SumLineDisc        = _purchTotals.purchLineDisc();
        #
        #    //Cash discount should not be computed on Advance
        #    if(this.InvoiceType != PurchInvoiceType::VendorAdvance)
        #    {
        #        this.CashDisc           = _purchTotals.purchCashDiscAmount();
        #        this.CashDiscDate       = _purchTotals.purchCashDiscDate();
        #        this.CashDiscCode       = _purchTotals.purchCashDiscCode();
        #    }
        #
        #    this.TaxRoundOff        = _purchTotals.purchTaxRoundOff();
        #    this.InvoiceRoundOff    = _purchTotals.purchRoundOff();
        #
        #    this.InvoiceAmount      = _purchTotals.purchTotalAmount();
        #    // <GIN>
        #    if (TaxParameters::isVATEnable_IN())
        #    {
        #        this.vatAmount_IN       = _purchTotals.vatAmountTotal_IN();
        #    }
        #    if (TaxParameters::isCustomsEnable_IN())
        #    {
        #        this.InvoiceAmount      = this.InvoiceAmount - _purchTotals.tax().getCustomsDuty_IN();
        #    }
        #    if (TaxWithholdParameters_IN::checkTaxParameters()
        #        && PaymSched::find(this.PaymentSched).PaymBy == PaymSchedBy::AmountByPayment)
        #    {
        #        this.TaxWithholdAmount_IN   = _purchTotals.parmTaxWithholdAmount_IN();
        #    }
        #    // </GIN>
        #
        #    // <GMY>
        #    if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        #    {
        #        vendInvoiceJour_W               = this.vendInvoiceJour_W();
        #        vendInvoiceJour_W.NoteType_MY   = this.getNoteType_MY();
        #        this.packVendInvoiceJour_W(vendInvoiceJour_W);
        #    }
        #    // </GMY>
        #}
        #
      ENDSOURCE
      SOURCE #initFromSADInvoice_PL
        #/// <summary>
        #/// Initialize invoice from SAD invoice reference
        #/// </summary>
        #/// <param name="_sadInvoice">
        #/// SAD invoice reference
        #/// </param>
        #// <GEEPL>
        #public void initFromSADInvoice_PL(PlSADInvoice _sadInvoice)
        #{
        #    if (_sadInvoice)
        #    {
        #        this.InvoiceAmount += _sadInvoice.InvoiceMiscCharg + _sadInvoice.InvoiceInsurance + _sadInvoice.InvoiceTransport;
        #        this.DocumentDate   = _sadInvoice.DocumentDate;
        #    }
        #}
        #// </GEEPL>
      ENDSOURCE
      SOURCE #initFromSADTable_PL
        #/// <summary>
        #/// Initalize duty invoice from SAD document
        #/// </summary>
        #/// <param name="_sadTable">
        #/// SAD document
        #/// </param>
        #// <GEEPL>
        #public void initFromSADTable_PL(PlSADTable _sadTable)
        #{
        #    VendTable vendTable = VendTable::find(_sadTable.sadDutyVend);
        #
        #    this.PurchaseType      = PurchaseType::Purch;
        #    this.PurchId           = _sadTable.sadNumber;
        #    this.OrderAccount      = _sadTable.sadDutyVend;
        #    this.InvoiceAccount    = _sadTable.sadDutyVend;
        #
        #    this.VendGroup         = vendTable.VendGroup;
        #    this.Payment           = vendTable.PaymTermId;
        #    this.PaymentSched      = vendTable.PaymSched;
        #    this.PaymDayId         = vendTable.PaymDayId;
        #    this.CashDisc          = 0;
        #    this.PostingProfile    = VendParameters::find().PostingProfile;
        #
        #    this.Qty               = 0;
        #    this.Volume            = 0;
        #    this.Weight            = 0;
        #
        #    this.SumLineDisc       = 0;
        #    this.SalesBalance      = 0;
        #    this.EndDisc           = 0;
        #    this.InvoiceAmount     = 0;
        #    this.DocumentNum       = _sadTable.sadNumber;
        #    this.CurrencyCode      = CompanyInfo::standardCurrency();
        #
        #    this.Triangulation     = Currency::triangulation(this.CurrencyCode,                this.InvoiceDate);
        #    this.ExchRate          = Currency::exchRate      (CompanyInfo::standardCurrency(), this.InvoiceDate);
        #    this.ExchRateSecondary = this.ExchRate;
        #
        #    this.DefaultDimension  = _sadTable.DefaultDimension;
        #    this.CountryRegionId   = vendTable.postalAddress().CountryRegionId;
        #    this.InvoiceId         = _sadTable.sadNumber;
        #}
        #// </GEEPL>
      ENDSOURCE
      SOURCE #initFromVendInvoiceInfoTable
        #/// <summary>
        #/// Initializes the current <c>VendInvoiceJour</c> table record based on the data in the specified
        #/// <c>VendInvoiceInfoTable</c> table record.
        #/// </summary>
        #/// <param name="_vendInvoiceInfoTable">
        #/// The <c>VendInvoiceInfoTable</c> table record that contains the data to copy.
        #/// </param>
        #void initFromVendInvoiceInfoTable(VendInvoiceInfoTable _vendInvoiceInfoTable)
        #{
        #    TransDate packingSlipDate;
        #
        #    // <GEEU><GMX>
        #    #ISOCountryRegionCodes
        #    // </GMX></GEEU>
        #    #EECountryRegionCodes
        #    //<GTH>
        #    VendInvoiceJourExtensionTH      vendInvoiceJourExtensionTH;
        #    VendInvoiceInfoTableExtensionTH vendInvoiceInfoTableExtensionTH;
        #    //</GTH>
        #    // <GIN>
        #    VendInvoiceInfoTable_IN         vendInvoiceInfoTableLoc;
        #    VendInvoiceJour_IN              vendInvoiceJourLoc;
        #    // </GIN>
        #    // <GMY>
        #    VendInvoiceJour_W       vendInvoiceJour_W;
        #    VendInvoiceInfoTable_W  vendInvoiceInfoTable_W;
        #    // </GMY>
        #
        #    this.VendorRequestedWorkerEmail = _vendInvoiceInfoTable.VendorRequestedWorkerEmail;
        #    this.LogisticsElectronicAddress = _vendInvoiceInfoTable.LogisticsElectronicAddress;
        #
        #    this.DeliveryName               = _vendInvoiceInfoTable.DeliveryName;
        #    this.DeliveryPostalAddress      = _vendInvoiceInfoTable.DeliveryPostalAddress;
        #
        #    this.InvoiceType                = _vendInvoiceInfoTable.InvoiceType;
        #    this.Listcode                   = _vendInvoiceInfoTable.ListCode;
        #
        #    //<GTH>
        #    if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
        #    {
        #        vendInvoiceJourExtensionTH          = this.vendInvoiceJourExtensionTH();
        #        vendInvoiceInfoTableExtensionTH     = _vendInvoiceInfoTable.vendInvoiceInfoTableExtensionTH();
        #
        #        vendInvoiceJourExtensionTH.InvoiceDate              = vendInvoiceInfoTableExtensionTH.InvoiceDate;
        #        vendInvoiceJourExtensionTH.InvoiceReceiptDate       = vendInvoiceInfoTableExtensionTH.InvoiceReceiptDate;
        #        this.DocumentNum                                    = _vendInvoiceInfoTable.DocumentNum;
        #        this.DocumentDate                                   = _vendInvoiceInfoTable.DocumentDate;
        #        vendInvoiceJourExtensionTH.TaxInvoiceReceiptDate    = vendInvoiceInfoTableExtensionTH.TaxInvoiceReceiptDate;
        #        vendInvoiceJourExtensionTH.RealVendName             = vendInvoiceInfoTableExtensionTH.RealVendName;
        #        vendInvoiceJourExtensionTH.InvoicePostalAddress     = vendInvoiceInfoTableExtensionTH.PostalAddress;
        #
        #        this.SysExtensionSerializerMap::packExtensionTable(vendInvoiceJourExtensionTH);
        #    }
        #    //</GTH>
        #    // <GJP>
        #    if (VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
        #    {
        #        this.ConsTarget_JP              = _vendInvoiceInfoTable.vendInvoiceInfoTable_W().ConsTarget_JP;
        #    }
        #    // </GJP>
        #    // <GMY>
        #    if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        #    {
        #        vendInvoiceJour_W                               = this.vendInvoiceJour_W();
        #        vendInvoiceInfoTable_W                          = _vendInvoiceInfoTable.vendInvoiceInfoTable_W();
        #        vendInvoiceJour_W.InvoiceType_MY                = vendInvoiceInfoTable_W.InvoiceType_MY;
        #        vendInvoiceJour_W.TaxGSTImportDeclarationNo_MY  = vendInvoiceInfoTable_W.TaxGSTImportDeclarationNo_MY;
        #        this.packVendInvoiceJour_W(vendInvoiceJour_W);
        #    }
        #    // </GMY>
        #
        #    // <GEEU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoLV]))
        #    {
        #        TransportationDocument::copy(_vendInvoiceInfoTable, this);
        #    }
        #    // </GEEU>
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion(#easternEuropeAll))
        #    {
        #       this.PurchReceiptDate_W = _vendInvoiceInfoTable.vendInvoiceInfoTable_W().PurchReceiptDate_W;
        #    }
        #
        #    if (BrazilParameters::isEnabled())
        #    {
        #        this.initFromVendInvoiceInfoTablePost_BR(_vendInvoiceInfoTable);
        #    }
        #    // <GMX>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #    {
        #        this.CFDIUUID_MX        = _vendInvoiceInfoTable.vendInvoiceInfoTable_W().CFDIUUID_MX;
        #        this.InvoiceSeries_MX   = _vendInvoiceInfoTable.vendInvoiceInfoTable_W().InvoiceSeries_MX;
        #    }
        #    // </GMX>
        #
        #    // <GEEHU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        #    {
        #        this.IntrastatFulfillmentDate_HU = _vendInvoiceInfoTable.vendInvoiceInfoTable_W().IntrastatFulfillmentDate_HU;
        #    }
        #    // </GEEHU>
        #
        #    packingSlipDate = _vendInvoiceInfoTable.firstPackingSlipDate_ES();
        #
        #    if (packingSlipDate)
        #    {
        #        this.DeliveryDate_ES = packingSlipDate;
        #    }
        #    else
        #    {
        #        this.DeliveryDate_ES = _vendInvoiceInfoTable.purchTable().DeliveryDate;
        #    }
        #    // <GIN>
        #    if (TaxParameters::isExciseEnable_IN() && _vendInvoiceInfoTable.purchTable().isExcisable_IN())
        #    {
        #        vendInvoiceInfoTableLoc = _vendInvoiceInfoTable.vendInvoiceInfoTable_IN();
        #        vendInvoiceJourLoc = this.vendInvoiceJour_IN();
        #        vendInvoiceJourLoc.ExciseInvoiceAddress = vendInvoiceInfoTableLoc.ExciseInvoiceAddress;
        #        this.packVendInvoiceJour_IN(vendInvoiceJourLoc);
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceInfoTablePost_BR
        #/// <summary>
        #/// Initializes brazilian fields based on associated <c>VendInvoiceInfoTable</c> record
        #/// </summary>
        #/// <param name="_vendInvoiceInfoTable">
        #/// A record of <c>VendInvoiceInfoTable</c> table
        #/// </param>
        #public void initFromVendInvoiceInfoTablePost_BR(VendInvoiceInfoTable _vendInvoiceInfoTable)
        #{
        #    VendInvoiceInfoTable_W vendInvoiceInfoTable_W;
        #
        #    vendInvoiceInfoTable_W = _vendInvoiceInfoTable.vendInvoiceInfoTable_W();
        #
        #    this.FiscalDocumentType_BR      = vendInvoiceInfoTable_W.FiscalDocumentType_BR;
        #    this.SalesPurchOperationType_BR = vendInvoiceInfoTable_W.SalesPurchOperationType_BR;
        #    this.ReasonTableRef_BR          = vendInvoiceInfoTable_W.ReasonTableRef_BR;
        #
        #}
      ENDSOURCE
      SOURCE #initFromVendTable
        #void  initFromVendTable(VendTable  vendTable)
        #{
        #    this.TaxGroup               = vendTable.TaxGroup;
        #    this.Payment                = vendTable.PaymTermId;
        #    this.PaymDayId              = vendTable.PaymDayId ? vendTable.PaymDayId : PaymTerm::find(this.Payment).PaymDayId;
        #
        #    this.calcDue();
        #
        #    this.VendGroup              = vendTable.VendGroup;
        #
        #    this.OrderAccount           = vendTable.AccountNum;
        #    this.InvoiceAccount         = vendTable.InvoiceAccount ? vendTable.InvoiceAccount : vendTable.AccountNum;
        #    this.vatNum                 = this.vendTable_InvoiceAccount().vatNum;
        #    this.DefaultDimension       = vendTable.DefaultDimension;
        #    this.CashDiscCode           = vendTable.CashDisc;
        #    this.PostingProfile         = VendParameters::find().PostingProfile;
        #    this.PaymentSched           = vendTable.PaymSched ? vendTable.PaymSched : PaymTerm::find(this.Payment).PaymSched;
        #
        #    this.CurrencyCode           = vendTable.Currency;
        #    this.ExchRate               = Currency::exchRate(vendTable.Currency, this.InvoiceDate);
        #    this.ExchRateSecondary      = Currency::exchRateSecond(vendTable.Currency, this.InvoiceDate);
        #    this.EnterpriseNumber       = vendTable.EnterpriseNumber;
        #    this.LanguageId             = vendTable.languageId();
        #}
        #
      ENDSOURCE
      SOURCE #initFromVendTrans
        #void initFromVendTrans( VendTrans vendTrans)
        #{
        #    VendTable   vendTable = VendTable::find(vendTrans.AccountNum);
        #
        #
        #    this.CustVendInvoiceJour::initFromCustVendTrans(vendTrans);
        #
        #    this.NumberSequenceGroup = vendTable.NumberSequenceGroup;
        #    this.InternalInvoiceId   = this.getInternalInvoiceIdFromVendTrans(-vendTrans.AmountCur);
        #
        #    this.vatNum = vendTable.vatNum;
        #    this.EnterpriseNumber = vendTable.EnterpriseNumber;
        #    this.LanguageId = vendTable.languageId();
        #
        #    this.InvoiceAmount       = -this.InvoiceAmount;
        #    this.TaxInvoicePurchId   = vendTrans.TaxInvoicePurchId;
        #}
      ENDSOURCE
      SOURCE #insert
        #public void insert()
        #{
        #    // <GEERU>
        #    #isoCountryRegionCodes
        #    // </GEERU>
        #    this.calcMSTAmounts();
        #
        #    super();
        #
        #    // <GEECZ>
        #    this.SysExtensionSerializerMap::postInsert();
        #    // </GEECZ>
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        CustVendInvoiceJour::initRefOriginalInvoice_RU(this);
        #    }
        #    // </GEERU>
        #
        #}
      ENDSOURCE
      SOURCE #interCompanyDerivedActionPolicy
        #public InterCompanyEndpointActionPolicy interCompanyDerivedActionPolicy(boolean   _forUpdate = false)
        #{
        #    CustInvoiceJour                     custInvoiceJour;
        #    InterCompanyEndpointActionPolicy    interCompanyEndpointActionPolicy;
        #
        #    changecompany(
        #                  this.company()
        #                  )
        #    {
        #        if (this.InterCompanyCompanyId
        #        &&  this.InterCompanySalesId)
        #        {
        #            changecompany(this.InterCompanyCompanyId)
        #            {
        #                custInvoiceJour                  = CustInvoiceJour::findFromCustInvoiceTrans(this.InterCompanySalesId,this.InvoiceId,this.InvoiceDate,this.NumberSequenceGroup);
        #                interCompanyEndpointActionPolicy = custInvoiceJour.interCompanyEndpointActionPolicy();
        #            }
        #        }
        #    }
        #    return interCompanyEndpointActionPolicy;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyDoExternalPosting
        #public boolean interCompanyDoExternalPosting()
        #{
        #    return false;
        #}
      ENDSOURCE
      SOURCE #interCompanyDoInternalPosting
        #public boolean interCompanyDoInternalPosting()
        #{
        #    return  this.purchTable().InterCompanyDirectDelivery
        #        &&  this.purchTable().interCompanyEndpointActionPolicy().PostSalesInvoice
        #        && !this.purchTable().ProjId;
        #}
      ENDSOURCE
      SOURCE #interCompanyEndpointActionPolicy
        #/// <summary>
        #/// Gets the intercompany trading policy for the current <c>VendInvoiceJour</c> table record.
        #/// </summary>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A record in the <c>InterCompanyEndpointActionPolicy</c> table; otherwise, an empty record.
        #/// </returns>
        #public InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy(boolean   _forUpdate = false)
        #{
        #    InterCompanyEndpointActionPolicy    interCompanyEndpointActionPolicy;
        #
        #    changecompany (
        #                   this.company()
        #                   )
        #    {
        #        interCompanyEndpointActionPolicy = VendTable::find(this.OrderAccount).interCompanyTradingPartner().interCompanyEndpointActionPolicy(_forUpdate);
        #    }
        #    return interCompanyEndpointActionPolicy;
        #}
        #
      ENDSOURCE
      SOURCE #interCompanyTransTableNum
        #public TableId interCompanyTransTableNum()
        #{
        #    return tableNum(VendInvoiceTrans);
        #}
      ENDSOURCE
      SOURCE #isAdvance
        #/// <summary>
        #/// Indicates whether the invoice is an advance invoice.
        #/// </summary>
        #/// <returns>
        #/// true if the invoice is an advance invoice; otherwise, false.
        #/// </returns>
        #public boolean isAdvance()
        #{
        #    return (this.InvoiceType == PurchInvoiceType::VendorAdvance);
        #}
      ENDSOURCE
      SOURCE #isBlockedForBookInvoice_RU
        #public boolean isBlockedForBookInvoice_RU()
        #{
        #    VendTrans vendTrans = this.vendTrans();
        #
        #    return (select firstonly RecId from costAllocationHistory_RU
        #        where costAllocationHistory_RU.IndebtednessTransRecId == vendTrans.RecId ||
        #              costAllocationHistory_RU.InvoiceTransRecId      == vendTrans.RecId).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #isCostAllocationInvoice_RU
        #public boolean isCostAllocationInvoice_RU()
        #{
        #    VendTrans vendTrans = this.vendTrans();
        #
        #    return (select firstonly RecId from costAllocationHistory_RU
        #        where costAllocationHistory_RU.IndebtednessTransRecId == vendTrans.RecId ||
        #              costAllocationHistory_RU.InvoiceTransRecId      == vendTrans.RecId ||
        #              costAllocationHistory_RU.CreditNoteTransRecId   == vendTrans.RecId).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #isInclTax
        #/// <summary>
        #/// Determines whether this invoice includes tax in the line amount.
        #/// </summary>
        #/// <param name="_purchTable">
        #/// A purchase order header record; optional.
        #/// </param>
        #/// <returns>
        #/// true if the invoice includes tax; otherwise, false.
        #/// </returns>
        #public boolean isInclTax(PurchTable _purchTable = null)
        #{
        #    boolean     includeTax;
        #
        #    if (this.isNonPO() || this.isAdvance())
        #    {
        #        includeTax = this.InclTax;
        #    }
        #    else
        #    {
        #        if (_purchTable)
        #        {
        #            includeTax = _purchTable.InclTax;
        #        }
        #        else
        #        {
        #            includeTax = this.purchTable().InclTax;
        #        }
        #    }
        #
        #    return includeTax;
        #}
      ENDSOURCE
      SOURCE #isIndebtednessInvoice_RU
        #public boolean isIndebtednessInvoice_RU()
        #{
        #    VendTrans vendTrans = this.vendTrans();
        #
        #    return (select firstonly RecId from costAllocationHistory_RU
        #        where costAllocationHistory_RU.IndebtednessTransRecId == vendTrans.RecId).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #isInventProfileTypeMapped_RU
        #/// <summary>
        #/// Method created for use when calling <c>CustVendInvoiceJour</c> map method.
        #/// </summary>
        #/// <returns>
        #/// true if the field <c>InventProfileType_RU</c> is mapped to <c>CustVentInvoiceJour</c> map; otherwise, false.
        #/// </returns>
        #public boolean isInventProfileTypeMapped_RU()
        #{
        #    return mappingExists(tableNum(CustVendInvoiceJour), this.TableId, fieldNum(CustVendInvoiceJour, InventProfileType_RU));
        #}
        #
      ENDSOURCE
      SOURCE #isNonPO
        #/// <summary>
        #/// Determines whether this invoice is associated with a purchase order.
        #/// </summary>
        #/// <returns>
        #/// true if the invoice is not associated with a purchase order; otherwise, false.
        #/// </returns>
        #public boolean isNonPO()
        #{
        #    return (this.PurchId == '');
        #}
      ENDSOURCE
      SOURCE #isProforma
        #public boolean isProforma()
        #{
        #    return /*!this.InvoiceId*/ this.Proforma;
        #}
      ENDSOURCE
      SOURCE #ledgerVoucher
        #/// <summary>
        #/// Determines the <c>LedgerVoucher</c> object that is associated with this invoice.
        #/// </summary>
        #/// <returns>
        #/// The <c>LedgerVoucher</c> object that is associated with this invoice line.
        #/// </returns>
        #public Voucher ledgerVoucher()
        #{
        #    VendInvoiceTrans    vendInvoiceTrans;
        #    SourceDocumentLine  sourceDocumentLine;
        #    Voucher             localVoucher;
        #
        #    select firstonly AdvanceApplicationId, InternalInvoiceId from vendInvoiceTrans
        #        order by RecId desc
        #        join SourceDocumentHeader, RecId from sourceDocumentLine
        #        where sourceDocumentLine.SourceDocumentHeader == this.SourceDocumentHeader
        #            && vendInvoiceTrans.SourceDocumentLine == sourceDocumentLine.RecId;
        #
        #    if (vendInvoiceTrans.AdvanceApplicationId || vendInvoiceTrans.LineType == PurchInvoiceLineType::ReverseAdvanceApplication)
        #    {
        #        localVoucher = vendInvoiceTrans.InternalInvoiceId;
        #    }
        #    else
        #    {
        #        localVoucher = this.LedgerVoucher;
        #    }
        #
        #    return localVoucher;
        #}
        #
        #
        #
      ENDSOURCE
      SOURCE #module
        #SysModule module()
        #{
        #    return SysModule::Vend;
        #}
      ENDSOURCE
      SOURCE #netAmount
        #//BP Deviation Documented
        #display AmountCurNet netAmount()
        #{
        #    return this.SalesBalance - this.EndDisc + this.SumMarkup;
        #}
      ENDSOURCE
      SOURCE #notClosed_RU
        #//BP deviation documented
        #display CustVendNotClosed_RU notClosed_RU()
        #{
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    VendTrans vendTrans;
        #
        #    // <GEERU>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        if (this.InventProfileType_RU  == InventProfileType_RU::CommissionPrincipalAgent ||
        #            this.InventProfileType_RU  == InventProfileType_RU::Bailee                   ||
        #            this.InventProfileType_RU  == InventProfileType_RU::CommissionAgent)
        #            return false;
        #    }
        #    // </GEERU>
        #    return ! (select firstonly Closed from vendTrans
        #                where vendTrans.AccountNum  == this.InvoiceAccount  &&
        #                      vendTrans.TransDate   == this.InvoiceDate     &&
        #                      vendTrans.Voucher     == this.LedgerVoucher).Closed;
        #}
        #
      ENDSOURCE
      SOURCE #originalInvoices_W
        #// returns original invoices for credit note
        #//
        #// use _listPattern = "%1" to show invoice numbers only
        #// use _listPattern = "%2" to show invoice dates only
        ##define.DefaultSeparator(", ")
        ##define.DefaultListPattern("\%1 \%2")
        #server public str originalInvoices_W(str     _separator       = #DefaultSeparator,
        #                                     boolean _showInvoiceDate = false,
        #                                     str     _listPattern     = #DefaultListPattern)
        #{
        #    str             ret;
        #    Set             retSet = new Set(Types::Container);
        #    SetEnumerator   se;
        #    container       value;
        #
        #    VendInvoiceTrans    invoiceTrans, origTrans;
        #
        #    while select InvoiceId, InvoiceDate from origTrans
        #    exists join invoiceTrans
        #        where invoiceTrans.RefReturnInvoiceTrans_W == origTrans.RecId        &&
        #              invoiceTrans.InternalInvoiceId       == this.InternalInvoiceId &&
        #              invoiceTrans.InvoiceId               == this.InvoiceId         &&
        #              invoiceTrans.InvoiceDate             == this.InvoiceDate       &&
        #              invoiceTrans.PurchID                 == this.PurchId           &&
        #              invoiceTrans.NumberSequenceGroup     == this.NumberSequenceGroup
        #    {
        #        value = _showInvoiceDate                               ?
        #                [ origTrans.InvoiceId, origTrans.InvoiceDate ] :
        #                [ origTrans.InvoiceId ];
        #        if (! retSet.in(value))
        #        {
        #            retSet.add(value);
        #        }
        #    }
        #
        #    se = retSet.getEnumerator();
        #    while (se.moveNext())
        #    {
        #        if (_showInvoiceDate)
        #        {
        #            ret += (ret ? _separator : "") + strFmt(_listPattern, conPeek(se.current(), 1), conPeek(se.current(), 2));
        #        }
        #        else
        #        {
        #            ret += (ret ? _separator : "") + conPeek(se.current(), 1);
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #packVendInvoiceJour_IN
        #/// <summary>
        #/// Packs the <c>VendInvoiceJour_IN</c> record into the current record.
        #/// </summary>
        #/// <param name ="_vendInvoiceJour_IN">
        #/// The <c>VendInvoiceJour_IN</c> record.
        #/// </param>
        #// <GIN>
        #public void packVendInvoiceJour_IN(VendInvoiceJour_IN _vendInvoiceJour_IN)
        #{
        #    _vendInvoiceJour_IN.VendInvoiceJour = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_vendInvoiceJour_IN);
        #}
        #// </GIN>
        #
      ENDSOURCE
      SOURCE #packVendInvoiceJour_Intrastat
        #/// <summary>
        #/// Packs <c>VendInvoiceJour_Intrastat</c> extension table record.
        #/// </summary>
        #/// <param name="_vendInvoiceJour_Intrastat">
        #/// The extension table record to pack.
        #/// </param>
        #public void packVendInvoiceJour_Intrastat(VendInvoiceJour_Intrastat _vendInvoiceJour_Intrastat)
        #{
        #    this.SysExtensionSerializerMap::packExtensionTable(_vendInvoiceJour_Intrastat);
        #}
      ENDSOURCE
      SOURCE #packVendInvoiceJour_W
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_vendInvoiceJour_W">
        #/// The extension table record.
        #/// </param>
        #// <GMY>
        #public void packVendInvoiceJour_W(VendInvoiceJour_W _vendInvoiceJour_W)
        #{
        #    _vendInvoiceJour_W.VendInvoiceJour = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_vendInvoiceJour_W);
        #}
        #// </GMY>
      ENDSOURCE
      SOURCE #packVendInvoiceJourExtensionTH
        #/// <summary>
        #/// Packs a <c>VendInvoiceJourExtensionTH</c> into <c>VendInvoiceJour</c>
        #/// </summary>
        #/// <param name="_vendInvoiceJourExtensionTH">
        #/// The <c>VendInvoiceJourExtensionTH</c> to pack.
        #/// </param>
        #// <GTH>
        #public void packVendInvoiceJourExtensionTH(VendInvoiceJourExtensionTH _vendInvoiceJourExtensionTH)
        #{
        #    _vendInvoiceJourExtensionTH.VendInvoiceJour = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_vendInvoiceJourExtensionTH);
        #}
        #// </GTH>
      ENDSOURCE
      SOURCE #parmExchangeRateDate
        #public AccountingDate parmExchangeRateDate()
        #{
        #    return this.InvoiceDate;
        #}
        #
      ENDSOURCE
      SOURCE #parmParentSourceDocumentLine
        #public SourceDocumentLine parmParentSourceDocumentLine()
        #{
        #    return null;
        #}
      ENDSOURCE
      SOURCE #parmSourceDocHeaderTypeEnumName
        #public EnumName parmSourceDocHeaderTypeEnumName()
        #{
        #    return enumStr(SourceDocument_VendorInvoice);
        #}
      ENDSOURCE
      SOURCE #parmSourceDocHeaderTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocHeaderTypeEnumValue()
        #{
        #    return SourceDocument_VendorInvoice::VendorInvoice;
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumName
        #public EnumName parmSourceDocLineTypeEnumName()
        #{
        #    return enumStr(SourceDocumentLine_VendorInvoice);
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocLineTypeEnumValue()
        #{
        #    return SourceDocumentLine_VendorInvoice::VendorInvoiceTotalsLine;
        #}
      ENDSOURCE
      SOURCE #paymentCondition
        #//BP Deviation Documented
        #display PaymTxt paymentCondition()
        #{
        #    #ISOCountryRegionCodes
        #    PaymTxt paymCondition;
        #
        #    if (this.FixedDueDate)
        #    {
        #        paymCondition = date2StrUsr(this.FixedDueDate, DateFlags::FormatAll);
        #    }
        #    else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoES]))
        #    {
        #        paymCondition = date2StrUsr(this.DueDate, DateFlags::FormatAll);
        #    }
        #    else
        #    {
        #        paymCondition = PaymTerm::txt(this.Payment, CompanyInfo::languageId());
        #    }
        #
        #    return paymCondition;
        #}
        #
      ENDSOURCE
      SOURCE #printEUVatInvoice
        #public void printEUVatInvoice(PurchInvoiceJournalPrint _purchInvoiceJournalPrint)
        #{
        #    Args            parameters = new Args();
        #    MenuFunction    purchEUVatInvoiceMenu;
        #
        #    purchEUVatInvoiceMenu = new MenuFunction(menuitemOutputStr(purchEUVatInvoice), MenuItemType::Output);
        #    parameters.caller(_purchInvoiceJournalPrint);
        #    parameters.record(this);
        #
        #    purchEUVatInvoiceMenu.enumParameter(false);
        #    purchEUVatInvoiceMenu.run(parameters);
        #}
      ENDSOURCE
      SOURCE #printJournal
        #void  printJournal(PurchInvoiceJournalPrint _purchInvoiceJournalPrint = null,
        #                   // <GEERU>
        #                   RecordSortedList         _journalList              = null,
        #                   NoYes                    printJournal              = NoYes::Yes,
        #                   NoYes                    printAcceptanceReport     = NoYes::No,
        #                   NoYes                    printInventBaileeReport   = NoYes::No
        #                   // <GIN>
        #                   ,NoYes                   printExciseInvoice        =  NoYes::No
        #                   // </GIN>
        #                   )
        #                   // </GEERU>
        #{
        #    Args            parameters = new Args();
        #    MenuFunction    purchInvoiceMenu;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    // <GIN>
        #    MenuFunction    excisePurchReturnMenu;
        #    // </GIN>
        #
        #    // <GEERU>
        #    if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #        || printJournal)
        #    {
        #    // </GEERU>
        #        // <GIN>
        #        if(!printExciseInvoice || printJournal)
        #        {
        #        // </GIN>
        #            purchInvoiceMenu = new MenuFunction(menuitemOutputStr(purchInvoice),MenuItemType::Output);
        #        // <GIN>
        #        }
        #        // </GIN>
        #    // <GEERU>
        #    }
        #    // </GEERU>
        #    // <GIN>
        #    if(TaxParameters::isExciseEnable_IN() && printExciseInvoice)
        #    {
        #        excisePurchReturnMenu = new MenuFunction(menuitemOutputStr(ExciseInvoicePurchReturn_IN), MenuItemType::Output);
        #    }
        #    // </GIN>
        #    parameters.caller(_purchInvoiceJournalPrint);
        #    if (_journalList)
        #    {
        #        parameters.object(_journalList);
        #    }
        #    else
        #    {
        #        parameters.record(this);
        #    }
        #
        #    // <GEERU>
        #    if (purchInvoiceMenu)
        #    {
        #    // </GEERU>
        #        purchInvoiceMenu.run(parameters);
        #    // <GEERU>
        #    }
        #    // <GIN>
        #    if(TaxParameters::isExciseEnable_IN() && printExciseInvoice)
        #    {
        #        excisePurchReturnMenu.run(parameters);
        #    }
        #    // </GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        if (printAcceptanceReport)
        #        {
        #            purchInvoiceMenu = new MenuFunction(menuitemOutputStr(PurchAcceptanceReport_RU), MenuItemType::Output);
        #            purchInvoiceMenu.run(parameters);
        #        }
        #        if (printInventBaileeReport)
        #        {
        #            purchInvoiceMenu = new MenuFunction(menuitemOutputStr(PurchInventBaileeReport_RU), MenuItemType::Output);
        #            purchInvoiceMenu.run(parameters);
        #        }
        #    }
        #    // </GEERU>
        #    TaxUnrealizedInvoice::printFromVendInvoiceJour(this, _purchInvoiceJournalPrint, _journalList);
        #}
      ENDSOURCE
      SOURCE #purchTable
        #PurchTable purchTable(boolean  update = false)
        #{
        #    return PurchTable::find(this.PurchId, update);
        #}
      ENDSOURCE
      SOURCE #queryTaxTrans
        #Query queryTaxTrans(boolean update = false)
        #{
        #    QueryBuildDataSource    qbds;
        #    DictRelation            dictRelation;
        #    DictField               externdictField;
        #    DictField               dictField;
        #    Query                   query = new Query();
        #    Counter                 c;
        #
        #    query.addDataSource(tableNum(TaxTrans));
        #
        #    qbds = query.dataSourceTable(tableNum(TaxTrans));
        #
        #    dictRelation = new DictRelation(tableNum(TaxTrans));
        #    dictRelation.loadTableRelation(this.TableId);
        #
        #    if (dictRelation.lines())
        #    {
        #        for (c=1; c <= dictRelation.lines(); c++)
        #        {
        #            externdictField   = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
        #            dictField   = new DictField(tableNum(TaxTrans),dictRelation.lineTableValue(c));
        #            qbds.addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
        #        }
        #    }
        #
        #    qbds.update(update);
        #    qbds.addRange(fieldNum(TaxTrans, TaxOrigin)).value(strFmt('!%1',queryValue(TaxOrigin::TaxReversed)));
        #    qbds.addRange(fieldNum(TaxTrans, ExemptTax)).value(queryValue(NoYes::No));
        #
        #    qbds.addSelectionField(fieldNum(TaxTrans, SourceBaseAmountCur), SelectionField::Sum);
        #
        #    return query;
        #}
      ENDSOURCE
      SOURCE #queryTmpTaxWorkTrans
        #Query queryTmpTaxWorkTrans(boolean update = false)
        #{
        #    QueryBuildDataSource    qbds;
        #    Query                   query = new Query();
        #
        #    query.addDataSource(tableNum(TmpTaxWorkTrans));
        #
        #    qbds = query.dataSourceTable(tableNum(TmpTaxWorkTrans));
        #    qbds.update(update);
        #    qbds.addRange(fieldNum(TmpTaxWorkTrans, TaxOrigin)).value(strFmt('!%1',queryValue(TaxOrigin::TaxReversed)));
        #    qbds.addRange(fieldNum(TmpTaxWorkTrans, ExemptTax)).value(queryValue(NoYes::No));
        #
        #    qbds.addSelectionField(fieldNum(TmpTaxWorkTrans, SourceBaseAmountCur), SelectionField::Sum);
        #
        #    return query;
        #}
        #
      ENDSOURCE
      SOURCE #queryVendInvoiceTrans
        #Query queryVendInvoiceTrans(boolean update = false)
        #{
        #    DictRelation    dictRelation;
        #    DictField       externdictField;
        #    DictField       dictField;
        #    Query           query = new Query();
        #    Counter         c;
        #    ;
        #
        #    query.addDataSource(tableNum(VendInvoiceTrans));
        #
        #    dictRelation = new DictRelation(tableNum(VendInvoiceTrans));
        #    dictRelation.loadTableRelation(this.TableId);
        #
        #
        #    if (dictRelation.lines())
        #    {
        #        for (c=1; c <= dictRelation.lines(); c++)
        #        {
        #            externdictField   = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
        #            dictField   = new DictField(tableNum(VendInvoiceTrans),dictRelation.lineTableValue(c));
        #            query.dataSourceTable(tableNum(VendInvoiceTrans)).addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
        #        }
        #    }
        #    query.dataSourceTable(tableNum(VendInvoiceTrans)).update(update);
        #
        #    return query;
        #}
      ENDSOURCE
      SOURCE #readyForCostAllocation_RU
        #public boolean readyForCostAllocation_RU()
        #{
        #    VendInvoiceTrans            vendInvoiceTrans;
        #    InventTable                 inventTable;
        #    VendTrans                   vendTrans = this.vendTrans();
        #    CostAllocationHistory_RU    costAllocationHistory;
        #
        #    select firstonly RecId from costAllocationHistory
        #        where costAllocationHistory.InvoiceTransRecId       == vendTrans.RecId  ||
        #              costAllocationHistory.CreditNoteTransRecId    == vendTrans.RecId  ||
        #              costAllocationHistory.IndebtednessTransRecId  == vendTrans.RecId;
        #
        #    if (costAllocationHistory.RecId)
        #    {
        #        return false;
        #    }
        #
        #    while select LineAmount, RecId from vendInvoiceTrans
        #        where vendInvoiceTrans.InvoiceId            == this.InvoiceId           &&
        #              vendInvoiceTrans.InvoiceDate          == this.InvoiceDate         &&
        #              vendInvoiceTrans.PurchID              == this.PurchId             &&
        #              vendInvoiceTrans.NumberSequenceGroup  == this.NumberSequenceGroup &&
        #              vendInvoiceTrans.InternalInvoiceId    == this.InternalInvoiceId   &&
        #              vendInvoiceTrans.LineAmount           > 0                         &&
        #              vendInvoiceTrans.MarkupCode_RU        != ''
        #        outer join TableId from inventTable
        #            where inventTable.ItemId    == vendInvoiceTrans.ItemId              &&
        #                  inventTable.ItemType  == ItemType::Service
        #    {
        #        if (vendInvoiceTrans.markupAmountNotAlloc_RU())
        #        {
        #            return true;
        #        }
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #refOriginalInvoiceRecId_RU
        #/// <summary>
        #/// Gets record id of original invoice.
        #/// </summary>
        #/// <returns>
        #/// RecId of original invoice.
        #/// </returns>
        #// <GEERU>
        #public RefRecId refOriginalInvoiceRecId_RU()
        #{
        #    return VendInvoiceJourCorrLink_RU::findVendInvoiceJour(this.RecId).CorrJourRecId;
        #}
        #// </GEERU>
      ENDSOURCE
      SOURCE #reverseChargeAmount_UK
        #//BP Deviation Documented
        #display Amount reverseChargeAmount_UK()
        #{
        #    real reverseChargeValue;
        #    ;
        #    if(this.ReverseCharge_UK > 0)
        #    {
        #        reverseChargeValue = this.ReverseCharge_UK;
        #    }
        #    return reverseChargeValue;
        #}
        #
        #
      ENDSOURCE
      SOURCE #reverseChargeApplies_UK
        #//BP Deviation Documented
        #display char reverseChargeApplies_UK()
        #{
        #    #define.Asterisk('*')
        #    str remark;
        #    ;
        #    if(this.ReverseCharge_UK > 0)
        #    {
        #        remark = #Asterisk;
        #    }
        #    return remark;
        #}
        #
        #
      ENDSOURCE
      SOURCE #reverseChargeWording_UK
        #//BP Deviation Documented
        #display Description reverseChargeWording_UK()
        #{
        #    Description remark;
        #    ;
        #    if (this.ReverseCharge_UK >0)
        #    {
        #        remark = ReverseChargeParameters_UK::find().rcInvoiceWording;
        #    }
        #    return remark;
        #}
        #
        #
      ENDSOURCE
      SOURCE #salesTaxNumber_IN
        #/// <summary>
        #/// Displays the registration nubmer for the sale tax registration nubmer.
        #/// </summary>
        #/// <returns>
        #/// Returns the registration nubmer.
        #/// </returns>
        #// <GIN>
        #//BP Deviation Documented
        #display TaxRegistrationNumber_IN salesTaxNumber_IN()
        #{
        #    LogisticsLocation       logisticsLocation;
        #    TaxInformation_IN       taxInformation;
        #
        #    logisticsLocation =  VendTable::find(this.InvoiceAccount).invoiceAccountLocation().getLogisticsLocation();
        #
        #    select firstonly RecId from taxInformation
        #        where taxInformation.RegistrationLocation == logisticsLocation.RecId;
        #
        #    return TaxRegistrationNumbers_IN::find(taxInformation.SalesTaxRegistrationNumber).RegistrationNumber;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #setFacturedFully_RU
        #public void setFacturedFully_RU(FacturedFully_RU _factured)
        #{
        #    this.FacturedFully_RU = _factured;
        #}
      ENDSOURCE
      SOURCE #showExchRate
        #//BP Deviation Documented
        #display VendExchRate showExchRate()
        #{
        #    VendExchRate    exchRate;
        #    ExchangeRateHelper  exchangeRateHelper = ExchangeRateHelper::newCurrency(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId), this.CurrencyCode);
        #
        #    exchRate =  exchangeRateHelper.displayStoredExchangeRate(this.ExchRate);
        #    return exchRate;
        #}
      ENDSOURCE
      SOURCE #STF_SettleMode
        #public display STF_SettleText STF_SettleMode()
        #{
        #
        #    VendTrans               vendTrans;
        #    BankChequePaymTrans     BankChequePaymTrans;
        #    VendSettlement          VendSettlement;
        #
        #        ;
        #
        #
        #   /* select recid,AccountNum,Settlement,dataAreaId,TransDate,Voucher from vendTrans
        #    where vendTrans.AccountNum  == this.InvoiceAccount &&
        #    vendTrans.TransDate         == this.InvoiceDate &&
        #    vendTrans.Voucher           == this.LedgerVoucher;
        #
        #    select firstOnly1 recid from VendSettlement
        #    where VendSettlement.TransCompany == vendtrans.dataAreaId
        #    && VendSettlement.TransRecId == vendtrans.recid
        #    && VendSettlement.AccountNum == vendtrans.AccountNum;
        #
        #    select recid from BankChequePaymTrans
        #    where BankChequePaymTrans.InvoiceCompany    == vendTrans.dataAreaId &&
        #    BankChequePaymTrans.RecipientType           == BankChequeRecipientType::Vend &&
        #    BankChequePaymTrans.InvoiceTransDate        == vendTrans.TransDate &&
        #    BankChequePaymTrans.InvoiceVoucher          == vendTrans.Voucher;
        #   */
        #    if( BankChequePaymTrans.RecId )
        #        return "Cheque";
        #    else if( VendSettlement.RecId )
        #        return "Transferencia";
        #    else
        #        return "Ninguno";
        #}
      ENDSOURCE
      SOURCE #STF_SettleReference
        #public display STF_SettleText STF_SettleReference()
        #{
        #
        #    VendTrans               vendTrans, vendTrans2;
        #    BankChequePaymTrans     BankChequePaymTrans;
        #    Str                     vMode;
        #    VendSettlement          VendSettlement;
        #        ;
        #
        #    /*
        #    vMode = this.STF_SettleMode();
        #
        #    select recid,AccountNum,dataAreaId,TransDate,Voucher,paymMode from vendTrans
        #    where vendTrans.AccountNum  == this.InvoiceAccount &&
        #    vendTrans.TransDate         == this.InvoiceDate &&
        #    vendTrans.Voucher           == this.LedgerVoucher;
        #
        #    select firstOnly1 OffsetRecid from VendSettlement
        #    where VendSettlement.TransCompany == vendtrans.dataAreaId
        #    && VendSettlement.TransRecId == vendtrans.recid
        #    && VendSettlement.AccountNum == vendtrans.AccountNum;
        #
        #    select paymMode,paymReference from vendTrans2
        #    where VendSettlement.OffsetRecid == vendTrans2.RecId;
        #    */
        #    if( vMode == "Cheque" )
        #    {
        #
        #        return vendTrans2.paymReference;
        #    }
        #    else if( vMode == "Transferencia" )
        #    {
        #
        #        return vendTrans2.PaymMode;
        #    }
        #    else
        #        return "";
        #}
      ENDSOURCE
      SOURCE #stfHasInvoicePO
        #public display boolean stfHasInvoicePO()
        #{
        #    STF_SATVerifyCFDIServiceAgent_References    cls_ServiceAgentReference;
        #    STF_ElectronicInvoiceReferences             stf_ElectronicInvoiceReferences;
        #    boolean                                     hasInvoices = false;
        #    ;
        #    /*
        #    cls_ServiceAgentReference = new STF_SATVerifyCFDIServiceAgent_References();
        #    cls_ServiceAgentReference.CalculateVoucherInvoice(this.RecId);
        #
        #    if(stf_ElectronicInvoiceReferences::exist(this.RecId))
        #        hasInvoices = true;
        #    */
        #    return hasInvoices;
        #}
      ENDSOURCE
      SOURCE #STFxAmountTaxable
        #//STFxDIOT_IETU ArlyRubio 28.8.2012
        #AmountMST STFxAmountTaxable()
        #{
        #
        #    AmountMST   amountTaxable;
        #    TaxTrans    taxTrans;
        #    TaxTrans    taxTrans2;
        #;
        #
        #    amountTaxable = 0.0;
        #/*
        #    While Select SourceRecId, SourceTableId, InventTransId from taxTrans
        #        index hint VoucherDateIdx
        #        group by SourceRecId, SourceTableId, InventTransId
        #        where taxTrans.Voucher == this.LedgerVoucher
        #            && taxTrans.TransDate == this.InvoiceDate
        #            && (taxTrans.TaxOrigin == TaxOrigin::Tax || taxTrans.TaxOrigin == TaxOrigin::Transfer)  ///TODO: Check if only apply this TaxOrigin.
        #    {
        #        //amountGravable+= taxTrans.TaxBaseAmount; //This used this way because can exists base amounts positives and negatives ont the same RecId.
        #        Select firstonly TaxAmount, TaxBaseAmount, TaxOrigin from taxTrans2
        #            index hint VoucherDateIdx
        #            where taxTrans2.Voucher == this.LedgerVoucher
        #                && taxTrans2.TransDate == this.InvoiceDate
        #                    && taxTrans2.SourceRecId == taxTrans.SourceRecId
        #                        && taxTrans2.SourceTableId == taxTrans.SourceTableId
        #                            && taxTrans2.InventTransId == taxTrans.InventTransId
        #                                && (taxTrans2.TaxOrigin == TaxOrigin::Tax || taxTrans2.TaxOrigin == TaxOrigin::Transfer); ///TODO: Check if only apply this TaxOrigin.
        #
        #        if (taxTrans2.TaxOrigin == TaxOrigin::Transfer) //This uses this way because the taxOrigin 'Transfer' dont have taxBaseAmount value.
        #            amountTaxable+= abs(taxTrans2.TaxAmount);
        #        else
        #            amountTaxable+= abs(taxTrans2.TaxBaseAmount);
        #    }*/
        #
        #    return amountTaxable;
        #
        #}
      ENDSOURCE
      SOURCE #taxableBalance
        #//BP Deviation Documented
        #server display TaxTaxableAmountCur taxableBalance(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
        #{
        #    TaxTrans        taxTrans;
        #    TmpTaxWorkTrans tmpTaxWorkTrans;
        #    QueryRun        queryRun;
        #    TaxBaseCur      sourceBaseAmountCur;
        #
        #    if (_tmpTaxWorkTrans)
        #    {
        #        queryRun = new QueryRun(this.queryTmpTaxWorkTrans());
        #        queryRun.setCursor(_tmpTaxWorkTrans);
        #    }
        #    else
        #    {
        #        queryRun = new QueryRun(this.queryTaxTrans());
        #    }
        #    if (queryRun.next())
        #    {
        #        if (_tmpTaxWorkTrans)
        #        {
        #            tmpTaxWorkTrans = queryRun.get(tableNum(TmpTaxWorkTrans)) as TmpTaxWorkTrans;
        #            if (tmpTaxWorkTrans)
        #            {
        #                sourceBaseAmountCur = tmpTaxWorkTrans.SourceBaseAmountCur;
        #            }
        #        }
        #        else
        #        {
        #            taxTrans = queryRun.get(tableNum(TaxTrans)) as TaxTrans;
        #            if (taxTrans)
        #            {
        #                sourceBaseAmountCur = taxTrans.SourceBaseAmountCur;
        #
        #            }
        #        }
        #    }
        #
        #    return sourceBaseAmountCur;
        #}
        #
      ENDSOURCE
      SOURCE #taxAmountCorrected
        #public TaxAmountCur taxAmountCorrected()
        #{
        #    return Tax::taxAmountCorrectedPerVoucher(this.LedgerVoucher, this.InvoiceDate);
        #}
        #
      ENDSOURCE
      SOURCE #taxFreeBalance
        #//BP Deviation Documented
        #display TaxTaxFreeAmountCur taxFreeBalance(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
        #{
        #    return this.netAmount() - this.taxableBalance(_tmpTaxWorkTrans);
        #}
        #
      ENDSOURCE
      SOURCE #tinNumber_IN
        #/// <summary>
        #/// Displays the registration nubmer for the Tax Identification Number.
        #/// </summary>
        #/// <returns>
        #/// Returns the registration nubmer.
        #/// </returns>
        #// <GIN>
        #//BP Deviation Documented
        #display TaxRegistrationNumber_IN tinNumber_IN()
        #{
        #    LogisticsLocation       logisticsLocation;
        #    TaxInformation_IN       taxInformation;
        #
        #    logisticsLocation =  VendTable::find(this.InvoiceAccount).invoiceAccountLocation().getLogisticsLocation();
        #
        #    select firstonly RecId from taxInformation
        #        where taxInformation.RegistrationLocation == logisticsLocation.RecId;
        #
        #    return TaxRegistrationNumbers_IN::find(taxInformation.tin).RegistrationNumber;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #totalAdvanceApplicationAmount
        #/// <summary>
        #///     Calculates the prepayment amount applied in the invoice amount.
        #/// </summary>
        #/// <returns>
        #///     Returns total prepayment amount applied.
        #/// </returns>
        #public AmountCur totalAdvanceApplicationAmount()
        #{
        #    VendInvoiceInfoLine         vendInvoiceInfoLine;
        #    SourceDocumentLine          sourceDocumentLine;
        #
        #    select sum(LineAmount) from vendInvoiceInfoLine
        #        exists join sourceDocumentLine
        #    where vendInvoiceInfoLine.SourceDocumentLine  == sourceDocumentLine.RecId
        #       && sourceDocumentLine.SourceDocumentHeader == this.SourceDocumentHeader
        #       && vendInvoiceInfoLine.LineType            == PurchInvoiceLineType::AdvanceApplication;
        #
        #    return vendInvoiceInfoLine.LineAmount;
        #}
      ENDSOURCE
      SOURCE #totaltaxAmountRetained_BR
        #/// <summary>
        #/// Retrieves the sum of the <c>SourceRegulateAmountCur</c> fields from Tax trans related to the vendor journal.
        #/// </summary>
        #/// <returns>
        #/// A real value with the total retained tax amount.
        #/// </returns>
        #public TaxAmountCur totaltaxAmountRetained_BR()
        #{
        #    return this.CustVendInvoiceJour::totaltaxAmountRetained_BR();
        #}
        #
      ENDSOURCE
      SOURCE #update
        #public void update()
        #{
        #    this.calcMSTAmounts();
        #
        #    super();
        #
        #    // <GEECZ>
        #    this.SysExtensionSerializerMap::postUpdate();
        #    // </GEECZ>
        #}
      ENDSOURCE
      SOURCE #updateDue_JP
        #/// <summary>
        #/// Calculates due date and updates related trans and open trans accordingly.
        #/// </summary>
        #// <GJP>
        #public void updateDue_JP()
        #{
        #    this.CustVendInvoiceJour::updateDue_JP();
        #}
        #// </GJP>
      ENDSOURCE
      SOURCE #validateField
        #boolean validateField(FieldId p1)
        #{
        #    boolean ret;
        #
        #    ret = super(p1);
        #
        #    if (ret)
        #    {
        #        switch (p1)
        #        {
        #            case fieldNum(VendInvoiceJour, vatNum)  :   ret = TaxVATNumTable::checkVATNum(this.vatNum, this, p1);
        #                                                        break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validatePaymentSched
        #boolean validatePaymentSched()
        #{
        #    #ISOCountryRegionCodes
        #    boolean             ret = true;
        #    AmountCur           netInvoiceAmount;
        #    PaymTerm            paymTerm;
        #    TransDate           deliveryDate;
        #    TransDate           lastValidDate;
        #
        #    VendPaymSchedLine   vendPaymSchedLine;
        #    VendPaymSched       vendPaymSched = VendPaymSched::find(this.TableId, this.RecId);
        #
        #    if (this.PaymentSched)
        #    {
        #        select sum(DueAmount) from vendPaymSchedLine
        #            where vendPaymSchedLine.FatherRecID == vendPaymSched.RecId
        #               && !vendPaymSchedLine.IsDeleted;
        #
        #        // <GIN>
        #        if (TaxWithholdParameters_IN::checkTaxParameters() && this.TaxWithholdAmount_IN)
        #        {
        #            if (vendPaymSchedLine.DueAmount != this.InvoiceAmount + this.TaxWithholdAmount_IN)
        #            {
        #                ret = checkFailed(strFmt("@SYS78948", vendPaymSchedLine.DueAmount, this.InvoiceAmount));
        #            }
        #        }
        #        else
        #        {
        #        // </GIN>
        #            // <GBR>
        #            if (BrazilParameters::isEnabled())
        #            {
        #                if (this.purchTable().isDirectImport_BR())
        #                {
        #                    netInvoiceAmount = this.InvoiceAmount + this.totaltaxAmountRetained_BR() - this.SumTax - this.SumMarkup;
        #                }
        #                else
        #                {
        #                netInvoiceAmount = this.InvoiceAmount + this.totaltaxAmountRetained_BR();
        #            }
        #            }
        #            else
        #            {
        #            // </GBR>
        #                netInvoiceAmount = this.InvoiceAmount + this.totalAdvanceApplicationAmount();
        #            // <GBR>
        #            }
        #            // </GBR>
        #
        #            if (vendPaymSchedLine.DueAmount != netInvoiceAmount)
        #            {
        #                ret = checkFailed(strFmt("@SYS78948", vendPaymSchedLine.DueAmount, netInvoiceAmount));
        #            }
        #
        #            if (this.Payment && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoES]))
        #            {
        #                paymTerm        = PaymTerm::find(this.Payment);
        #                deliveryDate    = paymTerm.UseDeliveryDateForDueDate_ES ? this.DeliveryDate_ES : this.InvoiceDate;
        #                lastValidDate   = PaymDueDateLimit_ES::getDueDateLimitSalesParm(
        #                    paymTerm.DueDateLimitGroupId_ES,
        #                    deliveryDate,
        #                    this.PurchId,
        #                    this.ParmId).getLastValidDate(deliveryDate);
        #
        #                select firstOnly RecId from vendPaymSchedLine
        #                    where vendPaymSchedLine.FatherRecID == vendPaymSched.RecId
        #                       && vendPaymSchedLine.DueDate     >  lastValidDate;
        #
        #                if (vendPaymSchedLine.RecId)
        #                {
        #                    ret = checkFailed("@SYS4001055");
        #                }
        #            }
        #        // <GIN>
        #        }
        #        // </GIN>
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #boolean validateWrite()
        #{
        #    boolean     ret;
        #
        #    ret = super();
        #
        #    if (ret && PaymTerm::isCashAccount(this.Payment) && this.PaymentSched )
        #    {
        #        ret  = checkFailed("@SYS25074");
        #    }
        #
        #    return ret;
        #
        #}
      ENDSOURCE
      SOURCE #vatDueDate_W
        #//BP deviation documented
        #display VatDueDate_W vatDueDate_W()
        #{
        #    return this.CustVendInvoiceJour::vatDueDate_W();
        #}
      ENDSOURCE
      SOURCE #vendAddress
        #//BP Deviation Documented
        #display Addressing vendAddress()
        #{
        #    // <GTH>
        #    LogisticsPostalAddressRecId     invoicePostalAddressRecId;
        #    LogisticsPostalAddress          logisticsPostalAddress;
        #    // </GTH>
        #
        #    // <GTH>
        #    if (TaxThaiGovCertificationFeatureChecker::isCountryRegionTH())
        #    {
        #        invoicePostalAddressRecId = this.vendInvoiceJourExtensionTH().InvoicePostalAddress;
        #        if (invoicePostalAddressRecId)
        #        {
        #            logisticsPostalAddress = LogisticsPostalAddress::findRecId(invoicePostalAddressRecId);
        #            return DirUtility::replaceAddressTokenLanguage(logisticsPostalAddress, this.LanguageId);
        #        }
        #    }
        #    // </GTH>
        #    return DirUtility::replaceAddressTokenLanguage(VendTable::find(this.InvoiceAccount).invoiceAddress(), this.LanguageId);
        #}
        #
      ENDSOURCE
      SOURCE #vendInvoiceJour_IN
        #/// <summary>
        #/// Gets the <c>VendInvoiceJour_IN</c> record associated with the current record.
        #/// </summary>
        #/// <returns>
        #/// The <c>VendInvoiceJour_IN</c> record.
        #/// </returns>
        #// <GIN>
        #public VendInvoiceJour_IN vendInvoiceJour_IN()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendInvoiceJour_IN));
        #}
        #// </GIN>
        #
      ENDSOURCE
      SOURCE #vendInvoiceJour_Intrastat
        #/// <summary>
        #/// Retrieves <c>VendInvoiceJour_Intrastat</c> extension table record.
        #/// </summary>
        #/// <returns>
        #/// The extension table record related to current record.
        #/// </returns>
        #public VendInvoiceJour_Intrastat vendInvoiceJour_Intrastat()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendInvoiceJour_Intrastat));
        #}
        #
      ENDSOURCE
      SOURCE #vendInvoiceJour_W
        #/// <summary>
        #/// Retrieves <c>VendInvoiceJour_W</c> extension table record.
        #/// </summary>
        #/// <returns>
        #/// The extension table record related to current record.
        #/// </returns>
        #// <GMY>
        #public VendInvoiceJour_W vendInvoiceJour_W()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendInvoiceJour_W));
        #}
        #// </GMY>
        #
      ENDSOURCE
      SOURCE #vendInvoiceJourExtensionTH
        #/// <summary>
        #/// Get the <c>VendInvoiceJourExtensionTH</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>VendInvoiceJourExtensionTH</c> associated with the current record.
        #/// </returns>
        #//<GTH>
        #public VendInvoiceJourExtensionTH vendInvoiceJourExtensionTH()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(VendInvoiceJourExtensionTH));
        #}
        #//</GTH>
      ENDSOURCE
      SOURCE #vendName
        #//BP Deviation Documented
        #display Name  vendName()
        #{
        #    Name                name;
        #    TaxVATNumTable      taxVATNumTable;
        #    LogisticsLocationEntity location;
        #    boolean                 found;
        #
        #    if(VendParameters::find().VendNameFromVATNum)
        #    {
        #        taxVATNumTable = TaxVATNumTable::find(this.vatNum, this.CountryRegionId);
        #
        #        if(taxVATNumTable.Name)
        #        {
        #            name = taxVATNumTable.Name;
        #            found = true;
        #        }
        #    }
        #    if(!found)
        #    {
        #        // Gets the name/description of the invoice location.
        #        location = VendTable::find(this.InvoiceAccount).invoiceAccountLocation();
        #        if(!location || !location.parmLocationRecId())
        #        {
        #            //Invoice location does not exist, get the vendor name.
        #            name = VendTable::find(this.InvoiceAccount).name();
        #        }
        #        else
        #        {
        #            name = location.parmLocationDescription();
        #        }
        #    }
        #
        #    return name;
        #}
      ENDSOURCE
      SOURCE #vendTable_InvoiceAccount
        #VendTable vendTable_InvoiceAccount(boolean update = false)
        #{
        #    return VendTable::find(this.InvoiceAccount, update);
        #}
        #
      ENDSOURCE
      SOURCE #vendTable_OrderAccount
        #VendTable vendTable_OrderAccount(boolean update = false)
        #{
        #    return VendTable::find(this.OrderAccount, update);
        #}
        #
      ENDSOURCE
      SOURCE #vendTrans
        #VendTrans vendTrans()
        #{
        #    VendTrans   vendTrans;
        #    ;
        #
        #    this.CustVendInvoiceJour::custVendTrans(vendTrans);
        #    return vendTrans;
        #}
      ENDSOURCE
      SOURCE #venInvoiceJourListPreviewPaneTitle
        #display Caption venInvoiceJourListPreviewPaneTitle()
        #{
        #    return strFmt("@SYS327590", this.InvoiceId, this.vendTable_InvoiceAccount().name());
        #}
      ENDSOURCE
      SOURCE #exist
        #static boolean exist(PurchId _purchId)
        #{
        #    return _purchId && (select firstonly RecId from vendInvoiceJour
        #            where vendInvoiceJour.PurchId   == _purchId
        #           ).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existByInvoiceIdTransDate
        #/// <summary>
        #/// Checks whether the record exist for the given invoice id and invoice date.
        #/// </summary>
        #/// <param name="_invoiceId">
        #/// The invoice id.
        #/// </param>
        #/// <param name="_transDate">
        #/// The invoice date.
        #/// </param>
        #/// <returns>
        #/// Returns true if the check succeed.
        #/// </returns>
        #public static server boolean existByInvoiceIdTransDate(InvoiceId _invoiceId, TransDate _transDate)
        #{
        #    return _invoiceId
        #        && _transDate
        #        && (select firstonly vendInvoiceJour
        #                where vendInvoiceJour.InvoiceId          == _invoiceId
        #                    && vendInvoiceJour.InvoiceDate       == _transDate).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #findFromPurchId
        #static VendInvoiceJour findFromPurchId(PurchId _purchId,  boolean _forUpdate = false)
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #    ;
        #
        #    vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #    select firstonly vendInvoiceJour
        #        where vendInvoiceJour.PurchId == _purchId;
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #findFromPurchParmTable
        #static VendInvoiceJour findFromPurchParmTable(InvoiceId          _invoiceId,
        #                                              TransDate          _transDate,
        #                                              VendInvoiceAccount _invoiceAccount,
        #                                              boolean            _forUpdate = false)
        #{
        #    VendInvoiceJour             vendInvoiceJour;
        #    LedgerJournalVoucherChanged ledgerJournalVoucherChanged;
        #    ;
        #
        #    if (_invoiceId && _transDate && _invoiceAccount)
        #    {
        #        vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #        while select vendInvoiceJour
        #            index hint InvoiceIdx
        #            where vendInvoiceJour.InvoiceId         == _invoiceId       &&
        #                  vendInvoiceJour.InvoiceAccount    == _invoiceAccount  &&
        #                  vendInvoiceJour.LedgerVoucher     != ''
        #        {
        #            select firstonly ledgerJournalVoucherChanged
        #                 where ledgerJournalVoucherChanged.FromVoucher  == vendInvoiceJour.LedgerVoucher    &&
        #                       ledgerJournalVoucherChanged.FromDate     == vendInvoiceJour.InvoiceDate      &&
        #                       ledgerJournalVoucherChanged.ToDate       == _transDate;
        #
        #            if (ledgerJournalVoucherChanged)
        #            {
        #                return vendInvoiceJour;
        #            }
        #        }
        #    }
        #
        #    vendInvoiceJour.clear();
        #
        #    return vendInvoiceJour;
        #}
        #
      ENDSOURCE
      SOURCE #findFromTaxTrans
        #static VendInvoiceJour findFromTaxTrans(Voucher     _voucher,
        #                                        TransDate   _invoiceDate)
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #
        #    if (_voucher && _invoiceDate)
        #    {
        #        select firstonly vendInvoiceJour
        #            where vendInvoiceJour.LedgerVoucher == _voucher &&
        #                  vendInvoiceJour.InvoiceDate   == _invoiceDate;
        #    }
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #findFromVendInvoiceTrans
        #static VendInvoiceJour findFromVendInvoiceTrans(PurchId                 purchId,
        #                                                InvoiceId               invoiceId,
        #                                                TransDate               transDate,
        #                                                NumberSequenceGroupId   numberSequenceGroup,
        #                                                PurchInternalInvoiceId  internalInvoiceId,
        #                                                // <GEERU>
        #                                                boolean                 _forUpdate = false,
        #                                                boolean                 _findProformaJour = false)
        #                                                // </GEERU>
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #    ;
        #
        #    // <GEERU>
        #    if ((invoiceId              ||
        #       (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) && _findProformaJour)) && transDate)
        #    // </GEERU>
        #    {
        #        vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #        select firstonly vendInvoiceJour
        #            index hint InvoiceIdx
        #            where vendInvoiceJour.InvoiceId             == invoiceId            &&
        #                  vendInvoiceJour.InvoiceDate           == transDate            &&
        #                  vendInvoiceJour.PurchId               == purchId              &&
        #                  vendInvoiceJour.NumberSequenceGroup   == numberSequenceGroup  &&
        #                  vendInvoiceJour.InternalInvoiceId     == internalInvoiceId;
        #    }
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #findFromVendTrans
        #static VendInvoiceJour findFromVendTrans(InvoiceId          invoiceId,
        #                                         TransDate          transDate,
        #                                         VendInvoiceAccount invoiceAccount,
        #                                         boolean            _forUpdate = false,
        #                                         // <GEERU>
        #                                         Voucher            _voucher = ''
        #                                         // </GEERU>
        #                                         )
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #    // <GEERU>
        #    #ISOCountryRegionCodes
        #    // </GEERU>
        #
        #    if (invoiceId && transDate && invoiceAccount)
        #    {
        #        vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #        // <GEERU>
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #        {
        #            select firstonly vendInvoiceJour
        #                index hint InvoiceIdx
        #                order by RecId desc
        #                where vendInvoiceJour.InvoiceId         == invoiceId        &&
        #                      vendInvoiceJour.InvoiceDate       == transDate        &&
        #                      vendInvoiceJour.InvoiceAccount    == invoiceAccount   &&
        #                    (! _voucher ||  vendInvoiceJour.LedgerVoucher == _voucher);
        #        }
        #        else
        #        {
        #        // </GEERU>
        #            select firstonly vendInvoiceJour
        #                index hint InvoiceIdx
        #                order by RecId desc
        #                where vendInvoiceJour.InvoiceId         == invoiceId        &&
        #                      vendInvoiceJour.InvoiceDate       == transDate        &&
        #                      vendInvoiceJour.InvoiceAccount    == invoiceAccount;
        #        // <GEERU>
        #        }
        #        // </GEERU>
        #    }
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #findFromVendTransVoucher
        #static VendInvoiceJour findFromVendTransVoucher(InvoiceId          _invoiceId,
        #                                                Voucher            _voucher,
        #                                                TransDate          _transDate,
        #                                                VendInvoiceAccount _invoiceAccount,
        #                                                boolean            _forUpdate = false)
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #    ;
        #
        #    if (_invoiceId && _voucher && _transDate && _invoiceAccount)
        #    {
        #        vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #        select firstonly vendInvoiceJour
        #            where vendInvoiceJour.InvoiceId         == _invoiceId        &&
        #                  vendInvoiceJour.LedgerVoucher     == _voucher          &&
        #                  vendInvoiceJour.InvoiceDate       == _transDate        &&
        #                  vendInvoiceJour.InvoiceAccount    == _invoiceAccount;
        #    }
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #static VendInvoiceJour findRecId(RecId      _recId,
        #                                 boolean    _forUpdate = false)
        #{
        #    VendInvoiceJour vendInvoiceJour;
        #    ;
        #
        #    vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #    select vendInvoiceJour
        #        where vendInvoiceJour.RecId == _recId;
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #findSourceDocumentHeader
        #/// <summary>
        #/// Finds a <c>VendInvoiceJour</c> record by using the specified <c>SourceDocumentHeader</c> record.
        #/// </summary>
        #/// <param name="_sourceDocumentHeader">
        #/// A <c>SourceDocumentHeader</c> record ID.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A <c>VendInvoiceJour</c> record.
        #/// </returns>
        #public static VendInvoiceJour findSourceDocumentHeader(SourceDocumentHeaderRecId _sourceDocumentHeader,boolean _forUpdate = false)
        #{
        #    VendInvoiceJour     vendInvoiceJour;
        #
        #    vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #    select firstonly vendInvoiceJour
        #        where
        #            vendInvoiceJour.SourceDocumentHeader == _sourceDocumentHeader;
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #findSourceDocumentLine
        #/// <summary>
        #/// Finds a <c>VendInvoiceJour</c> record by using the specified <c>SourceDocumentLine</c> record.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #/// A <c>SourceDocumentLine</c> record ID.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A <c>VendInvoiceJour</c> record.
        #/// </returns>
        #public static VendInvoiceJour findSourceDocumentLine(SourceDocumentLineRecId _sourceDocumentLine,boolean _forUpdate = false)
        #{
        #    VendInvoiceJour     vendInvoiceJour;
        #
        #    vendInvoiceJour.selectForUpdate(_forUpdate);
        #
        #    select firstonly crossCompany vendInvoiceJour
        #        where
        #            vendInvoiceJour.SourceDocumentLine == _sourceDocumentLine;
        #
        #    return vendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #STF_FindFromVoucher
        #static VendInvoiceJour STF_FindFromVoucher(Voucher      _voucher,
        #                                           TransDate    _invoicedate)
        #{
        #    VendInvoiceJour vendinvoicejour;
        #
        #
        #    if (_voucher    &&  _invoicedate)
        #    {
        #        select firstOnly    vendinvoicejour
        #            where   vendinvoicejour.LedgerVoucher   ==  _voucher
        #                &&  vendinvoicejour.InvoiceDate     ==   _invoicedate;
        #
        #    }
        #
        #    return  vendinvoicejour;
        #}
      ENDSOURCE
      SOURCE #STFxIncludeInIETU
        #//Begin IETU Arly Rubio
        #static boolean STFxIncludeInIETU(voucher _voucher, VendInvoiceAccount _account)
        #{
        #    return _voucher && (select firstonly RecId from vendInvoiceJour
        #            index hint STFxVoucherAccountIdx
        #            where vendInvoiceJour.LedgerVoucher == _voucher && vendInvoiceJour.InvoiceAccount == _account
        #                && !vendInvoiceJour.STFxExcludeOfIETU
        #           ).RecId != 0;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : PurchLine unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #PurchLine
    EnforceFKRelation 0
    PROPERTIES
      Name                #PurchLine
      Label               #@SYS9664
      TitleField1         #PurchId
      TitleField2         #ItemId
      ConfigurationKey    #LogisticsBasic
      SecurityKey         #VendTables
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      TableGroup          #WorksheetLine
      PrimaryIndex        #PurchLineIdx
      ClusterIndex        #PurchLineIdx
      SingularLabel       #@SYS22957
      ModifiedDateTime    #Yes
      CreatedDateTime     #Yes
      DeveloperDocumentation  #@SYS124476
      Origin              #{2C090154-0000-1000-F7E2-8163684C696E}
      LegacyId            #340
    ENDPROPERTIES
    
    FIELDS
      FIELD #AccountingDistributionTemplate
        INT64
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #PurchLine
          Origin              #{5B324BDA-2F99-4082-AFD7-FBD86A46D095}
          LegacyId            #299
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #ActivityNumber
        STRING
        PROPERTIES
          Name                #ActivityNumber
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{609D1EAB-602F-4712-AE54-9E2026CBE7C8}
          LegacyId            #108
          ExtendedDataType    #ProjActivityNumber
          StringSize          #50
        ENDPROPERTIES
        
      FIELD #AddressRefRecId
        INT64
        PROPERTIES
          Name                #AddressRefRecId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{886E9C4A-496C-4D16-BEFA-3A8B0AC639F1}
          LegacyId            #24
          ExtendedDataType    #AddressRefRecId
        ENDPROPERTIES
        
      FIELD #AddressRefTableId
        INT
        PROPERTIES
          Name                #AddressRefTableId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{877B2B29-3651-422C-8BF3-E4D8203EE2D0}
          LegacyId            #28
          ExtendedDataType    #AddressRefTableId
        ENDPROPERTIES
        
      FIELD #AgreementSkipAutoLink
        ENUM
        PROPERTIES
          Name                #AgreementSkipAutoLink
          Visible             #No
          Table               #PurchLine
          Origin              #{38C2706D-98DE-4769-BCB9-DB58C1AD1A61}
          ExtendedDataType    #AgreementSkipAutoLink
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #AssetBookId
        STRING
        PROPERTIES
          Name                #AssetBookId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{3A5F7D2D-96B7-41C1-A962-4D9F2607E1A2}
          LegacyId            #72
          ExtendedDataType    #AssetBookIdPurchSalesInvent
        ENDPROPERTIES
        
      FIELD #AssetGroup
        STRING
        PROPERTIES
          Name                #AssetGroup
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{8F569AF2-DD6C-493A-8AF7-6FC949F4BF84}
          LegacyId            #112
          ExtendedDataType    #AssetGroupId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #AssetId
        STRING
        PROPERTIES
          Name                #AssetId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{8F0A28DE-F876-4CEF-8733-4FECBC85051B}
          LegacyId            #70
          ExtendedDataType    #AssetIdOpen
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #AssetTransTypePurch
        ENUM
        PROPERTIES
          Name                #AssetTransTypePurch
          Table               #PurchLine
          Origin              #{B7407292-D9AA-4090-BFEE-928D33BE0CFD}
          LegacyId            #71
          ExtendedDataType    #AssetTransTypePurchEDT
          EnumType            #AssetTransTypePurch
        ENDPROPERTIES
        
      FIELD #BarCode
        STRING
        PROPERTIES
          Name                #BarCode
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9E7824CE-C3B3-4B9C-AFD2-A4EB5DF3DC78}
          LegacyId            #48
          ExtendedDataType    #PurchBarCode
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #BarCodeType
        STRING
        PROPERTIES
          Name                #BarCodeType
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{818E9CE1-1EC0-49FA-9693-34DCF89C4664}
          LegacyId            #49
          ExtendedDataType    #BarcodeSetupId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #Blocked
        ENUM
        PROPERTIES
          Name                #Blocked
          Table               #PurchLine
          Origin              #{88DA2A1A-8C40-484A-A732-A82C5AF96CA4}
          LegacyId            #54
          ExtendedDataType    #LineStopped
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #BudgetReservationLine_PSN
        INT64
        PROPERTIES
          Name                #BudgetReservationLine_PSN
          Table               #PurchLine
          Origin              #{9EF8E971-76CB-42E2-9026-36C698F37B6E}
          ExtendedDataType    #BudgetReservationLineRecId_PSN
        ENDPROPERTIES
        
      FIELD #CaseTagging
        ENUM
        PROPERTIES
          Name                #CaseTagging
          Table               #PurchLine
          Origin              #{56C1D6D4-BC94-45D0-8E65-88BC34601642}
          LegacyId            #99
          ExtendedDataType    #RFIDCaseTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CFOPTable_BR
        INT64
        PROPERTIES
          Name                #CFOPTable_BR
          Label               #@GLS200
          HelpText            #@GLS366
          Table               #PurchLine
          CountryRegionCodes  #BR
          Origin              #{2A0C1FBD-0154-1000-EAB8-D719E56D626C}
          LegacyId            #8125
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #Complete
        ENUM
        PROPERTIES
          Name                #Complete
          Table               #PurchLine
          Origin              #{B19657D4-C49E-4963-B7A4-009E75051727}
          LegacyId            #55
          ExtendedDataType    #LineComplete
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ConfirmedDlv
        DATE
        PROPERTIES
          Name                #ConfirmedDlv
          Label               #@SYS4006394
          HelpText            #@SYS931
          Table               #PurchLine
          Origin              #{EC89949D-AAD8-467B-BDC9-7DAFCE70C232}
          LegacyId            #23
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #ConfirmedTaxAmount
        REAL
        PROPERTIES
          Name                #ConfirmedTaxAmount
          Table               #PurchLine
          Origin              #{4785A1D2-5F91-40E9-98E3-169C65EBDA01}
          ExtendedDataType    #TaxAmountCur
        ENDPROPERTIES
        
      FIELD #ConfirmedTaxWriteCode
        STRING
        PROPERTIES
          Name                #ConfirmedTaxWriteCode
          Table               #PurchLine
          Origin              #{591D060A-BE1E-4456-A64A-AAA5E99B787D}
          ExtendedDataType    #TaxWriteCode
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #CountyOrigDest
        STRING
        PROPERTIES
          Name                #CountyOrigDest
          Table               #PurchLine
          Origin              #{27D52C48-F160-4FF4-BAB8-3D5C6D57DBC9}
          LegacyId            #40
          ExtendedDataType    #AddressCountyOrigDest
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #CovRef
        ENUM
        PROPERTIES
          Name                #CovRef
          HelpText            #@SYS17021
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{3136AD64-C248-4B1F-AA99-433E32B6A4CD}
          LegacyId            #35
          EnumType            #PurchCovRef
        ENDPROPERTIES
        
      FIELD #CreateFixedAsset
        ENUM
        PROPERTIES
          Name                #CreateFixedAsset
          Table               #PurchLine
          Origin              #{AF71931B-C218-4E86-94E4-913C2349ED23}
          LegacyId            #111
          ExtendedDataType    #CreateFixedAsset
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #CreditedVendInvoiceTrans
        INT64
        PROPERTIES
          Name                #CreditedVendInvoiceTrans
          Visible             #No
          Table               #PurchLine
          Origin              #{2C8F2977-D853-44B7-A140-00FC09F011F2}
          ExtendedDataType    #VendInvoiceTransRecId
        ENDPROPERTIES
        
      FIELD #CurrencyCode
        STRING
        PROPERTIES
          Name                #CurrencyCode
          HelpText            #@SYS6734
          Mandatory           #Yes
          Table               #PurchLine
          Origin              #{5E2AF4E0-C06C-4C45-BD8E-22D0465B0FA2}
          LegacyId            #16
          ExtendedDataType    #VendCurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #CustomerRef
        STRING
        PROPERTIES
          Name                #CustomerRef
          Table               #PurchLine
          Origin              #{02F9E252-9A53-4372-8D5B-DE72A18F3812}
          LegacyId            #90
          ExtendedDataType    #CustRefLine
          StringSize          #60
        ENDPROPERTIES
        
      FIELD #CustPurchaseOrderFormNum
        STRING
        PROPERTIES
          Name                #CustPurchaseOrderFormNum
          Table               #PurchLine
          Origin              #{77A295AD-A570-4C2E-BC1B-D6A428F0D97F}
          LegacyId            #91
          ExtendedDataType    #CustPurchaseOrder
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          Table               #PurchLine
          Origin              #{490E3A95-65C4-48FB-995E-ACA25B7EE0CA}
          LegacyId            #140
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DeliveryDate
        DATE
        PROPERTIES
          Name                #DeliveryDate
          HelpText            #@SYS3828
          Table               #PurchLine
          Origin              #{6CA7F31F-31A9-4B99-8BB2-523D32F61690}
          LegacyId            #7
          ExtendedDataType    #PurchLineDlvDate
        ENDPROPERTIES
        
      FIELD #DeliveryName
        STRING
        PROPERTIES
          Name                #DeliveryName
          GroupPrompt         #@SYS7399
          Table               #PurchLine
          Origin              #{2B4FF535-9D97-406C-AFBC-A440966D2BE7}
          LegacyId            #82
          ExtendedDataType    #LogisticsDeliveryName
          StringSize          #100
        ENDPROPERTIES
        
      FIELD #DeliveryPostalAddress
        INT64
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #PurchLine
          Origin              #{93B78464-7028-4AFF-925F-1CFEA5658CC9}
          LegacyId            #240
          ExtendedDataType    #LogisticsPostalAddressRecId
        ENDPROPERTIES
        
      FIELD #DeliveryType
        ENUM
        PROPERTIES
          Name                #DeliveryType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{69366177-3E01-4B82-BB02-8BA4DBD2B8D8}
          LegacyId            #89
          ExtendedDataType    #TradeLineDlvTypeId
          EnumType            #TradeLineDlvType
        ENDPROPERTIES
        
      FIELD #DepreciationStartDate
        DATE
        PROPERTIES
          Name                #DepreciationStartDate
          Table               #PurchLine
          CountryRegionCodes  #IT
          Origin              #{8726C83C-BEC8-4DF3-9F84-55C617543D26}
          LegacyId            #107
          ExtendedDataType    #AssetDepreciationStartDate
        ENDPROPERTIES
        
      FIELD #DiscAmount
        REAL
        PROPERTIES
          Name                #DiscAmount
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{6948BBC1-F4D5-4501-ABEC-1621A3DDB0EA}
          ExtendedDataType    #PurchDiscAmount
        ENDPROPERTIES
        
      FIELD #DiscPercent
        REAL
        PROPERTIES
          Name                #DiscPercent
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{22E14467-91AC-4958-B17B-F8E0EC90E00B}
          ExtendedDataType    #PurchDiscPercent
        ENDPROPERTIES
        
      FIELD #EditableInWorkflow
        ENUM
        PROPERTIES
          Name                #EditableInWorkflow
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{7BB901CC-1CEE-480A-9C35-8BF0A499E407}
          LegacyId            #199
          ExtendedDataType    #TradeEditableInWorkflow
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ExternalItemId
        STRING
        PROPERTIES
          Name                #ExternalItemId
          Table               #PurchLine
          Origin              #{2E3A9052-4C49-418C-8912-69D2C6254E7B}
          LegacyId            #20
          ExtendedDataType    #PurchExternalItemId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #GSTHSTTaxType_CA
        ENUM
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          Table               #PurchLine
          Origin              #{87C9DB6B-4633-4212-B9D5-A43FAC93CF8B}
          LegacyId            #235
          EnumType            #GSTHSTTaxType_CA
        ENDPROPERTIES
        
      FIELD #InterCompanyInventTransId
        STRING
        PROPERTIES
          Name                #InterCompanyInventTransId
          ConfigurationKey    #TradeInterCompany
          Table               #PurchLine
          Origin              #{47749BED-DF30-49B3-9509-5A028E87D977}
          LegacyId            #79
          ExtendedDataType    #InventRefTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InterCompanyOrigin
        ENUM
        PROPERTIES
          Name                #InterCompanyOrigin
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{2D75D953-F707-4E7C-91BC-904F2A0B32C9}
          LegacyId            #63
          EnumType            #InterCompanyOrigin
        ENDPROPERTIES
        
      FIELD #IntrastatFulfillmentDate_HU
        DATE
        PROPERTIES
          Name                #IntrastatFulfillmentDate_HU
          Table               #PurchLine
          Origin              #{542211FA-CDC0-41D3-853D-7E325DE8E5B5}
          LegacyId            #8123
          ExtendedDataType    #IntrastatFulfillmentDate_HU
        ENDPROPERTIES
        
      FIELD #InventDimId
        STRING
        PROPERTIES
          Name                #InventDimId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{116ACE01-E66C-4CC0-9EE0-418598AA9AA0}
          LegacyId            #66
          ExtendedDataType    #InventDimId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventInvoiceNow
        REAL
        PROPERTIES
          Name                #InventInvoiceNow
          Label               #@PSA795
          HelpText            #@PSA10168
          Table               #PurchLine
          Origin              #{1DD33471-7499-4364-B993-26AA0654E1E7}
          LegacyId            #16038
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #InventReceivedNow
        REAL
        PROPERTIES
          Name                #InventReceivedNow
          Label               #@SYS1743
          HelpText            #@SYS12421
          Table               #PurchLine
          Origin              #{8E19C44D-3AD8-4548-AA2C-256E9FBED92F}
          LegacyId            #31
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #InventRefId
        STRING
        PROPERTIES
          Name                #InventRefId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{10AAE4E5-048B-4E17-841A-647D549517AD}
          LegacyId            #50
          ExtendedDataType    #InventRefId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventRefTransId
        STRING
        PROPERTIES
          Name                #InventRefTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4D707772-F3E8-45B2-A4D4-19E7865BE9E4}
          LegacyId            #51
          ExtendedDataType    #InventRefTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #InventTransId
        STRING
        PROPERTIES
          Name                #InventTransId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{E92D1537-5337-4D27-A82D-B34E2310DDBF}
          LegacyId            #25
          ExtendedDataType    #TradeInventTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #IsDeleted
        ENUM
        PROPERTIES
          Name                #IsDeleted
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{72FFDCB9-8544-41E8-9F79-16C36921452F}
          LegacyId            #148
          ExtendedDataType    #VersioningIsDeleted
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsFinalized
        ENUM
        PROPERTIES
          Name                #IsFinalized
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{4C8A1AFA-7D21-489F-BB3F-67D266769EF1}
          LegacyId            #304
          ExtendedDataType    #PurchLineIsFinalized
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsInvoiceMatched
        ENUM
        PROPERTIES
          Name                #IsInvoiceMatched
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{D99708AE-A5C5-4381-A6B8-CCAD89C450FE}
          LegacyId            #306
          ExtendedDataType    #PurchLineIsInvoiceMatched
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsModified
        ENUM
        PROPERTIES
          Name                #IsModified
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4CD8EF5A-02F0-4260-B786-199BC04A66DE}
          LegacyId            #149
          ExtendedDataType    #VersioningIsModified
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #IsPwp
        ENUM
        PROPERTIES
          Name                #IsPwp
          Label               #@PSA3342
          HelpText            #@PSA3344
          ConfigurationKey    #PSAPwp
          Table               #PurchLine
          Origin              #{0D552294-4394-47B3-886D-BA020F914B5E}
          ExtendedDataType    #NoYesId
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ItemBOMId
        STRING
        PROPERTIES
          Name                #ItemBOMId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{39366371-9822-4904-80FF-699D720BF2DB}
          LegacyId            #59
          ExtendedDataType    #ItemBOMId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemId
        STRING
        PROPERTIES
          Name                #ItemId
          HelpText            #@SYS2882
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{EF3B8DF2-B0CF-4BCA-83F1-D2FB95392E8E}
          LegacyId            #3
          ExtendedDataType    #ItemIdSmall
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #itemPBAId
        STRING
        PROPERTIES
          Name                #itemPBAId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{4F3438E8-AD9E-466F-BEE4-EF1B7D8B54E1}
          LegacyId            #8001
          ExtendedDataType    #PBAId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemRefType
        ENUM
        PROPERTIES
          Name                #ItemRefType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{FD86A5EE-A9D8-411B-9FD6-7881A7F0F7EB}
          LegacyId            #52
          EnumType            #InventRefType
        ENDPROPERTIES
        
      FIELD #ItemRouteId
        STRING
        PROPERTIES
          Name                #ItemRouteId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{508BDAEA-F7E8-4EE9-A1B9-50D0B7EA0F73}
          LegacyId            #58
          ExtendedDataType    #ItemRouteId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ItemTagging
        ENUM
        PROPERTIES
          Name                #ItemTagging
          Table               #PurchLine
          Origin              #{8243BA22-4C78-4B37-915A-5CFC7A2D4718}
          LegacyId            #98
          ExtendedDataType    #RFIDItemTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #LedgerDimension
        INT64
        PROPERTIES
          Name                #LedgerDimension
          Label               #@SYS8343
          HelpText            #@SYS7102
          Table               #PurchLine
          Origin              #{4D1B7477-A91F-4B23-B949-8FF6B7D823D6}
          LegacyId            #143
          ExtendedDataType    #LedgerDimensionDefaultAccount
        ENDPROPERTIES
        
      FIELD #LineAmount
        REAL
        PROPERTIES
          Name                #LineAmount
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{3B630245-E7EC-42FC-9904-3BE783FC7710}
          LegacyId            #19
          ExtendedDataType    #PurchLineAmount
        ENDPROPERTIES
        
      FIELD #LineDeliveryType
        ENUM
        PROPERTIES
          Name                #LineDeliveryType
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{05119B76-92A5-4BAF-B561-CB587FA27217}
          LegacyId            #124
          EnumType            #LineDeliveryType
        ENDPROPERTIES
        
      FIELD #LineDisc
        REAL
        PROPERTIES
          Name                #LineDisc
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{F8EB8A78-A71E-457F-8437-717074D71B45}
          LegacyId            #18
          ExtendedDataType    #PurchLineDisc
        ENDPROPERTIES
        
      FIELD #LineHeader
        STRING
        PROPERTIES
          Name                #LineHeader
          Table               #PurchLine
          Origin              #{C3F95584-14F5-4638-BFFB-7DB3D1834F97}
          LegacyId            #60
          ExtendedDataType    #LineHeader
          StringSize          #80
        ENDPROPERTIES
        
      FIELD #LineNumber
        INT64
        PROPERTIES
          Name                #LineNumber
          Table               #PurchLine
          Origin              #{282F8D8D-46FF-4063-B946-14EF963DC26E}
          LegacyId            #247
          ExtendedDataType    #TradeLineNumber
        ENDPROPERTIES
        
      FIELD #LinePercent
        REAL
        PROPERTIES
          Name                #LinePercent
          Table               #PurchLine
          Origin              #{1FC140A9-3419-40DE-B401-FE324935D9DA}
          LegacyId            #17
          ExtendedDataType    #PurchLinePercent
        ENDPROPERTIES
        
      FIELD #ManualEntryChangepolicy
        INT64
        PROPERTIES
          Name                #ManualEntryChangepolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4F7CACC1-DB12-45F8-9AFC-C67EFFA80AAB}
          LegacyId            #193
          ExtendedDataType    #PriceDiscPolicyManual
        ENDPROPERTIES
        
      FIELD #ManualModifiedField
        INT
        PROPERTIES
          Name                #ManualModifiedField
          Visible             #No
          Table               #PurchLine
          Origin              #{83655EEC-51A2-4712-A584-648A16C828FE}
          ExtendedDataType    #FieldId
        ENDPROPERTIES
        
      FIELD #MatchingAgreementLine
        INT64
        PROPERTIES
          Name                #MatchingAgreementLine
          Table               #PurchLine
          Origin              #{7B0A7537-F0FC-4055-9437-870ACAD809FA}
          LegacyId            #177
          ExtendedDataType    #AgreementLineRecId
        ENDPROPERTIES
        
      FIELD #MatchingPolicy
        ENUM
        PROPERTIES
          Name                #MatchingPolicy
          Label               #@SYS129852
          HelpText            #@SYS129857
          Table               #PurchLine
          Origin              #{4469D30D-D1BE-4671-8DCD-F860AF788C68}
          LegacyId            #120
          EnumType            #PurchMatchingPolicyOption
        ENDPROPERTIES
        
      FIELD #MCRDropShipComment
        STRING
        PROPERTIES
          Name                #MCRDropShipComment
          Table               #PurchLine
          Origin              #{DAD1F656-E2BB-49B7-A522-00F887C79DC8}
          LegacyId            #30002
          ExtendedDataType    #MCRDropShipComment
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #MCRDropShipment
        ENUM
        PROPERTIES
          Name                #MCRDropShipment
          Table               #PurchLine
          Origin              #{A8C38570-B5CB-41BC-8F8C-825B796AAC7E}
          LegacyId            #30001
          ExtendedDataType    #MCRDropShipment
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MCRDropShipStatus
        ENUM
        PROPERTIES
          Name                #MCRDropShipStatus
          Table               #PurchLine
          Origin              #{B4C0A380-BCDD-4B01-8814-ACB94169FAA6}
          LegacyId            #30003
          EnumType            #MCRDropShipStatus
        ENDPROPERTIES
        
      FIELD #MCROrderLine2PriceHistoryRef
        INT64
        PROPERTIES
          Name                #MCROrderLine2PriceHistoryRef
          Visible             #No
          Table               #PurchLine
          Origin              #{E5EC5410-40EA-43B4-A628-6347DE4CBC7F}
          ExtendedDataType    #MCROrderLinePriceHistoryReference
        ENDPROPERTIES
        
      FIELD #MultiLnDisc
        REAL
        PROPERTIES
          Name                #MultiLnDisc
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{CB7E3D7A-8C54-41B5-8C1E-D06F8FF91819}
          LegacyId            #32
          ExtendedDataType    #PurchMultiLnDisc
        ENDPROPERTIES
        
      FIELD #MultiLnPercent
        REAL
        PROPERTIES
          Name                #MultiLnPercent
          Table               #PurchLine
          Origin              #{12539546-06F5-43F0-BC62-486BC862A43B}
          LegacyId            #33
          ExtendedDataType    #PurchMultiLnPercent
        ENDPROPERTIES
        
      FIELD #Name
        STRING
        PROPERTIES
          Name                #Name
          HelpText            #@SYS2102
          Table               #PurchLine
          Origin              #{2D2F7CD7-0DB5-47E2-839B-5262F9C630B8}
          LegacyId            #8
          ExtendedDataType    #ItemFreeTxt
          StringSize          #1000
        ENDPROPERTIES
        
      FIELD #OperationType_MX
        ENUM
        PROPERTIES
          Name                #OperationType_MX
          Table               #PurchLine
          Origin              #{CA63C1EB-A3CB-4CA9-9223-95F0CCFF70FE}
          LegacyId            #301
          EnumType            #VendorOperationType_MX
        ENDPROPERTIES
        
      FIELD #OverDeliveryPct
        REAL
        PROPERTIES
          Name                #OverDeliveryPct
          Table               #PurchLine
          Origin              #{A74C1E30-B3C5-4D9E-BF43-F7C832998351}
          LegacyId            #45
          ExtendedDataType    #PurchOverDeliveryPct
        ENDPROPERTIES
        
      FIELD #PackedExtensions
        QUEUE
        PROPERTIES
          Name                #PackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #PurchLine
          Origin              #{90696C2E-1EB1-4AD8-BC2A-CC54AD2C4F62}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #PackedWHSLine
        QUEUE
        PROPERTIES
          Name                #PackedWHSLine
          SaveContents        #No
          Visible             #No
          ConfigurationKey    #WHSandTMS
          Table               #PurchLine
          Origin              #{75F21280-F3AC-4C21-86CB-0AF878F66E29}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #PalletTagging
        ENUM
        PROPERTIES
          Name                #PalletTagging
          Table               #PurchLine
          Origin              #{EBB6824F-2BF6-4B7A-B468-4347AD515C5F}
          LegacyId            #100
          ExtendedDataType    #RFIDPalletTagging
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #PDSCalculationId
        STRING
        PROPERTIES
          Name                #PDSCalculationId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{0492FA06-55AC-402E-817B-44579A221DB9}
          ExtendedDataType    #PDSCalculationId
        ENDPROPERTIES
        
      FIELD #PdsCWInventReceivedNow
        REAL
        PROPERTIES
          Name                #PdsCWInventReceivedNow
          Table               #PurchLine
          Origin              #{B696C285-D30B-45D7-9BDC-479BFF72C11F}
          ExtendedDataType    #PdsCWQtyReceiveNow
        ENDPROPERTIES
        
      FIELD #PdsCWQty
        REAL
        PROPERTIES
          Name                #PdsCWQty
          Table               #PurchLine
          Origin              #{A31807C3-FF1F-4775-86AB-D06A3A79873D}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PdsCWRemainInventFinancial
        REAL
        PROPERTIES
          Name                #PdsCWRemainInventFinancial
          Label               #@PDS75
          HelpText            #@PDS172
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{B68825D8-D9CE-4D77-909E-77D2F2742D49}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PdsCWRemainInventPhysical
        REAL
        PROPERTIES
          Name                #PdsCWRemainInventPhysical
          Label               #@PDS96
          HelpText            #@PDS97
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{F4EBDE8F-73E7-4852-AB7D-94526AB0AC9B}
          ExtendedDataType    #PdsCWInventQty
        ENDPROPERTIES
        
      FIELD #PlanReference
        INT64
        PROPERTIES
          Name                #PlanReference
          Label               #@SYS333324
          HelpText            #@SYS152559
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4DE8A903-ED64-4C20-AACC-475C33063BDE}
          LegacyId            #305
          ExtendedDataType    #PlanReferenceRefRecId
        ENDPROPERTIES
        
      FIELD #Port
        STRING
        PROPERTIES
          Name                #Port
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{7644731F-C0B5-4EDD-8396-69F1517FC57C}
          LegacyId            #69
          ExtendedDataType    #IntrastatPortId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #PriceUnit
        REAL
        PROPERTIES
          Name                #PriceUnit
          HelpText            #@SYS3472
          Table               #PurchLine
          Origin              #{35313E95-FBD5-400B-B87A-3F2E4649E26E}
          LegacyId            #14
          ExtendedDataType    #PriceUnit
        ENDPROPERTIES
        
      FIELD #ProcurementCategory
        INT64
        PROPERTIES
          Name                #ProcurementCategory
          Table               #PurchLine
          Origin              #{1B8E910A-2DD0-485B-A696-5638093235A2}
          LegacyId            #123
          ExtendedDataType    #PurchCategory
        ENDPROPERTIES
        
      FIELD #ProjCategoryId
        STRING
        PROPERTIES
          Name                #ProjCategoryId
          Label               #@SYS6114
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{72B29456-33EA-48D4-B6F3-ED82DCBC4958}
          LegacyId            #64
          ExtendedDataType    #ProjCategoryId
          StringSize          #30
        ENDPROPERTIES
        
      FIELD #ProjId
        STRING
        PROPERTIES
          Name                #ProjId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{30DBCECF-A601-4237-8C60-09AF948086A8}
          LegacyId            #65
          ExtendedDataType    #ProjId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ProjLinePropertyId
        STRING
        PROPERTIES
          Name                #ProjLinePropertyId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{E2E1E1F5-1A35-435B-9CC3-720F01F043BD}
          LegacyId            #73
          ExtendedDataType    #ProjLinePropertyId
        ENDPROPERTIES
        
      FIELD #ProjSalesCurrencyId
        STRING
        PROPERTIES
          Name                #ProjSalesCurrencyId
          Label               #@SYS56480
          HelpText            #@SYS20788
          Table               #PurchLine
          Origin              #{0C441AEE-3247-46F3-ACE3-9F10E75590D6}
          LegacyId            #77
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #ProjSalesPrice
        REAL
        PROPERTIES
          Name                #ProjSalesPrice
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{318828D1-2ADF-4E7D-B7A0-48EF6A3BDC6F}
          LegacyId            #76
          ExtendedDataType    #ProjSalesPriceCost
        ENDPROPERTIES
        
      FIELD #ProjSalesUnitId
        STRING
        PROPERTIES
          Name                #ProjSalesUnitId
          Table               #PurchLine
          Origin              #{7EF04E25-6366-4359-BB27-B937E0E2D0C0}
          LegacyId            #80
          ExtendedDataType    #UnitOfMeasureSymbol
        ENDPROPERTIES
        
      FIELD #ProjTaxGroupId
        STRING
        PROPERTIES
          Name                #ProjTaxGroupId
          HelpText            #@SYS67872
          Table               #PurchLine
          Origin              #{9DAE7F48-4B5B-4938-A1EA-0AC1A3CFCCD4}
          LegacyId            #75
          ExtendedDataType    #ProjTaxGroup
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #ProjTaxItemGroupId
        STRING
        PROPERTIES
          Name                #ProjTaxItemGroupId
          HelpText            #@SYS67873
          Table               #PurchLine
          Origin              #{9C5B27FE-FD50-44F2-B6FD-D8130C62BF24}
          LegacyId            #74
          ExtendedDataType    #ProjTaxItemGroup
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #ProjTransId
        STRING
        PROPERTIES
          Name                #ProjTransId
          AllowEditOnCreate   #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9769B6E4-B003-49C0-82AD-CB88487FA441}
          LegacyId            #53
          ExtendedDataType    #ProjItemTransId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #ProjWorker
        INT64
        PROPERTIES
          Name                #ProjWorker
          ConfigurationKey    #ProjBasic
          Table               #PurchLine
          Origin              #{B73AA35E-82C6-44F8-BB58-E193BBB94D9F}
          ExtendedDataType    #HcmWorkerRecId
        ENDPROPERTIES
        
      FIELD #PSARetainScheduleId
        STRING
        PROPERTIES
          Name                #PSARetainScheduleId
          Table               #PurchLine
          Origin              #{73A0AD94-C896-4977-B2E8-1F3D84A7BF63}
          LegacyId            #16032
          ExtendedDataType    #PSAPurchRetainScheduleId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PSATotalRetainAmount
        REAL
        PROPERTIES
          Name                #PSATotalRetainAmount
          Label               #@SYS3494
          ConfigurationKey    #PSAAPRetainage
          Table               #PurchLine
          Origin              #{C66C8AE2-B123-4B14-AAA0-1B2A7EE1DAC9}
          LegacyId            #16034
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #PurchaseType
        ENUM
        PROPERTIES
          Name                #PurchaseType
          Label               #@SYS1201
          HelpText            #@SYS17049
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{9D0552B7-2289-4B25-9355-1F501A1390F8}
          LegacyId            #34
          EnumType            #PurchaseType
        ENDPROPERTIES
        
      FIELD #PurchCommitmentLine_PSN
        INT64
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Label               #@SPS1834
          HelpText            #@SPS2047
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          Table               #PurchLine
          Origin              #{25AC9042-5188-4C14-BD78-A957DE7909B8}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #PurchId
        STRING
        PROPERTIES
          Name                #PurchId
          HelpText            #@SYS13121
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{F4241750-932A-4641-B5F4-9E8E90C79741}
          LegacyId            #1
          ExtendedDataType    #PurchIdBase
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #PurchMarkup
        REAL
        PROPERTIES
          Name                #PurchMarkup
          HelpText            #@SYS16914
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{E5502488-338A-4518-8317-2B3C961189ED}
          LegacyId            #30
          ExtendedDataType    #PurchMarkup
        ENDPROPERTIES
        
      FIELD #PurchPrice
        REAL
        PROPERTIES
          Name                #PurchPrice
          Label               #@SYS11770
          HelpText            #@SYS5369
          Table               #PurchLine
          RelationContext     #Currency
          Origin              #{DFDE0529-CB13-46DC-9228-CB25C4283D0B}
          LegacyId            #15
          ExtendedDataType    #PurchPrice
        ENDPROPERTIES
        
      FIELD #PurchQty
        REAL
        PROPERTIES
          Name                #PurchQty
          Table               #PurchLine
          Origin              #{B5A900A8-5972-4DD5-9E8E-F620CD9D53F2}
          LegacyId            #29
          ExtendedDataType    #PurchOrderedQty
        ENDPROPERTIES
        
      FIELD #PurchReceivedNow
        REAL
        PROPERTIES
          Name                #PurchReceivedNow
          Label               #@SYS1743
          HelpText            #@SYS69028
          Table               #PurchLine
          Origin              #{B6F417AE-F0F7-4AD1-82D9-4F6D024966BC}
          LegacyId            #11
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #PurchReqId
        STRING
        PROPERTIES
          Name                #PurchReqId
          AllowEditOnCreate   #No
          Table               #PurchLine
          Origin              #{3E6BC520-E211-4B78-AAF8-CDC4487A98CC}
          LegacyId            #115
          ExtendedDataType    #PurchReqId
          StringSize          #25
        ENDPROPERTIES
        
      FIELD #PurchReqLineRefId
        GUID
        PROPERTIES
          Name                #PurchReqLineRefId
          Visible             #No
          Table               #PurchLine
          Origin              #{80D0B73F-6B7F-41B3-AA59-8F30524C514E}
          LegacyId            #106
          ExtendedDataType    #PurchReqLineRefId
        ENDPROPERTIES
        
      FIELD #PurchStatus
        ENUM
        PROPERTIES
          Name                #PurchStatus
          Label               #@SYS7161
          HelpText            #@SYS6391
          AllowEditOnCreate   #No
          Table               #PurchLine
          Origin              #{C983A9E5-7B43-4EB2-9057-A473123B3D36}
          LegacyId            #4
          EnumType            #PurchStatus
        ENDPROPERTIES
        
      FIELD #PurchUnit
        STRING
        PROPERTIES
          Name                #PurchUnit
          Table               #PurchLine
          Origin              #{1AA19964-78F1-420C-8751-9797479F1D16}
          LegacyId            #21
          ExtendedDataType    #PurchUnit
        ENDPROPERTIES
        
      FIELD #QtyOrdered
        REAL
        PROPERTIES
          Name                #QtyOrdered
          HelpText            #@SYS8090
          Table               #PurchLine
          Origin              #{DC09ABF8-A41A-4D7B-96BA-89639920C301}
          LegacyId            #10
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RBOPackageLineNum
        REAL
        PROPERTIES
          Name                #RBOPackageLineNum
          Label               #@RET4403
          ConfigurationKey    #RetailHeadquarters
          Table               #PurchLine
          Origin              #{2420D75B-F36B-4145-8013-F913D0C96767}
          LegacyId            #16054
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #Remainder
        REAL
        PROPERTIES
          Name                #Remainder
          Label               #@SYS53728
          HelpText            #@SYS11699
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{6F085E85-8122-4E9C-B999-CD71F29C0A4F}
          LegacyId            #16036
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainInventFinancial
        REAL
        PROPERTIES
          Name                #RemainInventFinancial
          Label               #@SYS22380
          HelpText            #@SYS27459
          AllowEditOnCreate   #No
          Table               #PurchLine
          Origin              #{367AF194-0F13-4999-8DD3-CDB0514F4763}
          LegacyId            #105
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainInventPhysical
        REAL
        PROPERTIES
          Name                #RemainInventPhysical
          Label               #@SYS22556
          HelpText            #@SYS11699
          AllowEditOnCreate   #No
          Table               #PurchLine
          Origin              #{06C06833-3CA1-4234-97DE-DD4769CA3796}
          LegacyId            #36
          ExtendedDataType    #InventQty
        ENDPROPERTIES
        
      FIELD #RemainPurchFinancial
        REAL
        PROPERTIES
          Name                #RemainPurchFinancial
          Label               #@SYS22380
          HelpText            #@SYS27459
          AllowEditOnCreate   #No
          Table               #PurchLine
          Origin              #{571FDAC6-F55E-49C4-A32F-1D353316878F}
          LegacyId            #13
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #RemainPurchPhysical
        REAL
        PROPERTIES
          Name                #RemainPurchPhysical
          Label               #@SYS22556
          HelpText            #@SYS27457
          AllowEditOnCreate   #No
          Table               #PurchLine
          Origin              #{4419CD00-535D-4A2F-AFF8-AD6F960EA274}
          LegacyId            #12
          ExtendedDataType    #PurchQty
        ENDPROPERTIES
        
      FIELD #ReqAttention
        STRING
        PROPERTIES
          Name                #ReqAttention
          Table               #PurchLine
          Origin              #{E12AF01C-723E-4CC3-B7C6-F696E247E497}
          LegacyId            #114
          ExtendedDataType    #PurchReqAttention
          StringSize          #255
        ENDPROPERTIES
        
      FIELD #ReqPlanIdSched
        STRING
        PROPERTIES
          Name                #ReqPlanIdSched
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{DA3106A6-D2BF-485B-9745-B92D9258E8EE}
          LegacyId            #56
          ExtendedDataType    #ReqPlanIdSched
        ENDPROPERTIES
        
      FIELD #ReqPOId
        STRING
        PROPERTIES
          Name                #ReqPOId
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{26B8D248-F4EB-4036-9DD7-44BDC221273D}
          LegacyId            #57
          ExtendedDataType    #ReqPOId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Requester
        INT64
        PROPERTIES
          Name                #Requester
          Table               #PurchLine
          Origin              #{190FB1EF-58D9-4282-A58E-BAAA0E090D33}
          LegacyId            #288
          ExtendedDataType    #PurchRequester
        ENDPROPERTIES
        
      FIELD #RetailLineNumEx1
        REAL
        PROPERTIES
          Name                #RetailLineNumEx1
          ConfigurationKey    #RetailHeadquarters
          Table               #PurchLine
          Origin              #{B7B26FF4-D418-4BDF-A9D8-4EE8A6E7D0A1}
          LegacyId            #16051
          ExtendedDataType    #LineNum
        ENDPROPERTIES
        
      FIELD #RetailPackageId
        STRING
        PROPERTIES
          Name                #RetailPackageId
          Table               #PurchLine
          Origin              #{A35F2580-6940-4CED-A0F4-6652E0C496A0}
          LegacyId            #16053
          ExtendedDataType    #RetailPackageId
        ENDPROPERTIES
        
      FIELD #RetailTempValueEx2
        REAL
        PROPERTIES
          Name                #RetailTempValueEx2
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{B26C2ACF-ADDB-482E-9AC4-FB1C4FDC08ED}
          LegacyId            #16058
          ExtendedDataType    #RetailTempValueEx2
        ENDPROPERTIES
        
      FIELD #ReturnActionId
        STRING
        PROPERTIES
          Name                #ReturnActionId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{DEC7010C-431B-4252-89CA-2CD2E0433C35}
          LegacyId            #62
          ExtendedDataType    #PurchReturnActionId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #ReturnDispositionCodeId
        STRING
        PROPERTIES
          Name                #ReturnDispositionCodeId
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{FAFE2B07-8F88-49BB-9DC0-5F0917D4BA96}
          LegacyId            #110
          ExtendedDataType    #ReturnDispositionCodeId
        ENDPROPERTIES
        
      FIELD #ReturnStatus
        ENUM
        PROPERTIES
          Name                #ReturnStatus
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{76730C7B-6DD0-4024-976C-D261A5FA0169}
          LegacyId            #109
          EnumType            #ReturnStatusLine
        ENDPROPERTIES
        
      FIELD #Scrap
        ENUM
        PROPERTIES
          Name                #Scrap
          Label               #@SYS24894
          HelpText            #@SYS29137
          Table               #PurchLine
          Origin              #{336A8658-4103-4038-A963-32058287AE8A}
          LegacyId            #61
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #ServiceAddress
        STRING
        PROPERTIES
          Name                #ServiceAddress
          Label               #@SYS88743
          HelpText            #@SYS27762
          AllowEditOnCreate   #No
          AllowEdit           #No
          ConfigurationKey    #TradeMultiShipTo
          Table               #PurchLine
          Origin              #{251F9F10-D639-4F1E-B490-A13EB9DC658A}
          LegacyId            #16037
          ExtendedDataType    #Addressing
          StringSize          #250
        ENDPROPERTIES
        
      FIELD #ServiceDate
        DATE
        PROPERTIES
          Name                #ServiceDate
          Label               #@SYS88746
          Table               #PurchLine
          Origin              #{482E3D80-4656-4FA1-A049-10D11D97362F}
          LegacyId            #16035
          ExtendedDataType    #DlvDate
        ENDPROPERTIES
        
      FIELD #ShippingDateConfirmed
        DATE
        PROPERTIES
          Name                #ShippingDateConfirmed
          Visible             #No
          Table               #PurchLine
          Origin              #{0C3084C7-48F6-4267-84E1-609252706493}
          LegacyId            #39
          ExtendedDataType    #SalesShippingDateConfirmed
        ENDPROPERTIES
        
      FIELD #ShippingDateRequested
        DATE
        PROPERTIES
          Name                #ShippingDateRequested
          Visible             #No
          Table               #PurchLine
          Origin              #{FEF95137-DAC9-47D8-B34C-2F96FB07ECB1}
          LegacyId            #5
          ExtendedDataType    #SalesShippingDateRequested
        ENDPROPERTIES
        
      FIELD #SkipDistributionUpdate
        ENUM
        PROPERTIES
          Name                #SkipDistributionUpdate
          Visible             #No
          Table               #PurchLine
          Origin              #{86DC0751-C46F-4B40-9A07-6A91CC82DB1D}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SkipUpdate
        ENUM
        PROPERTIES
          Name                #SkipUpdate
          SaveContents        #No
          Visible             #No
          Table               #PurchLine
          Origin              #{828D546E-6981-4D2E-9E59-10AFACBD8460}
          LegacyId            #92
          EnumType            #InterCompanySkipUpdate
        ENDPROPERTIES
        
      FIELD #SourceDocumentLine
        INT64
        PROPERTIES
          Name                #SourceDocumentLine
          Label               #@SYS132694
          Table               #PurchLine
          Origin              #{14BB4DB7-91CB-4D9C-8D35-DEF07A27509F}
          LegacyId            #130
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #StatisticValue_LT
        REAL
        PROPERTIES
          Name                #StatisticValue_LT
          Table               #PurchLine
          Origin              #{5A8A12FA-5824-4432-8526-1736221D24E5}
          LegacyId            #16003
          ExtendedDataType    #LtIntrastatStatisticValue
        ENDPROPERTIES
        
      FIELD #StatProcId
        STRING
        PROPERTIES
          Name                #StatProcId
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{ED9720C4-1644-43A3-AEA7-BBF6D3B33E42}
          LegacyId            #68
          ExtendedDataType    #IntrastatProcId
        ENDPROPERTIES
        
      FIELD #StatTriangularDeal
        ENUM
        PROPERTIES
          Name                #StatTriangularDeal
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{F9094166-7527-47B2-AEA9-AF1844AE7714}
          LegacyId            #95
          ExtendedDataType    #IntrastatTriangularDeal
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #STF_AmmountInvoice
        REAL
        PROPERTIES
          Name                #STF_AmmountInvoice
          Label               #Importe de factura
          Table               #PurchLine
          Origin              #{4FF51DCB-0AD6-4CA2-B223-70EA6D239625}
          ExtendedDataType    #Amount
        ENDPROPERTIES
        
      FIELD #STF_AssetId
        STRING
        PROPERTIES
          Name                #STF_AssetId
          Table               #PurchLine
          Origin              #{D16606BB-AD24-4C69-AF4B-D7633E80A6A7}
          ExtendedDataType    #AssetId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #STF_UUID
        STRING
        PROPERTIES
          Name                #STF_UUID
          Table               #PurchLine
          Origin              #{17CDD288-6116-4A8F-AE29-E93F93027F87}
          ExtendedDataType    #STF_UUID
          StringSize          #36
        ENDPROPERTIES
        
      FIELD #STF_ValidCFDI
        ENUM
        PROPERTIES
          Name                #STF_ValidCFDI
          Table               #PurchLine
          Origin              #{92980692-581B-4169-A1BB-D6AD6E4239B0}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #STF_VATNum
        STRING
        PROPERTIES
          Name                #STF_VATNum
          Table               #PurchLine
          Origin              #{34CCE972-B2FC-43DC-A8AD-12C71E91DF48}
          ExtendedDataType    #VATNumJournal
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #StockedProduct
        ENUM
        PROPERTIES
          Name                #StockedProduct
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{FAD8DC13-0FEE-4AF3-8482-44A50C1BED3B}
          LegacyId            #302
          ExtendedDataType    #TradeStockedProduct
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #SystemEntryChangePolicy
        INT64
        PROPERTIES
          Name                #SystemEntryChangePolicy
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{4A200910-AF60-482B-93ED-0C91396BCEC8}
          LegacyId            #194
          ExtendedDataType    #PriceDiscPolicySystem
        ENDPROPERTIES
        
      FIELD #SystemEntrySource
        ENUM
        PROPERTIES
          Name                #SystemEntrySource
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{65120059-3214-47D7-9CEE-F51E61395C60}
          LegacyId            #195
          EnumType            #PriceDiscSystemSource
        ENDPROPERTIES
        
      FIELD #TAMItemVendRebateGroupId
        STRING
        PROPERTIES
          Name                #TAMItemVendRebateGroupId
          Table               #PurchLine
          Origin              #{196F68E1-D0FF-4F4F-A9F0-89CBFDF1D0AD}
          ExtendedDataType    #TAMItemVendRebateGroupId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Tax1099Amount
        REAL
        PROPERTIES
          Name                #Tax1099Amount
          Table               #PurchLine
          Origin              #{EAF7B735-4877-4DE2-BE27-37263D7D8689}
          LegacyId            #47
          ExtendedDataType    #Tax1099Amount
        ENDPROPERTIES
        
      FIELD #Tax1099Fields
        INT64
        PROPERTIES
          Name                #Tax1099Fields
          Table               #PurchLine
          Origin              #{4EB4E706-74B7-4B05-832D-2D6DCF1FD918}
          LegacyId            #234
          ExtendedDataType    #Tax1099FieldsRecId
        ENDPROPERTIES
        
      FIELD #Tax1099RecId
        INT64
        PROPERTIES
          Name                #Tax1099RecId
          Visible             #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{078B518B-E652-4F12-A473-475AE0EDC4A7}
          LegacyId            #116
          ExtendedDataType    #Tax1099RecId
        ENDPROPERTIES
        
      FIELD #Tax1099State
        STRING
        PROPERTIES
          Name                #Tax1099State
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{0E7F50FA-6DD9-4C08-831B-54BBAF3DD972}
          LegacyId            #96
          ExtendedDataType    #Tax1099State
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #Tax1099StateAmount
        REAL
        PROPERTIES
          Name                #Tax1099StateAmount
          Table               #PurchLine
          Origin              #{492B0BCD-65CA-4046-8C9F-C0E88E61ECED}
          LegacyId            #97
          ExtendedDataType    #Tax1099StateAmount
        ENDPROPERTIES
        
      FIELD #TaxAutogenerated
        ENUM
        PROPERTIES
          Name                #TaxAutogenerated
          Table               #PurchLine
          Origin              #{C3CFBF95-A7D4-4B61-8095-DBC6855C4A70}
          LegacyId            #43
          ExtendedDataType    #TaxAutoGenerated
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          HelpText            #@SYS21920
          Table               #PurchLine
          Origin              #{7BBE9B6B-8ED8-4E1E-88AD-17E3A5E0E961}
          LegacyId            #9
          ExtendedDataType    #TaxGroup
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #TaxItemGroup
        STRING
        PROPERTIES
          Name                #TaxItemGroup
          Table               #PurchLine
          Origin              #{F5050A2B-96C3-4E9C-B0F6-9F918CEE7971}
          LegacyId            #37
          ExtendedDataType    #TaxItemGroup
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #TaxServiceCode_BR
        STRING
        PROPERTIES
          Name                #TaxServiceCode_BR
          Table               #PurchLine
          Origin              #{2A111F60-0154-1000-6BAE-1254F070F8F1}
          LegacyId            #8032
          ExtendedDataType    #TaxServiceCodeId_BR
        ENDPROPERTIES
        
      FIELD #TaxWithholdBaseCur_TH
        REAL
        PROPERTIES
          Name                #TaxWithholdBaseCur_TH
          Label               #@SYS314127
          HelpText            #@SYS314128
          Table               #PurchLine
          CountryRegionCodes  #TH,SA,GB,IE
          RelationContext     #Currency
          Origin              #{D6020EA7-0556-4240-9A52-214E83553FAA}
          LegacyId            #8019
          ExtendedDataType    #TaxWithholdBaseCur
        ENDPROPERTIES
        
      FIELD #TaxWithholdGroup_TH
        STRING
        PROPERTIES
          Name                #TaxWithholdGroup_TH
          Table               #PurchLine
          CountryRegionCodes  #TH,SA,GB,IE,BR
          IgnoreEDTRelation   #Yes
          Origin              #{3B3F11A0-03F7-4AE4-9095-47B6D9DDFBB4}
          LegacyId            #8021
          ExtendedDataType    #TaxWithholdGroup
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #TaxWithholdItemGroupHeading_TH
        INT64
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #PurchLine
          Origin              #{E25F8E18-7A63-4E52-A6D6-F1E0C47F8F7F}
          LegacyId            #249
          ExtendedDataType    #TaxWithholdItemGroupId_TH
        ENDPROPERTIES
        
      FIELD #TransactionCode
        STRING
        PROPERTIES
          Name                #TransactionCode
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9982CC42-D784-49DB-8C10-70BCCA5F349D}
          LegacyId            #38
          ExtendedDataType    #IntrastatTransactionCodeId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #Transport
        STRING
        PROPERTIES
          Name                #Transport
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9076F7FD-6180-4081-BBC6-C2982E3F553F}
          LegacyId            #67
          ExtendedDataType    #IntrastatTransport
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #UnderDeliveryPct
        REAL
        PROPERTIES
          Name                #UnderDeliveryPct
          Table               #PurchLine
          Origin              #{5C5356A3-7C79-42EF-AA7B-BEE21F71526A}
          LegacyId            #44
          ExtendedDataType    #PurchUnderDeliveryPct
        ENDPROPERTIES
        
      FIELD #VariantId
        STRING
        PROPERTIES
          Name                #VariantId
          Table               #PurchLine
          Origin              #{FB80C492-5DC3-40F7-A35F-1360A75494AD}
          LegacyId            #16052
          ExtendedDataType    #RetailVariantId
        ENDPROPERTIES
        
      FIELD #VendAccount
        STRING
        PROPERTIES
          Name                #VendAccount
          Mandatory           #Yes
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{9373BFB6-8383-4032-BEA6-EAA5CC422D80}
          LegacyId            #27
          ExtendedDataType    #VendAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #VendGroup
        STRING
        PROPERTIES
          Name                #VendGroup
          Label               #@SYS3815
          HelpText            #@SYS9253
          Mandatory           #Yes
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          IgnoreEDTRelation   #Yes
          Origin              #{E8E621B3-E01E-4C13-8F62-FFE4893EF737}
          LegacyId            #26
          ExtendedDataType    #VendGroupId
          StringSize          #15
        ENDPROPERTIES
        
      FIELD #WfDeliveryDueState
        ENUM
        PROPERTIES
          Name                #WfDeliveryDueState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{2FF4AD74-4931-489D-BEB8-B7A6369B8BD7}
          LegacyId            #231
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
      FIELD #WfInvReceivedState
        ENUM
        PROPERTIES
          Name                #WfInvReceivedState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Visible             #No
          Table               #PurchLine
          Origin              #{E7C0FFF0-C383-4F0B-A1EB-EE9E360A67DF}
          LegacyId            #230
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
      FIELD #WorkflowState
        ENUM
        PROPERTIES
          Name                #WorkflowState
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #PurchLine
          Origin              #{0D999E14-65FD-43F7-A9AD-8926840D6981}
          LegacyId            #198
          EnumType            #TradeWorkflowState
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #VendAccount
          #ItemId
          #PurchQty
          #PurchPrice
          #LineAmount
          #CurrencyCode
          #PurchStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressLookup
        PROPERTIES
          Name                #AddressLookup
          Label               #@SYS88672
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineNumber
          #PurchId
          #VendAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressReference
        PROPERTIES
          Name                #AddressReference
          Label               #@SYS88679
        ENDPROPERTIES
        
        GROUPFIELDS
          #AddressRefRecId
          #AddressRefTableId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AgreementLine
        PROPERTIES
          Name                #AgreementLine
          Label               #@SYS184156
        ENDPROPERTIES
        
        GROUPFIELDS
          #MatchingAgreementLine
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #All
        PROPERTIES
          Name                #All
          Label               #@SYS80094
        ENDPROPERTIES
        
        GROUPFIELDS
          #RetailLineNumEx1
          #RetailPackageId
          #RBOPackageLineNum
          #RetailTempValueEx2
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Attention
        PROPERTIES
          Name                #Attention
          Label               #@SYS1593
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReqAttention
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Barcode
        PROPERTIES
          Name                #Barcode
          Label               #@SYS24296
        ENDPROPERTIES
        
        GROUPFIELDS
          #BarCode
          #BarCodeType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Block
        PROPERTIES
          Name                #Block
          Label               #@SYS28075
        ENDPROPERTIES
        
        GROUPFIELDS
          #Blocked
          #Complete
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BOMRoute
        PROPERTIES
          Name                #BOMRoute
          Label               #@SYS22227
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemRouteId
          #ItemBOMId
          #itemPBAId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BudgetReservation_PSN
        PROPERTIES
          Name                #BudgetReservation_PSN
          Label               #@SYP4990143
        ENDPROPERTIES
        
        GROUPFIELDS
          #BudgetReservationLine_PSN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Calculated
        PROPERTIES
          Name                #Calculated
          Label               #@SYS22050
        ENDPROPERTIES
        
        GROUPFIELDS
          #DiscPercent
          #DiscAmount
          #ConfirmedTaxAmount
          #ConfirmedTaxWriteCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #CaseMoreInformation
        PROPERTIES
          Name                #CaseMoreInformation
          Label               #@SYS314356
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #ItemId
          #PurchQty
          #PurchPrice
          #LineAmount
          #CurrencyCode
          #PurchStatus
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery
        PROPERTIES
          Name                #Delivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #OverDeliveryPct
          #UnderDeliveryPct
          #DeliveryDate
          #ConfirmedDlv
          #DeliveryType
          #LineDeliveryType
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryAddress
        PROPERTIES
          Name                #DeliveryAddress
          Label               #@SYS7924
        ENDPROPERTIES
        
        GROUPFIELDS
          #DeliveryName
          #DeliveryPostalAddress
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DeliveryRef
        PROPERTIES
          Name                #DeliveryRef
          Label               #@SYS78577
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustPurchaseOrderFormNum
          #CustomerRef
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS342338
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
          #AccountingDistributionTemplate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DiotInformation_MX
        PROPERTIES
          Name                #DiotInformation_MX
          Label               #@SYS312478
        ENDPROPERTIES
        
        GROUPFIELDS
          #OperationType_MX
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Discount
        PROPERTIES
          Name                #Discount
          Label               #@SYS11829
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineDisc
          #LinePercent
          #MultiLnDisc
          #MultiLnPercent
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DocumentPreview
        PROPERTIES
          Name                #DocumentPreview
          Label               #@SYS117648
        ENDPROPERTIES
        
        GROUPFIELDS
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FiscalInformation_BR
        PROPERTIES
          Name                #FiscalInformation_BR
          Label               #@GLS56
        ENDPROPERTIES
        
        GROUPFIELDS
          #CFOPTable_BR
          #taxationOrigin_BR
          #taxFiscalClassification_BR
          #exceptionCode_BR
          #TaxServiceCode_BR
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FixedAssets
        PROPERTIES
          Name                #FixedAssets
          Label               #@SYS12578
        ENDPROPERTIES
        
        GROUPFIELDS
          #CreateFixedAsset
          #AssetGroup
          #AssetId
          #AssetBookId
          #AssetTransTypePurch
          #DepreciationStartDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #FixedAssets_RU
        PROPERTIES
          Name                #FixedAssets_RU
          Label               #@SYS12578
        ENDPROPERTIES
        
        GROUPFIELDS
          #AssetId
          #AssetTransTypePurch
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ForeignTrade
        PROPERTIES
          Name                #ForeignTrade
          Label               #@SYS27650
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #StatTriangularDeal
          #CountyOrigDest
          #StatisticValue_LT
          #IntrastatFulfillmentDate_HU
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #g1099Fields
        PROPERTIES
          Name                #g1099Fields
          Label               #@SYS24226
        ENDPROPERTIES
        
        GROUPFIELDS
          #Tax1099Fields
          #Tax1099Amount
          #Tax1099State
          #Tax1099StateAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #GSTHSTTaxType_CA
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          Label               #@SYS313827
        ENDPROPERTIES
        
        GROUPFIELDS
          #GSTHSTTaxType_CA
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchId
          #LineNumber
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intercompany
        PROPERTIES
          Name                #Intercompany
          Label               #@SYS74106
        ENDPROPERTIES
        
        GROUPFIELDS
          #interCompanyOriginDisplay
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReference
        PROPERTIES
          Name                #InterCompanyReference
          Label               #@SYS14018
        ENDPROPERTIES
        
        GROUPFIELDS
          #InterCompanyInventTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InterCompanyReturn
        PROPERTIES
          Name                #InterCompanyReturn
          Label               #@SYS95177
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnDispositionCodeId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Intrastat
        PROPERTIES
          Name                #Intrastat
          Label               #@SYS6530
        ENDPROPERTIES
        
        GROUPFIELDS
          #TransactionCode
          #Transport
          #Port
          #StatProcId
          #CountyOrigDest
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Inventory
        PROPERTIES
          Name                #Inventory
          Label               #@SYS981
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventTransId
          #PdsCWQty
          #QtyOrdered
          #PdsCWRemainInventPhysical
          #RemainInventPhysical
          #PdsCWInventReceivedNow
          #InventReceivedNow
          #PdsCWRemainInventFinancial
          #RemainInventFinancial
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #InvoiceMatching
        PROPERTIES
          Name                #InvoiceMatching
          Label               #@SYS113690
        ENDPROPERTIES
        
        GROUPFIELDS
          #MatchingPolicy
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ItemReference
        PROPERTIES
          Name                #ItemReference
          Label               #@SYS24659
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemRefType
          #InventRefId
          #InventRefTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #MCRDropShip
        PROPERTIES
          Name                #MCRDropShip
          Label               #@MCR23774
        ENDPROPERTIES
        
        GROUPFIELDS
          #MCRDropShipStatus
          #MCRDropShipComment
          #MCRDropShipment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PayWhenPaid
        PROPERTIES
          Name                #PayWhenPaid
          Label               #@PSA3342
        ENDPROPERTIES
        
        GROUPFIELDS
          #IsPwp
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PdsCWInventory
        PROPERTIES
          Name                #PdsCWInventory
          Label               #@PDS83
        ENDPROPERTIES
        
        GROUPFIELDS
          #PdsCWInventReceivedNow
          #pdsCWInvoicedInTotal
          #PdsCWRemainInventFinancial
          #pdsCWReceivedInTotal
          #PdsCWRemainInventPhysical
          #pdsCWRegistered
          #pdsCWArrived
          #pdsCWOrdered
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PdsCWMain
        PROPERTIES
          Name                #PdsCWMain
          Label               #@PDS72
        ENDPROPERTIES
        
        GROUPFIELDS
          #PdsCWQty
          #pdsCWUnitId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PDSPotency
        PROPERTIES
          Name                #PDSPotency
          Label               #@PSC61
        ENDPROPERTIES
        
        GROUPFIELDS
          #PDSCalculationId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PlannedOrder
        PROPERTIES
          Name                #PlannedOrder
          Label               #@SYS8597
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReqPOId
          #ReqPlanIdSched
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PlanReference
        PROPERTIES
          Name                #PlanReference
          Label               #@SYS152559
        ENDPROPERTIES
        
        GROUPFIELDS
          #PlanReference
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Posting
        PROPERTIES
          Name                #Posting
          Label               #@SYS5943
        ENDPROPERTIES
        
        GROUPFIELDS
          #LedgerDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Price
        PROPERTIES
          Name                #Price
          Label               #@SYS11865
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchPrice
          #PurchMarkup
          #PriceUnit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectCostPrice
        PROPERTIES
          Name                #ProjectCostPrice
          Label               #@SYS13134
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchQty
          #PurchPrice
          #LineAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectIdentification
        PROPERTIES
          Name                #ProjectIdentification
          Label               #@SYS89920
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjId
          #ActivityNumber
          #ProjCategoryId
          #ItemId
          #ProjLinePropertyId
          #ProjWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectSalesPrice
        PROPERTIES
          Name                #ProjectSalesPrice
          Label               #@SYS5755
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjSalesCurrencyId
          #ProjSalesUnitId
          #ProjSalesPrice
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjectSalesTax
        PROPERTIES
          Name                #ProjectSalesTax
          Label               #@SYS67871
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjTaxGroupId
          #ProjTaxItemGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ProjTransaction
        PROPERTIES
          Name                #ProjTransaction
          Label               #@SYS15191
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProjTransId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PSA
        PROPERTIES
          Name                #PSA
          Label               #@PSA43
        ENDPROPERTIES
        
        GROUPFIELDS
          #InventInvoiceNow
          #ServiceAddress
          #Remainder
          #ServiceDate
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PSARetainage
        PROPERTIES
          Name                #PSARetainage
          Label               #@PSA2704
        ENDPROPERTIES
        
        GROUPFIELDS
          #PSARetainScheduleId
          #PSATotalRetainAmount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseLines
        PROPERTIES
          Name                #PurchaseLines
          Label               #@SYS9664
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxAutogenerated
          #Name
          #ExternalItemId
          #PurchaseType
          #PurchStatus
          #CovRef
          #CurrencyCode
          #LineAmount
          #VendGroup
          #VendAccount
          #LineHeader
          #TaxWithholdBaseCur_TH
          #VariantId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchaseQuantity
        PROPERTIES
          Name                #PurchaseQuantity
          Label               #@SYS11187
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchQty
          #PurchReceivedNow
          #RemainPurchPhysical
          #RemainPurchFinancial
          #PurchUnit
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchCommitmentLine_PSN
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Label               #@SPS1834
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchCommitmentLine_PSN
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchLine
        PROPERTIES
          Name                #PurchLine
          Label               #@SYS22957
        ENDPROPERTIES
        
        GROUPFIELDS
          #ProcurementCategory
          #Name
          #ExternalItemId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchReq
        PROPERTIES
          Name                #PurchReq
          Label               #@SYS94925
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchReqId
          #getPurchReqItemName
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #PurchReqReference
        PROPERTIES
          Name                #PurchReqReference
          Label               #@SYS110285
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchReqId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Requisitioner
        PROPERTIES
          Name                #Requisitioner
          Label               #@SYS108788
        ENDPROPERTIES
        
        GROUPFIELDS
          #Requester
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #ReturnedItem
        PROPERTIES
          Name                #ReturnedItem
          Label               #@SYS24700
        ENDPROPERTIES
        
        GROUPFIELDS
          #ReturnActionId
          #Scrap
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #RFIDTagging
        PROPERTIES
          Name                #RFIDTagging
          Label               #@SYS90171
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemTagging
          #CaseTagging
          #PalletTagging
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SalesTax
        PROPERTIES
          Name                #SalesTax
          Label               #@SYS5878
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxItemGroup
          #TaxGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Status
        PROPERTIES
          Name                #Status
          Label               #@SYS25587
        ENDPROPERTIES
        
        GROUPFIELDS
          #PurchStatus
          #Blocked
          #Complete
          #WorkflowState
          #qualityOrderStatusDisplay
          #IsFinalized
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TableGroup
        PROPERTIES
          Name                #TableGroup
          Label               #@SYS21958
        ENDPROPERTIES
        
        GROUPFIELDS
          #ItemId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #TAMItemVendRebateGroup
        PROPERTIES
          Name                #TAMItemVendRebateGroup
          Label               #@PRO1317
        ENDPROPERTIES
        
        GROUPFIELDS
          #TAMItemVendRebateGroupId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WithholdingTax
        PROPERTIES
          Name                #WithholdingTax
          Label               #@SYS7372
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxWithholdGroup_TH
          #TaxWithholdItemGroupHeading_TH
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #PurchLineIdx
      PROPERTIES
        Name                #PurchLineIdx
        AllowDuplicates     #No
        Origin              #{2B0C0001-0154-1000-F795-345DCC5E696E}
        LegacyId            #1
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #LineNumber
      ENDINDEXFIELDS
      
      #TransIdIdx
      PROPERTIES
        Name                #TransIdIdx
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{2B0A0003-0154-1000-E060-C58073496449}
        LegacyId            #3
      ENDPROPERTIES
      
      INDEXFIELDS
        #InventTransId
      ENDINDEXFIELDS
      
      #PurchStatusIdx
      PROPERTIES
        Name                #PurchStatusIdx
        Origin              #{2B0E0004-0154-1000-8C84-84B92C4DD873}
        LegacyId            #4
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #PurchStatus
      ENDINDEXFIELDS
      
      #ItemIdx
      PROPERTIES
        Name                #ItemIdx
        AllowDuplicates     #No
        Origin              #{2B070005-0154-1000-4974-656D49647800}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #ItemId
        #RecId
      ENDINDEXFIELDS
      
      #StatusItemIdx
      PROPERTIES
        Name                #StatusItemIdx
        Origin              #{2B0D0006-0154-1000-FA60-CA376FD75B74}
        LegacyId            #6
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchStatus
        #ItemId
      ENDINDEXFIELDS
      
      #AgreementLineIdx
      PROPERTIES
        Name                #AgreementLineIdx
        Origin              #{2B10001B-0154-1000-7D23-3315EA9E2768}
        LegacyId            #27
      ENDPROPERTIES
      
      INDEXFIELDS
        #MatchingAgreementLine
      ENDINDEXFIELDS
      
      #Tax1099FieldsIdx
      PROPERTIES
        Name                #Tax1099FieldsIdx
        Origin              #{2B10002C-0154-1000-6712-5A4CA88CFD3F}
        LegacyId            #44
      ENDPROPERTIES
      
      INDEXFIELDS
        #Tax1099Fields
      ENDINDEXFIELDS
      
      #SourceDocumentLine
      PROPERTIES
        Name                #SourceDocumentLine
        AllowDuplicates     #No
        AlternateKey        #Yes
        UniqueAcrossCompanies #Yes
        Origin              #{9B96AFD2-3293-4EEE-8651-F5674F97BCE6}
        LegacyId            #49
      ENDPROPERTIES
      
      INDEXFIELDS
        #SourceDocumentLine
        #Partition
        #dataAreaId
      ENDINDEXFIELDS
      
      #CFOPTable_BRIdx
      PROPERTIES
        Name                #CFOPTable_BRIdx
        Origin              #{2B0F1F55-0154-1000-EAB8-D71998205CD0}
        LegacyId            #8021
      ENDPROPERTIES
      
      INDEXFIELDS
        #CFOPTable_BR
      ENDINDEXFIELDS
      
      #RBOPackageIdx
      PROPERTIES
        Name                #RBOPackageIdx
        Origin              #{2B0D3E84-0154-1000-2FA5-7F125BC77D61}
        LegacyId            #16004
      ENDPROPERTIES
      
      INDEXFIELDS
        #PurchId
        #RetailPackageId
        #RBOPackageLineNum
      ENDINDEXFIELDS
      
      #PurchIdLineNumIdx
      PROPERTIES
        Name                #PurchIdLineNumIdx
        Origin              #{B95E4CA5-0331-49A2-9887-E03137E74AAD}
        LegacyId            #20001
      ENDPROPERTIES
      
      INDEXFIELDS
        #LineNumber
        #PurchId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #AccountingDistributionTemplate
        PROPERTIES
          Name                #AccountingDistributionTemplate
          Table               #AccountingDistributionTemplate
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AccountingDistributionTemplate
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AgreementLine
        PROPERTIES
          Name                #AgreementLine
          Table               #AgreementLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #AgreementLine
          Role                #AgreementLine_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #MatchingAgreementLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetBook
        PROPERTIES
          Name                #AssetBook
          Table               #AssetBook
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AssetId
            RelatedField        #AssetId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AssetBookId
            RelatedField        #BookId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetBookTable
        PROPERTIES
          Name                #AssetBookTable
          Table               #AssetBookTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetBookId
            RelatedField        #BookId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetGroup
        PROPERTIES
          Name                #AssetGroup
          Table               #AssetGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetGroup
            RelatedField        #GroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #AssetTable
        PROPERTIES
          Name                #AssetTable
          Table               #AssetTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #AssetId
            RelatedField        #AssetId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BarcodeSetup
        PROPERTIES
          Name                #BarcodeSetup
          Table               #BarcodeSetup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BarCodeType
            RelatedField        #barcodeSetupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BOMTable
        PROPERTIES
          Name                #BOMTable
          Table               #BOMTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemBOMId
            RelatedField        #BOMId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #BudgetReservationLine_PSN
        PROPERTIES
          Name                #BudgetReservationLine_PSN
          Table               #BudgetReservationLine_PSN
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BudgetReservationLine_PSN
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CFOPTable_BR
        PROPERTIES
          Name                #CFOPTable_BR
          Table               #CFOPTable_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CFOPTable_BR
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Common
        PROPERTIES
          Name                #Common
          Table               #Common
          Validate            #No
          RelationshipType    #Link
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #AddressRefTableId
            RelatedField        #TableId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CountyOrigDest
        PROPERTIES
          Name                #CountyOrigDest
          Table               #LogisticsAddressCounty
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CountyOrigDest
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #CountyOrigDest
            RelatedField        #CountyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CreditedVendInvoiceTrans
        PROPERTIES
          Name                #CreditedVendInvoiceTrans
          Table               #VendInvoiceTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CreditedVendInvoiceTrans
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Currency
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CurrencyCode
            RelatedField        #CurrencyCode
            SourceEDT           #VendCurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueSet
          Role                #DimensionAttributeValueSet_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DeliveryPostalAddress
        PROPERTIES
          Name                #DeliveryPostalAddress
          Table               #LogisticsPostalAddress
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LogisticsPostalAddress
          Role                #LogisticsPostalAddress_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DeliveryPostalAddress
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatPort
        PROPERTIES
          Name                #IntrastatPort
          Table               #IntrastatPort
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Port
            RelatedField        #PortId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatStatProc
        PROPERTIES
          Name                #IntrastatStatProc
          Table               #IntrastatStatProc
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #StatProcId
            RelatedField        #StatProcId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransactionCode
        PROPERTIES
          Name                #IntrastatTransactionCode
          Table               #IntrastatTransactionCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TransactionCode
            RelatedField        #TransactionCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #IntrastatTransportMode
        PROPERTIES
          Name                #IntrastatTransportMode
          Table               #IntrastatTransportMode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Transport
            RelatedField        #TransPortCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventDim
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #InventDimId
            RelatedField        #inventDimId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventDimCombination
        PROPERTIES
          Name                #InventDimCombination
          Table               #InventDimCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #VariantId
            RelatedField        #RetailVariantId
            SourceEDT           #RetailVariantId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventItemBarcode
        PROPERTIES
          Name                #InventItemBarcode
          Table               #InventItemBarcode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #BarCode
            RelatedField        #itemBarCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventJournalTableRef
        PROPERTIES
          Name                #InventJournalTableRef
          Table               #InventJournalTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #5
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #JournalId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTable
        PROPERTIES
          Name                #InventTable
          Table               #InventTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemId
            RelatedField        #ItemId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #InventTransOrigin
        PROPERTIES
          Name                #InventTransOrigin
          Table               #InventTransOrigin
          Validate            #No
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventTransId
            RelatedField        #InventTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LedgerDimension
        PROPERTIES
          Name                #LedgerDimension
          Table               #DimensionAttributeValueCombination
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueCombination
          Role                #DimensionAttributeValueCombination_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LedgerDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCROrderLine2PriceHistoryRef
        PROPERTIES
          Name                #MCROrderLine2PriceHistoryRef
          Table               #MCROrderLine2PriceHistoryRef
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #MCROrderLine2PriceHistoryRef
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MCRSalesLineRef
        PROPERTIES
          Name                #MCRSalesLineRef
          Table               #SalesLine
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefTransId
            RelatedField        #InventTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PBATable
        PROPERTIES
          Name                #PBATable
          Table               #PBATable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #itemPBAId
            RelatedField        #PBAId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PlanReference
        PROPERTIES
          Name                #PlanReference
          Table               #PlanReference
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PlanReference
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId1
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId1
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy
          Role                #PriceDiscChangePolicy_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SystemEntryChangePolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PriceDiscChangePolicyRecId2
        PROPERTIES
          Name                #PriceDiscChangePolicyRecId2
          Table               #PriceDiscChangePolicy
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PriceDiscChangePolicy_1
          Role                #PriceDiscChangePolicy_1_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ManualEntryChangepolicy
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProcurementCategory
        PROPERTIES
          Name                #ProcurementCategory
          Table               #EcoResCategory
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #EcoResCategory
          Role                #EcoResCategory_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProcurementCategory
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProdLineRef
        PROPERTIES
          Name                #ProdLineRef
          Table               #ProdTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProdLine
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #ProdId
          ENDPROPERTIES
          
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #4
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProdTableRef
        PROPERTIES
          Name                #ProdTableRef
          Table               #ProdTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProdTable
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #3
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #ProdId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjCategory
        PROPERTIES
          Name                #ProjCategory
          Table               #ProjCategory
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjCategoryId
            RelatedField        #CategoryId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectSalesCurrency
        PROPERTIES
          Name                #ProjectSalesCurrency
          Table               #Currency
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectSalesCurrency
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjSalesCurrencyId
            RelatedField        #CurrencyCode
            SourceEDT           #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectTaxGroupHeading
        PROPERTIES
          Name                #ProjectTaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectTaxGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTaxGroupId
            RelatedField        #TaxGroup
            SourceEDT           #ProjTaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjectTaxItemGroupHeading
        PROPERTIES
          Name                #ProjectTaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjectTaxItemGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTaxItemGroupId
            RelatedField        #TaxItemGroup
            SourceEDT           #ProjTaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjItemTrans
        PROPERTIES
          Name                #ProjItemTrans
          Table               #ProjItemTrans
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjTransId
            RelatedField        #ProjTransId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjLineProperty
        PROPERTIES
          Name                #ProjLineProperty
          Table               #ProjLineProperty
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjLinePropertyId
            RelatedField        #LinePropertyId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjSalesUnitId
        PROPERTIES
          Name                #ProjSalesUnitId
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #ProjSalesUnitId
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ProjSalesUnitId
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjTable
        PROPERTIES
          Name                #ProjTable
          Table               #ProjTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjId
            RelatedField        #ProjId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ProjWorker
        PROPERTIES
          Name                #ProjWorker
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #ProjWorker
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ProjWorker
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PSAVendorRetentionTermsTable
        PROPERTIES
          Name                #PSAVendorRetentionTermsTable
          Table               #PSAVendorRetentionTermsTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PSARetainScheduleId
            RelatedField        #VendorRetentionTermId
            SourceEDT           #PSAPurchRetainScheduleId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchCommitmentLine_PSN
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          Table               #PurchCommitmentLine_PSN
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchCommitmentLine_PSN
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchCommitmentLine_PSN
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqLine
        PROPERTIES
          Name                #PurchReqLine
          Table               #PurchReqLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchReqLineRefId
            RelatedField        #LineRefId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReqTable
        PROPERTIES
          Name                #PurchReqTable
          Table               #PurchReqTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchReqId
            RelatedField        #PurchReqId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchReturnActionDefaults
        PROPERTIES
          Name                #PurchReturnActionDefaults
          Table               #ReturnActionDefaults
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchReturnActionDefaults
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #ReturnActionId
            RelatedField        #ReturnActionId
          ENDPROPERTIES
          
          REFERENCETYPE EXTERNFIXED
          PROPERTIES
            Value               #1
            Table               #ReturnActionDefaults
            RelatedField        #Module
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchTable
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchId
            RelatedField        #PurchId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #PurchUnit
        PROPERTIES
          Name                #PurchUnit
          Table               #UnitOfMeasure
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #PurchUnit
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #PurchUnit
            RelatedField        #Symbol
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReqPlanSched
        PROPERTIES
          Name                #ReqPlanSched
          Table               #ReqPlanSched
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReqPlanIdSched
            RelatedField        #ReqPlanIdSched
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Requester_FK
        PROPERTIES
          Name                #Requester_FK
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #HcmWorker
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Requester
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RetailPackageTable
        PROPERTIES
          Name                #RetailPackageTable
          Table               #RetailPackageTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RetailPackageId
            RelatedField        #PackageId
            SourceEDT           #RetailPackageId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #ReturnDispositionCode
        PROPERTIES
          Name                #ReturnDispositionCode
          Table               #ReturnDispositionCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ReturnDispositionCodeId
            RelatedField        #DispositionCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #RouteTable
        PROPERTIES
          Name                #RouteTable
          Table               #RouteTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ItemRouteId
            RelatedField        #RouteId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SalesTableRef
        PROPERTIES
          Name                #SalesTableRef
          Table               #SalesTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE THISFIXED
          PROPERTIES
            Table               #PurchLine
            Field               #ItemRefType
            Value               #1
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #InventRefId
            RelatedField        #SalesId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmActivities
        PROPERTIES
          Name                #smmActivities
          Table               #smmActivities
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #ActivityNumber
            RelatedField        #ActivityNumber
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #SourceDocumentLine
        PROPERTIES
          Name                #SourceDocumentLine
          Table               #SourceDocumentLine
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #SourceDocumentLine
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #State
        PROPERTIES
          Name                #State
          Table               #LogisticsAddressState
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099State
            RelatedField        #StateId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TAMItemVendRebateGroup
        PROPERTIES
          Name                #TAMItemVendRebateGroup
          Table               #TAMItemVendRebateGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TAMItemVendRebateGroupId
            RelatedField        #ItemVendRebateGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099BoxDetail
        PROPERTIES
          Name                #Tax1099BoxDetail
          Table               #Tax1099BoxDetail
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Tax1099BoxDetail
          Role                #Tax1099BoxDetail_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Tax1099RecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Tax1099Fields
        PROPERTIES
          Name                #Tax1099Fields
          Table               #Tax1099Fields
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #Tax1099Fields
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Tax1099Fields
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGroupHeading
        PROPERTIES
          Name                #TaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGroup
            RelatedField        #TaxGroup
            SourceEDT           #TaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxItemGroupHeading
        PROPERTIES
          Name                #TaxItemGroupHeading
          Table               #TaxItemGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxItemGroupHeading
          Role                #PurchLine
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxItemGroup
            RelatedField        #TaxItemGroup
            SourceEDT           #TaxItemGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxServiceCode_BR
        PROPERTIES
          Name                #TaxServiceCode_BR
          Table               #TaxServiceCode_BR
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
          RelatedTableRole    #PurchLine_TaxServiceCode_BR
          Role                #PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #TaxServiceCode_BR
            RelatedField        #ServiceCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxWithholdGroupHeading
        PROPERTIES
          Name                #TaxWithholdGroupHeading
          Table               #TaxWithholdGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxWithholdGroup_TH
            RelatedField        #TaxWithholdGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxWithholdItemGroupHeading_TH
        PROPERTIES
          Name                #TaxWithholdItemGroupHeading_TH
          Table               #TaxWithholdItemGroupHeading_TH
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxWithholdItemGroupHeading_TH
          Role                #TaxWithholdItemGroupHeading_TH_PurchLine
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxWithholdItemGroupHeading_TH
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendGroup
        PROPERTIES
          Name                #VendGroup
          Table               #VendGroup
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendGroup
            RelatedField        #VendGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable
        PROPERTIES
          Name                #VendTable
          Table               #VendTable
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendAccount
            RelatedField        #AccountNum
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #STF_PurchOrder_AssetTmp(PurchLineRecIdFK)
      PROPERTIES
        Table               #STF_PurchOrder_AssetTmp
        DeleteAction        #Cascade
        Relation            #PurchLineRecIdFK
      ENDPROPERTIES
      
      #RetailBuyersPushLine(PurchLine)
      PROPERTIES
        Table               #RetailBuyersPushLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #MCROrderLine2PriceHistoryRef
      PROPERTIES
        Table               #MCROrderLine2PriceHistoryRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #TMSApportionedValue(PurchLine)
      PROPERTIES
        Table               #TMSApportionedValue
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #WHSLoadLine
      PROPERTIES
        Table               #WHSLoadLine
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PDSAdvancedPriceInfo(PurchLine)
      PROPERTIES
        Table               #PDSAdvancedPriceInfo
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchRFQReplyLinePurchLine(PurchLine)
      PROPERTIES
        Table               #PurchRFQReplyLinePurchLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #ProjCreditNoteSource(PurchLine)
      PROPERTIES
        Table               #ProjCreditNoteSource
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_Intrastat(PurchLine)
      PROPERTIES
        Table               #PurchLine_Intrastat
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_IN(PurchLine)
      PROPERTIES
        Table               #PurchLine_IN
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #PurchLine_W(PurchLine)
      PROPERTIES
        Table               #PurchLine_W
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #CustomsExportOrderTable_IN
      PROPERTIES
        Table               #CustomsExportOrderTable_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #CustomsImportAssessableValue_IN
      PROPERTIES
        Table               #CustomsImportAssessableValue_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #EximPurchLine_IN
      PROPERTIES
        Table               #EximPurchLine_IN
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PdsVendBatchInfo(PurchLine)
      PROPERTIES
        Table               #PdsVendBatchInfo
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #WHSPurchLine(PurchLine)
      PROPERTIES
        Table               #WHSPurchLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #AgreementLineReleasedLine(PurchLine)
      PROPERTIES
        Table               #AgreementLineReleasedLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #CustVendCreditInvoicingLine
      PROPERTIES
        Table               #CustVendCreditInvoicingLine
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #DocuRef
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #EMSPurchOrderFlowRelation(PurchLine)
      PROPERTIES
        Table               #EMSPurchOrderFlowRelation
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #KanbanJobPurchaseLine(PurchLine)
      PROPERTIES
        Table               #KanbanJobPurchaseLine
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
      #MarkupTrans
      PROPERTIES
        Table               #MarkupTrans
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchLineForeignTradeCategory
      PROPERTIES
        Table               #PurchLineForeignTradeCategory
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #PurchLineOrigin(PurchLine)
      PROPERTIES
        Table               #PurchLineOrigin
        DeleteAction        #Cascade
        Relation            #PurchLine
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #accountItemExtendParm_CN
        #/// <summary>
        #/// Retrieves a posting account for the purchase order line with site.
        #/// </summary>
        #/// <param name="_inventAccountType">
        #/// The posting account type.
        #/// </param>
        #/// <returns>
        #/// The posting account number for the account type for the purchase order line.
        #/// </returns>
        #LedgerDimensionDefaultAccount accountItemExtendParm_CN(InventAccountType _inventAccountType)
        #{
        #    return InventPosting::accountItemExtendParm_CN(
        #            _inventAccountType,
        #            InventPostingExtendParm_CN::constructInventDim(this.inventDim()),
        #            this.ItemId,
        #            this.inventTable().itemGroupId(),
        #            this.ProcurementCategory,
        #            this.VendAccount,
        #            this.VendGroup,
        #            this.TaxGroup);
        #
        #}
      ENDSOURCE
      SOURCE #accountReceipt
        #/// <summary>
        #/// Change which account is returened when getting the ledger account so that all the fixed asset
        #/// transactions will use PurchReceiptFA account instead of the PurchReceipt account.
        #/// </summary>
        #/// <returns>
        #/// LedgerAccount for the receipt transaction
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerAccount accountReceipt()
        #{
        #    LedgerAccount                   ledgerAccount;
        #    LedgerDimensionDefaultAccount   ledgerDimension;
        #
        #    if (this.LedgerDimension && InventMovement::construct(this).mustBeBookedBalanceSheet())
        #    {
        #        ledgerDimension = this.LedgerDimension;
        #        ledgerAccount   = DimensionStorage::ledgerDimension2AccountNum(this.LedgerDimension);
        #    }
        #    else
        #    {
        #        if (this.AssetId)
        #        {
        #            ledgerDimension = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                                                                  InventAccountType::PurchReceipt,
        #                                                                                  this.ItemId,
        #                                                                                  this.inventTable().itemGroupId(),
        #                                                                                  0,                                           //V6 itemCategory
        #                                                                                  this.VendAccount,
        #                                                                                  this.VendGroup,
        #                                                                                  this.TaxGroup);
        #            ledgerAccount   = DimensionStorage::ledgerDimension2AccountNum(ledgerDimension);
        #        }
        #        else
        #        {
        #            ledgerDimension = InventPosting::accountItemLedgerDimension(InventAccountType::PurchReceipt,
        #                                                                        this.ItemId,
        #                                                                        this.inventTable().itemGroupId(),
        #                                                                        0,                                                      //V6 itemCategory
        #                                                                        this.VendAccount,
        #                                                                        this.VendGroup,
        #                                                                        this.TaxGroup);
        #            ledgerAccount   = DimensionStorage::ledgerDimension2AccountNum(ledgerDimension);
        #        }
        #    }
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #agreementSkipAutoLink
        #/// <summary>
        #/// Check whether this line should skip automatic <c>AgreementLine</c> matching
        #/// </summary>
        #/// <returns>
        #/// True if no automatic matching should be done for this line
        #/// </returns>
        #/// <remarks>
        #/// For delivery lines auto-linking should be allways skipped,
        #/// so this method always returns true for delivery lines.
        #/// </remarks>
        #public boolean agreementSkipAutoLink()
        #{
        #    return (this.AgreementSkipAutoLink || this.LineDeliveryType == LineDeliveryType::DeliveryLine);
        #}
      ENDSOURCE
      SOURCE #allowEditReturnActionId
        #boolean  allowEditReturnActionId()
        #{
        #    return this.type().allowEditReturnActionId();
        #}
      ENDSOURCE
      SOURCE #allowEditScrap
        #boolean  allowEditScrap()
        #{
        #    return this.type().allowEditScrap() && this.isStocked();
        #}
      ENDSOURCE
      SOURCE #allowEditStockedProduct
        #/// <summary>
        #/// Determines whether the <c>StockedProduct</c> field can be changed.
        #/// </summary>
        #/// <returns>
        #/// true if the line is item based, the item is of type item, not a fixed asset,
        #/// and the line has not been packing slip or invoice updated; otherwise, false.
        #/// </returns>
        #boolean allowEditStockedProduct()
        #{
        #    return this.ItemId
        #        && !this.isPackingSlipOrInvoiceUpdated()
        #        && this.AssetId == ''
        #        && !this.CreateFixedAsset
        #        && this.inventTable().ItemType == ItemType::Item;
        #}
      ENDSOURCE
      SOURCE #allowEditTax1099
        #boolean allowEditTax1099()
        #{
        #    boolean  ok = true;
        #
        #    if (this.PurchStatus == PurchStatus::Invoiced)
        #    {
        #        ok = false;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #allowInventProfileIdChange_RU
        #/// <summary>
        #/// Determines if InventProfileId_RU inventory dimension could be changed
        #/// </summary>
        #/// <param name="_showWarning">
        #/// If "true" warning message is shown in case method returns false
        #/// </param>
        #/// <returns>
        #/// true if InventProfileId_RU is allowed to change, otherwise, false.
        #/// </returns>
        #public boolean allowInventProfileIdChange_RU(boolean _showWarning = true)
        #{
        #    if (this.PurchStatus == PurchStatus::Invoiced   ||
        #        (this.InventTransId                         &&
        #        (this.existInvoice_RU()                     ||
        #         VendInvoiceTrans::findInventTransId(this.InventTransId))))
        #    {
        #        if (_showWarning)
        #        {
        #            checkFailed(strFmt("@GLS116011", this.PurchId, fieldId2pname(tableNum(InventDim), fieldNum(InventDim, InventProfileId_RU))));
        #        }
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #allowPostingProfileChange_RU
        #/// <summary>
        #/// Determines if PostingProfile_RU field value could be changed
        #/// </summary>
        #/// <param name="_showWarning">
        #/// If "true" warning message is shown in case method returns false
        #/// </param>
        #/// <returns>
        #/// true if PostingProfile_RU is allowed to change, otherwise, false.
        #/// </returns>
        #public boolean allowPostingProfileChange_RU(boolean _showWarning = true)
        #{
        #    if (this.PurchStatus == PurchStatus::Invoiced ||
        #        (this.InventTransId                         &&
        #        (this.existInvoice_RU()                    ||
        #         VendInvoiceTrans::findInventTransId(this.InventTransId))))
        #    {
        #        if (_showWarning)
        #        {
        #            checkFailed(strFmt("@GLS116011", this.PurchId, fieldId2pname(tableNum(PurchLine_W), fieldNum(PurchLine_W, PostingProfile_RU))));
        #        }
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #allowUpdateWithQualityOrder
        #/// <summary>
        #/// Specifies whether the update of the purchase line is enabled, even if an open quality order exists.
        #/// </summary>
        #/// <returns>
        #/// true if the update is enabled; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Normally an update is not enabled, but if the invoice posting fails, a pending invoice is saved and
        #/// the remaining quantity is reset.
        #/// </remarks>
        #boolean allowUpdateWithQualityOrder()
        #{
        #    PurchLine   purchLine_orig;
        #
        #    if (!InventParameters::find().UseQualityManagement)
        #    {
        #        // Not using quality management for this company
        #        return true;
        #    }
        #
        #    if (this.qualityOrderStatusDisplay() != InventTestOrderStatusDisplay::Open)
        #    {
        #        // No open quality order exists
        #        return true;
        #    }
        #    purchLine_orig = this.orig().data();
        #
        #    // Changing the following fields is allowed so make those equal before comparing
        #    purchLine_orig.PurchReceivedNow    = this.PurchReceivedNow;
        #    purchLine_orig.InventReceivedNow   = this.InventReceivedNow;
        #
        #    if (this.PackedExtensions               != conNull()
        #        || purchLine_orig.PackedExtensions  != conNull())
        #    {
        #        return this.SysExtensionSerializerMap::equal(purchLine_orig);
        #    }
        #
        #    return this.equal(purchLine_orig);
        #}
      ENDSOURCE
      SOURCE #amountCur
        #AmountCur amountCur(AmountMST               amountMST,
        #                    TransDate               exchRateDate            = systemDateGet(),
        #                    ExchRate                exchRate                = 0,
        #                    ExchrateSecondary       exchrateSecondary       = 0,
        #                    ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #{
        #    return this.SalesPurchLine::amountCur(amountMST, exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #amountExclTax
        #AmountCur amountExclTax(AmountCur amountCur, Qty  qty, TransDate transDate, Tax _tax = null)
        #{
        #    return this.SalesPurchLine::amountExclTax(amountCur, qty, transDate, _tax);
        #}
      ENDSOURCE
      SOURCE #amountMST
        #AmountMST amountMST(AmountCur               amountCur,
        #                    TransDate               exchRateDate            = systemDateGet(),
        #                    ExchRate                exchRate                = 0,
        #                    ExchrateSecondary       exchrateSecondary       = 0,
        #                    ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #
        #{
        #    return this.SalesPurchLine::amountMST(amountCur, exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #arrived
        #//BP Deviation Documented
        #display InventQtyArrived arrived()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        return InventTransIdSumSingleStatus::qtyArrived(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #arrivedInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyArrived arrivedInPurchUnit()
        #{
        #    PurchQtyArrived purchQtyArrived = this.arrived();
        #
        #    if (!purchQtyArrived)
        #    {
        #        return 0;
        #    }
        #
        #    return this.unitConvertInvent2Purch(purchQtyArrived);
        #}
      ENDSOURCE
      SOURCE #assessableValue_IN
        #/// <summary>
        #/// This method is used get the assessable value.
        #/// </summary>
        #// <GIN>
        #public void assessableValue_IN()
        #{
        #    CustomsImportAssessableValue_IN customsImportAssessableValue;
        #    MarkupValue                     value;
        #    CustomsAmount_IN                landingCharges;
        #    PurchLine_IN                    purchLine_IN;
        #    VendInvoiceTrans                vendInvoiceTrans;
        #    InventDim                       inventDim;
        #    InventBatchId                   inventBatchId;
        #    PurchLineOrigin                 purchLineOrigin;
        #    ExciseVendorType_IN             exciseVendorType;
        #
        #    purchLine_IN = this.purchLine_IN();
        #    exciseVendorType = this.purchTable().purchTable_W().ExciseVendorType_IN;
        #
        #    if (this.creditNoteLine() &&
        #        exciseVendorType == ExciseVendorType_IN::FirstStageDealer ||
        #        exciseVendorType == ExciseVendorType_IN::SecondStageDealer)
        #    {
        #        //If the return order line is created manually and ForceBatchValidation does not exists, AV should not be according to Original Invoice
        #        if (!this.InventRefTransId && !ExciseRecordTypeTable_IN::existForceBatchValidation(purchLine_IN.ExciseRecordType_IN))
        #        {
        #            purchLine_IN.AssessableValuePerOriginalInvoice = NoYes::No;
        #        }
        #        else
        #        {
        #            purchLine_IN.AssessableValuePerOriginalInvoice = NoYes::Yes;
        #        }
        #    }
        #    else
        #    {
        #        purchLine_IN.AssessableValuePerOriginalInvoice = NoYes::No;
        #    }
        #
        #    if (PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
        #    {
        #        customsImportAssessableValue = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId);
        #        if (customsImportAssessableValue.RecId)
        #        {
        #            ttsbegin;
        #            customsImportAssessableValue.selectForUpdate(true);
        #            customsImportAssessableValue.Amount = this.LineAmount;
        #            customsImportAssessableValue.Value  = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            customsImportAssessableValue.update();
        #            ttscommit;
        #
        #            if(!purchLine_IN.AssessableValuePerOriginalInvoice)
        #            {
        #                purchLine_IN.AssessableValue_IN = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId).invoiceAssessableValue();
        #            }
        #        }
        #        else
        #        {
        #            value                   = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            landingCharges          = (this.LineAmount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #
        #            if (!purchLine_IN.AssessableValuePerOriginalInvoice)
        #            {
        #                purchLine_IN.AssessableValue_IN = this.LineAmount + value + landingCharges;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (!purchLine_IN.AssessableValuePerOriginalInvoice)
        #        {
        #            purchLine_IN.AssessableValue_IN = this.getMiscChargesAmount_IN();
        #        }
        #    }
        #
        #    if (purchLine_IN.AssessableValuePerOriginalInvoice)
        #    {
        #        if (this.InventRefTransId && this.InventRefId)
        #        {
        #            select firstOnly OriginSourceDocumentLine from purchLineOrigin
        #                where purchLineOrigin.PurchLineInventTransId == this.InventTransId
        #                && purchLineOrigin.PurchLineDataAreaId == this.dataAreaId;
        #
        #            vendInvoiceTrans = VendInvoiceTrans::findSourceDocumentLine(purchLineOrigin.OriginSourceDocumentLine);
        #        }
        #        else if (ExciseRecordTypeTable_IN::existForceBatchValidation(purchLine_IN.ExciseRecordType_IN))
        #        {
        #            inventBatchId = this.inventDim().inventBatchId;
        #
        #            select firstOnly AssessableValue_IN, Qty from vendInvoiceTrans
        #                order by vendInvoiceTrans.InvoiceDate desc
        #                where vendInvoiceTrans.ItemId == this.ItemId
        #            exists join inventDim
        #                where inventDim.inventDimId == vendInvoiceTrans.InventDimId &&
        #                      inventDim.inventBatchId == inventBatchId;
        #        }
        #        if (vendInvoiceTrans)
        #        {
        #            purchLine_IN.AssessableValue_IN =  this.PurchQty * vendInvoiceTrans.AssessableValue_IN / vendInvoiceTrans.Qty;
        #        }
        #    }
        #
        #    purchLine_IN.AssessableValueAccountingCurrency = TaxAssessableValueHandler_IN::calcAssessableValueAccountingCurrency(purchLine_IN.AssessableValue_IN,this.CurrencyCode,this.purchTable().AccountingDate);
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #// </GIN>
        #
      ENDSOURCE
      SOURCE #assetLedgerDimension
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger dimension so that all fixed asset
        #/// transactions will use the <c>PurchRecieptFA</c> account instead of the <c>PurchConsump</c> account.
        #/// </summary>
        #/// <returns>
        #/// A <c>LedgerDimensionDefaultAccount</c> value.
        #/// </returns>
        #private LedgerDimensionDefaultAccount assetLedgerDimension()
        #{
        #    AssetTransType  assetTransType;
        #    AssetBook       assetBook;
        #
        #    assetBook = AssetBook::find(this.AssetId, this.AssetBookId);
        #    assetTransType = AssetPost::assetTransTypePurch2AssetTransType(this.AssetTransTypePurch);
        #
        #    return AssetLedgerAccounts::assetLedgerDimension(this.AssetId, this.AssetBookId, assetTransType,
        #                        assetBook.PostingProfile);
        #}
      ENDSOURCE
      SOURCE #assetUpdateInventTrans
        #void assetUpdateInventTrans()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        AssetInventTrans::changeAssetId(
        #            InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId),
        #            this.orig().AssetId,
        #            this.AssetId,
        #            this.AssetBookId);
        #    }
        #}
      ENDSOURCE
      SOURCE #associateWithAgreementLine
        #/// <summary>
        #/// Associates the purchase line with the agreement line.
        #/// </summary>
        #[SysObsoleteAttribute('There is no longer a need to create agreement link manually. Agreement link is created or deleted whenever purchase order line is created, updated or deleted based on MatchingAgreementLine value on PurchLine.', true)]
        #server public void associateWithAgreementLine()
        #{
        #    throw error(Error::wrongUseOfFunction(funcName()));
        #}
      ENDSOURCE
      SOURCE #calcGrossAmount
        #AmountCur calcGrossAmount(Qty qty   = this.PurchQty)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcGrossAmount(qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcGrossAmountExclTax
        #AmountCur  calcGrossAmountExclTax(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcGrossAmountExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineAmount
        #AmountCur  calcLineAmount(Qty  qty = this.PurchQty)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcLineAmount(qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountExclTax
        #AmountCur  calcLineAmountExclTax(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcLineAmountExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineAmountForced
        #AmountCur calcLineAmountForced(Qty _qty = this.PurchQty, PriceDiscPolicyCheckPolicy  _checkPolicy=null)
        #{
        #    AmountCur ret;
        #
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        ret = this.SalesPurchLine::calcLineAmountForced(_qty, _checkPolicy);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountForcedInteraction
        #/// <summary>
        #/// Calculates the line amount with user interaction if associated link to agreement line becomes invalid.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID for the field which changes require recalculation of line amount.
        #/// </param>
        #/// <param name="_qty">
        #/// The purchase quantity used for calculating the line amount.
        #/// </param>
        #/// <param name="_recalcValidLink">
        #/// A Boolean value that indicates whether to calculate line amount if the agreement link is valid; optional.
        #/// </param>
        #/// <returns>
        #/// The line amount.
        #/// </returns>
        #/// <remarks>
        #/// Used when there is a need for the option to dissociate agreement line via prompt if changes will make the existing association to a agreement line invalid.
        #/// </remarks>
        #public AmountCur calcLineAmountForcedInteraction(
        #    FieldId _fieldId,
        #    Qty     _qty             = this.PurchQty,
        #    boolean _recalcValidLink = true)
        #{
        #    PurchLine   purchLineOrig;
        #    AmountCur   ret;
        #    boolean     calledFromWeb;
        #    boolean     isAgreementLinkRefreshed = true;
        #
        #    AmountCur   localOrigLineAmount  = this.LineAmount; //This variable is needed for the uncommitted scenario as <>.orig.LineAmont returns the db value.
        #
        #
        #    if (_recalcValidLink && this.purchTable().MatchingAgreement)
        #    {
        #        //The impact on line amount should be included in the agreement link validation.
        #        this.LineAmount      = this.calcLineAmountForced(this.PurchQty);
        #        isAgreementLinkRefreshed = this.refreshAgreementLink();
        #
        #        this.LineAmount      = localOrigLineAmount;
        #    }
        #
        #    if (!isAgreementLinkRefreshed)
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS135750");
        #            ret = this.calcLineAmountForced(_qty);
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId))
        #            {
        #                if (_fieldId)
        #                {
        #                    this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #                }
        #
        #                if (this.ManualEntryChangepolicy
        #                    && this.SystemEntryChangePolicy)
        #                {
        #                    this.PriceDiscResultFields::mergerPriceDiscPolicies(ModuleSalesPurch::Purch);
        #                }
        #
        #                if (this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #                    || (this.LineDeliveryType == LineDeliveryType::OrderLine
        #                        && this.doReCalcPricesFromBasePrompt()))
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #                ret = this.calcLineAmountForced(_qty);
        #            }
        #            else
        #            {
        #                ret = this.LineAmount;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        ret = _recalcValidLink ? this.calcLineAmountForced(_qty) : this.LineAmount;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineAmountInclTax_RU
        #AmountCur calcLineAmountInclTax_RU(Qty  qty = this.PurchQty, TransDate transDate = systemDateGet())
        #{
        #    return this.SalesPurchLine::calcLineAmountInclTax_RU(qty, this.taxDate(transDate));
        #}
      ENDSOURCE
      SOURCE #calcLineAmountInteraction
        #/// <summary>
        #/// Calculates the line amount with user interaction if associated link to agreement line becomes
        #/// invalid.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID for the field which changes require recalculation of line amount.
        #/// </param>
        #/// <param name="_qty">
        #/// The purchase quantity to calculate line amount for.
        #/// </param>
        #/// <returns>
        #/// The calculated line amount.
        #/// </returns>
        #/// <remarks>
        #/// Used when you need the option to dissociate an agreement line via prompt if changes will make the
        #/// existing association to a agreement line invalid.
        #/// </remarks>
        #public AmountCur calcLineAmountInteraction(FieldId _fieldId, Qty _qty = this.PurchQty)
        #{
        #    PurchLine   purchLineOrig;
        #    AmountCur   ret;
        #    boolean     calledFromWeb;
        #
        #    if (this.RecId && this.purchTable().MatchingAgreement && !this.refreshAgreementLink())
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS135750");
        #            ret = this.calcLineAmount(_qty);
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId))
        #            {
        #                if (this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #                    || (this.LineDeliveryType == LineDeliveryType::OrderLine
        #                        && this.doReCalcPricesFromBasePrompt()))
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #                ret = this.calcLineAmount(_qty);
        #            }
        #            else
        #            {
        #                ret = this.LineAmount;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        ret = this.calcLineAmount(_qty);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #calcLineDisc
        #DiscAmount  calcLineDisc(Qty    qty   = this.PurchQty)
        #{
        #    return this.SalesPurchLine::calcLineDisc(qty);
        #}
      ENDSOURCE
      SOURCE #calcLineDiscExclTax
        #DiscAmount  calcLineDiscExclTax(Qty qty = this.PurchQty, TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::calcLineDiscExclTax(qty, this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #calcLineDiscUnit
        #//BP Deviation Documented
        #display DiscAmount calcLineDiscUnit()
        #{
        #    if (this.PurchQty)
        #    {
        #        return this.calcLineDisc() / this.PurchQty * this.PriceUnit;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #calcPendingLineAmounts
        #/// <summary>
        #/// Calculates a sum of the <c>LineAmount</c> values that are in transaction and company currency for
        #/// all pending invoice lines that are connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_excludeTableRefId">
        #/// A <c>TableRefId</c> value for which to exclude invoices; optional.
        #/// </param>
        #/// <returns>
        #/// A container with the sum of the <c>LineAmount</c> values and the <c>LineAmount</c> values in the
        #/// default currency.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoLine</c> table are used in the calculation. The exchange rate from
        #/// the <c>VendInvoiceInfoTable</c> table is used if populated; otherwise, the exchange rate is
        #/// retrieved.
        #/// </remarks>
        #public server container calcPendingLineAmounts(TradeLineRefId _excludeTableRefId = '')
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable    vendInvoiceInfoTable;
        #    container               lineAmounts;
        #    LineAmount              lineAmount, lineAmountMST;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #
        #    while select * from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #            (!_excludeTableRefId || vendInvoiceInfoLine.TableRefId != _excludeTableRefId)
        #        join * from vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // avoid double counting when saved document is active
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != ''
        #
        #    {
        #        lineAmount += vendInvoiceInfoLine.LineAmount;
        #        lineAmountMST += vendInvoiceInfoLine.lineAmountMST(vendInvoiceInfoTable.updateDate(), vendInvoiceInfoTable.ExchRate,
        #            vendInvoiceInfoTable.ExchRateSecondary, Currency::noYes2UnknownNoYes(vendInvoiceInfoTable.euroTriangulation));
        #    }
        #
        #    lineAmounts = [lineAmount,lineAmountMST];
        #    return lineAmounts;
        #}
      ENDSOURCE
      SOURCE #calcPendingMatchedQtyInvent
        #/// <summary>
        #/// Calculates a sum of the <c>InventNow</c> quantities for invoice lines that are connected to this
        #/// record in the <c>PurchLine</c> table that are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #/// A Boolean value that indicates whether only pending invoice lines are considered connected;
        #/// optional.
        #/// </param>
        #/// <returns>
        #/// The calculated <c>InventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public InventQty calcPendingMatchedQtyInvent(boolean _pendingOnly = true)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(InventNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.InventNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingMatchedQtyPurch
        #/// <summary>
        #/// Calculates the sum of the <c>ReceiveNow</c> quantity for invoice lines that are connected to this
        #/// <c>PurchLine</c> table record, which are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #/// A Boolean value that specifies whether only pending invoice lines are considered connected.
        #/// </param>
        #/// <param name="_openEndedOnly">
        #/// A Boolean value which determines whether to consider only sub lines without a relationship to a
        #/// packing slip.
        #/// </param>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public PurchQty calcPendingMatchedQtyPurch(boolean _pendingOnly = true, boolean _openEndedOnly = false)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(ReceiveNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                (!_openEndedOnly || vendInvoiceInfoSubLine.JournalRefRecId == 0)
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.ReceiveNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyInvent
        #/// <summary>
        #/// Calculates a sum of the <c>InventNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>InventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records in the <c>VendInvoiceInfoLine</c> table are used in the calculation.
        #/// </remarks>
        #public InventQty calcPendingQtyInvent()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(InventNow) from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.InventNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyPurch
        #/// <summary>
        #/// Calculates a sum of the <c>ReceiveNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from the <c>VendInvoiceInfoLine</c> table are used in the calculation.
        #/// </remarks>
        #public server PurchQty calcPendingQtyPurch()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(ReceiveNow) from vendInvoiceInfoLine
        #        where
        #            vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.ReceiveNow;
        #}
      ENDSOURCE
      SOURCE #calcPendingQtyPurchDisplay
        #/// <summary>
        #/// Retrieves the sum of the <c>ReceiveNow</c> quantities for all pending invoice lines that are
        #/// connected to this record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// The calculated <c>ReceiveNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both the <c>PurchParmLine</c> table and the <c>VendInvoiceInfoLine</c> table are used
        #/// in the calculation.
        #/// </remarks>
        #//BP Deviation Documented
        #public display UnpostedInvoicePurchQty calcPendingQtyPurchDisplay()
        #{
        #    return this.calcPendingQtyPurch();
        #}
      ENDSOURCE
      SOURCE #calcPrice2LineAmount
        #AmountCur  calcPrice2LineAmount(Qty _qty, boolean _forceLineAmountCalculation)
        #{
        #    return this.SalesPurchLine::calcPrice2LineAmount(_qty, _forceLineAmountCalculation);
        #}
      ENDSOURCE
      SOURCE #calcPriceFromAmount
        #void  calcPriceFromAmount()
        #{
        #    this.SalesPurchLine::calcPriceFromAmount();
        #}
      ENDSOURCE
      SOURCE #calcProjSalesPriceIfDefault
        #private AmountCur calcProjSalesPriceIfDefault()
        #{
        #    return this.PurchQty != 0 ? (this.LineAmount / this.PurchQty) : 0;
        #}
      ENDSOURCE
      SOURCE #calcQtyOrdered
        #InventQty   calcQtyOrdered(Qty    purchQty = this.PurchQty)
        #{
        #    return this.isStocked() ? this.SalesPurchLine::calcQtyOrdered(purchQty) : 0;
        #}
      ENDSOURCE
      SOURCE #canAgreementBeLinked
        #/// <summary>
        #/// Determines whether the purchase line can be linked to an agreement line.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order line can be linked to an agreement line; otherwise, false.
        #/// </returns>
        #public boolean canAgreementBeLinked()
        #{
        #    return this.type().canAgreementBeLinked();
        #}
      ENDSOURCE
      SOURCE #canApplyAllocationOrDistributionTemplate
        #/// <summary>
        #/// Indicates whether to use an allocation or distribution template to create the distributions of the
        #/// transaction line.
        #/// </summary>
        #/// <returns>
        #/// true if the distribution template will be used; otherwise, false.
        #/// </returns>
        #public boolean canApplyAllocationOrDistributionTemplate()
        #{
        #    boolean projMultipleFundingSources = false;
        #
        #    projMultipleFundingSources = (this.ProjId && ProjInvoiceTable::hasMultipleFundingSources(ProjTable::projInvoiceStatic(this.ProjId).ProjInvoiceProjId));
        #
        #    if (!this.hasAssetAssociated() && !this.isStocked() && !(projMultipleFundingSources) && !this.isInvoiceMatched())
        #    {
        #        return true;
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #canAutoUpdatePurchLine
        #/// <summary>
        #/// Indicates whether the table buffer is restricted by the change management functionality.
        #/// </summary>
        #/// <returns>
        #/// true if the buffer can be updated; otherwise, false.
        #/// </returns>
        #public boolean canAutoUpdatePurchLine()
        #{
        #    return !this.purchTable().ChangeRequestRequired;
        #}
      ENDSOURCE
      SOURCE #canEditDisc
        #// This method is called when setting disc fields
        #boolean canEditDisc()
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #canEditLedgerDimensionDefaultAccount
        #/// <summary>
        #/// Determines if the ledger dimension default account can be edited.
        #/// </summary>
        #/// <returns>
        #/// True if the ledger dimension default account is editable; otherwise false.
        #/// </returns>
        #public boolean canEditLedgerDimensionDefaultAccount()
        #{
        #    boolean             canEditLedgerDimensionDefaultAccount;
        #    #isoCountryRegionCodes
        #
        #    if (this.isStocked()            == false
        #        && this.ProjId              == ''
        #        && this.AssetGroup          == ''
        #        && this.AssetId             == ''
        #        && this.isSubcontracted()   == false
        #        && (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #            || !this.purchLine_W().MarkupCode_RU)
        #    )
        #    {
        #        canEditLedgerDimensionDefaultAccount = true;
        #    }
        #    else
        #    {
        #        canEditLedgerDimensionDefaultAccount = false;
        #    }
        #
        #    return canEditLedgerDimensionDefaultAccount;
        #}
      ENDSOURCE
      SOURCE #canFinalize
        #/// <summary>
        #///    Determines if the purchase order line can be finalized.
        #/// </summary>
        #/// <param name="_checkHeader">
        #///    Check header status.
        #/// </param>
        #/// <returns>
        #///    true if the the purchase order line can be finalized; otherwise, false.
        #/// </returns>
        #public boolean canFinalize(boolean _checkHeader = true)
        #{
        #    boolean lineCanFinalize = ( this.PurchStatus == PurchStatus::Invoiced
        #                                ||  this.PurchStatus == PurchStatus::Canceled
        #                                ||  this.IsDeleted == NoYes::Yes)
        #                                && this.IsFinalized == NoYes::No;
        #
        #    if (_checkHeader)
        #    {
        #        lineCanFinalize = lineCanFinalize
        #                            && this.purchTable().DocumentState == VersioningDocumentState::Confirmed;
        #    }
        #
        #    return lineCanFinalize;
        #}
        #
      ENDSOURCE
      SOURCE #canSubmitToWorkflow
        #/// <summary>
        #///     This method are testing if the current <c>PurchLine</c> can be submitted to workflow.
        #/// </summary>
        #/// <param name="workflowType">Workflow type</param>
        #/// <returns>
        #///     Returns true if the current record can be submitted to workflow, otherwise false.
        #/// </returns>
        #public boolean  canSubmitToWorkflow(str workflowType = '')
        #{
        #    boolean     canSubmit = false;
        #
        #    if (this.RecId
        #    &&  this.WorkflowState  == TradeWorkflowState::NotSubmitted)
        #    {
        #        canSubmit = true;
        #    }
        #
        #    return canSubmit;
        #}
      ENDSOURCE
      SOURCE #caption
        #public str caption()
        #{
        #    return strFmt("%1: %2, %3, %4",
        #        "@SYS15812", this.PurchId,
        #        strFmt("@SYS343102", this.LineNumber),
        #        this.ItemId);
        #}
      ENDSOURCE
      SOURCE #checkActivity
        #boolean checkActivity()
        #{
        #    RecId                       projRecId;
        #
        #    if (this.ActivityNumber)
        #    {
        #        if (!ProjActivity::find(this.ActivityNumber))
        #        {
        #            return checkFailed(strFmt("@SYS50966",this.ActivityNumber));
        #        }
        #
        #        //validate activity is associated to Project
        #        projRecId = ProjTable::find(this.ProjId).RecId;
        #        if (smmActivityParentLinkTable::find(this.ActivityNumber, smmActivityParentType::Project, projRecId).RecId == 0)
        #        {
        #            return checkFailed(strFmt("@SYS105858",this.ActivityNumber, this.ProjId));
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkAndPromptFixedLineAmount
        #boolean checkAndPromptFixedLineAmount()
        #{
        #    return this.PriceDiscLine::checkAndPromptFixedLineAmount();
        #}
      ENDSOURCE
      SOURCE #checkAssetBookId
        #boolean checkAssetBookId()
        #{
        #    boolean ret  = true;
        #
        #    // check that AssetId is always set for current AssetBookId
        #    if (this.AssetBookId && !this.AssetId)
        #    {
        #        ret = ret && checkFailed(strFmt("@SYS71114",this.AssetId,this.AssetBookId));
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkBudgetReservationBalance
        #// <PubSect>
        #public void checkBudgetReservationBalance()
        #{
        #    if (this.isBudgetReservationLineReferenced())
        #    {
        #        BudgetReservation_PSN::checkBudgetReservationBalance(
        #            this.BudgetReservationLine_PSN,
        #            this.purchTable().SourceDocumentHeader);
        #    }
        #}
        #// </PubSect>
      ENDSOURCE
      SOURCE #checkCFOP_BR
        #/// <summary>
        #/// It validates if CFOP is present in CFOPMatrix with the correct attributes
        #/// (Operation ID, Transaction Type, Direction and Location)
        #/// </summary>
        #/// <returns>
        #/// It returns true if it is valid.
        #/// </returns>
        #public boolean checkCFOP_BR()
        #{
        #    boolean                     ok = true;
        #
        #    if (!this.cfopTable_BR
        #        && (this.purchTable().PurchaseType != PurchaseType::Journal)
        #        && this.inventTable().ItemType == ItemType::Item)
        #    {
        #        ok = checkFailed(strFmt("@SYS26332", fieldPName(CFOPTable_BR, cfopId)));
        #    }
        #
        #    if (this.cfopTable_BR)
        #    {
        #        ok = ok && CFOPValidation_BR::validateOnServer(this);
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #checkCommitmentVendorMatchesOrderAccount
        #/// <summary>
        #/// Validates that the order account for the current purchase order header matches the vendor account
        #/// on the commitment related to the current purchase order line, if the commitment has a vendor account specified.
        #/// </summary>
        #/// <param name="_newOrderAccount">
        #/// The account number that should be validated against.  If no value is specied then it will be retrieved from the purchase order header.
        #/// </param>
        #/// <returns>
        #/// true if the vendor account on the related commitment is blank or matches the order account on the purchase order header; otherwise, false.
        #/// </returns>
        #public boolean checkCommitmentVendorMatchesOrderAccount(VendAccount _newOrderAccount = '')
        #{
        #    PurchCommitmentHeader_PSN       purchCommitmentHeader;
        #    VendAccount                     orderAccount;
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        purchCommitmentHeader = this.getPurchCommitmentLine_PSN().getPurchCommitmentHeader_PSN();
        #
        #        // If the _newOrderAccount is specified, then we want to use that value, otherwise we retrieve it from the header table.
        #        if (_newOrderAccount != '')
        #        {
        #            orderAccount = _newOrderAccount;
        #        }
        #        else
        #        {
        #            orderAccount = this.purchTable().OrderAccount;
        #        }
        #
        #        // Verify that the order account on the PO matches the vendor account on the commitment.
        #        if (purchCommitmentHeader.VendorAccount != ''
        #            && orderAccount != purchCommitmentHeader.VendorAccount)
        #        {
        #            return false;
        #        }
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkCrossdocking
        #/// <summary>
        #///   Checks whether the relevant cross docking quantity exceeds the ordered quantity.
        #/// </summary>
        #void checkCrossdocking()
        #{
        #    RetailBuyersPushLine   buyersPushLine;
        #
        #    select firstonly buyersPushLine
        #    where buyersPushLine.RefRecId == this.RecId;
        #
        #    if (buyersPushLine && (buyersPushLine.totalQty() > this.PurchQty))
        #    {
        #        info(strFmt("@RET820",this.PurchId));
        #    }
        #}
      ENDSOURCE
      SOURCE #checkCurrencyCode
        #boolean  checkCurrencyCode()
        #{
        #    boolean  ok = true;
        #
        #    if (! Currency::exist(this.CurrencyCode))
        #    {
        #        ok = checkFailed(strFmt("@SYS1458", this.CurrencyCode));
        #    }
        #
        #    if (this.purchTable().CurrencyCode   != this.CurrencyCode)
        #    {
        #        ok = checkFailed("@SYS20793");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkCustomerRef
        #boolean  checkCustomerRef()
        #{
        #    boolean     ok = true;
        #    PurchLine   purchLine;
        #
        #    select count(RecId) from purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId             == this.PurchId
        #           && purchLine.DeliveryPostalAddress == this.DeliveryPostalAddress
        #           && purchLine.CustomerRef         != this.CustomerRef
        #           && purchLine.RecId               != this.RecId
        #           && !purchLine.IsDeleted;
        #
        #    if (purchLine.RecId)
        #    {
        #        ok = checkFailed("@SYS78581");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkCustomsTariffCode_IN
        #/// <summary>
        #/// Checks the customs tariff code to see if it is valid.
        #/// </summary>
        #/// <param name="_customsTariffCodeTableRecId">
        #/// The customs tariff code table rec id; optional.
        #/// </param>
        #/// <returns>
        #/// Returns true if the customs tariff code is valid.
        #/// </returns>
        #public boolean checkCustomsTariffCode_IN(RefRecId  _customsTariffCodeTableRecId = this.purchLine_IN().CustomsTariffCodeTable_IN)
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::checkCustomsTariffCode(_customsTariffCodeTableRecId, Direction_IN::Import);
        #}
      ENDSOURCE
      SOURCE #checkCustPurchaseOrderFormNum
        #boolean  checkCustPurchaseOrderFormNum()
        #{
        #    boolean     ok = true;
        #    PurchLine   purchLine;
        #
        #    select count(RecId) from purchLine
        #        index hint PurchLineIdx
        #        where purchLine.PurchId                     == this.PurchId
        #           && purchLine.DeliveryPostalAddress       == this.DeliveryPostalAddress
        #           && purchLine.CustPurchaseOrderFormNum    != this.CustPurchaseOrderFormNum
        #           && purchLine.RecId                       != this.RecId
        #           && !purchLine.IsDeleted;
        #
        #    if (purchLine.RecId)
        #    {
        #        ok = checkFailed("@SYS78581");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkDelete
        #boolean checkDelete(boolean _useWarning = true, PurchTable _purchTable = this.purchTable())
        #{
        #    return this.type(_purchTable).checkDelete(_useWarning);
        #}
      ENDSOURCE
      SOURCE #checkFullyDistributedAndQualified
        #/// <summary>
        #/// Checks if the purchase order line is fully distributed and fully qualified.
        #/// </summary>
        #/// <param name="_caller">
        #/// The calling source document processor.
        #/// </param>
        #/// <param name="_user">
        #/// The user that submitted the source document implementation for processing; optional.
        #/// </param>
        #/// <returns>
        #/// true if the purchase order line is fully distributed and qualified; otherwise, false.
        #/// </returns>
        #boolean checkFullyDistributedAndQualified(
        #    SourceDocumentProcessorCaller           _caller = null,
        #    UserId                                  _user = curUserId()
        #    )
        #{
        #    SourceDocumentLine  sourceDocumentLine = this.sourceDocumentLine();
        #
        #    if (sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::Draft
        #        || sourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::PartlyDistributed)
        #    {
        #        // Make sure the line is fully distributed
        #        SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(
        #            this, true, SourceDocumentLineAccountingStatus::FullyDistributed, _caller, _user);
        #    }
        #
        #    // Check that line distributions are fully qualified.
        #    return SourceDocumentProvider::areSourceDocLineAccDistAccountValid(
        #        SourceDocumentLine::find(this.SourceDocumentLine), true, true);
        #}
      ENDSOURCE
      SOURCE #checkIfInvoiceRegistered_IN
        #/// <summary>
        #/// Checks if the invoice is registered.
        #/// </summary>
        #/// <returns>
        #/// Returns true if the invoice is registered.
        #/// </returns>
        #public boolean checkIfInvoiceRegistered_IN()
        #{
        #    boolean ok = true;
        #
        #    if (PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes
        #        && CustomsInvoiceRegnTrans_IN::findByPurchLineRecId(this.RecId).RecId != 0)
        #    {
        #        ok = checkFailed("@GLS5764");
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkInitFromInventTable
        #boolean  checkInitFromInventTable(InventTable inventTable)
        #{
        #    return this.SalesPurchLine::checkInitFromInventTable(inventTable);
        #}
      ENDSOURCE
      SOURCE #checkIntrastat
        #/// <summary>
        #///   Validates the intrastat setting on the item assosiated to the order line.
        #/// </summary>
        #/// <returns>
        #///   true if the validation passes; Otherwise, false.
        #/// </returns>
        #public boolean checkIntrastat()
        #{
        #    VendTable            vendTable;
        #    IntrastatParameters  intrastatParameters;
        #    InventTable          inventTable;
        #    boolean              ret = true;
        #    boolean              checkIntrastatLT;
        #    PurchLineForeignTradeCategory   purchLineForeignTradeCategory;
        #    #ISOCountryRegionCodes
        #
        #    vendTable           = VendTable::find(this.purchTable().OrderAccount);
        #    intrastatParameters = IntrastatParameters::find();
        #    inventTable         = this.inventTable();
        #
        #    if (! inventTable.IntrastatExclude
        #        //only perform check when vendor is from an EU country
        #        && IntrastatCountryRegionParameters::isInEU(vendTable.countryRegionId()))
        #    {
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]))
        #        {
        #            if (intrastatParameters.IntrastatFulfillmentDateEmptyWarning_HU && ! this.IntrastatFulfillmentDate_HU)
        #            {
        #                ret = checkFailed(strFmt("@SYS4080006", fieldPName(PurchLine, IntrastatFulfillmentDate_HU), this.InventTransId));
        #            }
        #        }
        #
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]))
        #        {
        #            if (this.ItemId)
        #            {
        #                checkIntrastatLT = Intrastat::isIntrastatLine(InventTable::find(this.ItemId));
        #            }
        #            else if (this.isCategoryBased())
        #            {
        #                purchLineForeignTradeCategory = PurchLineForeignTradeCategory::findpurchLine(this);
        #
        #                if (purchLineForeignTradeCategory.ItemCodeId)
        #                {
        #                    checkIntrastatLT = Intrastat::isIntrastatLine(purchLineForeignTradeCategory);
        #                }
        #            }
        #
        #            if (checkIntrastatLT)
        #            {
        #                if (intrastatParameters.State             && ! this.deliveryAddress().State)
        #                {
        #                    ret = checkFailed("@SYS57801");
        #                }
        #
        #                if (intrastatParameters.TransactionCode   && ! this.TransactionCode)
        #                {
        #                    ret = checkFailed(strFmt("@SYS27175"));
        #                }
        #
        #                if (intrastatParameters.TransportMode     && ! this.Transport)
        #                {
        #                    ret = checkFailed(strFmt("@GLS107639"));
        #                }
        #
        #                if (intrastatParameters.Port              && ! this.Port)
        #                {
        #                    ret = checkFailed(strFmt("@GLS107640"));
        #                }
        #
        #                if (this.ItemId)
        #                {
        #                    if (intrastatParameters.Weight            && ! inventTable.NetWeight)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107646", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.IntrastatItemcode && ! inventTable.Intracode)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107643", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.AdditionalUnit    && ! inventTable.IntraUnit)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107644", inventTable.ItemId));
        #                    }
        #
        #                    if (intrastatParameters.OrigCountryRegion && ! inventTable.OrigCountryRegionId)
        #                    {
        #                        ret = checkFailed(strFmt("@GLS107645", inventTable.ItemId));
        #                    }
        #                }
        #                else
        #                {
        #                    if (intrastatParameters.Weight            && ! purchLineForeignTradeCategory.UnitWeight)
        #                    {
        #                        ret = checkFailed(strFmt("@SYS4082092", this.ProcurementCategory));
        #                    }
        #
        #                    if (intrastatParameters.OrigCountryRegion && ! purchLineForeignTradeCategory.OrigCountryRegionId)
        #                    {
        #                        ret = checkFailed(strFmt("@SYS4082093", this.ProcurementCategory));
        #                    }
        #                }
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkInventReceivedNow
        #/// <summary>
        #/// Indicates whether the received now quantity is valid.
        #/// </summary>
        #/// <returns>
        #/// true if the received now quantity is valid; otherwise, false.
        #/// </returns>
        #boolean checkInventReceivedNow()
        #{
        #    boolean  ok = true;
        #
        #    if (this.QtyOrdered * this.InventReceivedNow < 0)
        #    {
        #        ok = checkFailed("@SYS323005");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkItemId
        #public server boolean checkItemId()
        #{
        #    boolean  ok = true;
        #    EcoResProductValidator productValidator;
        #    ItemId                 origItemId = this.orig().ItemId;
        #    InventTable            inventable = this.inventTable();
        #
        #
        #    if (origItemId
        #        && origItemId != this.ItemId
        #        && this.InventTransId
        #        && this.RecId)
        #    {
        #        ok = checkFailed("@SYS19376");
        #    }
        #
        #    if (this.ItemId
        #        && this.InventDimId != InventDim::inventDimIdBlank()
        #        && !inventable.inventItemPurchSetup(this.InventDimId).checkNotStopped(false))
        #    {
        #        ok = false;
        #    }
        #
        #    if (this.purchTable().isInterCompanyOrder()  &&  (!this.ItemId || inventable.interCompanyBlockedPurch()))
        #    {
        #        ok = checkFailed(strFmt("@SYS74812", this.ItemId));
        #    }
        #
        #    if (this.ItemId)
        #    {
        #        productValidator = EcoResProductValidator::construct(inventable);
        #        if (!productValidator.isEssentialFieldValuesSet())
        #        {
        #            ok = checkFailed(strFmt("@SYS4000187", productValidator.getErrorFieldList(), this.ItemId));
        #
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkItemPBAId
        #boolean  checkItemPBAId()
        #{
        #    boolean  ok = true;
        #
        #    if ( new DictConfigurationKey( configurationKeyNum( PBA_ProductBuilder ) ).enabled() )
        #    {
        #        if ( InventTable::find( this.ItemId ).pbaItemConfigurable == NoYes::Yes )
        #        {
        #            if ( ! PBAVersion::existsVersion(this.ItemId,this.ItemPBAId) )
        #            {
        #                ok = checkFailed(strFmt("@SYS41402",this.ItemPBAId, this.ItemId));
        #            }
        #        }
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkLine_RU
        #boolean checkLine_RU()
        #{
        #    boolean                 ret = true;
        #    CustomJournalTrans_RU   customJournalTrans;
        #    CustomJournalTable_RU   customJournalTable;
        #    container               customJournalTables;
        #    UnitOfMeasureSymbol     unitIdTo;
        #    Qty                     remainPurchPhysical, customJournalQty;
        #    List                    dimensionBoolean = new List(Types::Integer);
        #
        #    CustomJournalTrans_RU   customJournalTransUpdate;
        #    DialogButton            updateDimension;
        #
        #    if (this.RecId == 0 || ! this.InventTransId)
        #    {
        #        return true;
        #    }
        #
        #    while select sum(Qty) from customJournalTrans group by CustomJournalId
        #        where customJournalTrans.SalesPurchInventTransId            == this.InventTransId
        #            exists join customJournalTable
        #                where customJournalTable.CustomJournalId            == customJournalTrans.CustomJournalId &&
        #                      customJournalTable.CustomJournalType          == CustomJournalType_RU::Import       &&
        #                      customJournalTable.CustomInventTransStatus    == CustomInventTransStatus_RU::Ordered
        #    {
        #        customJournalQty    += customJournalTrans.Qty;
        #        customJournalTables += customJournalTrans.CustomJournalId;
        #    }
        #    if (ret && customJournalQty != 0)
        #    {
        #        setPrefix(strFmt("@GLS115270", con2Str(customJournalTables)));
        #        ret = (Box::yesNo(strFmt("@GLS115271", con2Str(customJournalTables)), DialogButton::No, "@GLS111162") == DialogButton::Yes);
        #
        #        unitIdTo            = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent).UnitId;
        #        remainPurchPhysical = this.RemainPurchPhysical + (this.PurchQty - this.orig().PurchQty);
        #        if (InventTable::unitConvert(this.ItemId, this.PurchUnit, unitIdTo, unitIdTo, remainPurchPhysical) < customJournalQty)
        #        {
        #            error(strFmt("@GLS115274", remainPurchPhysical,
        #                                        this.PurchUnit,
        #                                        customJournalQty,
        #                                        unitIdTo));
        #            this.QtyOrdered = this.orig().QtyOrdered;
        #            this.PurchQty   = this.orig().PurchQty;
        #        }
        #        if (this.PurchPrice != this.orig().PurchPrice)
        #        {
        #            checkFailed(strFmt("@GLS115277"));
        #            this.PurchPrice = this.orig().PurchPrice;
        #            this.LineAmount = this.calcLineAmount();
        #        }
        #
        #        if (this.DefaultDimension != this.orig().DefaultDimension)
        #        {
        #            updateDimension = Box::yesNoCancel(strFmt("@GLS115280", con2Str(customJournalTables)), DialogButton::Cancel, "@GLS111162");
        #            switch (updateDimension)
        #            {
        #                case DialogButton::Yes:
        #                    ttsbegin;
        #
        #                    while select forupdate customJournalTransUpdate
        #                        where customJournalTransUpdate.SalesPurchInventTransId      == this.InventTransId
        #                            exists join customJournalTable
        #                                where customJournalTable.CustomJournalId            == customJournalTransUpdate.CustomJournalId &&
        #                                      customJournalTable.CustomJournalType          == CustomJournalType_RU::Import             &&
        #                                      customJournalTable.CustomInventTransStatus    == CustomInventTransStatus_RU::Ordered
        #                    {
        #                        customJournalTransUpdate.DefaultDimension = this.DefaultDimension;
        #                        customJournalTransUpdate.update();
        #                    }
        #
        #                    ttscommit;
        #                    break;
        #                case DialogButton::No       :
        #                    break;
        #                case DialogButton::Cancel   :
        #                    this.DefaultDimension = this.orig().DefaultDimension;
        #                    ret = checkFailed("@GLS115281");
        #                    break;
        #            }
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkLineNumber
        #/// <summary>
        #/// Indicates whether a line number is unique within the scope of an order; if it is not, issues an
        #/// error message.
        #/// </summary>
        #/// <returns>
        #/// true if the line number is unique; otherwise, false.
        #/// </returns>
        #public boolean checkLineNumber()
        #{
        #    boolean ret = true;
        #
        #    if (ret)
        #    {
        #        ret = TradeLineNumberManager::newLine(this).checkLineNumber();
        #    }
        #
        #    if (ret
        #     && this.LineDeliveryType == LineDeliveryType::DeliveryLine
        #     && PurchDeliverySchedule::findOrderLineForDeliveryLine(this.InventTransId).LineNumber > this.LineNumber)
        #    {
        #        ret = checkFailed(strFmt("@SYS319727", this.LineNumber));
        #    }
        #
        #    if (ret
        #     && this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #     && this.TradeLineNumbering::getNextLineNumber(this.orig().LineNumber) < this.LineNumber)
        #    {
        #        ret = checkFailed(strFmt("@SYS319727", this.LineNumber));
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMarkupCode_RU
        #/// <summary>
        #/// Checks values of markup related fields
        #/// </summary>
        #/// <returns>
        #/// True if check succeed;otherwise false
        #/// </returns>
        #public boolean checkMarkupCode_RU()
        #{
        #    boolean     ret = true;
        #    MarkupTable markupTable;
        #    PurchLine_W purchLine_W;
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (this.isMarkupCodeEnabled_RU())
        #        {
        #            if (purchLine_W.MarkupCode_RU)
        #            {
        #                markupTable = MarkupTable::find(MarkupModuleType::Vend, purchLine_W.MarkupCode_RU);
        #
        #                if (markupTable.CustType != MarkupType::LedgerAccount)
        #                {
        #                    ret = checkFailed(strFmt("@SYS95333", fieldPName(MarkupTable, CustType), MarkupType::LedgerAccount));
        #                }
        #                if (markupTable.VendType != MarkupType::CustVend)
        #                {
        #                    ret = checkFailed(strFmt("@SYS95333", fieldPName(MarkupTable, VendType), MarkupType::CustVend));
        #                }
        #            }
        #        }
        #        else
        #        {
        #            if (purchLine_W.MarkupCode_RU)
        #            {
        #                ret = checkFailed(strFmt("@SYS95333", fieldPName(PurchLine_W, MarkupCode_RU)), "@SYS19186");
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkMatchingPolicy
        #/// <summary>
        #/// Specifies whether the matching policy can be changed.
        #/// </summary>
        #/// <returns>
        #/// true if the changed matching policy is valid; otherwise, false.
        #/// </returns>
        #public boolean checkMatchingPolicy()
        #{
        #    boolean ok = true;
        #
        #    if (!this.RecId || this.MatchingPolicy != this.orig().MatchingPolicy)
        #    {
        #        if (PurchMatchingPolicyManager::canMatchingPolicyBeChanged(this.MatchingPolicy) == false)
        #        {
        #            ok = checkFailed(strFmt("@SYS130454", VendParameters::find().MatchingPolicy));
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkMaximumRetailPrice_IN
        #/// <summary>
        #/// This method is used to check the Maximum retail price.
        #/// </summary>
        #/// <param name="_maximumRetailPrice">
        #/// A maximum retail price.
        #/// </param>
        #/// <returns>
        #/// Returns true if maximum return price is greater than zero.
        #/// </returns>
        #public boolean  checkMaximumRetailPrice_IN(Price  _maximumRetailPrice = this.purchLine_IN().MaximumRetailPrice_IN)
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::checkMaximumRetailPrice(_maximumRetailPrice);
        #}
      ENDSOURCE
      SOURCE #checkOperationType_MX
        #public boolean checkOperationType_MX()
        #{
        #    boolean ok = true;
        #    boolean                     doNot;
        #    if (this.OperationType_MX == VendorOperationType_MX::Blank)
        #    {
        #        doNot = true;
        #//        ok = checkFailed("@SYS312596");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkOverDelivery
        #boolean  checkOverDelivery()
        #{
        #    boolean  ok = true;
        #
        #    if (this.OverDeliveryPct < 0)
        #    {
        #        ok = checkFailed("@SYS26776");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPostingProfile_RU
        #boolean checkPostingProfile_RU()
        #{
        #    boolean                         ok = true;
        #    InventProfileCustVendLedger_RU  inventProfileCustVendLedger;
        #    Set                             inventProfileTypeSet = new Set(Types::Enum);
        #    PurchLine_W                     purchLine_W = this.purchLine_W();
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        purchLine_W.PostingProfile_RU              &&
        #        this.inventDim().InventProfileId_RU &&
        #        (!purchLine_W.orig() || purchLine_W.PostingProfile_RU != purchLine_W.orig().PostingProfile_RU))
        #    {
        #        while select InventProfileTypeAll, InventProfileId, InventProfileType
        #            from inventProfileCustVendLedger
        #            order by InventProfileTypeAll asc
        #            where inventProfileCustVendLedger.VendPostingProfile == purchLine_W.PostingProfile_RU
        #        {
        #            switch(inventProfileCustVendLedger.InventProfileTypeAll)
        #            {
        #                case InventProfileTypeAll_RU::Profile:
        #                    inventProfileTypeSet.add(InventProfile_RU::find(inventProfileCustVendLedger.InventProfileId).InventProfileType);
        #                    break;
        #                case InventProfileTypeAll_RU::Type:
        #                    inventProfileTypeSet.add(inventProfileCustVendLedger.InventProfileType);
        #                    break;
        #            }
        #        }
        #
        #        if (! inventProfileTypeSet.in(this.inventDim().inventProfile_RU().InventProfileType))
        #        {
        #            ok = checkFailed("@GLS113766");
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPriceDate
        #/// <summary>
        #/// Triggers price recalculation after a date change according to the <c>PurchPriceDateType</c>
        #/// enumeration value.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the <c>PurchLine</c> table that changed.
        #/// </param>
        #/// <remarks>
        #/// The <c>PurchPriceDateType</c> enumeration value can be set to a <c>Today</c> or <c>DeliveryDate</c>
        #/// value.
        #/// </remarks>
        #void checkPriceDate(FieldId _fieldId)
        #{
        #    PurchParameters purchParameters = PurchParameters::find();
        #
        #    if (purchParameters.PriceDateType == PurchPriceDateType::DeliveryDate
        #        && _fieldId == fieldNum(PurchLine, DeliveryDate)
        #        && !this.isLinkedToAgreement())
        #    {
        #        PurchLine::modifyPurchQty(this, this.inventDim());
        #    }
        #}
      ENDSOURCE
      SOURCE #checkProcurementCategory
        #/// <summary>
        #/// Validates that the <c>ProcurementCategory</c> field is filled correctly.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>ProcurementCategory</c> field is filled correctly; otherwise, false.
        #/// </returns>
        #boolean checkProcurementCategory()
        #{
        #    // Check that the hierarchy matches the module
        #    return !this.ProcurementCategory
        #        || EcoResCategory::checkCategoryRole(this.ProcurementCategory, EcoResCategoryNamedHierarchyRole::Procurement);
        #}
      ENDSOURCE
      SOURCE #checkProjCategory
        #boolean checkProjCategory()
        #{
        #    boolean         ok = true;
        #    ProjCategory    projCategory;
        #
        #    if (this.ProjCategoryId)
        #    {
        #        projCategory = ProjCategory::find(this.ProjCategoryId);
        #
        #        if (this.ItemId)
        #        {
        #            if (projCategory.CategoryType != ProjCategoryType::Item)
        #            {
        #                ok = checkFailed(strFmt("@SYS54897",this.ProjCategoryId));
        #            }
        #        }
        #        else
        #        {
        #            if (projCategory.CategoryType == ProjCategoryType::Revenue)
        #            {
        #                ok = checkFailed(strFmt("@SYS54897",this.ProjCategoryId));
        #            }
        #        }
        #
        #        ok = ok && projCategory.validateIfInactiveAllowed();
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchCommitmentLine
        #/// <summary>
        #/// Performs validations for the commitment line reference on the purchase order line.
        #/// </summary>
        #/// <returns>
        #/// true if the commitment line reference is valid; otherwise, false
        #/// </returns>
        #public boolean checkPurchCommitmentLine()
        #{
        #    FiscalCalendarYear          fiscalCalendarYear;
        #    PurchCommitmentLine_PSN     purchCommitmentLine = this.getPurchCommitmentLine_PSN();
        #    PurchCommitmentHeader_PSN   purchCommitmentHeader = purchCommitmentLine.getPurchCommitmentHeader_PSN();
        #    str                         error = "@SPS2134";
        #
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        //Verify that the vendor account on the PO matches the vendor account on the commitment.
        #        if (!this.checkCommitmentVendorMatchesOrderAccount())
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //Verify that the commitment line is of the current fiscal year
        #        fiscalCalendarYear = FiscalCalendarYear::findYearByCalendarDate(Ledger::fiscalCalendar(CompanyInfo::find().RecId), this.purchTable().AccountingDate);
        #
        #        if (purchCommitmentLine.LineDate < fiscalCalendarYear.StartDate ||
        #            purchCommitmentLine.LineDate > fiscalCalendarYear.EndDate)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //Verify that the entered commitment header has a status of complete.
        #        if (purchCommitmentHeader.DocumentStatus != PurchCommitmentDocumentStatus_PSN::Complete)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        //
        #        //Verify that the Purchase Agreement Line on the commitment document
        #        //line matches the Purchase Order Line Purchase Agreement field, if present
        #        //
        #        if (this.MatchingAgreementLine != 0 && this.MatchingAgreementLine != purchCommitmentLine.AgreementLine)
        #        {
        #            return checkFailed(error);
        #        }
        #
        #        // validate that the source document line state is complete for the commitment line.
        #        if (purchCommitmentLine.getSourceDocumentLine().AccountingStatus != SourceDocumentLineAccountingStatus::Completed)
        #        {
        #            return checkFailed(error);
        #        }
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkPurchQty
        #boolean  checkPurchQty()
        #{
        #    boolean  ok = true;
        #
        #    if ((this.PurchQty  != 0     && this.QtyOrdered   == 0)     ||
        #        (this.PurchQty  == 0     && this.QtyOrdered   != 0)    )
        #    {
        #        ok = checkFailed(strFmt("@SYS18441",this.PurchId));
        #    }
        #    else
        #    {
        #        if (this.PurchQty  * this.QtyOrdered   < 0)
        #        {
        #            ok = checkFailed(strFmt("@SYS18442",this.PurchId));
        #        }
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchReceivedNow
        #/// <summary>
        #/// Indicates whether the received now quantity is valid.
        #/// </summary>
        #/// <returns>
        #/// true if the received now quantity is valid; otherwise, false.
        #/// </returns>
        #boolean checkPurchReceivedNow()
        #{
        #    boolean  ok = true;
        #
        #    if (this.PurchQty * this.PurchReceivedNow < 0)
        #    {
        #        ok = checkFailed("@SYS323005");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkPurchType
        #boolean  checkPurchType()
        #{
        #    if (this.purchTable().PurchaseType   != this.PurchaseType)
        #    {
        #        return checkFailed("@SYS17095");
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkPurchUnit
        #boolean checkPurchUnit()
        #{
        #    boolean  ok = true;
        #
        #    if (!UnitOfMeasureConverter::canBeConverted(
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(InventTable::find(this.ItemId).inventUnitId()),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            InventTable::itemProduct(this.ItemId)))
        #        ok = checkFailed(strFmt("@SYS28690", InventTable::find(this.ItemId).inventUnitId(), this.PurchUnit));
        #
        #    if (this.orig()
        #    &&  this.orig().PurchUnit != this.PurchUnit
        #    &&  this.orig().PurchQty  != this.RemainPurchPhysical)
        #    {
        #        ok = checkFailed("@SYS81896");
        #    }
        #
        #    if (this.RecId
        #        && this.PurchUnit != this.orig().PurchUnit
        #        && (   this.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries
        #            || this.LineDeliveryType == LineDeliveryType::DeliveryLine))
        #    {
        #        // Unit cannot be changed on a Delivery Schedule.
        #        ok = checkFailed("@SYS131415");
        #    }
        #
        #    if (ok)
        #    {
        #        ok = this.type().checkPurchUnit();
        #    }
        #
        #    if (ok)
        #    {
        #        ok = this.runPriceDiscPolicyDialog();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkRBOPackage
        #/// <summary>
        #///   Checks whether a package line have more than one related purchase order line.
        #/// </summary>
        #/// <param name="_purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="_packageId">
        #///   A <c>RetailPackageId</c>.
        #/// </param>
        #/// <param name="_lineNum">
        #///   A <c>LineNum</c>.
        #/// </param>
        #/// <returns>
        #///   true if a package line does not have more than one related purchase order line; otherwise, false.
        #/// </returns>
        #boolean checkRBOPackage(PurchId _purchId, RetailPackageId _packageId,LineNum _lineNum)
        #{
        #    PurchLine   purchLine;
        #
        #    if (_purchId && _packageId && _lineNum)
        #    {
        #        select count(rboPackageLineNum) from purchLine
        #        index hint RBOPackageIdx
        #        where purchLine.PurchId           == _purchId   &&
        #              purchLine.RetailPackageId      == _packageId &&
        #              purchLine.rboPackageLineNum == _lineNum;
        #
        #        if (purchLine.rboPackageLineNum > 1)
        #            return checkFailed(strFmt("@RET4768",_packageId));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkReqActivity
        #boolean checkReqActivity()
        #{
        #    RequireActivity             requireActivity;
        #    boolean                     ret = true;
        #
        #    requireActivity = ProjTable::checkRequireActivity(this.ProjId,tableNum(ProjItemTrans));
        #    if (requireActivity && (!this.ActivityNumber))
        #    {
        #        ret = false;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #checkStatusChange
        #/// <summary>
        #/// Checks whether it is allowed to change to status on the order line.
        #/// </summary>
        #/// <returns>
        #/// true if change of status is allowed; otherwise, false.
        #/// </returns>
        #public boolean checkStatusChange()
        #{
        #    boolean ok = true;
        #    PurchLine origPurchLine = PurchLine::findRecId(this.RecId); //this.orig() cannot be used in all scenarios.
        #
        #    if (origPurchLine.RecId
        #        && this.PurchStatus              == PurchStatus::Backorder
        #        && (origPurchLine.PurchStatus    == PurchStatus::Invoiced
        #        ||  origPurchLine.PurchStatus    == PurchStatus::Canceled)
        #        && origPurchLine.isStocked() != this.inventTable().isStocked())
        #    {
        #        ok = checkFailed(strFmt("@SYS324424", fieldPName(InventModelGroup, StockedProduct)));
        #    }
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkStockedProduct
        #/// <summary>
        #/// Indicates whether the <c>StockedProduct</c> field is not set for category based lines.
        #/// </summary>
        #/// <returns>
        #/// true if the <c>StockedProduct</c> field is set to a valid value; otherwise, false.
        #/// </returns>
        #boolean  checkStockedProduct()
        #{
        #    boolean  ok = true;
        #
        #    if (this.isStocked() && this.isCategoryBased())
        #    {
        #        ok = checkFailed("@SYS134348");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkTaxItemGroup
        #boolean  checkTaxItemGroup()
        #{
        #    if (this.TaxItemGroup   && ! TaxItemGroupHeading::exist(this.TaxItemGroup))
        #    {
        #        return checkFailed(strFmt("@SYS21973", this.TaxItemGroup));
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #checkTaxServiceCode_BR
        #/// <summary>
        #/// It validates if TaxServiceCode is required
        #/// </summary>
        #/// <returns>
        #/// It returns true if TaxServiceCode is acceptable (service item).
        #/// </returns>
        #public boolean checkTaxServiceCode_BR()
        #{
        #    boolean ok = true;
        #
        #    if (this.TaxServiceCode_BR
        #        && this.inventTable().ItemType != ItemType::Service)
        #    {
        #        ok = checkFailed("@GLS60421");
        #    }
        #
        #    return ok;
        #}
        #
      ENDSOURCE
      SOURCE #checkUnderDelivery
        #boolean  checkUnderDelivery()
        #{
        #    boolean  ok = true;
        #
        #    if (this.UnderDeliveryPct > 100)
        #    {
        #        ok = checkFailed("@SYS26778");
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #checkUpdatePhysical
        #boolean checkUpdatePhysical()
        #{
        #    return this.type().checkUpdatePhysical();
        #}
      ENDSOURCE
      SOURCE #checkVendorName_IN
        #/// <summary>
        #/// Reads the table buffer and check the existence of record.
        #/// </summary>
        #/// <param name="_location">
        #/// The field is used to find the record.
        #/// </param>
        #/// <param name="_vendAccount">
        #/// The field is used to find the record.
        #/// </param>
        #/// <returns>
        #/// Returns the boolean value.
        #/// </returns>
        #public boolean checkVendorName_IN(LogisticsLocationRecId    _location = this.purchLine_IN().VendorLocation_IN,
        #                                  VendAccount               _vendAccount = this.VendAccount)
        #{
        #    return  this.purchLineView_IN().SalesPurchJournalLine_IN::checkVendorName(_location, _vendAccount);
        #}
      ENDSOURCE
      SOURCE #clearAddressReference
        #public void clearAddressReference()
        #{
        #    this.AddressRefRecId    = 0;
        #    this.AddressRefTableId  = 0;
        #}
      ENDSOURCE
      SOURCE #clearAllPriceDiscChangePolicies
        #/// <summary>
        #/// Clears all of the stored <c>PriceDiscChangePolicy</c> instances for the <c>PurchLine</c> table.
        #/// </summary>
        #/// <remarks>
        #/// Removes policies from both the manual and system groups.
        #/// </remarks>
        #void clearAllPriceDiscChangePolicies()
        #{
        #    PurchLineType purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.clearAllPriceDiscChangePolicies();
        #}
      ENDSOURCE
      SOURCE #clearingPeriod
        #//BP Deviation Documented
        #display ClearingPeriod clearingPeriod()
        #{
        #    return this.purchTable().payer().clearingPeriod();
        #}
      ENDSOURCE
      SOURCE #clearInventReference
        #/// <summary>
        #/// Clears the inventory reference fields on the <c>PurchLine</c> record.
        #/// </summary>
        #public void clearInventReference()
        #{
        #    this.InventRefTransId  = '';
        #    this.InventRefId       = '';
        #    this.ItemRefType       = InventRefType::None;
        #}
      ENDSOURCE
      SOURCE #companyInfo
        #/// <summary>
        #/// Retrieves the <c>CompanyInfo</c> record associated with the current record.
        #/// </summary>
        #/// <returns>
        #/// The <c>CompanyInfo</c> record.
        #/// </returns>
        #public CompanyInfo companyInfo()
        #{
        #    return CompanyInfo::findDataArea(this.company());
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode
        #server void convertCurrencyCode(CurrencyCode currencyCode, TradeCurencyConversion tradeCurrencyConversion = TradeCurencyConversion::ExchRate,TransDate _exchRateDate = systemDateGet())
        #{
        #    MarkupTrans     markupTrans;
        #    AgreementLine   linkedAgreementLine;
        #
        #    PurchLine_IN    purchLine_IN;
        #    #ISOCountryRegionCodes
        #
        #    ttsbegin;
        #
        #    while select forupdate markupTrans
        #          where markupTrans.TransTableId  == this.TableId &&
        #                markupTrans.TransRecId    == this.RecId   &&
        #               !markupTrans.IsDeleted
        #    {
        #        markupTrans.convertCurrencyCode(currencyCode,_exchRateDate);
        #        markupTrans.IsModified = NoYes::Yes;
        #        markupTrans.doUpdate();
        #    }
        #
        #    this.PurchPrice   = Currency::curPrice2CurPrice(this.PurchPrice, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.LineDisc     = Currency::curPrice2CurPrice(this.LineDisc, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.MultiLnDisc  = Currency::curPrice2CurPrice(this.MultiLnDisc, this.CurrencyCode, currencyCode,_exchRateDate);
        #    this.DiscAmount   = this.discAmount();
        #    this.PurchMarkup  = Currency::curPrice2CurPrice(this.PurchMarkup, this.CurrencyCode, currencyCode,_exchRateDate);
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.convertCurrencyCode_IN(currencyCode);
        #    }
        #    if (this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries)
        #    {
        #        this.LineAmount   = Currency::curAmount2CurAmount(this.LineAmount, this.CurrencyCode, currencyCode,_exchRateDate);
        #    }
        #    this.CurrencyCode = currencyCode;
        #
        #    switch(tradeCurrencyConversion)
        #    {
        #        case TradeCurencyConversion::ExchRate:
        #            break;
        #        case TradeCurencyConversion::TradeAgreements:
        #            if (this.LineDeliveryType == LineDeliveryType::DeliveryLine)
        #            {
        #                this.LineAmount = this.calcLineAmountForced();
        #            }
        #            else
        #            {
        #                this.SalesPurchLine::resetPriceAgreement();
        #                this.setPriceDisc(this.inventDim());
        #            }
        #            break;
        #    }
        #    this.LineAmount   = this.calcLineAmount();
        #
        #    if (   this.LineDeliveryType != LineDeliveryType::DeliveryLine
        #        && this.MatchingAgreementLine)
        #    {
        #        // Agreement line should NOT be un-linked if it is Quantity-based AND has IsPriceInformationMandatory set to false!
        #        linkedAgreementLine = AgreementLine::find(this.MatchingAgreementLine, false);
        #
        #        if (   linkedAgreementLine.RecId
        #            && ( (linkedAgreementLine.isQuantityBased() == false) || linkedAgreementLine.IsPriceInformationMandatory))
        #        {
        #            this.unLinkAgreementLine();
        #        }
        #    }
        #
        #    // <GIN>
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs))
        #    {
        #        if(PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN != NoYes::Yes)
        #        {
        #            purchLine_IN = this.purchLine_IN();
        #            purchLine_IN.AssessableValue_IN = this.getMiscChargesAmount_IN();
        #            this.packPurchLine_IN(purchLine_IN);
        #        }
        #        else
        #        {
        #            this.convertCurrencyCode_IN(currencyCode);
        #        }
        #    }
        #    // </GIN>
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #convertCurrencyCode_IN
        #/// <summary>
        #/// This method is used to get the value in the converted currency.
        #/// </summary>
        #/// <param name="_currencyCode">
        #/// A currency code for conversion.
        #/// </param>
        #// <GIN>
        #public server void convertCurrencyCode_IN(CurrencyCode _currencyCode)
        #{
        #    CustomsImportAssessableValue_IN customsImportAssessableValue;
        #    MarkupValue                     value;
        #    CustomsAmount_IN                landingCharges;
        #    PurchLine_IN                    purchLine_IN = this.purchLine_IN();
        #
        #    purchLine_IN.MaximumRetailPrice_IN = Currency::curPrice2CurPrice(purchLine_IN.MaximumRetailPrice_IN, this.CurrencyCode, _currencyCode);
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
        #    {
        #        customsImportAssessableValue = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId);
        #        if (customsImportAssessableValue.RecId != 0)
        #        {
        #            ttsbegin;
        #            customsImportAssessableValue.selectForUpdate(true);
        #            customsImportAssessableValue.Amount = this.LineAmount;
        #            customsImportAssessableValue.Value  = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            customsImportAssessableValue.update();
        #            ttscommit;
        #            purchLine_IN.AssessableValue_IN = CustomsImportAssessableValue_IN::findInventTransId(this.InventTransId).invoiceAssessableValue();
        #        }
        #        else
        #        {
        #            value                                          = CustomsImportAssessableValue_IN::getMarkupValue(this.TableId, this.RecId, this.InventTransId);
        #            landingCharges                                 = (this.LineAmount + value) * VendParameters::find().CustomsLandingChargesPct_IN/100;
        #            purchLine_IN.AssessableValue_IN                = this.LineAmount + value + landingCharges;
        #            purchLine_IN.AssessableValueAccountingCurrency = TaxAssessableValueHandler_IN::calcAssessableValueAccountingCurrency(purchLine_IN.AssessableValue_IN, this.CurrencyCode, this.purchTable().AccountingDate);
        #        }
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #// </GIN>
        #
      ENDSOURCE
      SOURCE #copyDimension
        #/// <summary>
        #/// Retrieves a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </summary>
        #/// <param name="_defaultDimension">
        #/// A dimension set to apply to the <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_dimensionCopy">
        #/// A <c>dimensionCopy</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten.
        #/// </remarks>
        #
        #public DimensionDefault copyDimension(
        #    DimensionDefault _defaultDimension,
        #    DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
        #                                                                  this.companyInfo().RecId
        #                                                                  )
        #    )
        #{
        #    return _dimensionCopy.copy(_defaultDimension);
        #}
      ENDSOURCE
      SOURCE #copyFromPurchLineHistory
        #/// <summary>
        #/// Copies data from a <c>PurchLineHistory</c> record.
        #/// </summary>
        #/// <param name="_purchLineHistory">
        #/// A <c>PurchLineHistory</c> record to copy data from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #/// A Boolean value that indicates whether precise copy should be made.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #/// A Boolean value that indicates whether price and discount information should be copied.
        #/// </param>
        #/// <param name="_copyQty">
        #/// A Boolean value that indicates whether quantity should be copied.
        #/// </param>
        #/// <param name="_qty">
        #/// A quantity value to be used on the copied line.
        #/// </param>
        #/// <param name="_cwQty">
        #/// The CW quantity value to be used on the copied line.
        #/// </param>
        #server void  copyFromPurchLineHistory(PurchLineHistory       _purchLineHistory,
        #                                      boolean                _copyPrecisely = true,
        #                                      boolean                _copyPriceDisc = true,
        #                                      boolean                _copyQty       = true,
        #                                      Qty                    _qty           = _purchLineHistory.PurchQty
        #                                      , PdsCWInventQty       _cwQty         = _purchLineHistory.PdsCWQty
        #                                      )
        #{
        #    InventDim   inventDim;
        #
        #    this.initFromItemOrCategory(_purchLineHistory.ItemId, _purchLineHistory.ProcurementCategory, _purchLineHistory.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_purchLineHistory.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PdsCWQty           = _cwQty;
        #        this.PurchUnit          = _purchLineHistory.PurchUnit;
        #        this.QtyOrdered         = this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_purchLineHistory.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _purchLineHistory.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _purchLineHistory.PurchPrice;
        #        this.PriceUnit          = _purchLineHistory.PriceUnit;
        #        this.LinePercent        = _purchLineHistory.LinePercent;
        #        this.LineDisc           = _purchLineHistory.LineDisc;
        #        this.MultiLnDisc        = _purchLineHistory.MultiLnDisc;
        #        this.MultiLnPercent     = _purchLineHistory.MultiLnPercent;
        #        this.PurchMarkup        = _purchLineHistory.PurchMarkup;
        #        this.LineAmount         = _purchLineHistory.LineAmount;
        #        this.DiscAmount         = _purchLineHistory.DiscAmount;
        #        this.DiscPercent        = _purchLineHistory.DiscPercent;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.Name               = _purchLineHistory.Name;
        #        this.ExternalItemId     = _purchLineHistory.ExternalItemId;
        #        this.TaxGroup           = _purchLineHistory.TaxGroup;
        #        this.TaxItemGroup       = _purchLineHistory.TaxItemGroup;
        #        this.DefaultDimension   = _purchLineHistory.DefaultDimension;
        #        this.AccountingDistributionTemplate = _purchLineHistory.AccountingDistributionTemplate;
        #    }
        #    this.setAddressFromInventDim(this.inventDim());
        #}
      ENDSOURCE
      SOURCE #corItemName
        #/// <summary>
        #/// Returns the item name considering if the item is category based or not
        #/// </summary>
        #/// <returns>
        #/// Item name
        #/// </returns>
        #display public PurchLineShowItemName corItemName()
        #{
        #    PurchLineShowItemName itemName;
        #
        #    if (this.isCategoryBased())
        #    {
        #        itemName = this.Name;
        #    }
        #    else
        #    {
        #        itemName = this.itemName();
        #    }
        #    return itemName;
        #}
        #
      ENDSOURCE
      SOURCE #createAgreementLine
        #/// <summary>
        #/// Creates an agreement line
        #/// </summary>
        #/// <param name="_agreementLine">
        #/// A existing <c>AgreementLine</c> record
        #/// </param>
        #public void createAgreementLine(AgreementLine _agreementLine)
        #{
        #    PurchLine       agreementPurchLine;
        #
        #    agreementPurchLine.data(this);
        #    if (_agreementLine)
        #    {
        #        agreementPurchLine.initFromAgreementLine(_agreementLine);
        #        if (!_agreementLine.isLinkValid(agreementPurchLine, false))
        #        {
        #            _agreementLine = null;
        #        }
        #    }
        #
        #    ttsbegin;
        #
        #    if (!_agreementLine)
        #    {
        #        _agreementLine = AgreementLine::findLineForAutoMatch(agreementPurchLine, this.purchTable().MatchingAgreement, true);
        #        if (_agreementLine)
        #        {
        #            agreementPurchLine.initFromAgreementLine(_agreementLine);
        #        }
        #    }
        #
        #    if (_agreementLine)
        #    {
        #        agreementPurchLine.update();
        #        this.data(agreementPurchLine);
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #createFromTmpFrmVirtual
        #void createFromTmpFrmVirtual(PurchTable _purchTable, TmpFrmVirtual tmpFrmVirtual)
        #{
        #    boolean doSearchForAgreementLine = (_purchTable.MatchingAgreement != 0);
        #    while select tmpFrmVirtual
        #            where tmpFrmVirtual.Qty
        #    {
        #        try
        #        {
        #            this.clear();
        #            this.PurchId                = _purchTable.PurchId;
        #            this.ItemId                 = tmpFrmVirtual.ItemId;
        #            this.PurchQty               = tmpFrmVirtual.Qty;
        #            this.setInventDimId(tmpFrmVirtual.InventDimId);
        #            this.initVariantId(this.inventDim());
        #
        #            if (pdsIsCWItem(this.ItemId))
        #            {
        #                this.PdsCWQty = tmpFrmVirtual.PdsCWQty;
        #            }
        #
        #            this.createLine(true,  //  validation
        #                            true,  //  initFromPurchTable
        #                            true,  //  initFromInventTableModule
        #                            true,  //  calcInventQty
        #                            true,  //  searchMarkup
        #                            true,  //  searchPrice
        #                            true,  //  ignorePurchTableInventDim
        #                            doSearchForAgreementLine    //  searchAgreementLine
        #                            );
        #
        #            tmpFrmVirtual.delete();
        #        }
        #
        #        catch (Exception::Error)
        #        {
        #            checkFailed("@SYS18447");
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #createLine
        #server public void createLine(
        #    boolean _validation                  = false,
        #    boolean _initFromPurchTable          = false,
        #    boolean _initFromItemOrCategory      = false,
        #    boolean _calcInventQty               = false,
        #    boolean _searchMarkup                = true,
        #    boolean _searchPrice                 = false,
        #    boolean _ignorePurchTableInventDim   = false,
        #    boolean _searchAgreementLine         = false,
        #    boolean _setRemain                   = true,
        #    boolean _skipPurchTableUpdate        = false,
        #    boolean _skipInterCompanyCalcDisc    = false)
        #{
        #    #ISOCountryRegionCodes
        #
        #    PurchTable          purchTable;
        #    InventTable         inventTable;
        #    AgreementLine       agreementLine;
        #
        #    boolean             dropInvent = false;
        #    boolean             ok = true;
        #
        #    if (WHSInventEnabled::exist(this.ItemId) && !WHSFilter::vendFilterMatch(this.VendAccount, this.ItemId))
        #    {
        #        throw error("@WAX1003");
        #    }
        #
        #    if (_initFromPurchTable)
        #    {
        #        purchTable= this.purchTable();
        #        this.initFromPurchTable(purchTable, _ignorePurchTableInventDim);
        #    }
        #
        #    if (_initFromItemOrCategory)
        #    {
        #        if (this.ItemId)
        #        {
        #            inventTable= this.inventTable();
        #
        #            if (! this.checkInitFromInventTable(inventTable))
        #            {
        #                throw error("@SYS18447");
        #            }
        #        }
        #
        #        this.initFromItemOrCategory(this.ItemId, this.ProcurementCategory, this.Name);
        #    }
        #
        #    this.initFromVendTable(this.vendTable_OrderAccount());
        #
        #    if (_calcInventQty)
        #    {
        #        this.QtyOrdered = this.calcQtyOrdered();
        #    }
        #
        #    this.RemainPurchPhysical            = this.PurchQty;
        #    this.RemainPurchFinancial           = 0;
        #    this.RemainInventPhysical           = this.QtyOrdered;
        #    // 1877
        #    this.RemainInventFinancial = 0;
        #    // 1877
        #
        #    if (_setRemain && pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWRemainInventPhysical = this.PdsCWQty;
        #        this.PdsCWRemainInventFinancial = 0;
        #    }
        #    this.type().initReturn();
        #
        #    if (_searchPrice)
        #    {
        #        this.setPriceDisc(this.inventDim());
        #    }
        #
        #    if (_searchAgreementLine && this.canAgreementBeLinked())
        #    {
        #        if (!purchTable.RecId)
        #        {
        #            purchTable= this.purchTable();
        #        }
        #
        #        if (purchTable.MatchingAgreement)
        #        {
        #            agreementLine = AgreementLine::findLineForAutoMatch(this, purchTable.MatchingAgreement, true);
        #            if (agreementLine)
        #            {
        #                this.initFromAgreementLine(agreementLine);
        #            }
        #        }
        #    }
        #
        #    if (_validation)
        #        if (!this.validateWrite())
        #        {
        #            throw error("@SYS18447");
        #        }
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #        PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes &&
        #        CustomsVendBOETrans_IN::findPurchLineRecId(PurchLine::findInventTransId(this.InventRefTransId).RecId).RecId != 0 &&
        #        this.PurchId == this.InventRefId)
        #    {
        #        ok = checkFailed("@GLS5764");
        #    }
        #
        #    if (ok && #PdsApprovedVendorListEnabled)
        #    {
        #        ok = this.pdsCheckApprovedVendorList();
        #    }
        #
        #    if (ok)
        #    {
        #        this.insert(dropInvent,_searchMarkup,true, _skipPurchTableUpdate,_skipInterCompanyCalcDisc);
        #    }
        #}
        #
        #
      ENDSOURCE
      SOURCE #createMarkupTrans
        #/// <summary>
        #///     Creates markup transactions for the purchase line.
        #/// </summary>
        #/// <param name="purchTable">
        #///     A buffer of the <c>PurchTable</c> table.
        #/// </param>
        #/// <param name="_deleteExistingMarkupTrans">
        #///     A Boolean value that specifies whether to delete existing markup transactions; optional.
        #/// </param>
        #/// <param name="_markupGroupId">
        #///     A <c>MarkupGroupId</c> type specifing the markup group ID; optional.
        #/// </param>
        #server void  createMarkupTrans(
        #    PurchTable      purchTable,
        #    boolean         _deleteExistingMarkupTrans  = true,
        #    MarkupGroupId   _markupGroupId              = InventTableModule::find(this.ItemId,ModuleInventPurchSales::Purch).MarkupGroupId
        #
        #)
        #{
        #    Markup::insertMarkupTrans(HeadingLine::Linie,
        #                              MarkupModuleType::Vend,
        #                              this,
        #                              purchTable.OrderAccount,
        #                              purchTable.MarkupGroup,
        #                              purchTable.CurrencyCode,
        #                              purchTable.LanguageId,
        #                              this.ItemId,
        #                              _markupGroupId,
        #                             (this.LineAmount < 0), // invert sign on creditnotes
        #                              _deleteExistingMarkupTrans);
        #}
      ENDSOURCE
      SOURCE #creditNoteLine
        #boolean  creditNoteLine(PurchTable _purchTable = this.purchTable())
        #{
        #    return this.type(_purchTable).creditNoteLine();
        #}
      ENDSOURCE
      SOURCE #defaultCostPriceAsSalesPrice
        #private boolean defaultCostPriceAsSalesPrice()
        #{
        #    return ProjParameters::find().DefaultCostPriceAsSalesPrice && !this.ItemId;
        #}
      ENDSOURCE
      SOURCE #defaultingTax1099Amount
        #public void defaultingTax1099Amount()
        #{
        #    #ISOCountryRegionCodes
        #    if ((this.orig().LineAmount != this.LineAmount) && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]))
        #    {
        #        if (this.purchTable().vendTable_InvoiceAccount().Tax1099Reports)
        #        {
        #            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #            {
        #                if (this.Tax1099Fields)
        #                {
        #                    this.Tax1099Amount = this.LineAmount;
        #                }
        #                else
        #                {
        #                    this.Tax1099Amount = 0;
        #                }
        #            }
        #            else
        #            {
        #                this.Tax1099Amount = this.LineAmount;
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #delete
        #public void  delete(boolean _showInfoDelReserv = true, boolean deletePBA = true, boolean updateOrderLineOfDeliverySchedule = true)
        #{
        #    // <GIN>
        #    #ISOCountryRegionCodes
        #    // </GIN>
        #
        #    PurchLineType purchLineType;
        #
        #    if (this.isTmp())
        #    {
        #        this.doDelete();
        #        return;
        #    }
        #
        #    purchLineType = this.type();
        #    purchLineType.delete(_showInfoDelReserv, deletePBA, updateOrderLineOfDeliverySchedule);
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        PurchTotalsSummaryController::onDelete(this);
        #    }
        #
        #    PlSADPurchTable::puchLineRemoved(this);
        #
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #    {
        #        this.TransitDocumentTransactionMap_IN::deleteTransitDocuments();
        #    }
        #    // </GIN>
        #}
      ENDSOURCE
      SOURCE #deleteInventTrans_BR
        #/// <summary>
        #///     Delete the <c>inventTrans</c> related to the current <c>purchLine</c> if order operation is configured to do not create inventory transactions.
        #/// </summary>
        #public void deleteInventTrans_BR()
        #{
        #    if (!this.purchTable().createInventTrans_BR())
        #    {
        #        InventUpd_DeleteMovement::newMovement(InventMovement::construct(this, InventMovSubType::None, this)).updateNow();
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #deliveryAddress
        #//BP Deviation Documented
        #LogisticsPostalAddress deliveryAddress()
        #{
        #    return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress ? this.DeliveryPostalAddress : this.purchTable().DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #deliveryCNPJCPFNUM_BR
        #/// <summary>
        #/// Returns the delivery CNPJ or CPF for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the CNPJ or CPF of the customer if the adddress is a primary address.
        #/// Returns the CNPJ or CPF related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display CNPJCPFNum_BR deliveryCNPJCPFNUM_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    dirPartyLocation = DirPartyLocation::findByPartyLocation(VendTable::find(this.VendAccount).Party, this.deliveryLocation());
        #
        #    if (!dirPartyLocation.IsPrimary)
        #    {
        #        return (select cnpjcpfNum_BR from logisticsLocationExt
        #            where logisticsLocationExt.Location == this.deliveryLocation()).cnpjcpfNum_BR;
        #    }
        #
        #    return VendTable::find(this.VendAccount).cnpjcpfNum_BR;
        #}
      ENDSOURCE
      SOURCE #deliveryDate
        #public PurchLineDlvDate deliveryDate(PurchLineDlvDate _blankDate = systemDateGet())
        #{
        #    if (this.ConfirmedDlv)
        #    {
        #        return this.ConfirmedDlv;
        #    }
        #
        #    if (this.DeliveryDate)
        #    {
        #        return this.DeliveryDate;
        #    }
        #
        #    if (this.purchTable().DeliveryDate)
        #    {
        #        return this.purchTable().DeliveryDate;
        #    }
        #
        #    return _blankDate;
        #}
      ENDSOURCE
      SOURCE #deliveryIENum_BR
        #/// <summary>
        #/// Returns the delivery IE for the current record.
        #/// </summary>
        #/// <returns>
        #/// Returns the IE of the customer if the adddress is a primary address.
        #/// Returns the IE related to delivery <c>logisticsPostalAddress</c> if the adddress is not a primary address.
        #/// </returns>
        #public display IENum_BR deliveryIENum_BR()
        #{
        #    DirPartyLocation dirPartyLocation;
        #
        #    if (!BrazilParameters::isEnabled())
        #        return '';
        #
        #    dirPartyLocation = DirPartyLocation::findByPartyLocation(VendTable::find(this.VendAccount).Party, this.deliveryLocation());
        #
        #    if (!dirPartyLocation.IsPrimary)
        #    {
        #        return (select ieNum_BR from logisticsLocationExt
        #            where logisticsLocationExt.Location == this.deliveryLocation()).ieNum_BR;
        #    }
        #
        #    return VendTable::find(this.VendAccount).ieNum_BR;
        #}
      ENDSOURCE
      SOURCE #deliveryLocation
        #/// <summary>
        #/// Returns the <c>RecId</c> value of the <c>LogisticsLocation</c> record that is associated with
        #/// selected <c>DeliveryPostalAddress</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>RecId</c> value of the <c>LogisticsLocation</c> record that is associated with selected
        #/// <c>DeliveryPostalAddress</c> record.
        #/// </returns>
        #public LogisticsLocationRecId deliveryLocation()
        #{
        #    return LogisticsPostalAddress::getLocation(this.DeliveryPostalAddress);
        #}
      ENDSOURCE
      SOURCE #deliveryStatusImage
        #//BP Deviation Documented
        #display ImageRes deliveryStatusImage()
        #{
        #    #resAppl
        #
        #    if (!this.RecId)
        #    {
        #        return 0;
        #    }
        #
        #    if (this.receivedInTotal())
        #    {
        #        if (this.RemainPurchPhysical > 0)
        #        {
        #            return #ImageNew;
        #        }
        #        return #ImageOverlayYes;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #deliveryStatusTxt
        #str deliveryStatusTxt()
        #{
        #    if (!this.RecId)
        #    {
        #        return '';
        #    }
        #
        #    if (this.receivedInTotal())
        #    {
        #        if (this.RemainPurchPhysical > 0)
        #        {
        #            return "@SYS89798";
        #        }
        #        return "@SYS89797";
        #    }
        #
        #    return "@SYS99500";
        #}
      ENDSOURCE
      SOURCE #deliveryTerm
        #DlvTermId  deliveryTerm()
        #{
        #    return this.purchTable().DlvTerm;
        #}
      ENDSOURCE
      SOURCE #deliveryTransDateTime
        #/// <summary>
        #///    Calculates the delivery date at midnight in the time zone of the site on the purchase order line.
        #/// </summary>
        #/// <returns>
        #///    Delivery date and time in UTC when it is midnight on the delivery date on the site on the purchase order line.
        #/// </returns>
        #public TransDateTime deliveryTransDateTime()
        #{
        #    return DateTimeUtil::newDateTime(this.deliveryDate(), 0, this.timeZoneSite());
        #}
      ENDSOURCE
      SOURCE #discAmount
        #DiscAmount  discAmount()
        #{
        #    return PriceDisc::discAmount(PurchParameters::find().Disc, this.LineDisc, this.MultiLnDisc);
        #}
      ENDSOURCE
      SOURCE #discPercent
        #DiscPct   discPercent()
        #{
        #    return PriceDisc::discPercent(PurchParameters::find().Disc, this.LinePercent, this.MultiLnPercent);
        #}
      ENDSOURCE
      SOURCE #displayBudgetCheckResult
        #/// <summary>
        #/// Gets the image position that displays the <c>BudgetCheckResult</c> value for the <c>PurchLine</c>
        #/// record in the image list of the <c>BudgetCheckResult</c> values.
        #/// </summary>
        #/// <returns>
        #/// A <c>ImageBudgetCheckResult</c> value to indicate the image position in the image list of the
        #/// <c>BudgetCheckResult</c> values.
        #/// </returns>
        #// BP Deviation Documented
        #public display ImageBudgetCheckResult displayBudgetCheckResult()
        #{
        #    return BudgetControlResult::getBudgetCheckResultImagePos(this.getBudgetCheckResult());
        #}
      ENDSOURCE
      SOURCE #doDistributionsExist
        #/// <summary>
        #///    Performs a check whether any distributions exist for a line
        #/// </summary>
        #/// <returns>
        #///    True, if the line has at least one distribution; otherwise false.
        #/// </returns>
        #public client server boolean doDistributionsExist()
        #{
        #    return SourceDocumentLineProvider::isLineDistributed(this.sourceDocumentLine(), this);
        #}
      ENDSOURCE
      SOURCE #doReCalcPricesFromBasePrompt
        #/// <summary>
        #/// Prompts the user to specify whether to recalculate prices based on trade agreements.
        #/// </summary>
        #/// <returns>
        #/// true if the prices should be recalculated; otherwise, false.
        #/// </returns>
        #public boolean doReCalcPricesFromBasePrompt()
        #{
        #    // Run the price discount policy dialog in order to let the user determine which agreement values to recalulate.
        #    return this.runPriceDiscPolicyDialog(true);
        #}
      ENDSOURCE
      SOURCE #editableInWorkflow
        #/// <summary>
        #/// Indicates whether the user can modify the record when an active workflow is running.
        #/// </summary>
        #/// <returns>
        #/// A Boolean value that indicates whether the user has rights to modify the record.
        #/// </returns>
        #public boolean  editableInWorkflow()
        #{
        #    return ((this.EditableInWorkflow
        #            || this.WorkflowState == TradeWorkflowState::Returned
        #            || this.WorkflowState == TradeWorkflowState::ChangeRequest)
        #            && this.isUserWorkItemOwner());
        #}
      ENDSOURCE
      SOURCE #editProductDimensionsAllowed
        #/// <summary>
        #/// Determines whether the product dimensions on the line can be edited.
        #/// </summary>
        #/// <returns>
        #///     true for order lines without delivery lines; otherwise, false.
        #/// </returns>
        #boolean editProductDimensionsAllowed()
        #{
        #    return this.SalesPurchLine::editProductDimensionsAllowed();
        #}
      ENDSOURCE
      SOURCE #endDisc
        #boolean  endDisc()
        #{
        #    if (this.isCategoryBased())
        #    {
        #        return true;
        #    }
        #    return this.SalesPurchLine::endDisc();
        #}
      ENDSOURCE
      SOURCE #exceptionCode_BR
        #/// <summary>
        #/// Displays the exception code of the item in the current purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The exception code of the item.
        #/// </returns>
        #//BP Deviation Documented
        #display ExceptionCode_BR exceptionCode_BR()
        #{
        #    return this.inventTable().ExceptionCode_BR;
        #}
      ENDSOURCE
      SOURCE #existInvoice
        #/// <summary>
        #/// Determines whether saved unposted invoices exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if a saved pending invoice exists for this purchase order line; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// The current record includes unposted invoices saved in batches or in the process of being edited.
        #/// Additionally it includes those invoices that are actually saved as pending.
        #/// </remarks>
        #public boolean existInvoice()
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine;
        #
        #    if (this.purchTable().PurchStatus == PurchStatus::Backorder || this.purchTable().PurchStatus == PurchStatus::Received)
        #    {
        #        select firstonly RecId from vendInvoiceInfoLine
        #                where vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                vendInvoiceInfoLine.ParmId == '';
        #
        #        if (vendInvoiceInfoLine.RecId != 0)
        #        {
        #            return true;
        #        }
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existInvoice_RU
        #/// <summary>
        #/// Determines if invoice line exist for the current record.
        #/// </summary>
        #/// <returns>
        #/// true if invoice line exists for this purchase order line, otherwise, false.
        #/// </returns>
        #public boolean existInvoice_RU()
        #{
        #    VendInvoiceInfoLine     vendInvoiceInfoLine;
        #
        #    if (this.PurchStatus == PurchStatus::Backorder || this.PurchStatus == PurchStatus::Received)
        #    {
        #        select firstonly RecId from vendInvoiceInfoLine
        #            where vendInvoiceInfoLine.InventTransId == this.InventTransId;
        #
        #        if (vendInvoiceInfoLine.RecId != 0)
        #        {
        #            return true;
        #        }
        #    }
        #    return false;
        #}
      ENDSOURCE
      SOURCE #expandBOM
        #server void  expandBOM(TmpFrmVirtual  _tmpFrmVirtual, BOM tmpBOM)
        #{
        #    PurchTable              purchTable;
        #    PurchLine               purchLine;
        #    BOMCalcData             bomCalcData;
        #    InventTable             inventTable;
        #    RouteId                 routeNum;
        #    TradeLineNumberManager  lineNumberManager;
        #    Counter                 x = 1;
        #
        #    ttsbegin;
        #    purchTable          = this.purchTable();
        #    inventTable         = this.inventTable();
        #    bomCalcData         = BOMCalcData::newInventTable(this.QtyOrdered,inventTable);
        #    routeNum            = inventTable.routeId(purchTable.DeliveryDate, this.QtyOrdered, this.inventDim());
        #    lineNumberManager   = TradeLineNumberManager::newLine(this);
        #    lineNumberManager.moveLineToLast(false);
        #
        #    startLengthyOperation();
        #    while select _tmpFrmVirtual
        #    {
        #        this.resetInvent();
        #        break;
        #    }
        #
        #    while select _tmpFrmVirtual
        #    {
        #        purchLine.clear();
        #        select tmpBOM where tmpBOM.RecId == _tmpFrmVirtual.RecordNo;
        #        purchLine.initFromPurchTable(purchTable);
        #        purchLine.initFromBOM(tmpBOM, this);
        #        purchLine.setAddressFromPurchLine(this);
        #
        #        purchLine.QtyOrdered    = UnitOfMeasureConverter::convert(BOMCalcConsumption::construct(tmpBOM.Formula,bomCalcData).calcConsumption(
        #                                                                                                              tmpBOM,
        #                                                                                                              Route::accError(routeNum,
        #                                                                                                                              tmpBOM.OprNum)),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(tmpBOM.UnitId),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.inventTable().inventUnitId()),
        #                                                   NoYes::Yes,
        #                                                   InventTable::itemProduct(tmpBOM.ItemId));
        #
        #        purchLine.PurchQty      = UnitOfMeasureConverter::convert(purchLine.QtyOrdered,
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.inventTable().inventUnitId()),
        #                                                   UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.PurchUnit),
        #                                                   NoYes::Yes,
        #                                                   InventTable::itemProduct(tmpBOM.ItemId));
        #
        #        lineNumberManager.setLine(purchLine);
        #        lineNumberManager.preUpdateLineNumber(false);
        #
        #        purchLine.ActivityNumber = this.ActivityNumber;
        #        if (!purchLine.ProjCategoryId)
        #        {
        #            purchLine.ProjCategoryId = this.ProjCategoryId;
        #        }
        #
        #        purchLine.createLine(true,false,false,false,true,true, false, true);
        #        purchLine.LineHeader    = strFmt("@SYS25825", this.inventTable().defaultProductName());
        #        purchLine.write();
        #        lineNumberManager.postUpdateLineNumber();
        #        x++;
        #    }
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #fieldChanged
        #boolean  fieldChanged(FieldId  fieldId)
        #{
        #    boolean  ok = false;
        #
        #    if (!this.RecId)
        #    {
        #        ok = true;
        #    }
        #
        #    if (this.orig().(fieldId) != this.(fieldId))
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #findAgreementLine
        #/// <summary>
        #/// Checks if an agreement line exists
        #/// </summary>
        #/// <returns>
        #/// An <c>AgreementLine</c> record.
        #/// </returns>
        #public AgreementLine findAgreementLine()
        #{
        #    PurchTable      purchTable = this.purchTable();
        #    AgreementLine   agreementLine;
        #
        #    if (this.MatchingAgreementLine && purchTable.OrderAccount == this.VendAccount )
        #    {
        #        agreementLine = AgreementLine::find(this.MatchingAgreementLine);
        #        if (agreementLine.Agreement != purchTable.MatchingAgreement || agreementLine.IsDeleted)
        #        {
        #            agreementLine = null;
        #        }
        #    }
        #
        #    return agreementLine;
        #}
      ENDSOURCE
      SOURCE #findApproved
        #/// <summary>
        #/// Finds the original purchase line.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchLine</c> record.
        #/// </returns>
        #/// <remarks>
        #/// If the purchase order has change request enabled, then the approved record is fetched from the
        #/// <c>PurchLineHistory</c> table, otherwise the orig record would be returned.
        #/// </remarks>
        #public PurchLine findApproved()
        #{
        #    PurchLineHistory    purchLineHistory;
        #    PurchLine           purchLineApproved;
        #
        #    if (!this.RecId)
        #    {
        #        return null;
        #    }
        #
        #    if (this.type().isChangeRequestRequired() && !this.isLatestPOVersionNotArchived())
        #    {
        #        purchLineHistory = PurchLineHistory::find(this);
        #        if (!purchLineHistory)
        #        {
        #            return null;
        #        }
        #
        #        //BP Deviation Documented
        #        purchLineApproved.setTmp();
        #        purchLineApproved.data(this.data());
        #        purchLineApproved.doInsert();
        #
        #        purchLineApproved.initFromPurchLineHistory(purchLineHistory);
        #
        #        return purchLineApproved;
        #    }
        #
        #    return(this.orig());
        #}
      ENDSOURCE
      SOURCE #fshCrossDocking
        #/// <summary>
        #///   Returns the total transfer order quantity for the given purchase order line.
        #/// </summary>
        #/// <param name="_tPurchLine">
        #///   A <c>PurchLine</c> record.
        #/// </param>
        #/// <returns>
        #///   A purchase quantity.
        #/// </returns>
        #//BP deviation documented
        #display PurchQty fshCrossDocking(PurchLine _tPurchLine)
        #{
        #    real                rQty;
        #
        #    InventTransferLine      tInventTransferLine;
        #    InventLocation          tInventLocation;
        #
        #    while select * from tInventLocation
        #        index InventLocationIdx
        #        where tInventLocation.fshStore == NoYes::Yes
        #    {
        #        tInventTransferLine = RetailReplenishmentTransferOrder::findTransferOrderLine(tableNum(PurchLine), _tPurchLine.RecId, tInventLocation.InventLocationId, false);
        #
        #        if (tInventTransferLine)
        #        {
        #            rQty += tInventTransferLine.QtyTransfer;
        #        }
        #    }
        #
        #    return rQty;
        #}
      ENDSOURCE
      SOURCE #getAssessableValue_IN
        #/// <summary>
        #/// This method is used get the assessable value applicable for the given quantity from Purchase Line
        #/// </summary>
        #/// <param name="_Qty">
        #/// Quantity for which Assessable Value to be calculated
        #/// </param>
        #/// <returns>
        #/// Assessable Value
        #/// </returns>
        #
        #// <GIN>
        #public AmountCur getAssessableValue_IN(InventQty _Qty)
        #{
        #    AmountCur           assessableValue;
        #
        #    assessableValue = (this.purchLine_IN().AssessableValue_IN / this.PurchQty) * _Qty;
        #
        #    return assessableValue;
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #getBudgetCheckResult
        #/// <summary>
        #/// Calculates the <c>BudgetCheckResult</c> value for the <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>BudgetCheckResult</c> value which is calculated by the query.
        #/// </returns>
        #public BudgetCheckResult getBudgetCheckResult()
        #{
        #    ProjBudgetCheckResult projBudgetCheckResult;
        #    ProjBudgetStatus      projBudgetStatus;
        #    BudgetCheckResult     budgetCheckResult;
        #
        #    budgetCheckResult = BudgetSourceSourceDocumentLine::findBudgetCheckResult(this.SourceDocumentLine);
        #
        #    if(this.ProjId && ProjParameters::find().UseBudgeting)
        #    {
        #        projBudgetStatus = ProjBudgetStatus::findBySourceDocumentLine(this.SourceDocumentLine);
        #        projBudgetCheckResult = projBudgetStatus ? projBudgetStatus.BudgetCheckResult : ProjBudgetCheckResult::NoCheck;
        #
        #        //adding projBudgetCheckResult + 1, since this base enum value starts from 0
        #        if (enum2int(budgetCheckResult) >= enum2int(projBudgetCheckResult) + 1)
        #        {
        #            budgetCheckResult = budgetCheckResult;
        #        }
        #        else
        #        {
        #            budgetCheckResult = enum2int(projBudgetCheckResult) + 1;
        #        }
        #    }
        #
        #    return budgetCheckResult;
        #}
      ENDSOURCE
      SOURCE #getDebitCredit
        #DebitCredit getDebitCredit()
        #{
        #    DebitCredit debitCredit;
        #
        #    if (this.LineAmount < 0 || this.QtyOrdered < 0 || this.PurchQty < 0)
        #    {
        #        debitCredit = DebitCredit::Credit;
        #    }
        #    else
        #    {
        #        debitCredit = DebitCredit::Debit;
        #    }
        #
        #    return debitCredit;
        #}
      ENDSOURCE
      SOURCE #getDeliveryEntityRecord
        #/// <summary>
        #///     Gets the delivery entity record based on the postal address.
        #/// </summary>
        #/// <returns>
        #///    A <c>CompanyInfo</c>, <c>InventLocation</c> or <c>InventSite</c> record.
        #/// </returns>
        #public Common getDeliveryEntityRecord()
        #{
        #    return this.TradePostalAddress::getDeliveryEntityRecord();
        #}
      ENDSOURCE
      SOURCE #getEffectiveLinePrice
        #/// <summary>
        #///     Gets the effective price for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///     The effective price for the purchase order line.
        #/// </returns>
        #/// <remarks>
        #///     For a line that uses advanced pricing, this will be the adjusted unit price, otherwise it is the
        #///     standard unit price value on the line.
        #/// </remarks>
        #public PurchPrice getEffectiveLinePrice()
        #{
        #    PurchPrice              purchPrice;
        #    PDSAdvancedPriceInfo    advancedPriceInfo = this.pdsAdvancedPriceInfo();
        #
        #    if (advancedPriceInfo && advancedPriceInfo.CalculatedUnitPrice)
        #    {
        #        purchPrice = advancedPriceInfo.CalculatedUnitPrice;
        #    }
        #    else
        #    {
        #        purchPrice = this.PurchPrice;
        #    }
        #
        #    return purchPrice;
        #}
      ENDSOURCE
      SOURCE #getGrossVolumePerItem
        #/// <summary>
        #/// Calculates the gross volume per item for the given <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>Volume</c> value, which is the gross volume per item on the line.
        #/// </returns>
        #public Volume getGrossVolumePerItem()
        #{
        #    InventTable         inventTable;
        #    InventTableModule   inventTableModule;
        #    Volume              grossVolume;
        #
        #    if (this.isStocked())
        #    {
        #        grossVolume = this.inventTable(this.ItemId).grossVolume();
        #
        #    }
        #    else
        #    {
        #        if (!this.isCategoryBased())
        #        {
        #            //Volume of non-stocked item is derived from the volume defined on InventTable,
        #            //by converting the UnitOfMeasure defined on Purchase Line to the UnitOfMeasure defined on InventTable
        #            inventTable         = this.inventTable(this.ItemId);
        #            inventTableModule   = inventTable.inventTableModulePurch();
        #
        #            grossVolume = inventTable.grossVolume();
        #            if (this.PurchUnit && inventTableModule.UnitId && this.PurchUnit != inventTableModule.UnitId)
        #            {
        #                grossVolume = grossVolume * this.unitConvertPurch2Invent(1);
        #            }
        #        }
        #    }
        #    return grossVolume;
        #}
      ENDSOURCE
      SOURCE #getGrossWeightPerItem
        #/// <summary>
        #/// Calculates the gross weight per item for the given <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// A <c>Weight</c> value, which is the gross weight per item on the line.
        #/// </returns>
        #public Weight getGrossWeightPerItem()
        #{
        #    InventTable         inventTable;
        #    InventTableModule   inventTableModule;
        #    Weight              grossWeight;
        #
        #    if (this.isStocked())
        #    {
        #        grossWeight = this.inventTable(this.ItemId).grossWeight();
        #
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            grossWeight = PurchLineForeignTradeCategory::findpurchLine(this).UnitWeight;
        #        }
        #        else
        #        {
        #            //Weight of non-stocked item is derived from the weight defined on InventTable,
        #            //by converting the UnitOfMeasure defined on Purchase Line to the UnitOfMeasure defined on InventTable
        #            inventTable         = this.inventTable(this.ItemId);
        #            inventTableModule   = inventTable.inventTableModulePurch();
        #
        #            grossWeight = inventTable.grossWeight();
        #            if (this.PurchUnit && inventTableModule.UnitId && this.PurchUnit != inventTableModule.UnitId)
        #            {
        #                grossWeight = grossWeight * this.unitConvertPurch2Invent(1);
        #            }
        #        }
        #    }
        #    return grossWeight;
        #}
      ENDSOURCE
      SOURCE #getItemType
        #/// <summary>
        #/// Displays the <c>ItemType</c> value for the item.
        #/// </summary>
        #/// <returns>
        #/// The <c>ItemType</c> value for the item.
        #/// </returns>
        #//BP Deviation Documented
        #display ItemType getItemType()
        #{
        #    return InventTable::find(this.ItemId).ItemType;
        #}
      ENDSOURCE
      SOURCE #getMiscChargesAmount_IN
        #/// <summary>
        #/// This method is used to get the amount.
        #/// </summary>
        #/// <returns>
        #/// Returns the amount.
        #/// </returns>
        #public Amount getMiscChargesAmount_IN()
        #{
        #    return this.purchLineView_IN().SalesPurchJournalLine_IN::getMiscChargesAmountPlusLineAmount(this.TableId, this.RecId);
        #}
      ENDSOURCE
      SOURCE #getProjCreditNoteSource
        #/// <summary>
        #/// Finds the original purchase line.
        #/// </summary>
        #/// <param name="update">
        #///    A Boolean value that determines whether the record should be selected for update; optional.
        #/// </param>
        #/// <returns>
        #///    A <c>PurchLine</c> record.
        #/// </returns>
        #PurchLine getProjCreditNoteSource(boolean  update = false)
        #{
        #    PurchLine               sourcePurchLine;
        #    RefRecId                projCreditNoteSourceRefRecId;
        #    ProjCreditNoteSource    projCreditNoteSource;
        #
        #    projCreditNoteSourceRefRecId = SysTransactionScopeCache::get(classStr(PurchCopying), identifierStr(projCreditNoteSourceRefRecId));
        #    if (projCreditNoteSourceRefRecId)
        #    {
        #        sourcePurchLine = PurchLine::findRecId(projCreditNoteSourceRefRecId, update);
        #    }
        #    else
        #    {
        #        projCreditNoteSource = ProjCreditNoteSource::find(this.RecId);
        #        if (projCreditNoteSource)
        #        {
        #            sourcePurchLine = PurchLine::findRecId(projCreditNoteSource.ProjCreditNoteSource, update);
        #        }
        #    }
        #
        #    return sourcePurchLine;
        #}
      ENDSOURCE
      SOURCE #getPurchCommitmentLine_PSN
        #/// <summary>
        #/// Retrieves the commitment line record that the current <c>PurchLine</c> record is associated with.
        #/// </summary>
        #/// <param name="_forupdate">
        #/// true if the commitment line record should be selected for update; otherwise, false.
        #/// </param>
        #/// <returns>
        #/// The commitment line record that the current <c>PurchLine</c> record is associated with.
        #/// </returns>
        #public PurchCommitmentLine_PSN getPurchCommitmentLine_PSN(boolean _forupdate = false)
        #{
        #    PurchCommitmentLine_PSN purchCommitmentLine;
        #
        #    if (_forupdate)
        #    {
        #        select firstonly forupdate purchCommitmentLine
        #            where purchCommitmentLine.RecId == this.PurchCommitmentLine_PSN;
        #    }
        #    else
        #    {
        #        select firstonly purchCommitmentLine
        #            where purchCommitmentLine.RecId == this.PurchCommitmentLine_PSN;
        #    }
        #
        #    return purchCommitmentLine;
        #}
      ENDSOURCE
      SOURCE #getPurchReqItemName
        #/// <summary>
        #/// Displays the name of the item associated with the related requisitioin line.
        #/// </summary>
        #/// <returns>
        #/// The name of the item associated with the related requisition line.
        #/// </returns>
        #public display ItemNameDisplay getPurchReqItemName()
        #{
        #    if (this.PurchReqLineRefId)
        #    {
        #        return PurchReqLine::findLineRefId(this.PurchReqLineRefId).itemName();
        #    }
        #    else
        #    {
        #        return '';
        #    }
        #}
      ENDSOURCE
      SOURCE #hasAssetAssociated
        #/// <summary>
        #/// Checks whether the line has an associated asset.
        #/// </summary>
        #/// <returns>
        #/// true if the line has asset information set; otherwise, false.
        #/// </returns>
        #boolean hasAssetAssociated()
        #{
        #    return (this.AssetId != '' || this.CreateFixedAsset);
        #}
      ENDSOURCE
      SOURCE #hasOnlyLineAmount
        #boolean hasOnlyLineAmount()
        #{
        #    return this.PriceDiscLine::hasOnlyLineAmount();
        #}
      ENDSOURCE
      SOURCE #hasRetentionTerms
        #/// <summary>
        #/// Checks to see if the Purchase Order Line item has retention terms.
        #/// </summary>
        #/// <returns>
        #/// true if the line has retention terms; otherwise, false.
        #/// </returns>
        #public boolean hasRetentionTerms()
        #{
        #    return (this.psaRetainScheduleId != "");
        #}
      ENDSOURCE
      SOURCE #ICMSCreditInstallments_BR
        #/// <summary>
        #/// Indicates the number of installments of the <c>PIS/COFINS</c> credit appropriation.
        #/// </summary>
        #/// <returns>
        #/// True if the <c>ICMS</c> asset is receivable long term; otherwise, false.
        #/// </returns>
        #// <GBR>
        #public ICMSCreditInstallments_BR ICMSCreditInstallments_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return false;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).icmsCreditInstallments_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).icmsCreditInstallments_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #ICMSReceivableLongTerm_BR
        #/// <summary>
        #/// Indicates whether the <c>ICMS</c> asset is receivable long term.
        #/// </summary>
        #/// <returns>
        #/// True if the <c>ICMS</c> asset is receivable long term; otherwise, false.
        #/// </returns>
        #// <GBR>
        #public NoYes ICMSReceivableLongTerm_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return false;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).TaxICMSOutgoing_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).TaxICMSOutgoing_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #inclTax
        #boolean inclTax()
        #{
        #    return this.SalesPurchLine::inclTax();
        #}
      ENDSOURCE
      SOURCE #initBarcode
        #server void initBarcode(InventDim _inventDim = this.inventDim())
        #{
        #    InventItemBarcode   inventItemBarcode = InventItemBarcode::findPurchBarcodeDimension(this.ItemId, _inventDim, '', this.PurchUnit);
        #
        #    if (!inventItemBarcode.RecId)
        #    {
        #        inventItemBarcode = InventItemBarcode::findPurchBarcodeDimension(this.ItemId, _inventDim);
        #    }
        #
        #    this.BarCode        = inventItemBarcode.ItemBarCode;
        #    this.BarCodeType    = inventItemBarcode.BarcodeSetupId;
        #}
      ENDSOURCE
      SOURCE #initFromAgreementLine
        #/// <summary>
        #/// Creates a <c>PurchLine</c> table record with the values from the <c>AgreementLine</c> table record.
        #/// </summary>
        #/// <param name="_agreementLine">
        #/// A record of the <c>AgreementLine</c> table.
        #/// </param>
        #public void initFromAgreementLine(AgreementLine _agreementLine)
        #{
        #    this.type().initFromAgreementLine(_agreementLine);
        #}
      ENDSOURCE
      SOURCE #initFromBOM
        #void initFromBOM(BOM        bom,
        #                 PurchLine  parentLine)
        #{
        #    InventDim                       inventDim;
        #    PurchTable_RU                   purchTable_RU;
        #
        #    if (this.InventDimId)
        #    {
        #        inventDim = this.inventDim();
        #    }
        #
        #    this.ItemId             = bom.ItemId;
        #    EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, bom.inventDim(), inventDim);
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        ! inventDim.InventProfileId_RU)
        #    {
        #        if (! inventDim.InventProfileId_RU)
        #        {
        #            inventDim.InventProfileId_RU = bom.inventDim().InventProfileId_RU;
        #        }
        #
        #        if (! inventDim.InventProfileId_RU)
        #        {
        #            inventDim.InventProfileId_RU = BOMParameters::find().InventProfileId_RU;
        #        }
        #
        #        purchTable_RU = parentLine.purchTable().purchTable_RU();
        #        if (purchTable_RU.InventProfileType_RU &&
        #            purchTable_RU.InventProfileType_RU != inventDim.inventProfile_RU().InventProfileType)
        #        {
        #            throw error(strFmt("@GLS113739",
        #                                this.ItemId,
        #                                inventDim.InventProfileId_RU,
        #                                purchTable_RU.InventProfileType_RU));
        #        }
        #    }
        #    inventDim.InventLocationId  = bom.inventDim().InventLocationId;
        #    inventDim.initFromInventLocation(inventDim.inventLocation());
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.initFromInventTable(this.inventTable());
        #}
      ENDSOURCE
      SOURCE #initFromBudgetReservationLine
        #/// <summary>
        #/// Initializes the information on the purchase order line from a budget reservation line record.
        #/// </summary>
        #/// <param name="_budgetReservationLine">
        #/// The <c>BudgetReservationLine_PSN</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #// <PubSect>
        #public void initFromBudgetReservationLine(BudgetReservationLine_PSN _budgetReservationLine)
        #{
        #    ProjParameters  projParameters;
        #
        #    if (_budgetReservationLine.RecID != 0)
        #    {
        #        this.ProjId                 = _budgetReservationLine.ProjId;
        #        this.ActivityNumber         = _budgetReservationLine.ActivityNumber;
        #        this.ProjCategoryId         = _budgetReservationLine.ProjCategoryId;
        #        this.ProjLinePropertyId     = _budgetReservationLine.ProjLinePropertyId;
        #        this.ProjSalesCurrencyId    = _budgetReservationLine.ProjSalesCurrencyId;
        #        this.ProjSalesUnitId        = _budgetReservationLine.ProjSalesUnitId;
        #        this.ProjTaxGroupId         = _budgetReservationLine.ProjTaxGroupId;
        #        this.ProjTaxItemGroupId     = _budgetReservationLine.ProjTaxItemGroupId;
        #        this.ProjWorker             = _budgetReservationLine.ProjWorker;
        #
        #        projParameters = ProjParameters::find();
        #
        #        if (!projParameters.DefaultCostPriceAsSalesPrice)
        #        {
        #            this.ProjSalesPrice = _budgetReservationLine.ProjSalesPrice;
        #        }
        #
        #        if (_budgetReservationLine.PurchReqLine)
        #        {
        #            this.BudgetReservationLine_PSN  = _budgetReservationLine.RecId;
        #            this.PurchQty                   = _budgetReservationLine.Quantity;
        #            this.LineAmount                 = _budgetReservationLine.LineAmount;
        #            this.PurchPrice                 = _budgetReservationLine.UnitPrice;
        #        }
        #    }
        #}
        #// </PubSect>
      ENDSOURCE
      SOURCE #initFromCORPurchLine
        #/// <summary>
        #///    Initializes a <c>purchLine</c> table buffer based on a <c>purchLine</c> table buffer used for unconfirmed product receipts.
        #/// </summary>
        #/// <param name="_purchLine">
        #///    The <c>purchLine</c> table buffer that is to be copied.
        #/// </param>
        #void  initFromCORPurchLine(PurchLine _purchLine)
        #{
        #    this.Requester          = _purchLine.Requester;
        #
        #    this.AssetGroup         = _purchLine.AssetGroup;
        #}
      ENDSOURCE
      SOURCE #initFromInventExternalForProcessing_PL
        #public void initFromInventExternalForProcessing_PL(PlInventExternalForProcessing _inventExternalForProcessing)
        #{
        #    this.ItemId      = _inventExternalForProcessing.ItemId;
        #    this.InventDimId = _inventExternalForProcessing.InventDimId;
        #    this.PurchQty    = _inventExternalForProcessing.InventQty;
        #    this.PurchPrice  = _inventExternalForProcessing.PurchPrice;
        #}
      ENDSOURCE
      SOURCE #initFromInventTable
        #/// <summary>
        #/// Updates the <c>PurchLine</c> based on the given item.
        #/// </summary>
        #/// <param name="_inventTable">
        #///     The <c>InventTable</c> buffer to initialize from.
        #/// </param>
        #public server void initFromInventTable(InventTable _inventTable)
        #{
        #    container               purchLineContainer;
        #    XppILExecutePermission  xppILExecutePermission;
        #
        #    xppILExecutePermission = new XppILExecutePermission();
        #    xppILExecutePermission.assert();
        #    if (PurchLine::hasExensionTableEnabled())
        #    {
        #        this.SysExtensionSerializerMap::packAll();
        #    }
        #    purchLineContainer = runTableMethodIL(tableStr(PurchLine),
        #                        tableStaticMethodStr(PurchLine, initFromInventTableIL),
        #                        [buf2Con(this, true), buf2Con(_inventTable, true)]);
        #    CodeAccessPermission::revertAssert();
        #
        #    this.con2buf(purchLineContainer);
        #    if (PurchLine::hasExensionTableEnabled())
        #    {
        #        this.SysExtensionSerializerMap::unpackAll();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromItemOrCategory
        #/// <summary>
        #///     Initiates a <c>PurchLine</c> table buffer from an based on a item or catagory.
        #/// </summary>
        #/// <param name="_itemId">
        #///     A <c>ItemId</c> type.
        #/// </param>
        #/// <param name="_procurementCategory">
        #///     A <c>PurchCategory</c> type.
        #/// </param>
        #/// <param name="_name">
        #///     The name of the catagory item.
        #/// </param>
        #/// <param name="_searchPrice">
        #///     A Boolean that specifies whether prices and discounts should be initiated; optional.
        #/// </param>
        #/// <param name="_setAddressFromInventDim">
        #///     A Boolean that specifies whether the address should be initiated from the inventory dimension; optinal.
        #/// </param>
        #public void initFromItemOrCategory(
        #    ItemId          _itemId,
        #    PurchCategory   _procurementCategory,
        #    ItemFreeTxt     _name,
        #    boolean         _searchPrice                = true,
        #    boolean         _setAddressFromInventDim    = true)
        #{
        #    this.type().initFromItemOrCategory(_itemId, _procurementCategory, _name, _searchPrice, _setAddressFromInventDim);
        #}
      ENDSOURCE
      SOURCE #initFromOrderLineWithMultipleDeliveries
        #/// <summary>
        #/// Initializes a delivery line based on its order line.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// The order line based on which to initialize.
        #/// </param>
        #/// <param name="_onlyCommercialAttributes">
        #/// A Boolean value that indicates whether to initialize only the commercial attributes; optional.
        #/// </param>
        #/// <remarks>
        #/// When the <paramref name="_onlyCommercialAttributes" /> parameter is true it can be used to reset
        #/// commercial attributes on an existing delivery line.When the <paramref
        #/// name="_onlyCommercialAttributes" /> parameter is false it can be used to initialize new delivery
        #/// lines.
        #/// </remarks>
        #void initFromOrderLineWithMultipleDeliveries(PurchLine _purchLine, boolean _onlyCommercialAttributes = false)
        #{
        #    if (!_onlyCommercialAttributes)
        #    {
        #        this.initFromPurchTable(_purchLine.purchTable());
        #        this.initFromPurchLine(_purchLine, true, false, false, false);
        #
        #        this.PurchUnit               = _purchLine.PurchUnit;
        #        this.DeliveryDate            = _purchLine.DeliveryDate;
        #        this.ConfirmedDlv            = _purchLine.ConfirmedDlv;
        #        this.MatchingAgreementLine   = _purchLine.MatchingAgreementLine;
        #        this.PurchReqId              = _purchLine.PurchReqId;
        #
        #        this.LineDeliveryType        = LineDeliveryType::DeliveryLine;
        #    }
        #
        #    this.PurchPrice         = _purchLine.PurchPrice;
        #    this.PriceUnit          = _purchLine.PriceUnit;
        #    this.LinePercent        = _purchLine.LinePercent;
        #    this.LineDisc           = _purchLine.LineDisc;
        #    this.MultiLnDisc        = _purchLine.MultiLnDisc;
        #    this.MultiLnPercent     = _purchLine.MultiLnPercent;
        #    this.DiscAmount         = _purchLine.DiscAmount;
        #    this.DiscPercent        = _purchLine.DiscPercent;
        #    this.PurchMarkup        = _purchLine.PurchMarkup;
        #    this.LineAmount         = this.calcLineAmountForced();
        #}
      ENDSOURCE
      SOURCE #initFromPriceDisc
        #void initFromPriceDisc(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy = null, boolean _initDateFields = true)
        #{
        #    SchedDate           schedDate;
        #    WorkCalendarSched   workCalendarSched;
        #    PurchLine_IN        purchLine_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.MaximumRetailPrice_IN = _priceDisc.maxRetailPrice_IN();
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    this.SalesPurchLine::setPriceDiscPriceUnitMarkup(_priceDisc, _checkPolicy);
        #
        #    if (this.SkipUpdate == InterCompanySkipUpdate::No
        #        && this.LineDeliveryType == LineDeliveryType::OrderLine)
        #    {
        #        if (!this.DeliveryDate)
        #        {
        #            this.DeliveryDate       = this.purchTable().DeliveryDate;
        #        }
        #
        #        if (_priceDisc.deliveryDays() && this.ManualModifiedField != fieldNum(PurchLine, DeliveryDate))
        #        {
        #            workCalendarSched = new WorkCalendarSched();
        #            schedDate = workCalendarSched.schedDate(SchedDirection::Forward,
        #                                                    systemDateGet(),                                // FromDate
        #                                                    _priceDisc.deliveryDays(),                       // LeadTime
        #                                                    _priceDisc.calendarDays(),
        #                                                    this.vendTable_OrderAccount().PurchCalendarId,
        #                                                    this.type().internalCalendarId());
        #
        #            this.DeliveryDate = max(schedDate, this.DeliveryDate);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromProdBOM
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>ProdBOM</c> record.
        #/// </summary>
        #/// <param name="_prodBOM">
        #///    The <c>ProdBOM</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromProdBOM(ProdBOM   _prodBOM)
        #{
        #    InventDim       inventDim;
        #
        #    this.ItemId                 = _prodBOM.ItemId;
        #    this.ProcurementCategory    = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                        _prodBOM.ItemId,
        #                                        EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.QtyOrdered             = _prodBOM.QtyInventCalc;
        #    this.RemainInventPhysical   = _prodBOM.QtyInventCalc;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWQty                  = _prodBOM.PdsCWInventCalc;
        #        this.PdsCWRemainInventPhysical = _prodBOM.PdsCWInventCalc;
        #    }
        #
        #    if (this.InventDimId)
        #    {
        #        inventDim = this.inventDim();
        #    }
        #
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), _prodBOM.inventDim());
        #
        #    this.setAddressFromInventDim(inventDim);
        #
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.ReqPlanIdSched         = _prodBOM.ReqPlanIdSched;
        #    this.ReqPOId                = _prodBOM.ReqPOId;
        #
        #    this.DeliveryDate           = max(this.DeliveryDate,_prodBOM.RawMaterialDate);
        #    this.InventRefId            = _prodBOM.ProdId;
        #    this.InventRefTransId       = _prodBOM.InventTransId;
        #    this.ItemRefType            = InventRefType::ProdLine;
        #
        #    this.initName();
        #    this.initFromVendExternalItemDescription();
        #}
      ENDSOURCE
      SOURCE #initFromProductDimensions
        #server void initFromProductDimensions(InventDim _inventDim = this.inventDim())
        #{
        #    this.initName();
        #    this.initFromVendExternalItemDescription(_inventDim);
        #    this.initBarcode(_inventDim);
        #    this.initVariantId(_inventDim);
        #}
      ENDSOURCE
      SOURCE #initFromProjActivity
        #public void initFromProjActivity(ProjActivity _projActivity)
        #{
        #    if (!_projActivity || !_projActivity.CategoryDefault ||
        #            ProjCategory::find(_projActivity.CategoryDefault).CategoryType != ProjCategoryType::Item)
        #    {
        #        return;
        #    }
        #
        #    this.ProjCategoryId = _projActivity.CategoryDefault;
        #}
      ENDSOURCE
      SOURCE #initFromProjTable
        #void initFromProjTable(ProjTable projTable, boolean updateSalesPriceOnly = false)
        #{
        #    PriceMarkup     markUpDummy;
        #    PriceUnit       salesUnitDummy;
        #
        #    // <PubSect>
        #    BudgetReservationLine_PSN budgetReservationLine = BudgetReservationLine_PSN::find(this.BudgetReservationLine_PSN);
        #    // </PubSect>
        #
        #    if (!updateSalesPriceOnly)
        #    {
        #        this.ProjSalesCurrencyId    = projTable.currencyId();
        #        this.ProjLinePropertyId     = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #        this.ProjTaxGroupId         = ProjParameters::taxGroupInvoice(this.ProjId);
        #        this.ProjTaxItemGroupId     = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #    }
        #
        #    if (projTable.Type == ProjType::Internal)
        #    {
        #        this.ProjSalesPrice     = 0;
        #    }
        #    // <PubSect>
        #    else if (budgetReservationLine.recId != 0 && budgetReservationLine.ProjId)
        #    {
        #        this.ProjSalesPrice = budgetReservationLine.ProjSalesPrice;
        #    }
        #    // </PubSect>
        #    else
        #    {
        #        [this.ProjSalesPrice,
        #         salesUnitDummy,
        #         markUpDummy]   = this.inventTable().salesPriceAgreement(
        #                                (this.ConfirmedDlv ? this.ConfirmedDlv : this.DeliveryDate),
        #                                this.inventDim(),
        #                                this.PurchQty,
        #                                this.inventTable().inventUnitId(),
        #                                projTable.CustAccount,
        #                                this.ProjSalesCurrencyId ? this.ProjSalesCurrencyId : projTable.currencyId(),
        #                                ProjTable::findPriceGroup(projTable.ProjId));
        #    }
        #
        #    this.Scrap                  = NoYes::Yes;
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.IsPwp                  = this.psaGetPWPSetting();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchLine
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on another <c>PurchLine</c> table buffer.
        #/// </summary>
        #/// <param name="_purchLine">
        #///    The <c>PurchLine</c> table buffer that is to be copied.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A Boolean value that specifies whether to precisely copy all the account and tax details; optional.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A Boolean value that specifies whether to copy the price discount fields; optional.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A Boolean value that specifies whether to copy the quantify information; optional.
        #/// </param>
        #/// <param name="_copyProject">
        #///    A Boolean value that specifies whether to copy the project information; optional.
        #/// </param>
        #/// <param name="_qty">
        #///    A <c>quantity</c> object that sets the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    table buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_cwQty">
        #///    A catch weight quantity object that sets the <c>PdsCWQtyy</c> field value of the new <c>purchLine</c>
        #///    table buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_setAddressFromInventDim">
        #///     Boolean value that specifies whether to retrieve the address from the inventory dimension; optional.
        #/// </param>
        #void  initFromPurchLine(
        #    PurchLine       _purchLine,
        #    boolean         _copyPrecisely              = true,
        #    boolean         _copyPriceDisc              = true,
        #    boolean         _copyQty                    = true,
        #    boolean         _copyProject                = false,
        #    Qty             _qty                        = _purchLine.PurchQty,
        #    PdsCWInventQty  _cwQty                      = _purchLine.PdsCWQty,
        #    boolean         _setAddressFromInventDim    = true)
        #{
        #    #ISOCountryRegionCodes
        #    InventDim   inventDim;
        #    PurchLine_W     toPurchLine_W;
        #    PurchLine_W     fromPurchLine_W;
        #
        #    this.initFromItemOrCategory(_purchLine.ItemId, _purchLine.ProcurementCategory, _purchLine.Name, !_copyPriceDisc, false);
        #
        #    this.CreateFixedAsset     = _purchLine.CreateFixedAsset;
        #    this.AssetGroup           = _purchLine.AssetGroup;
        #    this.AssetId              = _purchLine.AssetId;
        #    this.AssetBookId          = _purchLine.AssetBookId;
        #    this.AssetTransTypePurch  = _purchLine.AssetTransTypePurch;
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_purchLine.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _purchLine.PurchUnit;
        #        this.QtyOrdered         = _purchLine.PurchQty == _qty ? _purchLine.QtyOrdered : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _cwQty;
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_purchLine.InventDimId);
        #            this.PurchUnit          = _purchLine.PurchUnit;
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _purchLine.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (!_copyPrecisely)
        #    {
        #        this.initBarcode();
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _purchLine.PurchPrice;
        #        this.PriceUnit          = _purchLine.PriceUnit;
        #        this.LinePercent        = _purchLine.LinePercent;
        #        this.LineDisc           = _purchLine.LineDisc;
        #        this.MultiLnDisc        = _purchLine.MultiLnDisc;
        #        this.MultiLnPercent     = _purchLine.MultiLnPercent;
        #        this.PurchMarkup        = _purchLine.PurchMarkup;
        #        this.LineAmount         = _purchLine.LineAmount;
        #        this.DiscAmount         = _purchLine.DiscAmount;
        #        this.DiscPercent        = _purchLine.DiscPercent;
        #
        #        this.pdsCalculationId   = _purchLine.pdsCalculationId;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.setInventDimId(_purchLine.InventDimId);
        #        this.Name               = _purchLine.Name;
        #        this.ExternalItemId     = _purchLine.ExternalItemId;
        #        this.LedgerDimension    = _purchLine.LedgerDimension;
        #        this.Blocked            = _purchLine.Blocked;
        #        this.Complete           = _purchLine.Complete;
        #        this.TaxGroup           = _purchLine.TaxGroup;
        #        this.TaxItemGroup       = _purchLine.TaxItemGroup;
        #        this.DefaultDimension   = _purchLine.DefaultDimension;
        #        this.OverDeliveryPct    = _purchLine.OverDeliveryPct;
        #        this.UnderDeliveryPct   = _purchLine.UnderDeliveryPct;
        #        this.Transport          = _purchLine.Transport;
        #        this.Port               = _purchLine.Port;
        #        this.StatProcId         = _purchLine.StatProcId;
        #        this.AccountingDistributionTemplate = _purchLine.AccountingDistributionTemplate;
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #        {
        #            fromPurchLine_W = _purchLine.purchLine_W();
        #            toPurchLine_W   = this.purchLine_W();
        #            toPurchLine_W.PostingProfile_RU     = fromPurchLine_W.PostingProfile_RU;
        #            toPurchLine_W.MarkupCode_RU         = fromPurchLine_W.MarkupCode_RU;
        #            this.packPurchLine_W(toPurchLine_W);
        #        }
        #        this.BarCode            = _purchLine.BarCode;
        #        this.BarCodeType        = _purchLine.BarCodeType;
        #
        #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]) && this.purchTable().vendTable_InvoiceAccount().Tax1099Reports)
        #        {
        #            this.Tax1099Fields      = _purchLine.Tax1099Fields;
        #            this.Tax1099Amount      = _purchLine.Tax1099Amount;
        #            this.Tax1099State       = _purchLine.Tax1099State;
        #            this.Tax1099StateAmount = _purchLine.Tax1099StateAmount;
        #        }
        #
        #        this.setAddressFromPurchLine(_purchLine);
        #
        #        if (BrazilParameters::isEnabled())
        #        {
        #            this.cfopTable_BR        = _purchLine.cfopTable_BR;
        #            this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #        }
        #
        #    }
        #    else
        #    {
        #        if (_setAddressFromInventDim)
        #        {
        #            this.setAddressFromInventDim(this.inventDim());
        #        }
        #    }
        #
        #    if (_copyProject)
        #    {
        #        this.ProjId             = _purchLine.ProjId;
        #        this.ActivityNumber     = _purchLine.ActivityNumber;
        #        this.ProjCategoryId     = _purchLine.ProjCategoryId;
        #        this.ProjLinePropertyId = _purchLine.ProjLinePropertyId;
        #        this.ProjSalesCurrencyId= _purchLine.ProjSalesCurrencyId;
        #        this.ProjSalesUnitId    = _purchLine.ProjSalesUnitId;
        #        this.ProjSalesPrice     = _purchLine.ProjSalesPrice;
        #        this.ProjTaxGroupId     = _purchLine.ProjTaxGroupId;
        #        this.ProjTaxItemGroupId = _purchLine.ProjTaxItemGroupId;
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        this.VariantId             = _purchLine.VariantId;
        #    }
        #
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromPurchLine_IN(_purchLine);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchLine_IN
        #/// <summary>
        #/// Initializes the fields of <c> PurchLine </c> from given <c> PurchLine </c> buffer.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// Buffer of <c> PurchLine </c>.
        #/// </param>
        #// <GIN>
        #public void initFromPurchLine_IN(PurchLine _purchLine)
        #{
        #    PurchLine_IN    purchLineFrom_IN    = _purchLine.purchLine_IN();
        #    PurchLine_IN    purchLineTo_IN      = this.purchLine_IN();
        #
        #    purchLineTo_IN.CompanyLocation_IN   = purchLineFrom_IN.CompanyLocation_IN;
        #    purchLineTo_IN.TaxInformation_IN    = purchLineFrom_IN.TaxInformation_IN;
        #    purchLineTo_IN.VendorLocation_IN    = purchLineFrom_IN.VendorLocation_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLineTo_IN.AssessableValue_IN                   = purchLineFrom_IN.AssessableValue_IN;
        #        purchLineTo_IN.AssessableValueAccountingCurrency    = purchLineFrom_IN.AssessableValueAccountingCurrency;
        #        purchLineTo_IN.MaximumRetailPrice_IN                = purchLineFrom_IN.MaximumRetailPrice_IN;
        #        purchLineTo_IN.vatGoodsType_IN                      = purchLineFrom_IN.vatGoodsType_IN;
        #        purchLineTo_IN.NonRecoverablePercent_IN             = purchLineFrom_IN.NonRecoverablePercent_IN;
        #        purchLineTo_IN.ExciseTariffCodes_IN                 = purchLineFrom_IN.ExciseTariffCodes_IN;
        #        purchLineTo_IN.CustomsTariffCodeTable_IN            = purchLineFrom_IN.CustomsTariffCodeTable_IN;
        #        purchLineTo_IN.ServiceCodeTable_IN                  = purchLineFrom_IN.ServiceCodeTable_IN;
        #        purchLineTo_IN.ExciseRecordType_IN                  = purchLineFrom_IN.ExciseRecordType_IN;
        #        purchLineTo_IN.ExciseType_IN                        = purchLineFrom_IN.ExciseType_IN;
        #        purchLineTo_IN.gtaServiceCategory_IN                = purchLineFrom_IN.gtaServiceCategory_IN;
        #
        #        if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #            _purchLine.purchTable().purchTable_W().CustomsImportOrder_IN &&
        #            this.purchTable().purchTable_W().CustomsImportOrder_IN)
        #        {
        #            purchLineTo_IN.CustomsMaxRetailPrice_IN   = purchLineFrom_IN.CustomsMaxRetailPrice_IN;
        #            purchLineTo_IN.MaximumRetailPrice_IN      = Currency::customsCurAmount_IN(purchLineFrom_IN.CustomsMaxRetailPrice_IN,
        #                                                                            _purchLine.CurrencyCode,
        #                                                                            Direction_IN::Import,
        #                                                                            systemDateGet(),
        #                                                                            false);
        #        }
        #        purchLineTo_IN.IsRecoverableServiceTax_IN     = purchLineFrom_IN.IsRecoverableServiceTax_IN;
        #        purchLineTo_IN.SalesTaxFormTypes_IN  = purchLineFrom_IN.SalesTaxFormTypes_IN;
        #    }
        #    if (TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        purchLineTo_IN.tdsGroup_IN                    = purchLineFrom_IN.tdsGroup_IN;
        #        purchLineTo_IN.tcsGroup_IN                    = purchLineFrom_IN.tcsGroup_IN;
        #    }
        #
        #    this.packPurchLine_IN(purchLineTo_IN);
        #}
        #// </GIN>
        #
      ENDSOURCE
      SOURCE #initFromPurchLineHistory
        #/// <summary>
        #/// Initializes the history record that is based on a <c>PurchLineHistory</c> record.
        #/// </summary>
        #/// <param name="_purchLineHistory">
        #/// A <c>PurchLineHistory</c> record on which to base initialization.
        #/// </param>
        #public void initFromPurchLineHistory(PurchLineHistory _purchLineHistory)
        #{
        #    PurchLineMap purchLineMap;
        #    PurchLineMap_W          purchLineMap_W;
        #    PurchLine_W             purchLine_W;
        #    PurchLineMap_IN         purchLineMap_IN;
        #    PurchLine_IN            purchLine_IN;
        #
        #    purchLineMap.data(_purchLineHistory.data());
        #    this.data(purchLineMap.data());
        #
        #    if (PurchLine_IN::isExtensionEnabled())
        #    {
        #        purchLineMap_IN.data(_purchLineHistory.purchLineHistory_IN());
        #        purchLine_IN.data(purchLineMap_IN.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchLine_IN);
        #    }
        #    if (PurchLine_W::isExtensionEnabled())
        #    {
        #        purchLineMap_W.data(_purchLineHistory.purchLineHistory_W());
        #        purchLine_W.data(purchLineMap_W.data());
        #        this.SysExtensionSerializerMap::packExtensionTable(purchLine_W);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchParmLine_Asset
        #/// <summary>
        #/// Sets the asset-related field values of the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_parmLine_Asset">
        #/// A <c>PurchParmLine_Asset</c> or <c>VendInvoiceInfoLine_Asset</c> table buffer which will be used to
        #/// set the asset-related field values of the <c>PurchLine</c> table.
        #/// </param>
        #client server void initFromPurchParmLine_Asset(VendDocumentLineAssetMap _parmLine_Asset)
        #{
        #    if  (_parmLine_Asset.CreateFixedAsset == NoYes::Yes)
        #    {
        #        if (AssetParameters::find().AssetAllowCreate)
        #        {
        #            this.CreateFixedAsset    = _parmLine_Asset.CreateFixedAsset;
        #            this.AssetGroup          = _parmLine_Asset.AssetGroup;
        #        }
        #        else
        #        {
        #            this.CreateFixedAsset =  NoYes::No;
        #            this.AssetGroup       = '';
        #        }
        #    }
        #    else
        #    {
        #        this.AssetGroup          = '';
        #        this.CreateFixedAsset    = _parmLine_Asset.CreateFixedAsset;
        #    }
        #
        #    this.AssetId             = _parmLine_Asset.AssetId;
        #    this.AssetBookId         = _parmLine_Asset.AssetBookId;
        #    this.AssetTransTypePurch = _parmLine_Asset.AssetTransTypePurch;
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQLine
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>PurchRFQLine</c> record.
        #/// </summary>
        #/// <param name="_purchRFQLine">
        #///    The <c>PurchRFQLine</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void initFromPurchRFQLine(PurchRFQLine _purchRFQLine)
        #{
        #    PurchLine_IN        purchLine_IN;
        #
        #    this.ItemId                     = _purchRFQLine.ItemId;
        #    this.ProcurementCategory        = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                            _purchRFQLine.ItemId,
        #                                            EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.DeliveryDate               = _purchRFQLine.DeliveryDate;
        #    this.QtyOrdered                 = _purchRFQLine.QtyOrdered;
        #    this.PurchUnit                  = _purchRFQLine.PurchUnit;
        #    this.LineDisc                   = _purchRFQLine.LineDisc;
        #    this.LinePercent                = _purchRFQLine.LinePercent;
        #    this.LineAmount                 = _purchRFQLine.LineAmount;
        #    this.setInventDimId(_purchRFQLine.InventDimId);
        #    this.Name                       = _purchRFQLine.Name;
        #    this.ExternalItemId             = _purchRFQLine.ExternalItemId;
        #    this.DeliveryPostalAddress      = _purchRFQLine.DeliveryPostalAddress;
        #    this.AddressRefTableId          = _purchRFQLine.AddressRefTableId;
        #    this.AddressRefRecId            = _purchRFQLine.AddressRefRecId;
        #    this.DeliveryName               = _purchRFQLine.DeliveryName;
        #    this.MultiLnDisc                = _purchRFQLine.MultiLnDisc;
        #    this.MultiLnPercent             = _purchRFQLine.MultiLnPercent;
        #    this.PurchMarkup                = _purchRFQLine.PurchMarkup;
        #    this.ReqPOId                    = _purchRFQLine.ReqPOId;
        #    this.ReqPlanIdSched             = _purchRFQLine.ReqPlanIdSched;
        #    this.AssetId                    = _purchRFQLine.AssetId;
        #    this.AssetBookId                = _purchRFQLine.AssetBookId;
        #    this.AssetTransTypePurch        = _purchRFQLine.AssetTransTypePurch;
        #    this.PurchPrice                 = _purchRFQLine.PurchPrice;
        #    this.PurchQty                   = _purchRFQLine.PurchQty;
        #    this.DefaultDimension           = _purchRFQLine.DefaultDimension;
        #    this.TaxGroup                   = _purchRFQLine.TaxGroup;
        #    this.AddressRefRecId            = _purchRFQLine.AddressRefRecId;
        #    this.AddressRefTableId          = _purchRFQLine.AddressRefTableId;
        #    this.ConfirmedDlv               = _purchRFQLine.ConfirmedDlv;
        #
        #    if (_purchRFQLine.InventRefTransId)
        #    {
        #        this.InventRefTransId           = _purchRFQLine.InventRefTransId;
        #    }
        #
        #    if (_purchRFQLine.InventRefId)
        #    {
        #        this.InventRefId                = _purchRFQLine.InventRefId;
        #    }
        #
        #    this.TaxItemGroup               = _purchRFQLine.TaxItemGroup;
        #
        #    this.PdsCWQty                   = _purchRFQLine.PdsCWQty;
        #    this.DiscAmount                 = this.discAmount();
        #    this.DiscPercent                = this.discPercent();
        #
        #    if (_purchRFQLine.ProjId)
        #    {
        #        this.ProjId                 = _purchRFQLine.ProjId;
        #        this.ActivityNumber         = _purchRFQLine.ActivityNumber;
        #        this.ProjCategoryId         = _purchRFQLine.ProjCategoryId;
        #        this.ProjLinePropertyId     = _purchRFQLine.ProjLinePropertyId;
        #        this.ProjSalesCurrencyId    = _purchRFQLine.ProjSalesCurrencyId;
        #        this.ProjSalesUnitId        = _purchRFQLine.ProjSalesUnitId;
        #        this.ProjSalesPrice         = _purchRFQLine.ProjSalesPrice;
        #        this.ProjTaxGroupId         = _purchRFQLine.ProjTaxGroupId;
        #        this.ProjTaxItemGroupId     = _purchRFQLine.ProjTaxItemGroupId;
        #        this.ProjTransId            = _purchRFQLine.ProjTransId;
        #    }
        #
        #    if (BrazilParameters::isEnabled())
        #    {
        #        this.cfopTable_BR           = _purchRFQLine.cfopTable_BR;
        #        this.TaxServiceCode_BR      = _purchRFQLine.TaxServiceCode_BR;
        #        this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #    }
        #
        #    if(TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.CompanyLocation_IN         = _purchRFQLine.CompanyLocation_IN;
        #        purchLine_IN.TaxInformation_IN          = PurchRFQLineTaxExtensionIN::findBypurchRFQLine(_purchRFQLine.RecId).TaxInformation_IN;
        #        purchLine_IN.CustomsTariffCodeTable_IN  = _purchRFQLine.CustomsTariffCodeTable_IN;
        #        purchLine_IN.ServiceCodeTable_IN        = _purchRFQLine.ServiceCodeTable_IN;
        #        purchLine_IN.gtaServiceCategory_IN      = _purchRFQLine.gtaServiceCategory_IN;
        #        purchLine_IN.ExciseTariffCodes_IN       = _purchRFQLine.ExciseTariffCodes_IN;
        #        purchLine_IN.ExciseRecordType_IN        = _purchRFQLine.ExciseRecordType_IN;
        #        purchLine_IN.ExciseType_IN              = _purchRFQLine.ExciseType_IN;
        #        purchLine_IN.SalesTaxFormTypes_IN       = _purchRFQLine.SalesTaxFormTypes_IN;
        #        purchLine_IN.vatGoodsType_IN            = _purchRFQLine.vatGoodsType_IN;
        #        purchLine_IN.dsa_in                     = _purchRFQLine.dsa_in;
        #        purchLine_IN.VendorLocation_IN          = PurchLine::getVendorLocationId_IN(_purchRFQLine.purchRFQTable().vendTable().Party);
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchRFQReplyLine
        #void initFromPurchRFQReplyLine(PurchRFQReplyLine _purchRFQReplyLine)
        #{
        #    CompanyInfo             companyInfo;
        #    WorkCalendarSched       workCalendar;
        #    InventItemPurchSetup    itemPurchSetup;
        #    int                     leadTime;
        #    CalendarDays            calDays;
        #    PurchLine_IN            purchLine_IN;
        #
        #    this.DeliveryDate   = _purchRFQReplyLine.DeliveryDate;
        #    if (!this.DeliveryDate)
        #    {
        #        if (_purchRFQReplyLine.LeadTime > 0)
        #        {
        #            leadTime = _purchRFQReplyLine.LeadTime;
        #            calDays  = _purchRFQReplyLine.CalendarDays;
        #        }
        #        else
        #        {
        #            itemPurchSetup  = InventItemPurchSetup::find(PurchRFQLine::findRecId(_purchRFQReplyLine.rfqLineRecId).ItemId, this.InventDimId);
        #            leadTime        = itemPurchSetup.getLeadTime();
        #            calDays         = itemPurchSetup.calendarDays();
        #        }
        #
        #        if (leadTime > 0)
        #        {
        #            companyInfo       = CompanyInfo::find();
        #            workCalendar      = new WorkCalendarSched();
        #            this.DeliveryDate = workCalendar.schedDate(SchedDirection::Forward, systemDateGet(),
        #                                                leadTime, calDays, companyInfo.ShippingCalendarId);
        #        }
        #    }
        #    this.ConfirmedDlv   = _purchRFQReplyLine.DeliveryDate;
        #    this.PurchQty       = _purchRFQReplyLine.PurchQty;
        #    this.PurchUnit      = _purchRFQReplyLine.PurchUnit;
        #    this.PurchPrice     = _purchRFQReplyLine.PurchPrice;
        #    this.PriceUnit      = _purchRFQReplyLine.PriceUnit;
        #    this.LineDisc       = _purchRFQReplyLine.LineDisc;
        #    this.LinePercent    = _purchRFQReplyLine.LinePercent;
        #    this.LineAmount     = _purchRFQReplyLine.LineAmount;
        #    this.ExternalItemId = _purchRFQReplyLine.ExternalItemId;
        #    this.MultiLnDisc    = _purchRFQReplyLine.MultiLnDisc;
        #    this.MultiLnPercent = _purchRFQReplyLine.MultiLnPercent;
        #    this.PurchMarkup    = _purchRFQReplyLine.PurchMarkup;
        #    this.Name           = _purchRFQReplyLine.Name;
        #
        #    this.PdsCWQty       = _purchRFQReplyLine.PdsCWQty;
        #    this.DiscAmount     = this.discAmount();
        #    this.DiscPercent    = this.discPercent();
        #    if(TaxParameters::checkTaxParameters_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.MaximumRetailPrice_IN = _purchRFQReplyLine.MaximumRetailPrice_IN;
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromPurchTable
        #server void  initFromPurchTable(PurchTable _purchTable, boolean _ignoreInventDim = false)
        #{
        #    this.PurchaseType = _purchTable.PurchaseType;
        #
        #    this.type(_purchTable).initFromPurchTable(_purchTable, _ignoreInventDim);
        #}
      ENDSOURCE
      SOURCE #initFromReqPO
        #/// <summary>
        #///     Initializes the <c>PurchLine</c> record from the <c>ReqPO</c> record.
        #/// </summary>
        #/// <param name="_reqPO">
        #///    The <c>ReqPO</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromReqPO(ReqPO  _reqPO)
        #{
        #    //STF_MEGA_Presupuesto Dev: FPE
        #    PurchReqTable   stf_purchReqTableLocal;
        #    PurchTable      stf_PurchTable;
        #    //End
        #
        #    this.ItemId                 = _reqPO.ItemId;
        #    this.ProcurementCategory    = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                        _reqPO.ItemId,
        #                                        EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #
        #    this.setInventDimId(_reqPO.CovInventDimId);
        #
        #    this.ReqPOId                = _reqPO.RefId;
        #    this.ReqPlanIdSched         = ReqPlanVersion::find(_reqPO.PlanVersion).ReqPlanId;
        #
        #    this.PurchQty               = _reqPO.PurchQty;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PdsCWQty                  = _reqPO.PdsCWReqQty;
        #        this.PdsCWRemainInventPhysical = _reqPO.PdsCWReqQty;
        #    }
        #
        #    this.RemainPurchPhysical    = _reqPO.PurchQty;
        #    this.PurchUnit              = _reqPO.PurchUnit;
        #
        #    this.QtyOrdered             = this.calcQtyOrdered();
        #    this.RemainInventPhysical   = this.QtyOrdered;
        #    this.initBarcode(this.inventDim());
        #
        #    this.initName();
        #    this.initFromVendExternalItemDescription();
        #
        #    //STF_MEGA_Presupuesto Dev: FPE
        #    if(this.PurchReqId)
        #    {
        #        stf_purchReqTableLocal = PurchReqTable::findPurchReqId(this.PurchReqId);
        #        stf_PurchTable = PurchTable::find(this.PurchId,true);
        #        if(!stf_PurchTable.ISBudgetKeyId && stf_purchReqTableLocal.ISBudgetKeyId)
        #        {
        #            ttsBegin;
        #            stf_PurchTable.ISBudgetKeyId = stf_purchReqTableLocal.ISBudgetKeyId;
        #            stf_PurchTable.ItemBuyerGroupId = stf_purchReqTableLocal.ISItemBuyerGroupId;
        #            ttsCommit;
        #        }
        #    }
        #    //End
        #}
      ENDSOURCE
      SOURCE #initFromSalesLine
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>SalesLine</c> record.
        #/// </summary>
        #/// <param name="_salesLine">
        #///    The <c>SalesLine</c> record from which to initialize the <c>PurchLine</c> record.
        #/// </param>
        #void  initFromSalesLine(SalesLine _salesLine)
        #{
        #    SalesTable                  salesTable;
        #    InventDim                   inventDim = this.inventDim();
        #    MCRSalesLineDropShipment    mcrSalesLineDropShipment = _salesLine.mcrSalesLineDropShipment();
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.ActivityNumber = _salesLine.ActivityNumber;
        #    }
        #
        #    this.ItemId = _salesLine.ItemId;
        #    // SalesCategory cannot be used for purch so we look it up from the item
        #    this.ProcurementCategory = EcoResProductCategory::findByItemIdCategoryHierarchyRole(
        #                                    _salesLine.ItemId,
        #                                    EcoResCategoryNamedHierarchyRole::Procurement).Category;
        #    this.setStockedProduct();
        #    this.Name = _salesLine.Name;
        #
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), _salesLine.inventDim());
        #
        #    this.setAddressFromInventDim(inventDim);
        #
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.InventRefId                = _salesLine.SalesId;
        #    this.InventRefTransId           = _salesLine.InventTransId;
        #    this.ItemRefType                = InventRefType::Sales;
        #    this.ReturnStatus               = _salesLine.ReturnStatus;
        #
        #    if (this.isDropShipment())
        #    {
        #        salesTable = _salesLine.salesTable();
        #        this.CustomerRef                = salesTable.CustomerRef;
        #        this.CustPurchaseOrderFormNum   = salesTable.PurchOrderFormNum;
        #    }
        #
        #    this.ProjId = _salesLine.ProjId;
        #    this.ProjCategoryId = _salesLine.ProjCategoryId;
        #    if (this.ProjId && !_salesLine.ProjId)
        #    {
        #        this.Scrap = NoYes::No;
        #    }
        #
        #    // If no itemid, then keep the name from sales.
        #    if (this.ItemId)
        #    {
        #        if (!this.isDropShipment() || !this.Name)
        #        {
        #            this.initName();
        #        }
        #
        #        this.initFromVendExternalItemDescription();
        #    }
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromSalesLine_IN(_salesLine);
        #    }
        #
        #    if (mcrSalesLineDropShipment.DropShipment)
        #    {
        #        this.mcrDropShipComment  = mcrSalesLineDropShipment.DropShipComment;
        #        this.mcrDropShipStatus   = MCRDropShipStatus::POCreated;
        #        this.mcrDropShipment     = NoYes::Yes;
        #    }
        #
        #    // Set delivery date of purch line to match salesLine
        #    if(_salesLine.deliveryDate())
        #    {
        #        this.DeliveryDate  = _salesLine.deliveryDate();
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromSalesLine_IN
        #/// <summary>
        #/// Initializes the fields of <c> SalesLine </c> from given <c> SalesLine </c> buffer.
        #/// </summary>
        #/// <param name="_salesLine">
        #/// Buffer of <c> SalesLine </c>.
        #/// </param>
        #void initFromSalesLine_IN(SalesLine _salesLine)
        #{
        #    PurchLine_IN    purchLine_IN = this.purchLine_IN();
        #    SalesLine_IN    salesLine_IN = _salesLine.salesLine_IN();
        #
        #    purchLine_IN.CompanyLocation_IN         = salesLine_IN.CompanyLocation_IN;
        #    purchLine_IN.TaxInformation_IN          = salesLine_IN.TaxInformation;
        #    purchLine_IN.ExciseTariffCodes_IN       = salesLine_IN.ExciseTariffCodes_IN;
        #    purchLine_IN.CustomsTariffCodeTable_IN  = salesLine_IN.CustomsTariffCodeTable_IN;
        #    purchLine_IN.ServiceCodeTable_IN        = salesLine_IN.ServiceCodeTable_IN;
        #    purchLine_IN.ExciseType_IN              = salesLine_IN.ExciseType_IN;
        #    purchLine_IN.ExciseRecordType_IN        = salesLine_IN.ExciseRecordType_IN;
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
      ENDSOURCE
      SOURCE #initFromTmpPurchLine
        #/// <summary>
        #///    Initiates a <c>PurchLine</c> record with values based on <c>TmpPurchLine</c> record.
        #/// </summary>
        #/// <param name="_tmpPurchLine">
        #///    A record of the table <c>TmpPurchLine</c>.
        #/// </param>
        #public void initFromTmpPurchLine(TmpPurchLine _tmpPurchLine)
        #{
        #    this.type().initFromTmpPurchLine(_tmpPurchLine);
        #}
        #
      ENDSOURCE
      SOURCE #initFromTmpPurchLinePrice
        #void initFromTmpPurchLinePrice(TmpPurchLinePrice _tmpPurchLinePrice)
        #{
        #    this.LineAmount     = _tmpPurchLinePrice.LineAmount;
        #    this.PurchPrice     = _tmpPurchLinePrice.Price;
        #
        #    this.LineDisc       = _tmpPurchLinePrice.LineDisc;
        #    this.LinePercent    = _tmpPurchLinePrice.LinePercent;
        #
        #    this.MultiLnDisc    = _tmpPurchLinePrice.MultiLineDisc;
        #    this.MultiLnPercent = _tmpPurchLinePrice.MultiLinePercent;
        #
        #    this.DiscAmount     = this.discAmount();
        #    this.DiscPercent    = this.discPercent();
        #
        #    this.PurchMarkup    = _tmpPurchLinePrice.Markup;
        #
        #    this.PriceUnit      = _tmpPurchLinePrice.PriceUnit;
        #}
      ENDSOURCE
      SOURCE #initFromTmpSuppItem
        #void  initFromTmpSuppItem(TmpSuppItem _tmpSuppItem)
        #{
        #    InventDim               inventDim;
        #    this.ItemId             = _tmpSuppItem.ItemId;
        #    inventDim               = this.inventDim();
        #    inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), InventDim::find(_tmpSuppItem.InventDimId));
        #    this.setInventDimIdFromInventDim(inventDim);
        #
        #    this.initFromInventTable(this.inventTable());
        #    this.initFromVendExternalItemDescription();
        #
        #    this.PurchQty           = _tmpSuppItem.Qty;
        #    this.QtyOrdered         = this.calcQtyOrdered();
        #
        #    if (_tmpSuppItem.SuppItemFree)
        #    {
        #        this.PurchPrice     = 0.0;
        #        this.LinePercent    = 0.0;
        #        this.LineDisc       = 0.0;
        #        this.MultiLnDisc    = 0.0;
        #        this.MultiLnPercent = 0.0;
        #        this.PurchMarkup    = 0.0;
        #        this.DiscAmount     = 0.0;
        #        this.DiscPercent    = 0.0;
        #    }
        #
        #    this.LineAmount         = this.calcLineAmountForced();
        #}
      ENDSOURCE
      SOURCE #initFromVendExternalItemDescription
        #server void initFromVendExternalItemDescription(InventDim _inventDim = this.inventDim())
        #{
        #    VendExternalItemDescription vendExternalItemDescription = new VendExternalItemDescription(this.ItemId, _inventDim, this.purchTable().OrderAccount);
        #
        #    if (vendExternalItemDescription.findExternalDescription())
        #    {
        #        this.ExternalItemId = vendExternalItemDescription.externalItemId();
        #        if (vendExternalItemDescription.externalItemFreeTxt())
        #        {
        #            if (VendFormletterParameters::find().ExternalItemOverwriteAppend == OverwriteAppend::Overwrite)
        #            {
        #                this.Name =  vendExternalItemDescription.externalItemFreeTxt();
        #            }
        #            else
        #            {
        #                if (!this.isDropShipment() || !this.Name)
        #                {
        #                    this.initName(this.inventTable());
        #                }
        #
        #                if (this.Name)
        #                {
        #                    this.Name += '\n';
        #                }
        #                this.Name += vendExternalItemDescription.externalItemFreeTxt();
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoice4PaymTrans_RU
        #public server void initFromVendInvoice4PaymTrans_RU(VendInvoice4PaymTrans_RU _vendInvoice4PaymTrans,
        #                                                    boolean                  _copyPrecisely = true,
        #                                                    boolean                  _copyPriceDisc = true,
        #                                                    boolean                  _copyQty       = true,
        #                                                    Qty                      _qty           = _vendInvoice4PaymTrans.Qty
        #                                                    , PdsCWInventQty         _pdsCWQty      = pdsIsCWItem(_vendInvoice4PaymTrans.ItemId) ? _vendInvoice4PaymTrans.PdsCWQty : 0
        #                                                    )
        #{
        #    InventDim inventDim;
        #
        #    this.initFromItemOrCategory(_vendInvoice4PaymTrans.ItemId, _vendInvoice4PaymTrans.Category, _vendInvoice4PaymTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.InventDimId    = _vendInvoice4PaymTrans.InventDimId;
        #        this.PurchQty       = _qty;
        #        this.PurchUnit      = _vendInvoice4PaymTrans.PurchUnit;
        #        this.PdsCWQty       = _pdsCWQty;
        #        this.QtyOrdered     = this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        inventDim           = this.inventDim();
        #        EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendInvoice4PaymTrans.inventDim(), inventDim);
        #
        #        this.InventDimId    = InventDim::findOrCreate(inventDim).InventDimId;
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice     = _vendInvoice4PaymTrans.PurchPrice;
        #        this.PriceUnit      = _vendInvoice4PaymTrans.PriceUnit;
        #        this.LinePercent    = _vendInvoice4PaymTrans.LinePercent;
        #        this.LineDisc       = _vendInvoice4PaymTrans.LineDisc;
        #        this.MultiLnDisc    = _vendInvoice4PaymTrans.MultiLnDisc;
        #        this.MultiLnPercent = _vendInvoice4PaymTrans.MultiLnPercent;
        #        this.PurchMarkup    = _vendInvoice4PaymTrans.PurchMarkup;
        #        this.LineAmount     = _vendInvoice4PaymTrans.LineAmount;
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.InventDimId      = _vendInvoice4PaymTrans.InventDimId;
        #        this.Name             = _vendInvoice4PaymTrans.Name;
        #        this.ExternalItemId   = _vendInvoice4PaymTrans.ExternalItemId;
        #        this.TaxGroup         = _vendInvoice4PaymTrans.TaxGroup;
        #        this.TaxItemGroup     = _vendInvoice4PaymTrans.TaxItemGroup;
        #        this.DefaultDimension = _vendInvoice4PaymTrans.DefaultDimension;
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceTrans
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on a packing invoice line.
        #/// </summary>
        #/// <param name="_vendInvoiceTrans">
        #///    The <c>VendInvoiceTrans</c> buffer to initialize from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A <c>Boolean</c> value that specifies whether to precisely copy all details; optional.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A <c>Boolean</c> value that specifies whether to copy the price discount fields; optional.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A <c>Boolean</c> value that specifies whether to copy the quantity information; optional.
        #/// </param>
        #/// <param name="_qty">
        #///    A quantity which overrides the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than value of the other table buffer; optional.
        #/// </param>
        #/// <param name="_pdsCWQty">
        #///    A catch weight quantity which overrides the <c>PdsCWQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than the value of the other table buffer; optional.
        #/// </param>
        #server void  initFromVendInvoiceTrans(VendInvoiceTrans  _vendInvoiceTrans,
        #                                      boolean           _copyPrecisely = true,
        #                                      boolean           _copyPriceDisc = true,
        #                                      boolean           _copyQty       = true,
        #                                      Qty               _qty           = _vendInvoiceTrans.Qty
        #                                      ,PdsCWInventQty   _pdsCWQty      = pdsIsCWItem(_vendInvoiceTrans.ItemId) ? _vendInvoiceTrans.PdsCWQty : 0
        #                                    )
        #{
        #    InventDim   inventDim;
        #
        #    PurchLine_W     purchLine_W;
        #    #isoCountryRegionCodes
        #
        #    this.initFromItemOrCategory(_vendInvoiceTrans.ItemId, _vendInvoiceTrans.ProcurementCategory, _vendInvoiceTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _vendInvoiceTrans.PurchUnit;
        #        this.QtyOrdered         = _vendInvoiceTrans.Qty == _qty ? _vendInvoiceTrans.InventQty : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _pdsCWQty;
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendInvoiceTrans.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPriceDisc)
        #    {
        #        this.PurchPrice         = _vendInvoiceTrans.PurchPrice;
        #        this.PriceUnit          = _vendInvoiceTrans.PriceUnit;
        #        this.LinePercent        = _vendInvoiceTrans.LinePercent;
        #        this.LineDisc           = _vendInvoiceTrans.LineDisc;
        #        this.MultiLnDisc        = _vendInvoiceTrans.MultiLnDisc;
        #        this.MultiLnPercent     = _vendInvoiceTrans.MultiLnPercent;
        #        this.PurchMarkup        = _vendInvoiceTrans.PurchMarkup;
        #        this.LineAmount         = _vendInvoiceTrans.LineAmount;
        #        this.DiscAmount         = this.discAmount();
        #        this.DiscPercent        = this.discPercent();
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.setInventDimId(_vendInvoiceTrans.InventDimId);
        #        this.Name               = _vendInvoiceTrans.Name;
        #        this.ExternalItemId     = _vendInvoiceTrans.ExternalItemId;
        #        this.LedgerDimension    = _vendInvoiceTrans.LedgerDimension;
        #        this.TaxGroup           = _vendInvoiceTrans.TaxGroup;
        #        this.TaxItemGroup       = _vendInvoiceTrans.TaxItemGroup;
        #        this.DefaultDimension   = _vendInvoiceTrans.DefaultDimension;
        #        this.StatProcId         = _vendInvoiceTrans.StatProcId;
        #        this.Transport          = _vendInvoiceTrans.Transport;
        #        this.Port               = _vendInvoiceTrans.Port;
        #        this.StatProcId         = _vendInvoiceTrans.StatProcId;
        #    }
        #
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        this.initFromVendInvoiceTrans_IN(_vendInvoiceTrans, _qty);
        #    }
        #
        #
        #    this.setAddressFromInventDim(this.inventDim()
        #    , !_copyPrecisely
        #    );
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        purchLine_W.MarkupCode_RU          = _vendInvoiceTrans.MarkupCode_RU;
        #        this.packPurchLine_W(purchLine_W);
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromVendInvoiceTrans_IN
        #/// <summary>
        #/// Reads the table buffer and initialize the field of current table.
        #/// </summary>
        #/// <param name="_vendInvoiceTrans">
        #/// The table buffer is used to find the record.
        #/// </param>
        #/// <param name="_qty">
        #/// The value is set.
        #/// </param>
        #// <GIN>
        #private void initFromVendInvoiceTrans_IN(VendInvoiceTrans  _vendInvoiceTrans, Qty _qty)
        #{
        #    PurchLine       purchLineLoc;
        #    VendInvoiceJour vendInvoiceJourLoc;
        #    RealBase        factor;
        #    AmountMST       perUnitAssessableValue;
        #
        #    VendInvoiceTrans_IN vendInvoiceTransIN;
        #    PurchLine_IN    purchLine_IN = this.purchLine_IN();
        #
        #    purchLine_IN.tdsGroup_IN                = _vendInvoiceTrans.tdsGroup_IN;
        #    purchLine_IN.tcsGroup_IN                = _vendInvoiceTrans.tcsGroup_IN;
        #    purchLine_IN.CreditNoteDate_IN          = _vendInvoiceTrans.InvoiceDate;
        #    purchLine_IN.CompanyLocation_IN         = _vendInvoiceTrans.CompanyLocation_IN;
        #    purchLine_IN.TaxInformation_IN          = VendInvoiceTransTaxExtensionIN::findByVendInvoiceTrans(_vendInvoiceTrans.RecId).TaxInformation_IN;
        #    purchLine_IN.TaxWithholdLineNum_IN      = _vendInvoiceTrans.LineNum;
        #    purchLine_IN.gtaServiceCategory_IN      = _vendInvoiceTrans.gtaServiceCategory_IN;
        #    purchLine_IN.ExciseRecordType_IN        = _vendInvoiceTrans.ExciseRecordType_IN;
        #    purchLine_IN.ExciseType_IN              = _vendInvoiceTrans.ExciseType_IN;
        #    purchLine_IN.ExciseTariffCodes_IN       = _vendInvoiceTrans.ExciseTariffCodes_IN;
        #    purchLine_IN.CustomsTariffCodeTable_IN  = _vendInvoiceTrans.CustomsTariffCodeTable_IN;
        #    purchLine_IN.VendorLocation_IN          = _vendInvoiceTrans.VendorLocation_IN;
        #    purchLine_IN.AssessableValue_IN         = _vendInvoiceTrans.AssessableValue_IN;
        #    purchLine_IN.MaximumRetailPrice_IN      = _vendInvoiceTrans.MaximumRetailPrice_IN;
        #    purchLine_IN.vatGoodsType_IN            = _vendInvoiceTrans.vatGoodsType_IN;
        #    purchLine_IN.NonRecoverablePercent_IN   = _vendInvoiceTrans.NonRecoverablePercent_IN;
        #    purchLine_IN.SalesTaxFormTypes_IN       = _vendInvoiceTrans.SalesTaxFormTypes_IN;
        #    purchLine_IN.dsa_in                     = _vendInvoiceTrans.dsa_in;
        #
        #    vendInvoiceJourLoc  = _vendInvoiceTrans.vendInvoiceJour();
        #    vendInvoiceTransIN  = _vendInvoiceTrans.vendInvoiceTrans_IN();
        #
        #    if (vendInvoiceJourLoc)
        #    {
        #        purchLine_IN.TaxWithholdVoucher_IN = vendInvoiceJourLoc.LedgerVoucher;
        #    }
        #
        #    purchLineLoc = PurchLine::findInventTransId(_vendInvoiceTrans.InventTransId);
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs) &&
        #        purchLineLoc.purchTable().purchTable_W().CustomsImportOrder_IN &&
        #        this.purchTable().purchTable_W().CustomsImportOrder_IN)
        #    {
        #        purchLine_IN.CustomsMaxRetailPrice_IN   = purchLineLoc.purchLine_IN().CustomsMaxRetailPrice_IN;
        #        purchLine_IN.MaximumRetailPrice_IN      = Currency::customsCurAmount_IN(purchLine_IN.CustomsMaxRetailPrice_IN, purchLineLoc.CurrencyCode, Direction_IN::Import, systemDateGet(), false);
        #    }
        #
        #    if (_vendInvoiceTrans.Qty != _qty)
        #    {
        #        factor = _vendInvoiceTrans.AssessableValue_IN / _vendInvoiceTrans.Qty;
        #        purchLine_IN.AssessableValue_IN = factor * _qty;
        #        perUnitAssessableValue = vendInvoiceTransIN.AssessableValueAccountingCurrency/_vendInvoiceTrans.Qty;
        #        purchLine_IN.AssessableValueAccountingCurrency = perUnitAssessableValue * _qty;
        #    }
        #    else
        #    {
        #        purchLine_IN.AssessableValue_IN = _vendInvoiceTrans.AssessableValue_IN;
        #        purchLine_IN.AssessableValueAccountingCurrency = vendInvoiceTransIN.AssessableValueAccountingCurrency;
        #    }
        #
        #    this.packPurchLine_IN(purchLine_IN);
        #}
        #// </GIN>
      ENDSOURCE
      SOURCE #initFromVendPackingSlipTrans
        #/// <summary>
        #///    Initializes a <c>PurchLine</c> table buffer based on a packing slip line.
        #/// </summary>
        #/// <param name="_vendPackingSlipTrans">
        #///    The <c>VendPackingSlipTrans</c> buffer to initialize from.
        #/// </param>
        #/// <param name="_copyPrecisely">
        #///    A Boolean value that specifies whether to precisely copy all details.
        #/// </param>
        #/// <param name="_copyPriceDisc">
        #///    A Boolean value that specifies whether to copy the price discount fields.
        #/// </param>
        #/// <param name="_copyQty">
        #///    A Boolean value that specifies whether to copy the quantity information.
        #/// </param>
        #/// <param name="_qty">
        #///    A quantity which overrides the <c>PurchQty</c> field value of the new <c>PurchLine</c>
        #///    buffer to be different than value of the other table buffer.
        #/// </param>
        #/// <param name="_cwQty">
        #///    A catch weight quantity which is used to set the value of the <c>PurchLine</c> catch weight quantity field.
        #/// </param>
        #server void  initFromVendPackingSlipTrans(VendPackingSlipTrans          _vendPackingSlipTrans,
        #                                          boolean                       _copyPrecisely,
        #                                          boolean                       _copyPriceDisc,
        #                                          boolean                       _copyQty,
        #                                          Qty                           _qty
        #                                          , PdsCWInventQty              _cwQty  = #PdsCatchWeightEnabled ? _vendPackingSlipTrans.PdsCWQty: 0
        #                                          )
        #{
        #    InventDim                   inventDim;
        #
        #    this.initFromItemOrCategory(_vendPackingSlipTrans.ItemId, _vendPackingSlipTrans.ProcurementCategory, _vendPackingSlipTrans.Name);
        #
        #    if (_copyQty)
        #    {
        #        this.setInventDimId(_vendPackingSlipTrans.InventDimId);
        #        this.PurchQty           = _qty;
        #        this.PurchUnit          = _vendPackingSlipTrans.PurchUnit;
        #        this.QtyOrdered         = _vendPackingSlipTrans.Qty == _qty ? _vendPackingSlipTrans.InventQty : this.calcQtyOrdered();
        #
        #        this.PdsCWQty           = _cwQty;
        #
        #    }
        #    else
        #    {
        #        if (this.isCategoryBased())
        #        {
        #            this.setInventDimId(_vendPackingSlipTrans.InventDimId);
        #        }
        #        else
        #        {
        #            inventDim               = this.inventDim();
        #            EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId, _vendPackingSlipTrans.inventDim(), inventDim);
        #            this.setInventDimIdFromInventDim(inventDim);
        #        }
        #    }
        #
        #    if (_copyPrecisely)
        #    {
        #        this.Name               = _vendPackingSlipTrans.Name;
        #        this.ExternalItemId     = _vendPackingSlipTrans.ExternalItemId;
        #        this.DefaultDimension   = _vendPackingSlipTrans.DefaultDimension;
        #        this.Transport          = _vendPackingSlipTrans.Transport;
        #        this.Port               = _vendPackingSlipTrans.Port;
        #        this.StatProcId         = _vendPackingSlipTrans.StatProcId;
        #        this.AccountingDistributionTemplate = _vendPackingSlipTrans.purchLine().AccountingDistributionTemplate;
        #    }
        #    this.setAddressFromInventDim(this.inventDim());
        #}
        #
      ENDSOURCE
      SOURCE #initFromVendTable
        #/// <summary>
        #///    Initializes the <c>PurchLine</c> record from the <c>VendTable</c> record.
        #/// </summary>
        #/// <param name="_vendTable">
        #///    The <c>VendTable</c> record from which to initialize the <c>PurchLine</c> record; optional.
        #/// </param>
        #void initFromVendTable (VendTable _vendTable = VendTable::find(this.VendAccount))
        #{
        #    DirPartyLocation        dirPartyLocation;
        #    PurchLine_IN            purchLine_IN;
        #
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        select firstonly Location from dirPartyLocation
        #            where dirPartyLocation.Party == _vendTable.Party;
        #
        #        purchLine_IN = this.purchLine_IN();
        #        purchLine_IN.VendorLocation_IN    = LogisticsLocation::find(dirPartyLocation.Location).RecId;
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #    #ISOCountryRegionCodes
        #
        #    this.Tax1099Fields = _vendTable.Tax1099Fields;
        #    if (_vendTable
        #        && _vendTable.TaxWithholdCalculate == NoYes::Yes
        #        && (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE]) || BrazilParameters::isEnabled()))
        #    {
        #        this.TaxWithholdGroup_TH = _vendTable.TaxWithholdGroup;
        #    }
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        #    {
        #        this.OperationType_MX = _vendTable.OperationType_MX;
        #    }
        #}
      ENDSOURCE
      SOURCE #initName
        #void initName(InventTable inventTable = this.inventTable(), EcoResCategoryId _procurementCategory = this.ProcurementCategory)
        #{
        #    this.Name = PurchParameters::nameAndOrDescription(inventTable, this.purchTable().LanguageId, this.InventDimId, EcoResCategory::find(_procurementCategory));
        #}
      ENDSOURCE
      SOURCE #initPurchQty
        #void  initPurchQty()
        #{
        #    PurchLineType  purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.initPurchQty();
        #}
      ENDSOURCE
      SOURCE #initValue
        #public void initValue(PurchaseType _purchaseType = this.PurchaseType)
        #{
        #    PurchLineView_IN    purchLineView_IN;
        #
        #    this.PurchaseType   = _purchaseType;
        #    this.WorkflowState  = TradeWorkflowState::NotSubmitted;
        #
        #    super();
        #
        #    this.type().initValue();
        #
        #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #    {
        #        purchLineView_IN = this.purchLineView_IN();
        #        purchLineView_IN.SalesPurchJournalLine_IN::initFromVendorInformation(this.VendAccount);
        #        purchLineView_IN.saveToPurchLine(this);
        #    }
        #}
      ENDSOURCE
      SOURCE #initVariantId
        #/// <summary>
        #/// Initializes the <c>VariantId</c> field in the <c>RetailVariantId</c> value of the current <c>InventDim</c> record
        #/// if there is a <c>InventDimCombination</c> table record for the current item and its inventory dimensions available.
        #/// Otherwise the <c>VariantId</c> field is initialized in the empty string.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The related <c>InventDim</c> table record.
        #/// </param>
        #public void initVariantId(InventDim _inventDim = this.inventDim())
        #{
        #    InventDimCombination comb;
        #    comb = InventDimCombination::findByInventDim(this.ItemId, _inventDim);
        #
        #    if (comb)
        #    {
        #        this.VariantId = comb.RetailVariantId;
        #    }
        #    else
        #    {
        #        this.VariantId = "";
        #    }
        #}
      ENDSOURCE
      SOURCE #insert
        #public void  insert(
        #    boolean     dropInvent                      = false,
        #    boolean     findMarkup                      = true,
        #    boolean     updatePurchTableDistributions   = true,
        #    boolean     _skipPurchTableUpdate           = false,
        #    boolean     _skipInterCompanyCalcDisc       = false)
        #{
        #    PurchReqTable               purchReqTable;
        #    PurchReqLine                purchReqLine;
        #    PurchTable                  gsPurchTable;
        #    PurchLineType               purchLineType;
        #    WHSPurchLine                whsPurchLine;
        #    WHSAutoCreateLoadLinePurch  autoCreateLoadLinePurch;
        #
        #    //STF_MEGA_Presupuesto Dev: FPE
        #    PurchReqTable   stf_purchReqTableLocal;
        #    PurchTable      stf_PurchTable;
        #    //End
        #
        #    // <GIN>
        #    #ISOCountryRegionCodes
        #    PurchTable                  purchTable;
        #    TransitDocumentManager_IN   transitDocManager;
        #    // </GIN>
        #
        #    ttsbegin;
        #
        #    purchLineType = this.type(this.purchTable(true));
        #    purchLineType.insert(dropInvent, findMarkup, updatePurchTableDistributions, _skipPurchTableUpdate, _skipInterCompanyCalcDisc);
        #
        #    ttscommit;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        this.Tax1099RecId = Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(this.Tax1099Fields).Tax1099Box, this.Tax1099RecId);
        #        PurchTotalsSummaryController::onInsert(this);
        #    }
        #
        #    if (WHSPurchLine::isExtensionRecordNeeded(this))
        #    {
        #        whsPurchLine = this.whsPurchLineForInsert();
        #        whsPurchLine.initFromPurchLine(this);
        #        whsPurchLine.insert();
        #    }
        #
        #    autoCreateLoadLinePurch = WHSAutoCreateLoadLine::newFromSourceLineTableBuffer(this);
        #    autoCreateLoadLinePurch.autoCreateLoadLine();
        #    PlSADPurchTable::puchLineAdded(this);
        #
        #    // <GIN>
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #    {
        #        transitDocManager = TransitDocumentManager_IN::newManager();
        #        if (transitDocManager.existsAnyTransitDocType() &&
        #            transitDocManager.existTransitRuleForTransType(tableNum(PurchTable)))
        #        {
        #            purchTable = PurchTable::find(this.PurchId);
        #            transitDocManager.transit(purchTable, this);
        #        }
        #    }
        #    // </GIN>
        #
        #    //STF_MEGA_Presupuesto Dev: FPE
        #    /*
        #    if(this.PurchReqId)
        #    {
        #        stf_purchReqTableLocal = PurchReqTable::findPurchReqId(this.PurchReqId);
        #        stf_PurchTable = PurchTable::find(this.PurchId,true);
        #        if(!stf_PurchTable.ISBudgetKeyId && stf_purchReqTableLocal.ISBudgetKeyId)
        #        {
        #            ttsBegin;
        #            stf_PurchTable.ISBudgetKeyId = stf_purchReqTableLocal.ISBudgetKeyId;
        #            stf_PurchTable.ItemBuyerGroupId = stf_purchReqTableLocal.ISItemBuyerGroupId;
        #            ttsCommit;
        #        }
        #    }*/
        #    //End
        #
        #    //STF_SoporteDesarrollo Dev: Hruiz Begin
        #    if(this.PurchReqId)
        #    {
        #        ttsBegin;
        #        select * from purchReqTable
        #        where purchReqTable.PurchReqId==this.PurchReqId;
        #
        #        select * from purchReqLine
        #        where purchReqLine.LineRefId == this.PurchReqLineRefId;
        #        //Begin::Dev Blizarraga
        #        if(subStr(purchReqLine.ItemId,1,3) == "ZSP")
        #            this.name = purchReqLine.Name;
        #        //End::Dev Blizarraga
        #        select forUpdate * from gsPurchTable
        #        where gsPurchTable.PurchId==this.PurchId;
        #
        #        gsPurchTable.ISBudgetKeyId=purchReqTable.ISBudgetKeyId;
        #        gsPurchTable.ItemBuyerGroupId=purchReqTable.ISItemBuyerGroupId;
        #        gsPurchTable.ReqAttention=purchReqTable.STf_InfAdver;
        #        gsPurchTable.DefaultDimension=purchReqLine.DefaultDimension;
        #        gsPurchTable.update();
        #        ttsCommit;
        #    }
        #    //STF_SoporteDesarrollo Dev: Hruiz End
        #}
      ENDSOURCE
      SOURCE #interCompanyIsBeingUpdated
        #public boolean interCompanyIsBeingUpdated(boolean _showWarning = true)
        #{
        #    SalesLine           salesLine;
        #    InventTransOrigin   inventTransOrigin;
        #    InventTrans         inventTrans;
        #    PurchTable          purchTable = this.purchTable();
        #    boolean             ret = false;
        #
        #    if (this.RecId
        #    &&  purchTable.InterCompanyOrder
        #    &&  purchTable.InterCompanyCompanyId)
        #    {
        #        if (this.isStocked())
        #        {
        #            inventTransOrigin = null;
        #            select firstonly RecId from inventTransOrigin
        #                where inventTransOrigin.InventTransId == this.InventTransId
        #                exists join inventTrans
        #                   where inventTrans.InventTransOrigin   == inventTransOrigin.RecId
        #                   &&   (inventTrans.StatusReceipt       == StatusReceipt::Received
        #                     ||  inventTrans.StatusReceipt       == StatusReceipt::Registered
        #                     ||  inventTrans.StatusReceipt       == StatusReceipt::Arrived
        #                     ||  inventTrans.StatusIssue         == StatusIssue::Deducted
        #                     ||  inventTrans.StatusIssue         == StatusIssue::Picked
        #                     ||  inventTrans.TransChildType      != InventTransChildType::None);
        #
        #            if (inventTransOrigin.RecId)
        #            {
        #                ret = true;
        #                if (_showWarning)
        #                {
        #                    setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                    setPrefix(#PreFixField(purchTable, PurchId));
        #                    checkFailed("@SYS93839");
        #                }
        #            }
        #            else
        #            {
        #                if (this.PurchStatus != PurchStatus::Invoiced)
        #                {
        #                    select TableId from inventTransOrigin
        #                        where inventTransOrigin.InventTransId == this.InventTransId
        #                        join sum(Qty) from inventTrans
        #                            where inventTrans.InventTransOrigin == inventTransOrigin.RecId
        #                            &&   (inventTrans.StatusReceipt     == StatusReceipt::Purchased
        #                               || inventTrans.StatusIssue       == StatusIssue::Sold);
        #
        #                    if (inventTrans.Qty != 0)
        #                    {
        #                        ret = true;
        #                        if (_showWarning)
        #                        {
        #                            setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                            setPrefix(#PreFixField(purchTable, PurchId));
        #                            checkFailed("@SYS93839");
        #                        }
        #                    }
        #                }
        #            }
        #        }
        #        else
        #        {
        #            ret = this.interCompanyIsBeingUpdatedNonInventoried(_showWarning);
        #        }
        #
        #        if (!ret
        #        &&  this.InterCompanyInventTransId)
        #        {
        #            changecompany(purchTable.InterCompanyCompanyId)
        #            {
        #                setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #
        #                salesLine = SalesLine::findInventTransId(this.InterCompanyInventTransId);
        #                if (salesLine)
        #                {
        #                    ret = salesLine.interCompanyIsBeingUpdated(_showWarning);
        #                }
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #interCompanyIsBeingUpdatedNonInventoried
        #/// <summary>
        #/// Checks whether the non stocked intercompany order line is being updated.
        #/// </summary>
        #/// <param name="_showWarning">
        #/// A Boolean value that specifies whether to show warnings for failed checks; optional.
        #/// </param>
        #/// <returns>
        #/// true if the non stocked intercompany order line is being updated; otherwise, false.
        #/// </returns>
        #public boolean interCompanyIsBeingUpdatedNonInventoried(boolean _showWarning = true)
        #{
        #    PurchTable          purchTable = this.purchTable();
        #    boolean             ret = false;
        #
        #    if (this.RecId
        #    &&  purchTable.InterCompanyOrder
        #    &&  purchTable.InterCompanyCompanyId)
        #    {
        #        if (this.registered() || this.receivedInTotal())
        #        {
        #            ret = true;
        #            if (_showWarning)
        #            {
        #                setPrefix(strFmt("@SYS93821",TradeInterCompany::curCompanyName()));
        #                setPrefix(#PreFixField(purchTable, PurchId));
        #                checkFailed("@SYS93839");
        #            }
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #interCompanyLineAmount
        #AmountCur interCompanyLineAmount(PurchQty      _purchQty    = this.PurchQty,
        #                                 InvoiceDate   _invoiceDate = this.DeliveryDate,
        #                                 Tax           _tax         = null)
        #{
        #    AmountCur       lineAmount;
        #    SalesLine       salesLine;
        #
        #    lineAmount = 0;
        #    if (this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #        if (salesLine.RecId)
        #        {
        #            lineAmount = Currency::curAmount2CurAmount(salesLine.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax),salesLine.CurrencyCode,this.CurrencyCode,_invoiceDate);
        #        }
        #        else
        #        {
        #            lineAmount = this.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax);
        #        }
        #    }
        #    else
        #    {
        #        lineAmount = this.calcLineAmountExclTax(_purchQty, _invoiceDate, _tax);
        #    }
        #    return lineAmount;
        #}
      ENDSOURCE
      SOURCE #interCompanyOriginDisplay
        #//BP Deviation Documented
        #display InterCompanyOriginDisplay interCompanyOriginDisplay()
        #{
        #    InterCompanyOriginDisplay   interCompanyOriginDisplay;
        #    DictEnum                    dictEnum = new DictEnum(enumNum(InterCompanyOrigin));
        #
        #    if (this.InterCompanyInventTransId)
        #    {
        #        interCompanyOriginDisplay = dictEnum.value2Name(this.InterCompanyOrigin);
        #    }
        #    return interCompanyOriginDisplay;
        #}
      ENDSOURCE
      SOURCE #interCompanyPurchaseLeadDate
        #server TransDate interCompanyPurchaseLeadDate(TransDate _deliveryDate)
        #{
        #    LeadTime                leadTime;
        #    CalendarDays            calendarDays;
        #    ReqItemTable            reqItemTable            = ReqItemTable::find(this.ItemId,this.InventDimId);
        #    PriceDisc               priceDisc;
        #    InventItemPurchSetup    inventItemPurchSetup    = InventItemPurchSetup::find(this.ItemId,this.InventDimId);
        #    TransDate               leadTimeDate;
        #    WorkCalendarSched       workCalendarSched;
        #
        #    if (reqItemTable.LeadTimePurchaseActive)
        #    {
        #        leadTime     = reqItemTable.LeadTimePurchase;
        #        calendarDays = reqItemTable.CalendarDaysPurchase;
        #    }
        #    else
        #    {
        #        priceDisc = PriceDisc::newFromSalesPurchLine(this, this.inventDim());
        #        priceDisc.findPrice(this.priceGroupId());
        #        if (priceDisc.deliveryDays())
        #        {
        #            leadTime     = priceDisc.deliveryDays();
        #            calendarDays = priceDisc.calendarDays();
        #        }
        #        else
        #        {
        #            leadTime     = inventItemPurchSetup.getLeadTime();
        #            calendarDays = inventItemPurchSetup.calendarDays();
        #        }
        #    }
        #
        #    workCalendarSched = new WorkCalendarSched();
        #    leadTimeDate = workCalendarSched.schedDate(SchedDirection::Backward,
        #                                               _deliveryDate,
        #                                               leadTime,
        #                                               calendarDays,
        #                                               this.vendTable_OrderAccount().PurchCalendarId,
        #                                               this.type().internalCalendarId());
        #
        #
        #    return leadTimeDate;
        #}
      ENDSOURCE
      SOURCE #interCompanyPurchLineExist
        #boolean interCompanyPurchLineExist()
        #{
        #    return SalesLine::findInventTransId(this.InventRefTransId).InterCompanyInventTransId ? true : false;
        #}
      ENDSOURCE
      SOURCE #interCompanyRevertMarkupTrans
        #server void interCompanyRevertMarkupTrans()
        #{
        #    SalesLine           salesLine;
        #    CustInvoiceTrans    custInvoiceTrans;
        #    VendInvoiceTrans    vendInvoiceTrans;
        #
        #    if (this.purchTable().isInterCompanyOrder()
        #    &&  this.ItemRefType == InventRefType::Sales
        #    &&  this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #        if (salesLine.InventTransIdReturn)
        #        {
        #            select firstonly InventRefType, InventRefTransId from custInvoiceTrans
        #                   where custInvoiceTrans.InventTransId ==  salesLine.InventTransIdReturn
        #                   &&    custInvoiceTrans.Qty           == -salesLine.SalesQty;
        #            if (custInvoiceTrans.InventRefType == InventRefType::Purch
        #            &&  custInvoiceTrans.InventRefTransId)
        #            {
        #                select firstonly vendInvoiceTrans
        #                       where vendInvoiceTrans.InventTransId ==  custInvoiceTrans.InventRefTransId
        #                       &&    vendInvoiceTrans.Qty           == -salesLine.SalesQty;
        #                if (vendInvoiceTrans)
        #                {
        #                    Markup::copy(true,vendInvoiceTrans,this);
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #interCompanySalesLine
        #SalesLine  interCompanySalesLine(boolean  _forUpdate = false)
        #{
        #    SalesLine   salesLine = null;
        #
        #    if (this.InterCompanyInventTransId)
        #    {
        #        changecompany(this.purchTable().InterCompanyCompanyId)
        #        {
        #            salesLine = SalesLine::findInventTransId(this.InterCompanyInventTransId,_forUpdate);
        #        }
        #
        #    }
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #interCompanySalesLineOriginal
        #SalesLine interCompanySalesLineOriginal(boolean  _forUpdate = false)
        #{
        #    SalesLine   salesLine = null;
        #
        #    if (this.ItemRefType == InventRefType::Sales
        #    &&  this.InventRefTransId)
        #    {
        #        changecompany(
        #                      this.company()
        #                      )
        #        {
        #            salesLine = SalesLine::findInventTransId(this.InventRefTransId,_forUpdate);
        #        }
        #    }
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #interCompanyUpdateNow
        #boolean  interCompanyUpdateNow()
        #{
        #    boolean  ok;
        #    PurchLine_IN    purchLine_IN;
        #    boolean         taxParameterEnabled_IN = TaxParameters::checkTaxParameters_IN();
        #
        #    if (!this.RecId)
        #    {
        #        ok = true;
        #    }
        #
        #    if (taxParameterEnabled_IN)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #    }
        #
        #    if (this.orig().ItemId                      != this.ItemId
        #    ||  this.orig().InventDimId                 != this.InventDimId
        #    ||  this.orig().DeliveryDate                != this.DeliveryDate
        #    ||  this.orig().ConfirmedDlv                != this.ConfirmedDlv
        #    ||  this.orig().ShippingDateRequested       != this.ShippingDateRequested
        #    ||  this.orig().ShippingDateConfirmed       != this.ShippingDateConfirmed
        #    ||  this.orig().LineNumber                  != this.LineNumber
        #    ||  this.orig().InventTransId               != this.InventTransId
        #    ||  this.orig().PurchQty                    != this.PurchQty
        #    ||  this.orig().PurchUnit                   != this.PurchUnit
        #    ||  this.orig().OverDeliveryPct             != this.OverDeliveryPct
        #    ||  this.orig().UnderDeliveryPct            != this.UnderDeliveryPct
        #    ||  this.orig().DeliveryPostalAddress       != this.DeliveryPostalAddress
        #    ||  this.orig().DeliveryName                != this.DeliveryName
        #    ||  this.orig().DefaultDimension            != this.DefaultDimension
        #    ||  this.orig().PurchPrice                  != this.PurchPrice
        #    ||  this.orig().PriceUnit                   != this.PriceUnit
        #    ||  this.orig().LineAmount                  != this.LineAmount
        #    ||  this.orig().PurchMarkup                 != this.PurchMarkup
        #    ||  this.orig().LineDisc                    != this.LineDisc
        #    ||  this.orig().LinePercent                 != this.LinePercent
        #    ||  this.orig().MultiLnDisc                 != this.MultiLnDisc
        #    ||  this.orig().MultiLnPercent              != this.MultiLnPercent
        #    ||  this.orig().Complete                    != this.Complete
        #    ||  this.orig().Blocked                     != this.Blocked
        #    ||  this.orig().ReturnDispositionCodeId     != this.ReturnDispositionCodeId
        #    ||  this.orig().ReturnStatus                != this.ReturnStatus
        #    ||  this.orig().MatchingAgreementLine       != this.MatchingAgreementLine
        #    ||  (taxParameterEnabled_IN
        #        &&  (purchLine_IN.orig().AssessableValue_IN              != purchLine_IN.AssessableValue_IN
        #             ||  purchLine_IN.orig().CompanyLocation_IN          != purchLine_IN.CompanyLocation_IN
        #             ||  purchLine_IN.orig().MaximumRetailPrice_IN       != purchLine_IN.MaximumRetailPrice_IN))
        #        )
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #inventDim
        #InventDim inventDim(boolean  update = false)
        #{
        #    return InventDim::find(this.InventDimId, update);
        #}
      ENDSOURCE
      SOURCE #inventDimProfileRAsset_RU
        #InventDim inventDimProfileRAsset_RU(InventDim _inventDim)
        #{
        #    RAssetParameters            rAssetParameters;
        #    InventTable                 inventTable;
        #
        #    if (! this.ItemId)
        #        return _inventDim;
        #
        #    rAssetParameters = RAssetParameters::find();
        #    if (! rAssetParameters.LowCostAssetInventProfileId)
        #        return _inventDim;
        #
        #    inventTable      = this.inventTable();
        #    if (! inventTable.AssetGroupId_RU)
        #        return _inventDim;
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        RAssetMainGroup::find(inventTable.AssetGroupId_RU).GroupType == RAssetGroupTypes::LowCostAssets)
        #    {
        #        if (RAssetTable::acquisitionPriceFromPurchLine(this) <= rAssetParameters.LowCostAmountLimit)
        #        {
        #            _inventDim.InventProfileId_RU = rAssetParameters.LowCostAssetInventProfileId;
        #        }
        #    }
        #
        #    return _inventDim;
        #}
      ENDSOURCE
      SOURCE #inventProfileType_RU
        #InventProfileType_RU inventProfileType_RU(boolean _forceGeneral = true)
        #{
        #    InventProfileType_RU inventProfileType = this.inventDim().inventProfile_RU().InventProfileType;
        #
        #    if (inventProfileType == InventProfileType_RU::NotSpecified && _forceGeneral)
        #    {
        #        inventProfileType = InventProfileType_RU::General;
        #    }
        #
        #    return inventProfileType;
        #}
      ENDSOURCE
      SOURCE #inventSiteChanged_BR
        #/// <summary>
        #///     Method called wherever the InventsiteId is changed.
        #/// </summary>
        #
        #public void inventSiteChanged_BR()
        #{
        #    if (this.PurchaseType == PurchaseType::ReturnItem)
        #        this.setAddressFromPurchTable();
        #
        #    this.setCFOP_BR();
        #}
      ENDSOURCE
      SOURCE #inventTable
        #InventTable inventTable(ItemId     itemId = this.ItemId,
        #                        boolean    update = false)
        #{
        #    return InventTable::find(itemId, update);
        #}
      ENDSOURCE
      SOURCE #inventTableModule
        #InventTableModule  inventTableModule(ItemId     itemId = this.ItemId)
        #{
        #    return InventTableModule::find(itemId, this.moduleType());
        #}
      ENDSOURCE
      SOURCE #invoiceAccount
        #VendInvoiceAccount  invoiceAccount()
        #{
        #    return this.purchTable().InvoiceAccount;
        #}
      ENDSOURCE
      SOURCE #invoicedInTotal
        #//BP Deviation Documented
        #display PurchQty   invoicedInTotal()
        #{
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #    return this.invoicedInTotalServer();
        #}
      ENDSOURCE
      SOURCE #invoicedInTotalServer
        #server PurchQty invoicedInTotalServer()
        #{
        #    return this.type().invoicedInTotal();
        #}
      ENDSOURCE
      SOURCE #invoicedInventInTotal
        #//BP Deviation Documented
        #display InventQty    invoicedInventInTotal()
        #{
        #    InventTransIdSum    inventTransIdSum;
        #    InventQty           inventQty = 0;
        #
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #
        #        inventQty = inventTransIdSum.financial();
        #    }
        #
        #    return inventQty;
        #}
      ENDSOURCE
      SOURCE #invoicedOnPackingSlipInTotal
        #/// <summary>
        #/// Retrieves the quantity invoiced on packing slips.
        #/// </summary>
        #/// <returns>
        #/// The quantity invoiced on packing slips.
        #/// </returns>
        #public PurchQty invoicedOnPackingSlipInTotal()
        #{
        #    VendInvoiceTrans                    vendInvoiceTrans;
        #    VendInvoicePackingSlipQuantityMatch vendInvoicePackingSlipQuantityMatch;
        #    VendPackingSlipTrans                vendPackingSlipTrans;
        #
        #    select sum(Qty) from vendInvoiceTrans
        #        where vendInvoiceTrans.InventTransId == this.InventTransId
        #        exists join vendInvoicePackingSlipQuantityMatch
        #            where vendInvoicePackingSlipQuantityMatch.InvoiceSourceDocumentLIne == vendInvoiceTrans.SourceDocumentLine
        #        exists join vendPackingSlipTrans
        #            where vendPackingSlipTrans.SourceDocumentLine == vendInvoicePackingSlipQuantityMatch.PackingSlipSourceDocumentLine;
        #
        #    return vendInvoiceTrans.Qty;
        #}
      ENDSOURCE
      SOURCE #isAgreementLinkValid
        #/// <summary>
        #/// Checks whether the link between the agreement line and the purchase line is valid.
        #/// </summary>
        #/// <param name="_showInfolog">
        #/// A Boolean value that indicates whether to print the errors in the Infolog; optional.
        #/// </param>
        #/// <returns>
        #/// true if the link between the purchase order line and agreement line is valid; otherwise, false.
        #/// </returns>
        #public boolean isAgreementLinkValid(boolean _showInfolog = false)
        #{
        #    if (this.isLinkedToAgreement())
        #    {
        #        return AgreementLine::find(this.MatchingAgreementLine).isLinkValid(this,_showInfolog);
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isBudgetReservationLineReferenced
        #/// <summary>
        #/// Indicates whether the budget reservation line is referenced on the purchase order line or not.
        #/// </summary>
        #/// <returns>
        #/// true if the budget reservation line is referenced; otherwise, false
        #/// </returns>
        #// <PubSect>
        #public boolean isBudgetReservationLineReferenced()
        #{
        #    boolean isReferenced;
        #
        #    isReferenced = this.BudgetReservationLine_PSN != 0 && PublicSectorUtils::isBudgetReservationEnabled();
        #
        #    return isReferenced;
        #}
        #// </Pubsect>
        #
      ENDSOURCE
      SOURCE #isCategoryBased
        #/// <summary>
        #/// Specifies whether the order line is category based.
        #/// </summary>
        #/// <returns>
        #/// true if the order line is category based; otherwise, false.
        #/// </returns>
        #boolean isCategoryBased()
        #{
        #    return this.SalesPurchLine::isCategoryBased();
        #}
      ENDSOURCE
      SOURCE #isDropShipment
        #/// <summary>
        #///    Checks whether the order line is part of a drop shipment.
        #/// </summary>
        #/// <returns>
        #///    true if the order line is part of a drop shipment; otherwise, false.
        #/// </returns>
        #public boolean isDropShipment()
        #{
        #    return this.SalesPurchLine::isDropShipment();
        #}
      ENDSOURCE
      SOURCE #isForProject
        #/// <summary>
        #/// Checks if this line is related to a project.
        #/// </summary>
        #/// <returns>
        #/// true if the line is related to a project; false otherwise.
        #/// </returns>
        #public boolean isForProject()
        #{
        #    return (this.ProjId != '');
        #}
      ENDSOURCE
      SOURCE #isFullyDistributed
        #/// <summary>
        #///    Performs a check whether line is fully distributed.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #///    A <c>SourceDocumentLine</c> record; optional.
        #/// </param>
        #/// <returns>
        #///    True, if the line is full distributed; otherwise false.
        #/// </returns>
        #/// <exception cref="M:exception::Warning">
        #///    This action can only be completed after the line number %1 is fully distributed.
        #/// </exception>
        #public client server boolean isFullyDistributed(SourceDocumentLine _sourceDocumentLine = this.sourceDocumentLine())
        #{
        #    if (!SourceDocumentLineProvider::isLineFullyDistributed(_sourceDocumentLine, this))
        #    {
        #        //This action can only be completed after the line number %1 is fully distributed
        #        return checkFailed(strFmt("@SYS341833", this.LineNumber));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isInterCompanyOrder
        #boolean  isInterCompanyOrder()
        #{
        #    boolean  ok = false;
        #
        #    if (this.InterCompanyInventTransId  &&  this.purchTable().isInterCompanyOrder())
        #    {
        #        ok = true;
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #isInvoiceMatched
        #/// <summary>
        #/// Returns true if line was partially or fully invoiced.
        #/// </summary>
        #/// <returns>
        #/// true if line was partially or fully invoiced; otherwise, false.
        #/// </returns>
        #public boolean isInvoiceMatched()
        #{
        #    return this.IsInvoiceMatched;
        #}
      ENDSOURCE
      SOURCE #isLatestPOVersionNotArchived
        #/// <summary>
        #/// Checks if the last version of the purchase order that this line belongs to was not yet archived to the history tables.
        #/// </summary>
        #/// <returns>
        #/// true if the last version has not yet been archived to the history tables; otherwise, false.
        #/// </returns>
        #public boolean isLatestPOVersionNotArchived()
        #{
        #    PurchTableVersion purchTableVersion = PurchTableVersion::findLatest(this.PurchId, this.DataAreaId);
        #    return purchTableVersion && (purchTableVersion.IsArchived == NoYes::No);
        #}
      ENDSOURCE
      SOURCE #isLinkedToAgreement
        #/// <summary>
        #/// Indicates whether the purchase line is linked to an agreement line.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase line is linked to an agreement line; otherwise, false.
        #/// </returns>
        #public boolean isLinkedToAgreement()
        #{
        #    return this.MatchingAgreementLine != 0;
        #}
      ENDSOURCE
      SOURCE #isMarkupCodeEnabled_RU
        #/// <summary>
        #///  The field MarkupCode_RU is enabled
        #/// </summary>
        #/// <returns>
        #///  true if enabled, otherwize - false
        #/// </returns>
        #public boolean isMarkupCodeEnabled_RU()
        #{
        #    return ! this.ItemId || this.inventTable().isMarkupCodeEnabled_RU();
        #}
      ENDSOURCE
      SOURCE #isPackingSlipOrInvoiceUpdated
        #/// <summary>
        #/// Specifies whether the line has been packing slip or invoice updated.
        #/// </summary>
        #/// <returns>
        #/// true if the line has been packing slip or invoice updated; otherwise, false.
        #/// </returns>
        #public boolean isPackingSlipOrInvoiceUpdated()
        #{
        #    PurchLine purchOrig = this.orig();
        #
        #    return this.RecId                                       // Saved?
        #        && (this.PurchStatus == PurchStatus::Received       // Fully received?
        #            || this.RemainPurchFinancial != 0               // Partially received?
        #            || this.PurchStatus == PurchStatus::Invoiced    // Fully invoiced?
        #            || (this.RemainPurchPhysical != this.PurchQty    // Partially invoiced/received?
        #                && !(this.RemainPurchPhysical == purchOrig.RemainPurchPhysical && this.PurchQty != purchOrig.PurchQty))  //The'and' part excludes lines which are being checked during an update before remainPurchPhysical was calculated.
        #            );
        #}
      ENDSOURCE
      SOURCE #isProjectBudgetReservationLineReferenced
        #/// <summary>
        #/// Indicates whether the budget reservation line with project is referenced.
        #/// </summary>
        #/// <returns>
        #/// true if the budget reservation line is referenced; otherwise, false.
        #/// </returns>
        #// <PubSect>
        #public boolean isProjectBudgetReservationLineReferenced()
        #{
        #    boolean                     isReferenced;
        #    BudgetReservationLine_PSN   budgetReservationLine = BudgetReservationLine_PSN::find(this.BudgetReservationLine_PSN);
        #
        #    isReferenced = budgetReservationLine.RecId != 0 && budgetReservationLine.ProjId;
        #
        #    return isReferenced;
        #}
        #// </PubSect>
      ENDSOURCE
      SOURCE #isProjItemBased
        #/// <summary>
        #/// Checks if the line is related to an item.
        #/// </summary>
        #/// <returns>
        #/// true if the line is related to an item; otherwise, false.
        #/// </returns>
        #public boolean isProjItemBased()
        #{
        #    ProjCategory    projCategory;
        #    boolean         retVal = false;
        #
        #    if (this.ItemId)
        #    {
        #        retVal = true;
        #    }
        #    else if (this.ProjCategoryId)
        #    {
        #        projCategory = ProjCategory::find(this.ProjCategoryId);
        #        if (projCategory.CategoryType == ProjCategoryType::Item)
        #        {
        #            retVal = true;
        #        }
        #    }
        #
        #    return retVal;
        #}
      ENDSOURCE
      SOURCE #isSourceDocumentLineCompletedOrFinalized
        #/// <summary>
        #/// Determines if the purchase order line's source document line accounting status is completed or finalized.
        #/// </summary>
        #/// <returns>
        #/// true if the purchase order line's source document line accounting status is completed or finalized; otherwise, false.
        #/// </returns>
        #// <PubSect>
        #public boolean isSourceDocumentLineCompletedOrFinalized()
        #{
        #    boolean             isSourceDocumentLineCompletedOrFinalized;
        #    SourceDocumentLine  purchLineSourceDocumentLine = SourceDocumentLine::find(this.SourceDocumentLine);
        #
        #    isSourceDocumentLineCompletedOrFinalized =
        #        purchLineSourceDocumentLine.AccountingStatus    == SourceDocumentLineAccountingStatus::Completed
        #        || purchLineSourceDocumentLine.AccountingStatus == SourceDocumentLineAccountingStatus::Finalized;
        #
        #    return isSourceDocumentLineCompletedOrFinalized;
        #}
        #// </PubSect>
      ENDSOURCE
      SOURCE #isStocked
        #/// <summary>
        #///    Checks whether the order line is tracked in inventory.
        #/// </summary>
        #/// <returns>
        #///    true if the order line is tracked in inventory; otherwise, false.
        #/// </returns>
        #boolean isStocked()
        #{
        #    #isoCountryRegionCodes
        #
        #    return this.SalesPurchLine::isStocked()
        #        && !(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoBR])
        #            && this.purchTable().createInventTrans_BR() == false)
        #        ;
        #}
      ENDSOURCE
      SOURCE #isSubcontracted
        #/// <summary>
        #/// Determines if the purchase line is originating from a lean subcontracting activity.
        #/// </summary>
        #/// <returns>
        #/// true if it is linked to lean kanban jobs, otherwise false.
        #/// </returns>
        #public boolean isSubcontracted()
        #{
        #    return this.PlanReference != 0;
        #}
      ENDSOURCE
      SOURCE #isTangible
        #/// <summary>
        #/// Determines whether the item in the order line is tangible.
        #/// </summary>
        #/// <returns>
        #/// true if the line is tangible; otherwise, false.
        #/// </returns>
        #public boolean isTangible()
        #{
        #    //For non-stocked item based lines where the ItemType is service
        #    //or for description based lines where the procurementCategory is non-tangible, return false.
        #    if (!this.isStocked()
        #        && ((this.ItemId && this.inventTable().ItemType == ItemType::Service)
        #        || (!this.ItemId && !EcoResCategory::isTangible(this.ProcurementCategory))))
        #    {
        #        return false;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #isUserWorkItemOwner
        #/// <summary>
        #/// Gets the work item status of the pending task for the current record.
        #/// </summary>
        #/// <param name="_user">
        #/// The user ID of the work item owner; optional.
        #/// </param>
        #/// <returns>
        #/// A Boolean value that indicates whether the user has a pending work item.
        #/// </returns>
        #server boolean  isUserWorkItemOwner(WorkflowUser  _user = curUserId())
        #{
        #    return Workflow::findWorkItemsForCurrentUser(this).empty() == false;
        #}
      ENDSOURCE
      SOURCE #isVersioned
        #/// <summary>
        #/// Determines whether the order line has been versioned, i.e. whether it has been confirmed or approved with change management enabled.
        #/// </summary>
        #/// <returns>true if the order line has been versioned; otherwise, false.</returns>
        #public boolean isVersioned()
        #{
        #    return this.RecId
        #        &&  !this.IsDeleted
        #        && (!this.IsModified || PurchLine::historyExistsOrLatestVersionNotArchived(this.InventTransId, this.PurchId, this.DataAreaId));
        #}
      ENDSOURCE
      SOURCE #itemIdChanged
        #server void itemIdChanged(AgreementHeaderRecId _matchingAgreement = 0)
        #{
        #    PurchTable purchTable;
        #    PurchLine_W     purchLine_W;
        #    #isoCountryRegionCodes
        #
        #    this.initFromInventTable(this.inventTable());
        #
        #    if (#PmfEnabled)
        #    {
        #        InventMovement::setMinMaxQty(this);
        #    }
        #
        #    if (this.inventTable().modelGroup().InventModel == InventModel::StdCost)
        #    {
        #        this.CreateFixedAsset = NoYes::No;
        #        this.AssetGroup = '';
        #        this.AssetId = '';
        #        this.AssetGroup = '';
        #        this.AssetBookId = '';
        #    }
        #
        #    if (ReverseChargeParameters_UK::find().rcEnabled)
        #    {
        #        if (ReverseChargeItemGroup_UK::exist(InventTable::find(this.ItemId).itemGroupId()))
        #        {
        #            purchTable = this.purchTable();
        #            if (!purchTable.vatNum && ReverseCharge_invoice_UK::isPurchDomestic(purchTable))
        #            {
        #                warning("@SYS125406");
        #            }
        #        }
        #    }
        #
        #    this.SalesPurchLine::autoMatchAgreementLine(_matchingAgreement);
        #
        #    PurchLine::modifyPurchQty(this, this.inventDim(), !this.MatchingAgreementLine);
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.MarkupCode_RU && ! this.isMarkupCodeEnabled_RU())
        #        {
        #            purchLine_W.MarkupCode_RU = '';
        #            this.packPurchLine_W(purchLine_W);
        #        }
        #
        #        if (this.inventTable().isMarkupCodeEnabled_RU() && this.inventTable().MarkupCode_RU)
        #        {
        #            this.LedgerDimension = MarkupTable::find(MarkupModuleType::Vend, this.inventTable().MarkupCode_RU).CustomerLedgerDimension;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #itemLineDisc
        #LineDiscCode itemLineDisc()
        #{
        #    return this.inventTable().purchLineDisc();
        #}
      ENDSOURCE
      SOURCE #itemName
        #/// <summary>
        #/// Returns the item name of the purchase order line .
        #/// </summary>
        #/// <returns>
        #/// The item name.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #display PurchLineShowItemName itemName()
        #{
        #    PurchLineShowItemName purchLineShowItemName;
        #
        #    if (this.ItemId)
        #    {
        #        purchLineShowItemName = this.inventTable().itemName(this.inventDim());
        #    }
        #    else
        #    {
        #        purchLineShowItemName = this.Name;
        #    }
        #
        #    return purchLineShowItemName;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionClearing
        #public LedgerDimensionDefaultAccount ledgerDimensionClearing()
        #{
        #    #ISOCountryRegionCodes
        #    PurchLine_W     purchLine_W;
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.PostingProfile_RU)
        #        {
        #            return VendLedgerAccounts::clearingLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                       purchLine_W.PostingProfile_RU);
        #        }
        #    }
        #    return VendLedgerAccounts::clearingLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                       this.purchTable().PostingProfile);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionConsumption
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger account so that all fixed asset
        #/// transactions will use the <c>PurchReceiptFA</c> account instead of the <c>PurchConsump</c> account.
        #/// </summary>
        #/// <returns>
        #/// The ledger account for the consumption transaction.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount ledgerDimensionConsumption()
        #{
        #    LedgerDimensionDefaultAccount   ledgerAccount;
        #
        #    if (this.isStocked())
        #    {
        #        ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchConsump);
        #    }
        #    else if ((this.AssetId) && (AssetParameters::canUserCreateAssetAcquisition()))
        #    {
        #        ledgerAccount = this.assetLedgerDimension();
        #    }
        #    else
        #    {
        #        ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchExpense);
        #    }
        #
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionDiscount
        #public server LedgerDimensionDefaultAccount ledgerDimensionDiscount()
        #{
        #    return this.ledgerDimensionItem(InventAccountType::PurchDisc);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionItem
        #/// <summary>
        #/// Retrieves a ledger dimension for the purchase order line.
        #/// </summary>
        #/// <param name="_inventAccountType">
        #/// The posting account type.
        #/// </param>
        #/// <returns>
        #/// The posting ledger dimension for the account type of the purchase order line.
        #/// </returns>
        #LedgerDimensionDefaultAccount ledgerDimensionItem(InventAccountType _inventAccountType)
        #{
        #    #ISOCountryRegionCodes
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        return InventPosting::accountItemLedgerDimension(
        #            _inventAccountType,
        #            this.ItemId,
        #            InventTable::find(this.ItemId).itemGroupId(),
        #            this.ProcurementCategory,
        #            this.VendAccount,
        #            this.VendGroup,
        #            this.TaxGroup,
        #            this.inventDim());
        #    }
        #    return InventPosting::accountItemLedgerDimension(
        #        _inventAccountType,
        #        this.ItemId,
        #        InventTable::find(this.ItemId).itemGroupId(),
        #        this.ProcurementCategory,
        #        this.VendAccount,
        #        this.VendGroup,
        #        this.TaxGroup);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionOffsetAccountPckSlp
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount  ledgerDimensionOffsetAccountPckSlp()
        #{
        #    return this.ledgerDimensionItem(InventAccountType::PurchPackingSlipOffsetAccount);
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionReceipt
        #/// <summary>
        #/// Changes the account that is returned when getting the ledger account so that all the fixed asset
        #/// transactions will use the <c>PurchReceiptFA</c> account instead of the <c>PurchReceipt</c> account.
        #/// </summary>
        #/// <returns>
        #/// A ledger account for the receipt transaction.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display LedgerDimensionDefaultAccount ledgerDimensionReceipt()
        #{
        #    #ISOCountryRegionCodes
        #    LedgerDimensionDefaultAccount ledgerAccount;
        #
        #    if (this.LedgerDimension && InventMovement::construct(this).mustBeBookedBalanceSheet())
        #    {
        #        ledgerAccount  = this.LedgerDimension;
        #    }
        #    else
        #    {
        #        if (this.AssetId)
        #        {
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #            {
        #                ledgerAccount = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                            InventAccountType::PurchReceipt,
        #                                            this.ItemId,
        #                                            this.inventTable().itemGroupId(),
        #                                            this.ProcurementCategory,
        #                                            this.VendAccount,
        #                                            this.VendGroup,
        #                                            this.TaxGroup,
        #                                            this.inventDim());
        #            }
        #            else
        #            if (InventPostingExtendParm_CN::checkExtendParmEnabled())
        #            {
        #                ledgerAccount = InventPosting::accountItemExtendParmWithBackup_CN(
        #                                        InventAccountType::PurchReceiptFixedAsset,
        #                                        InventAccountType::PurchReceipt,
        #                                        InventPostingExtendParm_CN::constructInventDim(this.inventDim()),
        #                                        this.ItemId,
        #                                        this.inventTable().itemGroupId(),
        #                                        this.ProcurementCategory,
        #                                        this.VendAccount,
        #                                        this.VendGroup,
        #                                        this.TaxGroup);
        #            }
        #            else
        #            {
        #                    ledgerAccount = InventPosting::accountItemWithBackupLedgerDimension(InventAccountType::PurchReceiptFixedAsset,
        #                                                InventAccountType::PurchReceipt,
        #                                                this.ItemId,
        #                                                this.inventTable().itemGroupId(),
        #                                                this.ProcurementCategory,
        #                                                this.VendAccount,
        #                                                this.VendGroup,
        #                                                this.TaxGroup);
        #            }
        #        }
        #        else
        #        {
        #            if (InventPostingExtendParm_CN::checkExtendParmEnabled())
        #            {
        #                ledgerAccount = this.accountItemExtendParm_CN(InventAccountType::PurchReceipt);
        #            }
        #            else
        #            {
        #                ledgerAccount = this.ledgerDimensionItem(InventAccountType::PurchReceipt);
        #            }
        #        }
        #    }
        #    return ledgerAccount;
        #}
      ENDSOURCE
      SOURCE #ledgerDimensionVend_RU
        #/// <summary>
        #/// Returns ledger dimension value for posting
        #/// </summary>
        #/// <returns>
        #/// Ledger dimension value for posting
        #/// </returns>
        #LedgerDimensionDefaultAccount ledgerDimensionVend_RU()
        #{
        #    PurchLine_W     purchLine_W = this.purchLine_W();
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
        #        && purchLine_W.PostingProfile_RU)
        #    {
        #        return VendLedgerAccounts::summaryLedgerDimension(this.purchTable().InvoiceAccount,
        #                                                          purchLine_W.PostingProfile_RU);
        #    }
        #    return VendLedgerAccounts::summaryLedgerDimension(this.purchTable().InvoiceAccount,
        #                                          this.purchTable().PostingProfile);
        #}
      ENDSOURCE
      SOURCE #lineAmountExclTax
        #//BP Deviation Documented
        #PurchLineAmount lineAmountExclTax(TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::lineAmountExclTax(this.taxDate(transDate), _tax);
        #}
      ENDSOURCE
      SOURCE #lineAmountModified
        #void lineAmountModified()
        #{
        #    this.PriceDiscLine::lineAmountModified();
        #}
      ENDSOURCE
      SOURCE #lineAmountMST
        #AmountMST lineAmountMST(TransDate               exchRateDate            = systemDateGet(),
        #                        ExchRate                exchRate                = 0,
        #                        ExchrateSecondary       exchrateSecondary       = 0,
        #                        ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown)
        #
        #{
        #    return this.SalesPurchLine::lineAmountMST(exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation);
        #}
      ENDSOURCE
      SOURCE #lineAmountMSTExclTax
        #AmountMST  lineAmountMSTExclTax(TransDate               exchRateDate            = systemDateGet(),
        #                                ExchRate                exchRate                = 0,
        #                                ExchrateSecondary       exchrateSecondary       = 0,
        #                                ExchRatesTriangulation  exchRatesTriangulation  = UnknownNoYes::Unknown,
        #                                Tax                     _tax                    = null)
        #
        #{
        #    return this.SalesPurchLine::lineAmountMSTExclTax(exchRateDate, exchRate, exchrateSecondary, exchRatesTriangulation, _tax);
        #}
      ENDSOURCE
      SOURCE #lineDeliveryImageRessNo
        #/// <summary>
        #///     Determines the delivery type of the line.
        #/// </summary>
        #/// <returns>
        #///     An image resource ID.
        #/// </returns>
        #public int lineDeliveryImageRessNo()
        #{
        #    #resAppl
        #
        #    switch (this.LineDeliveryType)
        #    {
        #        case LineDeliveryType::OrderLineWithMultipleDeliveries:
        #            return #ImageOrderLineMultipleDeliveries;
        #        case LineDeliveryType::DeliveryLine:
        #            return #ImageDeliveryLine;
        #        default:
        #            return #ImageOrderLines;
        #    }
        #}
      ENDSOURCE
      SOURCE #lineDisc
        #LineDiscCode  lineDisc()
        #{
        #    return this.purchTable().LineDisc;
        #}
      ENDSOURCE
      SOURCE #linkInventDim2Dimension
        #/// <summary>
        #///    Applies default <c>PurchLine.dimension</c> values, depending on the <c>InventDim</c> record buffer
        #///    values.
        #/// </summary>
        #/// <param name="_newInventDim">
        #///    The <c>InventDim</c> record buffer linked to the current <c>PurchLine</c> record buffer.
        #/// </param>
        #/// <param name="_oldInventDim">
        #///    The <c>InventDim</c> record buffer that was previously linked to the current <c>PurchLine</c>
        #///    record buffer.
        #/// </param>
        #public void linkInventDim2Dimension(InventDim _newInventDim, InventDim _oldInventDim)
        #{
        #    _newInventDim.setInventSiteFromParentIfModified(this, _oldInventDim);
        #}
      ENDSOURCE
      SOURCE #markupAllowed
        #public boolean markupAllowed()
        #{
        #    return this.type().markupAllowed();
        #}
      ENDSOURCE
      SOURCE #matchingAgreementLine
        #/// <summary>
        #/// Returns the value of the <c>this.MatchingAgreementLine</c>.
        #/// </summary>
        #/// <returns>
        #/// A <c>RefRecId</c> type.
        #/// </returns>
        #public RefRecId matchingAgreementLine()
        #{
        #    return this.MatchingAgreementLine;
        #}
      ENDSOURCE
      SOURCE #mcrInventTable
        #/// <summary>
        #/// Retrieves the invent table record for the item.
        #/// </summary>
        #/// <param name="_itemId">
        #/// An item.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A <c>Boolean</c> value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// The inventory table record.
        #/// </returns>
        #public MCRInventTable mcrInventTable(ItemId _itemId = this.ItemId,
        #                               boolean _forUpdate = false)
        #{
        #    return MCRInventTable::findByItemId(_itemId, _forUpdate);
        #}
      ENDSOURCE
      SOURCE #mergeDimension
        #/// <summary>
        #/// Retrieves a dimension set that contains the merged combination of the current
        #/// <c>defaultDimension</c> field on this table and the provided dimension set.
        #/// </summary>
        #/// <param name="_primaryDefaultDimension">
        #/// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
        #/// </param>
        #/// <param name="_secondaryDefaultDimension">
        #/// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
        #/// optional.
        #/// </param>
        #/// <param name="_dimensionMerge">
        #/// A <c>dimensionMerge</c> object that was instantiated with the current buffer; optional.
        #/// </param>
        #/// <returns>
        #/// A dimension set that contains the merged combination of the current <c>defaultDimension</c> field
        #/// on this table and the specified dimension set.
        #/// </returns>
        #/// <remarks>
        #/// This method makes sure that potential linked dimensions are not overwritten when they are merged.
        #/// </remarks>
        #
        #public DimensionDefault mergeDimension(
        #    DimensionDefault _primaryDefaultDimension,
        #    DimensionDefault _secondaryDefaultDimension = 0,
        #    DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
        #                                                                    this.companyInfo().RecId
        #                                                                    )
        #    )
        #{
        #    return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #/// <summary>
        #/// Performs specific actions when a field is modified.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the field that has been modified.
        #/// </param>
        #/// <remarks>
        #/// This is overridden to allow for specific actions when a field is modified.
        #/// </remarks>
        #public void modifiedField(FieldId _fieldId)
        #{
        #    InventDim inventDim;
        #    InventDimParm inventDimParm;
        #
        #    CompanyInfo                     companyInfoLoc = CompanyInfo::find();
        #    VendTable                       vendTable = VendTable::find(this.VendAccount);
        #    // <GIN>
        #    PurchLine_IN                    purchLine_IN;
        #    // </GIN>
        #
        #    boolean isAssetDocumentEnabled = AssetDocumentUtility_JP::isAssetDocumentEnabled();
        #    super(_fieldId);
        #
        #    switch (_fieldId)
        #    {
        #        case fieldNum(PurchLine, ProcurementCategory):
        #            // Clear all except site and location
        #            inventDim = this.inventDim();
        #            inventDimParm.setActiveSiteAndWarehouseDimensions();
        #            inventDim.clearNotSelectedDim(inventDimParm);
        #            this.setInventDimIdFromInventDim(inventDim);
        #            this.setAddressFromInventDim(inventDim);
        #            this.initFromItemOrCategory(this.ItemId, this.ProcurementCategory, this.Name);
        #            this.ProjTaxItemGroupId =   ProjCategory::find(this.ProjCategoryId).TaxItemGroupId;
        #
        #            this.initName();
        #
        #            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #            {
        #                this.setAgreementLine();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchReceivedNow):
        #            this.setInventReceivedNow();
        #            this.Tax1099Amount = 0;
        #            this.Tax1099StateAmount = 0;
        #            break;
        #
        #        case fieldNum(PurchLine, PriceUnit):
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            this.LineAmount = this.calcLineAmountInteraction(_fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchPrice):
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if (this.isForProject())
        #            {
        #                this.setProjSalesPrice();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LinePercent):
        #            this.DiscPercent = this.discPercent();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if(this.defaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LineDisc):
        #            this.DiscAmount = this.discAmount();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId);
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if(this.defaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, LineAmount):
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            this.lineAmountModified();
        #            this.LineAmount = this.calcLineAmountForcedInteraction(_fieldId, this.PurchQty, false);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            if(this.defaultCostPriceAsSalesPrice())
        #            {
        #                this.ProjSalesPrice = this.calcProjSalesPriceIfDefault();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchUnit):
        #            this.purchUnitModified();
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, PurchMarkup):
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.setPriceDiscChangePolicy(PriceDiscSystemSource::ManualEntry, _fieldId);
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, MultiLnDisc):
        #            this.DiscAmount = this.discAmount();
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.type().setPriceDiscChangePolicyMultiLine();
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, MultiLnPercent):
        #            this.DiscPercent = this.discPercent();
        #            this.LineAmount = this.calcLineAmountForced();
        #            this.type().setPriceDiscChangePolicyMultiLine();
        #            if (TaxParameters::checkTaxParameters_IN())
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ProjCategoryId):
        #            this.ProjLinePropertyId    = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #            if (this.ProcurementCategory)
        #            {
        #               this.ProjTaxItemGroupId =   ProjCategory::find(this.ProjCategoryId).TaxItemGroupId;
        #            }
        #            else
        #            {
        #                this.ProjTaxItemGroupId    = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #            }
        #
        #            this.setProjSalesPrice();
        #            if (this.ProjWorker && this.isProjItemBased())
        #            {
        #                this.ProjWorker = 0;
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ProjWorker):
        #            this.setProjSalesPrice();
        #            break;
        #
        #        case fieldNum(PurchLine, ActivityNumber):
        #            this.initFromProjActivity(ProjActivity::find(this.ActivityNumber));
        #            this.ProjLinePropertyId    = ProjLinePropertySetup::findLinePropertyId(this.ProjId,this.ProjCategoryId);
        #            this.ProjTaxItemGroupId    = ProjParameters::taxItemGroupItem(this.ProjCategoryId,this.ItemId);
        #            this.setProjSalesPrice();
        #            break;
        #
        #        case fieldNum(PurchLine, AssetId):
        #            this.modifyAssetId();
        #            if (isAssetDocumentEnabled)
        #            {
        #                AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, AssetBookId):
        #            if (this.AssetId && this.AssetBookId)
        #            {
        #                this.DefaultDimension = this.mergeDimension(AssetTable::find(this.AssetId).defaultDimension(this.AssetBookId));
        #            }
        #            if (isAssetDocumentEnabled)
        #            {
        #                AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, DeliveryPostalAddress):
        #            LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #                this.DeliveryPostalAddress);
        #            // <GIN>
        #            if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
        #            {
        #                purchLine_IN = this.purchLine_IN();
        #                purchLine_IN.CompanyLocation_IN = LogisticsPostalAddress::getLocation(this.DeliveryPostalAddress);
        #                purchLine_IN.modifiedFieldValue(fieldId2name(purchLine_IN.TableId, fieldNum(PurchLine_IN, CompanyLocation_IN)));
        #                this.packPurchLine_IN(purchLine_IN);
        #            }
        #            // </GIN>
        #
        #            break;
        #
        #        case fieldNum(PurchLine, Requester):
        #            this.ReqAttention = HcmWorkerTitle::findByWorker(this.Requester).OfficeLocation;
        #            if (PurchCORPolicyTable::decentralized(this))
        #            {
        #                PurchCORPolicyTable::setLocation(this, true);
        #            }
        #            else if (PurchCORPolicyTable::decentralized(this.orig()))
        #            {
        #                PurchCORPolicyTable::setLocation(this, false);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ConfirmedDlv):
        #            if (this.ProjId)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, DeliveryDate):
        #            this.ManualModifiedField = _fieldId;
        #            this.unLinkAgreementDeliveryDates(_fieldId);
        #            if (this.ProjId && !this.ConfirmedDlv)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #            }
        #            this.checkPriceDate(_fieldId);
        #            this.ManualModifiedField = 0;
        #            break;
        #
        #        case fieldNum(PurchLine, ProjSalesCurrencyId):
        #            if (this.ProjId)
        #            {
        #                this.initFromProjTable(this.projTable(),true);
        #                this.setProjSalesPrice();
        #            }
        #            break;
        #
        #        case fieldNum(PurchLine, ProjId):
        #            this.projIdModified();
        #            this.DefaultDimension  = this.copyDimension(this.projTable().DefaultDimension);
        #            if (this.ItemId)
        #            {
        #                this.DefaultDimension  = DimensionDefaultingService::serviceMergeDefaultDimensions(this.DefaultDimension , this.inventTable().DefaultDimension);
        #            }
        #            // Call the event handler to handle other modifications in higher layers...
        #            PurchLineTableHandler::modifiedField_ProjId(_fieldId, this);
        #            break;
        #
        #        case fieldNum(PurchLine, ItemId):
        #            this.setExciseFields_IN();
        #            if (isConfigurationkeyEnabled(configurationKeyNum(ProjBasic)) && this.ItemId)
        #            {
        #                this.ProjWorker = 0;
        #            }
        #            break;
        #
        #        // <PubSect>
        #        case fieldNum(PurchLine, BudgetReservationLine_PSN) :
        #            BudgetReservationLine_PSN::purchLineBudgetResLineFieldModified(this);
        #        break;
        #        // </PubSect>
        #
        #        case fieldNum(PurchLine, CreateFixedAsset):
        #            if (isAssetDocumentEnabled)
        #            {
        #                AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
        #            }
        #            break;
        #        // Call the event handler to handle other cases that may be present in higher layers...
        #        default:
        #            PurchLineTableHandler::modifiedField_OtherFields(_fieldId, this);
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #modifiedFieldValue
        #/// <summary>
        #/// Modify a specified field.
        #/// </summary>
        #/// <param name="_fieldName">
        #/// The field Name of the field to modify.
        #/// </param>
        #/// <param name="_arrayIndex">
        #/// The array index of the field.
        #/// </param>
        #public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    #isoCountryRegionCodes
        #
        #    super(_fieldName, _arrayIndex);
        #
        #
        #    switch (_fieldName)
        #    {
        #        case fieldStr(PurchLine, PurchQty):
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #            {
        #                if(TaxParameters::find().Customs_IN
        #                    && PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes
        #                    && CustomsInvoiceRegnTrans_IN::checkInvoiceRegnComplete(this.RecId)
        #                    && this.PurchQty < this.orig().PurchQty)
        #                {
        #                    this.PurchQty = this.orig().PurchQty;
        #                }
        #                this.setExciseFields_IN();
        #            }
        #            break;
        #
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #modifyAssetId
        #/// <summary>
        #/// Modifies the related field values when the value of the <c>AssetId</c> field is changed.
        #/// </summary>
        #/// <remarks>
        #/// The value of the <c>AssetGroup</c> field and the <c>AssetBookId</c> field will be updated based on
        #/// the new value of the <c>AssetId</c> field.
        #/// </remarks>
        #public void modifyAssetId()
        #{
        #    AssetBook       assetBook;
        #    AssetBookTable  assetBookTable;
        #    AssetBookId     bookIdDefault;
        #    AssetTable      assetTable;
        #
        #    select AssetGroup from assetTable
        #        where assetTable.AssetId == this.AssetId;
        #    if (assetTable)
        #    {
        #        this.AssetGroup = assetTable.AssetGroup;
        #        this.ItemRefType = InventRefType::FixedAsset;
        #
        #        // If asset is assigned, need to clear "createFixedAsset" flag.
        #        this.CreateFixedAsset = false;
        #    }
        #    else
        #    {
        #        this.AssetGroup = '';
        #        this.ItemRefType = InventRefType::None;
        #    }
        #
        #    bookIdDefault = AssetParameters::find().BookIdDefault;
        #    assetBook = AssetBook::find(this.AssetId, bookIdDefault);
        #
        #    if (assetBook &&
        #       AssetBookTable::find(bookIdDefault).CurrentOperationsTax == CurrentOperationsTax::Current &&
        #       (assetBook.Status == AssetStatus::NoAcquisition ||
        #        assetBook.Status == AssetStatus::Open))
        #    {
        #        this.AssetBookId = bookIdDefault;
        #    }
        #    else
        #    {
        #        select firstonly assetBook
        #        where assetBook.AssetId == this.AssetId &&
        #              (assetBook.Status == AssetStatus::NoAcquisition ||
        #               assetBook.Status == AssetStatus::Open)
        #        join RecId from assetBookTable
        #        where assetBookTable.BookId               == assetBook.BookId &&
        #              assetBookTable.CurrentOperationsTax == CurrentOperationsTax::Current;
        #
        #        if (assetBook)
        #        {
        #            this.AssetBookId = assetBook.BookId;
        #        }
        #        else
        #        {
        #           this.AssetBookId = "";
        #        }
        #    }
        #    if (this.AssetId && this.AssetBookId)
        #    {
        #        this.DefaultDimension = this.mergeDimension(AssetTable::find(this.AssetId).defaultDimension(this.AssetBookId));
        #    }
        #}
      ENDSOURCE
      SOURCE #modifyCreateFixedAsset
        #/// <summary>
        #/// Modifies the related fields when the value of the <c>CreateFixedAsset</c> field is changed.
        #/// </summary>
        #/// <remarks>
        #/// If the <c>CreateFixedAsset</c> field is checked, the <c>AssetId</c> field will be cleared. It will
        #/// always clear the <c>AssetGroup</c> field and set the <c>AssetTransTypePurch</c> field to
        #/// <c>Acquisition</c>.
        #/// </remarks>
        #public void modifyCreateFixedAsset()
        #{
        #    if (this.CreateFixedAsset == NoYes::Yes)
        #    {
        #        this.AssetId = '';
        #        this.modifyAssetId();
        #        this.ItemRefType = InventRefType::FixedAsset;
        #    }
        #    else
        #    {
        #        this.ItemRefType = InventRefType::None;
        #    }
        #
        #    this.AssetGroup = '';
        #    this.AssetTransTypePurch = AssetTransTypePurch::Acquisition;
        #}
      ENDSOURCE
      SOURCE #modifyInventDim
        #void modifyInventDim(
        #    InventDim                           _inventDim,
        #    FieldId                             _dimFieldId,
        #    boolean                             _resetPrice = true)
        #{
        #    InventDimGroupSetup                 inventDimGroupSetup = InventDimGroupSetup::newItemId(this.ItemId);
        #    InventDimId oldInventDimId;
        #    AgreementHeaderRecId                matchingPurchAgreementHeaderRecId;
        #    // <GIN>
        #    #isoCountryRegionCodes
        #    // </GIN>
        #
        #    if (!this.ItemId)
        #    {
        #        return;
        #    }
        #
        #    // Remember the old value to check for changes
        #    oldInventDimId      = this.InventDimId;
        #    this.InventDimId    = InventDim::findOrCreate(_inventDim).InventDimId;
        #
        #    if (InventDim::isFieldIdProductDimension(_dimFieldId))
        #    {
        #        this.ExternalItemId = '';
        #        this.initFromProductDimensions(_inventDim);
        #    }
        #
        #    if (_dimFieldId == fieldNum(InventDim,InventLocationId) ||
        #        _dimFieldId == fieldNum(InventDim,InventSiteId)     ||
        #        _dimFieldId == fieldNum(InventDim,ConfigId)         ||
        #        _dimFieldId == fieldNum(InventDim,InventSizeId)     ||
        #        _dimFieldId == fieldNum(InventDim,InventStyleId)    ||
        #        _dimFieldId == fieldNum(InventDim,InventColorId))
        #    {
        #        this.modifyWMSLocation(_inventDim);
        #    }
        #
        #    switch (_dimFieldId)
        #    {
        #        case fieldNum(InventDim,InventLocationId):
        #            //fall throough and possibly update dimension.
        #
        #        case fieldNum(InventDim,InventSiteId):
        #            // If a new InventDim is selected then default dimensions.
        #            if (this.InventDimId != oldInventDimId)
        #            {
        #                this.DefaultDimension = this.copyDimension(this.DefaultDimension);
        #            }
        #            break;
        #        // <GIN>
        #        case fieldNum(InventDim,InventBatchId):
        #            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        #            {
        #                this.assessableValue_IN();
        #            }
        #            break;
        #        // </GIN>
        #    }
        #
        #    if (_resetPrice && InventDim::mustUseFieldPurchPriceDisc(_dimFieldId, inventDimGroupSetup)
        #        && this.LineDeliveryType != LineDeliveryType::DeliveryLine)
        #    {
        #        this.SalesPurchLine::resetPriceAgreement();
        #        this.setPriceDisc(_inventDim);
        #    }
        #
        #    // ONLY if Purchase Order (header) is linked to agreement
        #    // call a server method to handle auto-link to agreement line:
        #    matchingPurchAgreementHeaderRecId = this.purchTable().MatchingAgreement;
        #    if (matchingPurchAgreementHeaderRecId)
        #    {
        #        this.SalesPurchLine::autoMatchAgreementLine(matchingPurchAgreementHeaderRecId);
        #    }
        #}
      ENDSOURCE
      SOURCE #modifyWMSLocation
        #/// <summary>
        #/// Modifies an <c>InventDim</c> record with WMS values.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The <c>InventDim</c> record to modify.
        #/// </param>
        #/// <param name="_resetWMSLocationId">
        #/// A Boolean value that indicates whether the <c>wMSLocationId</c> field is to be reset even when the
        #/// <c>LocationId</c> field is unchanged.
        #/// </param>
        #/// <remarks>
        #/// When changing the warehouse on a purchase order line, the location is updated with default WMS
        #/// values for items where the attached dimension group has the location set to active.
        #/// </remarks>
        #public void modifyWMSLocation(
        #    InventDim           _inventDim,
        #    boolean             _resetWMSLocationId = true)
        #{
        #    this.type().modifyWMSLocation(_inventDim, _resetWMSLocationId);
        #}
      ENDSOURCE
      SOURCE #moduleType
        #ModuleInventPurchSales moduleType()
        #{
        #    return ModuleInventPurchSales::Purch;
        #}
      ENDSOURCE
      SOURCE #mustBeCovPlanned
        #boolean  mustBeCovPlanned()
        #{
        #    return (this.RemainPurchPhysical ||  this.RemainPurchFinancial);
        #}
      ENDSOURCE
      SOURCE #nextLineNum
        #LineNum nextLineNum()
        #{
        #    PurchLine purchLine;
        #
        #    return this.SalesPurchLine::nextLineNum(purchLine);
        #}
      ENDSOURCE
      SOURCE #onCFOPChange_BR
        #/// <summary>
        #/// Updates tax information and the fiscal document texts when the CFOP is changed.
        #/// </summary>
        #/// <param name="_modifiedField">
        #/// The ID of the field that was modified.
        #/// </param>
        #public void onCFOPChange_BR(FieldId _modifiedField = fieldNum(PurchLine, cfopTable_BR))
        #{
        #    if (this.cfopTable_BR)
        #    {
        #        this.setTaxGroupAndTaxItemGroupFields_BR();
        #        this.onTaxChange_BR(_modifiedField);
        #    }
        #
        #    this.type().updateFiscalDocumentText_BR(FiscalDocumentTextType_BR::CFOP);
        #}
      ENDSOURCE
      SOURCE #onDeliveryPostalAddressChange_BR
        #/// <summary>
        #/// Updates CFOP information when the delivery address is changed to a different state or country.
        #/// </summary>
        #public void onDeliveryPostalAddressChange_BR()
        #{
        #    CFOPValidation_BR       cfopValidation;
        #    LogisticsPostalAddress  currentAddress, originAddress;
        #
        #    currentAddress      = LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress);
        #    originAddress       = LogisticsPostalAddress::findRecId(this.orig().DeliveryPostalAddress);
        #
        #    if (currentAddress.State != originAddress.State || currentAddress.CountryRegionId != originAddress.CountryRegionId)
        #    {
        #        cfopValidation      = CFOPValidation_BR::construct(this);
        #        this.cfopTable_BR   = cfopValidation.getDefaultCFOP();
        #
        #        this.onCFOPChange_BR(fieldNum(PurchLine, DeliveryPostalAddress));
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #onTaxChange_BR
        #/// <summary>
        #/// Updates the current purchase order line amount when tax is changed.
        #/// </summary>
        #/// <param name="_modifiedField">
        #/// The ID of the field that was modified.
        #/// </param>
        #public void onTaxChange_BR(FieldId _modifiedField)
        #{
        #    this.LineAmount = this.calcLineAmountForcedInteraction(fieldNum(PurchLine, DeliveryPostalAddress));
        #}
      ENDSOURCE
      SOURCE #orderAccount
        #CustVendAC  orderAccount()
        #{
        #    return this.VendAccount;
        #}
      ENDSOURCE
      SOURCE #ordered
        #//BP Deviation Documented
        #display InventQtyOrdered ordered()
        #{
        #    InventQtyOrdered qtyOrdered;
        #    InventTransIdSum inventTransIdSum;
        #
        #    if (!this.InventTransId && !this.isStocked())
        #    {
        #        return 0;
        #    }
        #
        #    if (this.purchTable().DocumentState == VersioningDocumentState::Draft)
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #        qtyOrdered = this.RemainInventPhysical - (inventTransIdSum.arrived() + inventTransIdSum.registered());
        #    }
        #    else
        #    {
        #        qtyOrdered = InventTransIdSumSingleStatus::qtyOrdered(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #
        #    return qtyOrdered;
        #}
      ENDSOURCE
      SOURCE #orderedInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyOrdered orderedInPurchUnit()
        #{
        #    InventQtyOrdered inventQtyOrdered;
        #    PurchQtyOrdered  purchQtyOrdered;
        #
        #    if (this.isStocked())
        #    {
        #        inventQtyOrdered = this.ordered();
        #        if (inventQtyOrdered)
        #        {
        #            purchQtyOrdered = this.unitConvertInvent2Purch(inventQtyOrdered);
        #        }
        #    }
        #    else
        #    {
        #        purchQtyOrdered = this.RemainPurchPhysical - this.registeredInPurchUnit();
        #    }
        #
        #    return purchQtyOrdered;
        #}
      ENDSOURCE
      SOURCE #overDeliveryPct
        #/// <summary>
        #/// Returns the allowed over-delivery percent.
        #/// </summary>
        #/// <returns>
        #/// The over-delivery percent that is defined on the purchase order line if over-delivery is allowed;
        #/// otherwise, 0.
        #/// </returns>
        #public Percent overDeliveryPct()
        #{
        #    if (!PurchParameters::find().OverDelivery)
        #    {
        #        return 0;
        #    }
        #
        #    return this.OverDeliveryPct;
        #}
      ENDSOURCE
      SOURCE #packExtensionTable
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_extensionTable">
        #/// The extension table record.
        #/// </param>
        #/// <returns>
        #/// true if success; otherwise false.
        #/// </returns>
        #public boolean packExtensionTable(SysExtensionSerializerExtensionMap _extensionTable)
        #{
        #    boolean ret = false;
        #
        #    if (_extensionTable.SysExtensionSerializerExtensionMap::baseTableId() == this.TableId)
        #    {
        #        ret = this.SysExtensionSerializerMap::packExtensionTable(_extensionTable);
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #packPurchLine_IN
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchLine_IN">
        #/// The extension table record.
        #/// </param>
        #public void packPurchLine_IN(PurchLine_IN _purchLine_IN)
        #{
        #    _purchLine_IN.PurchLine = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_IN);
        #}
      ENDSOURCE
      SOURCE #packPurchLine_Intrastat
        #/// <summary>
        #/// Packs <c>PurchLine_Intrastat</c> extension table record.
        #/// </summary>
        #/// <param name="_purchLine_Intrastat">
        #/// The extension table record to pack.
        #/// </param>
        #public void packPurchLine_Intrastat(PurchLine_Intrastat _purchLine_Intrastat)
        #{
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_Intrastat);
        #}
        #
      ENDSOURCE
      SOURCE #packPurchLine_W
        #/// <summary>
        #/// Packs an extension table record to the container field <C>PackedExtensions</C>.
        #/// </summary>
        #/// <param name="_purchLine_W">
        #/// The extension table record.
        #/// </param>
        #public void packPurchLine_W(PurchLine_W _purchLine_W)
        #{
        #    _purchLine_W.PurchLine = this.RecId;
        #    this.SysExtensionSerializerMap::packExtensionTable(_purchLine_W);
        #}
      ENDSOURCE
      SOURCE #parmExchangeRateDate
        #public AccountingDate parmExchangeRateDate()
        #{
        #    return this.purchTable().parmExchangeRateDate();
        #}
      ENDSOURCE
      SOURCE #parmParentSourceDocumentLine
        #public SourceDocumentLine parmParentSourceDocumentLine()
        #{
        #    return this.PurchLineMap::parmParentSourceDocumentLine();
        #}
        #
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumName
        #public EnumName parmSourceDocLineTypeEnumName()
        #{
        #    return this.PurchLineMap::parmSourceDocLineTypeEnumName();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocLineTypeEnumValue
        #public SourceDocumentTypeEnumValue parmSourceDocLineTypeEnumValue()
        #{
        #    return this.PurchLineMap::parmSourceDocLineTypeEnumValue();
        #}
      ENDSOURCE
      SOURCE #parmSourceDocumentHeader
        #public SourceDocumentHeader parmSourceDocumentHeader()
        #{
        #    return this.PurchLineMap::parmSourceDocumentHeader();
        #}
        #
      ENDSOURCE
      SOURCE #pdsAdvancedPriceInfo
        #/// <summary>
        #///     Gets the advanced pricing extension information record for this <c>PurchLine</c>.
        #/// </summary>
        #/// <param name="_forUpdate">
        #///     Determines whether to select the record for updating; optional.
        #/// </param>
        #/// <returns>
        #///     The <c>PDSAdvancedPriceInfo</c> related to this purchase order line.
        #/// </returns>
        #/// <remarks>
        #///     This will always return an empty buffer if the line does not have an advanced calculation ID.
        #///     Otherwise, if the <c>PDSAdvancedPriceInfo</c> record does not yet exist for the line and the
        #///     purchase order line has been written to the database (it has a <c>RecId</c>) then this will
        #///     create a new <c>PDSAdvancedPriceInfo</c> record automatically.
        #/// </remarks>
        #public PDSAdvancedPriceInfo pdsAdvancedPriceInfo(boolean _forUpdate = false)
        #{
        #    PDSAdvancedPriceInfo    advancedPriceInfo;
        #
        #    if (this.RecId && this.pdsCalculationId)
        #    {
        #        advancedPriceInfo = PDSAdvancedPriceInfo::findByPurchLineRecId(this.RecId, _forUpdate);
        #        if (!advancedPriceInfo)
        #        {
        #            ttsbegin;
        #            advancedPriceInfo.PurchLineRefRecId = this.RecId;
        #            advancedPriceInfo.insert();
        #            ttscommit;
        #
        #            if (_forUpdate)
        #            {
        #                advancedPriceInfo = PDSAdvancedPriceInfo::findByPurchLineRecId(this.RecId, _forUpdate);
        #            }
        #        }
        #    }
        #
        #    return advancedPriceInfo;
        #}
      ENDSOURCE
      SOURCE #pdsCancelRemainWeight
        #/// <summary>
        #/// Sets CW item RemainInvnetPhysical to zero if
        #/// PdsCWRemainInventPhysical is zero.
        #/// </summary>
        #/// <remarks>
        #/// This is meant to allow for variance in actual weight.
        #/// If CW qty is set to zero, and there is still some actual weight remaining,
        #/// this method will cancel it out.
        #/// <syntax>
        #/// public void pdsCancelRemainWeight()
        #/// </syntax>
        #/// </remarks>
        #public void pdsCancelRemainWeight()
        #{
        #    if (pdsIsCWItem(this.ItemId)
        #        && this.RemainInventPhysical != 0
        #        && this.PdsCWRemainInventPhysical == 0)
        #    {
        #        this.RemainInventPhysical = 0;
        #        this.RemainPurchPhysical = 0;
        #        this.update();
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCheckApprovedVendorList
        #/// <summary>
        #/// Method validates if the purchase line item has valid approved vendor
        #/// list entry if controlled by AVL functionality.
        #/// </summary>
        #/// <returns type="Enum">Returns True / false</returns>
        #/// <remarks>
        #/// <syntax>
        #/// private  boolean pdsCheckApprovedVendorList()
        #/// </syntax>
        #/// </remarks>
        #public boolean pdsCheckApprovedVendorList()
        #{
        #    PdsApprovedVendorListCheck avlCheck;
        #    boolean ret = true;
        #
        #    avlCheck = this.type().pdsApprovedVendorListCheck();
        #    ret = avlCheck.validateCheck();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pdsCWArrived
        #/// <summary>
        #///     Calculates and returns the CW qty arrived for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///     The catch weight arrived quantity.
        #/// </returns>
        #//BP Deviation Documented
        #public display PdsCWArrived pdsCWArrived()
        #{
        #    if (this.InventTransId)
        #    {
        #        return InventTransIdSumSingleStatus::pdsCWQtyArrived(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    else
        #    {
        #        return 0;
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingMatchedQtyInvent
        #/// <summary>
        #///    Calculates a sum of the <c>PdsCWInventNow</c> quantity for invoice lines connected to this <c>PurchLine</c> table
        #///    record, which are matched to a packing slip.
        #/// </summary>
        #/// <param name="_pendingOnly">
        #///    A Boolean value which determines whether only pending invoice lines are considered connected. True,
        #///    if only pending invoice lines are considered connected; otherwise, false; optional.
        #/// </param>
        #/// <param name="_openEndedOnly">
        #///    A Boolean value which determines whether only sub lines without a relationship to a packing slip should be considered.
        #///    True, if only sub lines without a relationship to a packing slip are considered in the calculation; otherwise, false; optional.
        #/// </param>
        #/// <returns>
        #///    The calculated <c>PdsCWInventNow</c> quantity.
        #/// </returns>
        #/// <remarks>
        #///    Records from the <c>VendInvoiceInfoSubLine</c> table are used in the calculation.
        #/// </remarks>
        #public PdsCWInventQty pdsCWCalcPendingMatchedQtyInvent(
        #    boolean _pendingOnly = true,
        #    boolean _openEndedOnly = false)
        #{
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #    VendInvoiceInfoLine vendInvoiceInfoLine, vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoSubLine vendInvoiceInfoSubLine;
        #
        #    // sum for all saved invoice sub lines connected to this PO line
        #
        #    select sum(PdsCWInventNow) from vendInvoiceInfoSubLine
        #        exists join vendInvoiceInfoLine
        #            where
        #                vendInvoiceInfoLine.RecId == vendInvoiceInfoSubLine.LineRefRecId &&
        #                vendInvoiceInfoLine.InventTransId == this.InventTransId &&
        #                (!_openEndedOnly || vendInvoiceInfoSubLine.JournalRefRecId == 0)
        #        exists join vendInvoiceInfoTable
        #            where
        #                vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
        #                vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
        #                (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
        #                    vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
        #                (!_pendingOnly || vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending)
        #       notexists join vendInvoiceInfoLineJoin // exclude all lines for existing document
        #            where
        #                vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId &&
        #                vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId &&
        #                vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId &&
        #                vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoSubLine.PdsCWInventNow;
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingQtyPurch
        #/// <summary>
        #/// Calculates a sum of ReceiveNow quantity for all pending invoice
        #/// lines connected to this <c>PurchLine</c> table record.
        #/// </summary>
        #/// <returns>
        #/// The calculated ReceiveNow quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both the <c>PurchParmLine</c> and the
        #/// <c>VendInvoiceInfoLine</c> tables are used in the calculation.
        #/// </remarks>
        #public server PdsCWInventQty pdsCWCalcPendingQtyPurch()
        #{
        #    VendInvoiceInfoLine vendInvoiceInfoLine;
        #    VendInvoiceInfoLine vendInvoiceInfoLineJoin;
        #    VendInvoiceInfoTable vendInvoiceInfoTable;
        #
        #    // sum for all saved invoice lines connected to this PO line
        #    select sum(PdsCWReceiveNow) from vendInvoiceInfoLine
        #        where   vendInvoiceInfoLine.InventTransId == this.InventTransId
        #        exists join vendInvoiceInfoTable
        #            where   vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId
        #                &&  vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId
        #                && (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting
        #                ||  vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
        #                &&  vendInvoiceInfoTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending
        #        notexists join vendInvoiceInfoLineJoin // do not count active lines that are saved
        #            where   vendInvoiceInfoLineJoin.InventTransId == vendInvoiceInfoLine.InventTransId
        #                &&  vendInvoiceInfoLineJoin.InvoiceInfoTableRefId == vendInvoiceInfoLine.TableRefId
        #                &&  vendInvoiceInfoLineJoin.RecId != vendInvoiceInfoLine.RecId
        #                &&  vendInvoiceInfoLineJoin.ParmId != '';
        #
        #    return vendInvoiceInfoLine.PdsCWReceiveNow;
        #}
      ENDSOURCE
      SOURCE #pdsCWCalcPendingQtyPurchDisplay
        #/// <summary>
        #/// Returns the sum of PdsCWInventNow quantities for all pending
        #/// invoice lines connected to this <c>PurchLine</c> table record.
        #/// </summary>
        #/// <returns>
        #/// Calculated PdsCWInventNow quantity.
        #/// </returns>
        #/// <remarks>
        #/// Records from both <c>PurchParmLine</c> and <c>VendInvoiceInfoLine</c>
        #/// tables are used in the calculation.
        #/// </remarks>
        #public display PdsCWPendingInvoice pdsCWCalcPendingQtyPurchDisplay()
        #{
        #    return this.pdsCWCalcPendingQtyPurch();
        #}
      ENDSOURCE
      SOURCE #pdsCWInvoicedInTotal
        #/// <summary>
        #/// Calculates and returns the CW qty Invoiced in total for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWInvoiced">CW qty invoiced in total for purchase order line.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWInvoiced PdsCWInvoicedInTotal()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWInvoiced pdsCWInvoicedInTotal()
        #{
        #    PdsCWInvoiced   pdsCWInvoiced = 0;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(PurchLine),
        #                       fieldNum(PurchLine, InventTransId),
        #                       AccessType::View))
        #    {
        #        if (pdsIsCWItem(this.ItemId) &&
        #            this.InventTransId)
        #        {
        #            pdsCWInvoiced = this.type().pdsCWInvoicedInTotal();
        #        }
        #    }
        #    return pdsCWInvoiced;
        #}
      ENDSOURCE
      SOURCE #pdsCWOrdered
        #/// <summary>
        #/// Calculates and returns the CW qty ordered for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWOrdered">CW qty Ordered</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWOrdered PdsCWOrdered()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWOrdered pdsCWOrdered()
        #{
        #    PdsCWOrdered        pdsCWOrdered = 0;
        #    InventTransIdSum    inventTransIdSum;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(InventSum),
        #                       fieldNum(InventSum, PdsCWOrdered),
        #                       AccessType::View))
        #    {
        #        if (this.InventTransId)
        #        {
        #            inventTransIdSum = InventTransIdSum::newTransOriginId(
        #            InventTransOriginPurchLine::findInventTransOriginId(
        #                this.DataAreaId, this.InventTransId));
        #
        #            pdsCWOrdered = inventTransIdSum.pdsCWOrdered();
        #        }
        #    }
        #
        #    return pdsCWOrdered;
        #}
      ENDSOURCE
      SOURCE #pdsCWPurchReceivedNowConversion
        #/// <summary>
        #/// Converts CW qty to standard qty or standard qty to
        #/// cw qty for the purchase order line.
        #/// </summary>
        #/// <param name="_fromCW" type="Enum">If true, converts from CW
        #/// qty and sets the PurchReceiveNow field.  If false the opposite is done.
        #/// </param>
        #/// <remarks>
        #/// <syntax>
        #/// private void pdsCWPurchReceivedNowConversion(Enum _fromCW)
        #/// </syntax>
        #/// </remarks>
        #public server void pdsCWPurchReceivedNowConversion(boolean _fromCW = false)
        #{
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        if (_fromCW)
        #        {
        #            this.PurchReceivedNow = PdsCatchWeight::inventQty(
        #                                        this.ItemId,
        #                                        this.PdsCWInventReceivedNow,
        #                                        this.PurchUnit);
        #        }
        #        else if (!this.PdsCWInventReceivedNow)
        #        {
        #            this.PdsCWInventReceivedNow = PdsCatchWeight::cwQty(
        #                                            this.ItemId,
        #                                            this.InventReceivedNow);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWQtyConversion
        #/// <summary>
        #/// Converts the CW qty to the standard qty and sets the
        #/// purchLine.PurchQty to the converted value.
        #/// </summary>
        #/// <remarks>
        #/// <syntax>
        #/// private void pdsCWQtyConversion()
        #/// </syntax>
        #/// </remarks>
        #public server void pdsCWQtyConversion()
        #{
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        this.PurchQty = PdsCatchWeight::inventQty(
        #                            this.ItemId,
        #                            this.PdsCWQty,
        #                            this.PurchUnit);
        #    }
        #}
      ENDSOURCE
      SOURCE #pdsCWQtyValidation
        #/// <summary>
        #/// Validates that the catch weight quanity entered is valid.
        #/// </summary>
        #/// <returns>
        #/// true if CW quantity is valid; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// Checks that catch weight quantity is not negative, and that it is within the range set
        #/// up for the item.
        #/// </remarks>
        #public client server boolean pdsCWQtyValidation()
        #{
        #    boolean ret = true;
        #    boolean isNegative = false;
        #
        #    if (pdsIsCWItem(this.ItemId))
        #    {
        #        if (this.purchTable().PurchaseType == PurchaseType::ReturnItem
        #            || this.PdsCWQty < 0)
        #        {
        #            isNegative = true;
        #        }
        #
        #        if (!this.PdsCWQty
        #            && !isNegative)
        #        {
        #            ret = checkFailed("@PDS113");
        #        }
        #
        #        if (ret
        #            && this.PdsCWInventReceivedNow
        #            && !PdsCatchWeightItem::pdsCWIsValidQty(this.ItemId,
        #                                                this.InventReceivedNow,
        #                                                this.PdsCWInventReceivedNow))
        #        {
        #            ret = checkFailed(PdsCatchWeightItem::pdsCWErrorMsgForUnit(
        #                                                this.ItemId,
        #                                                this.PdsCWInventReceivedNow,
        #                                                this.PurchUnit));
        #        }
        #
        #        if (ret
        #            // <GBR>
        #            && (!BrazilParameters::isEnabled() || this.purchTable().createInventTrans_BR())
        #            // <GBR>
        #            && !PdsCatchWeightItem::pdsCWIsValidQty(this.ItemId,
        #                                                    this.QtyOrdered,
        #                                                    this.PdsCWQty))
        #        {
        #            ret = checkFailed(PdsCatchWeightItem::pdsCWErrorMsgForUnit(
        #                                                    this.ItemId,
        #                                                    this.PdsCWQty,
        #                                                    this.PurchUnit));
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pdsCWReceivedInTotal
        #/// <summary>
        #/// Calculates and returns the CW qty received in total for
        #/// the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWQtyReceived">CW qty received in total.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWQtyReceived PdsCWReceivedInTotal()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWQtyReceived pdsCWReceivedInTotal()
        #{
        #    PdsCWQtyReceived pdsCWQtyReceived = 0;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(VendInvoiceTrans),
        #                       fieldNum(VendInvoiceTrans, PdsCWQtyPhysical),
        #                       AccessType::View)
        #        && hasFieldAccess(tableNum(VendPackingSlipTrans),
        #                          fieldNum(VendPackingSlipTrans, PdsCWQty),
        #                          AccessType::View))
        #    {
        #        if (pdsIsCWItem(this.ItemId)
        #            && this.InventTransId)
        #        {
        #            pdsCWQtyReceived = this.type().pdsCWReceivedInTotal();
        #        }
        #    }
        #
        #    return pdsCWQtyReceived;
        #}
      ENDSOURCE
      SOURCE #pdsCWRegistered
        #/// <summary>
        #/// Returns the CW qty registered for the purchase order line.
        #/// </summary>
        #/// <returns type="PdsCWRegistered">CW qty registered.</returns>
        #/// <remarks>
        #/// <syntax>
        #/// public PdsCWRegistered PdsCWRegistered()
        #/// </syntax>
        #/// </remarks>
        #//BP Deviation Documented
        #public display PdsCWRegistered pdsCWRegistered()
        #{
        #    PdsCWRegistered     pdsCWRegistered = 0;
        #    InventTransIdSum    inventTransIdSum;
        #
        #    //Check if user has security access
        #    if (hasFieldAccess(tableNum(InventSum),
        #                          fieldNum(InventSum, PdsCWRegistered),
        #                          AccessType::View))
        #    {
        #        if (this.InventTransId)
        #        {
        #            inventTransIdSum = InventTransIdSum::newTransOriginId(
        #            InventTransOriginPurchLine::findInventTransOriginId(
        #                this.DataAreaId, this.InventTransId));
        #
        #            pdsCWRegistered = inventTransIdSum.pdsCWRegistered();
        #        }
        #    }
        #
        #    return pdsCWRegistered;
        #}
      ENDSOURCE
      SOURCE #pdsCWUnitId
        #/// <summary>
        #/// Gets the catch weight unit for the item.
        #/// </summary>
        #/// <returns>
        #/// The catch weight unit for the item.
        #/// </returns>
        #[SysClientCacheDataMethodAttribute(true)]
        #public display PdsCWUnitId pdsCWUnitId()
        #{
        #    return PdsCatchWeight::cwUnitId(this.ItemId);
        #}
      ENDSOURCE
      SOURCE #pdsVendBatchInfo
        #/// Gets the <c>PdsVendBatchInfo</c> related record for the <c>PurchLine</c> record.
        #/// </summary>
        #/// <returns>
        #/// The <c>PdsVendBatchInfo</c> record.
        #/// </returns>
        #public PdsVendBatchInfo pdsVendBatchInfo()
        #{
        #    return PdsVendBatchInfo::findByRefRecId(this.RecId);
        #}
      ENDSOURCE
      SOURCE #PISCOFINSFixedAssetCreditAppropMethod_BR
        #/// <summary>
        #/// Indicates the asset group appropriation method of the PIS/COFINS.
        #/// </summary>
        #/// <returns>
        #/// The asset group appropriation method of the PIS/COFINS.
        #/// </returns>
        #// <GBR>
        #public FBPISCOFINSFixedAssetAppropMethod_BR PISCOFINSFixedAssetCreditAppropMethod_BR()
        #{
        #    if (!(BrazilParameters::isEnabled() && (this.AssetId || this.AssetGroup)))
        #    {
        #        return FBPISCOFINSFixedAssetAppropMethod_BR::None;
        #    }
        #
        #    if (this.CreateFixedAsset)
        #    {
        #        return AssetGroup::find(this.AssetGroup).PISCOFINSAppropriationMethod_BR;
        #    }
        #
        #    return AssetTable::find(this.AssetId).PISCOFINSAppropriationMethod_BR;
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #PISCOFINSFixedAssetCreditGroup_BR
        #/// <summary>
        #/// Indicates the asset group classification of the PIS/COFINS credit appropriation.
        #/// </summary>
        #/// <returns>
        #/// The asset group classification of the PIS/COFINS credit appropriation.
        #/// </returns>
        #// <GBR>
        #public FBPISCOFINSFixedAssetCreditGroup_BR PISCOFINSFixedAssetCreditGroup_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return FBPISCOFINSFixedAssetCreditGroup_BR::None;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).PISCOFINSCreditGroup_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).PISCOFINSCreditGroup_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #PISCOFINSFixedAssetCreditInstallments_BR
        #/// <summary>
        #/// Indicates the number of installments of the PIS/COFINS credit appropriation.
        #/// </summary>
        #/// <returns>
        #/// The number of installments of the PIS/COFINS credit appropriation.
        #/// </returns>
        #// <GBR>
        #public FBPisCofinsFixedAssetCreditInstls_BR PISCOFINSFixedAssetCreditInstallments_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return 0;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).PISCOFINSCreditInstallments_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).PISCOFINSCreditInstallments_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #PISCOFINSFixedAssetCreditPurpose_BR
        #/// <summary>
        #/// Indicates the asset utilization purpose of the PIS/COFINS credit appropriation.
        #/// </summary>
        #/// <returns>
        #/// The asset utilization purpose of the PIS/COFINS credit appropriation.
        #/// </returns>
        #// <GBR>
        #public FBPISCOFINSFixedAssetCreditPurpose_BR PISCOFINSFixedAssetCreditPurpose_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return FBPISCOFINSFixedAssetCreditPurpose_BR::None;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).PISCOFINSCreditPurpose_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).PISCOFINSCreditPurpose_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #PISCOFINSReceivableLongTerm_BR
        #/// <summary>
        #/// Indicates whether the <c>PISCONFINS</c> asset is receivable long term.
        #/// </summary>
        #/// <returns>
        #/// True if the <c>PISCOFINS</c> asset is receivable long term; otherwise, false.
        #/// </returns>
        #// <GBR>
        #public NoYes PISCOFINSReceivableLongTerm_BR()
        #{
        #    if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        #    {
        #        return false;
        #    }
        #
        #    if (!this.CreateFixedAsset)
        #    {
        #        return AssetTable::find(this.AssetId).PISCOFINSReceivableLongTerm_BR;
        #    }
        #    else
        #    {
        #        return AssetGroup::find(this.AssetGroup).PISCOFINSReceivableLongTerm_BR;
        #    }
        #}
        #// </GBR>
      ENDSOURCE
      SOURCE #postModifyInventDimBR
        #/// <summary>
        #///   Sets field values on the order line based on the changed inventory dimension.
        #/// </summary>
        #/// <param name="_inventDim">
        #///   A record.
        #/// </param>
        #/// <param name="_dimFieldId">
        #///   A field ID.
        #/// </param>
        #/// <param name="_resetPrice">
        #///   A <c>Boolean</c> value determinig if the price should be reset; optional.
        #/// </param>
        #public void postModifyInventDimBR(
        #    InventDim                           _inventDim,
        #    FieldId                             _dimFieldId,
        #    boolean                             _resetPrice = true)
        #{
        #    if (_dimFieldId == fieldNum(InventDim, InventSiteId))
        #    {
        #        this.inventSiteChanged_BR();
        #    }
        #}
      ENDSOURCE
      SOURCE #priceDate
        #/// <summary>
        #/// Retrieves the date for which to calculate the price according to the <c>PriceDateType</c> field.
        #/// </summary>
        #/// <returns>
        #/// The date for which to calculate the price.
        #/// </returns>
        #/// <remarks>
        #/// The <c>PriceDateType</c> field can be set up to <c>Today</c> or <c>DeliveryDate</c> as a price date.
        #/// </remarks>
        #TransDate priceDate()
        #{
        #    PurchParameters purchParameters;
        #    PurchLine_W     purchLine_W;
        #    #ISOCountryRegionCodes
        #
        #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        if (purchLine_W.PriceAgreementDate_RU)
        #        {
        #            return purchLine_W.PriceAgreementDate_RU;
        #        }
        #    }
        #
        #    purchParameters = PurchParameters::find();
        #
        #    switch (purchParameters.PriceDateType)
        #    {
        #        case PurchPriceDateType::DeliveryDate:
        #            return this.DeliveryDate;
        #
        #        default:
        #            return systemDateGet();
        #    }
        #}
      ENDSOURCE
      SOURCE #priceGroupId
        #PriceGroupId  priceGroupId()
        #{
        #    return this.purchTable().PriceGroupId;
        #}
      ENDSOURCE
      SOURCE #projIdModified
        #/// <summary>
        #/// Changes the purchase line based on changes in the project ID unit field.
        #/// </summary>
        #/// <remarks>
        #/// Called from the <c>modifiedField</c> method.
        #/// </remarks>
        #public void projIdModified()
        #{
        #    if (this.RecId && !this.refreshAgreementLink())
        #    {
        #        this.unLinkAgreementLinePrompt(fieldNum(PurchLine, ProjId));
        #    }
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        this.psaRetainScheduleId = ProjPWPVendorRetentionSetting::findByProjVendor(this.ProjId, this.purchTable().OrderAccount).RuleId;
        #    }
        #    this.setProjSalesPrice();
        #}
      ENDSOURCE
      SOURCE #projQueryValueInventTransId
        #str projQueryValueInventTransId()
        #{
        #    return ProjItemTrans::projQueryValueInventTransId(this.InventTransId, this.ItemId);
        #}
      ENDSOURCE
      SOURCE #projTable
        #ProjTable projTable(
        #    ProjId     projId = this.ProjId,
        #    boolean    update = false)
        #{
        #    return ProjTable::find(projId, update);
        #}
      ENDSOURCE
      SOURCE #psAeditActivityPurpose
        #public edit smmActivityPurpose psAeditActivityPurpose(boolean _set, ProjActivityNumber _activityNumber)
        #{
        #    smmActivities smmActivities;
        #    str name;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #    if (_set)
        #    {
        #        this.ActivityNumber = _activityNumber;
        #        this.initFromProjActivity(ProjActivity::find(_activityNumber));
        #    }
        #    else
        #    {
        #        smmActivities = smmActivities::find(this.ActivityNumber);
        #        name = smmActivities.Purpose;
        #    }
        #    }
        #
        #    return name;
        #}
        #
        #
      ENDSOURCE
      SOURCE #psaGetPWPSetting
        #public boolean psaGetPWPSetting()
        #{
        #    boolean     isPwpSetting;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        if (ProjPWPVendorRetentionSetting::findByProjVendor(this.ProjId, this.purchTable().OrderAccount).PwpThresholdPercent > 0)
        #        {
        #            isPwpSetting = true;
        #        }
        #        else
        #        {
        #            isPwpSetting = false;
        #        }
        #    }
        #
        #    return isPwpSetting;
        #}
      ENDSOURCE
      SOURCE #psaInitFromForecastSales
        #
        #// Description    : Init a purch line from a forecast sales line
        #//                  Based on initFromPurchLine
        #// Parameters     : _tForecastSales: Record to init from
        #//                  _bCopyPrecisely: Copy line precisely
        #//                  _bCopyPriceDisc: Init price and discount
        #//                  _bCopyQty: Init quantity
        #//                  _rQty: Quantity to init from
        #// Return value   : None
        #
        #public void  psaInitFromForecastSales(ForecastSales    _tForecastSales,
        #                               boolean          _bCopyPrecisely = true,
        #                               boolean          _bCopyPriceDisc = true,
        #                               boolean          _bCopyQty       = true,
        #                               Qty              _rQty           = _tForecastSales.SalesQty)
        #{
        #    InventDim   inventDim;
        #
        #    if (!isConfigurationkeyEnabled(configurationKeyNum(Project3)))
        #    {
        #        return;
        #    }
        #
        #    this.ItemId             = _tForecastSales.ItemId;
        #    this.initFromInventTable(this.inventTable());
        #
        #    if (_bCopyQty)
        #    {
        #        this.InventDimId        = _tForecastSales.InventDimId;
        #        this.PurchQty           = _rQty;
        #        this.PurchUnit          = _tForecastSales.SalesUnitId;
        #        this.QtyOrdered         = _tForecastSales.SalesQty == _rQty ? _tForecastSales.InventQty : this.calcQtyOrdered();
        #    }
        #    else
        #    {
        #        inventDim               = this.inventDim();
        #        EcoResProductDimGroupSetup::copyProductDimensionsForItem(this.ItemId,_tForecastSales.inventDim(),inventDim);
        #        this.InventDimId        = InventDim::findOrCreate(inventDim).InventDimId;
        #    }
        #
        #    if (_bCopyPriceDisc)
        #    {
        #        this.PurchPrice         = _tForecastSales.CostPrice;
        #        this.ProjSalesPrice     = _tForecastSales.SalesPrice;
        #        this.PriceUnit          = _tForecastSales.PriceUnit;
        #        this.LinePercent        = _tForecastSales.DiscPercent;
        #        this.LineDisc           = _tForecastSales.DiscAmount;
        #        this.PurchMarkup        = _tForecastSales.SalesMarkup;
        #        this.LineAmount         = _tForecastSales.Amount;
        #    }
        #
        #    if (_bCopyPrecisely)
        #    {
        #        this.InventDimId        = _tForecastSales.InventDimId;
        #        this.Name               = _tForecastSales.itemName();
        #        this.TaxItemGroup       = _tForecastSales.TaxItemGroupId;
        #        this.DefaultDimension   = _tForecastSales.DefaultDimension;
        #    }
        #
        #}
        #
        #
      ENDSOURCE
      SOURCE #psaInvoicedAmount
        #public AmountCur psaInvoicedAmount()
        #{
        #    AmountCur   rInvoiceAmount = 0;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)) && this.InventTransId)
        #    {
        #        rInvoiceAmount = (select sum(LineAmount) from vendInvoiceTrans
        #                        where vendInvoiceTrans.InventTransId == this.InventTransId).LineAmount;
        #    }
        #
        #    return rInvoiceAmount;
        #}
        #
      ENDSOURCE
      SOURCE #psaInvoicedQty
        #public PurchQty psaInvoicedQty()
        #{
        #    PurchQty   invoicedQty = 0.00;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)) && this.InventTransId)
        #    {
        #        invoicedQty = (select sum(Qty) from vendInvoiceTrans
        #                        where vendInvoiceTrans.InventTransId == this.InventTransId).Qty;
        #    }
        #
        #    return invoicedQty;
        #}
        #
      ENDSOURCE
      SOURCE #psaPwpPercent
        #public display PSAPercent psaPwpPercent(PurchLine _purchLine)
        #{
        #    return ProjPWPVendorRetentionSetting::getPwpThresholdPercent(_purchLine.ProjId, _purchLine.IsPwp, _purchLine.VendAccount);
        #}
        #
        #
      ENDSOURCE
      SOURCE #purchCORremainPurchQty
        #//BP Deviation Documented
        #public display Qty purchCORremainPurchQty(PurchLine _purchLine)
        #{
        #    return EPPurchCOR::corRemainPurchQty(int642str(_purchLine.RecId), _purchLine.RemainPurchPhysical);
        #}
      ENDSOURCE
      SOURCE #purchLine_IN
        #/// <summary>
        #/// Get the <c>PurchLine_IN</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchLine_IN</c> associated with the current record.
        #/// </returns>
        #public PurchLine_IN purchLine_IN()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_IN));
        #}
      ENDSOURCE
      SOURCE #purchLine_Intrastat
        #/// <summary>
        #/// Retrieves <c>PurchLine_Intrastat</c> extension table record.
        #/// </summary>
        #/// <returns>
        #/// The extension table record related to current record.
        #/// </returns>
        #public PurchLine_Intrastat purchLine_Intrastat()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_Intrastat));
        #}
        #
      ENDSOURCE
      SOURCE #purchLine_W
        #/// <summary>
        #/// Get the <c>PurchLine_W</c> table.
        #/// </summary>
        #/// <returns>
        #/// The table <c>PurchLine_W</c> associated with the current record.
        #/// </returns>
        #public PurchLine_W purchLine_W()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(PurchLine_W));
        #}
      ENDSOURCE
      SOURCE #purchLineView_IN
        #/// <summary>
        #/// Gets a <C>PurchLineView_IN</C> based on current buffer.
        #/// </summary>
        #/// <returns>
        #/// A <C>PurchLineView_IN</C>.
        #/// </returns>
        #public PurchLineView_IN purchLineView_IN()
        #{
        #    PurchLineView_IN    purchLineView_IN;
        #
        #    purchLineView_IN.initFromPurchLine(this);
        #    purchLineView_IN.initFromPurchLine_IN(this.purchLine_IN());
        #
        #    // If the view doesn't have a RecId then it will assume
        #    // this is an insert scenario when it isn't.  So we will
        #    // let the view borrow the RecId from the PurchLine.  Since
        #    // no writes are done using this view this will work okay.
        #    purchLineView_IN.RecId = this.RecId;
        #
        #    return purchLineView_IN;
        #}
      ENDSOURCE
      SOURCE #purchQtyModifiedInteraction
        #/// <summary>
        #/// Performs code with regard to changes in the purchase line when purchase quantity is changed with
        #/// user interaction if associated link to agreement line becomes invalid.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// The inventory dimensions of the changed line.
        #/// </param>
        #/// <remarks>
        #/// Prompt appears if linked purchase agreement line is set to enforce max quantity.
        #/// </remarks>
        #public void purchQtyModifiedInteraction(InventDim _inventDim = this.inventDim())
        #{
        #    boolean     calledFromWeb;
        #    boolean     isAgreementLinkRefreshed;
        #
        #    AmountCur   localOrigLineAmount = this.LineAmount; //This variable is needed for the uncommitted scenario.
        #
        #    if (!this.isTmp() && this.purchTable().MatchingAgreement)
        #    {
        #        //The impact on line amount should be included in the agreement link validation.
        #        this.LineAmount      = this.calcLineAmountForced(this.PurchQty);
        #        isAgreementLinkRefreshed = this.refreshAgreementLink();
        #        this.LineAmount      = localOrigLineAmount;
        #
        #        if (isAgreementLinkRefreshed)
        #        {
        #            PurchLine::modifyPurchQty(this, _inventDim);
        #        }
        #        else
        #        {
        #            calledFromWeb = webSession() ? true : false;
        #            if (calledFromWeb)
        #            {
        #                warning("@SYS135750");
        #                PurchLine::modifyPurchQty(this, _inventDim);
        #            }
        #            else
        #            {
        #                if (this.unLinkAgreementLinePrompt(fieldNum(PurchLine, PurchQty)))
        #                {
        #                    if (this.LineDeliveryType != LineDeliveryType::DeliveryLine
        #                        && this.doReCalcPricesFromBasePrompt())
        #                    {
        #                        PurchLine::modifyPurchQty(this, _inventDim);
        #                    }
        #                    else
        #                    {
        #                        PurchLine::modifyPurchQty(this, _inventDim, false);
        #                    }
        #                }
        #                else
        #                {
        #                    this.PurchQty = this.orig().PurchQty;
        #                }
        #            }
        #        }
        #    }
        #    else
        #    {
        #        PurchLine::modifyPurchQty(this, _inventDim);
        #    }
        #}
      ENDSOURCE
      SOURCE #purchReceivedNowAllowEdit
        #/// <summary>
        #/// Determines whether the <c>ReceivedNow</c> field can be edited.
        #/// </summary>
        #/// <returns>
        #/// false for order lines with multiple deliveries; otherwise, true.
        #/// </returns>
        #boolean purchReceivedNowAllowEdit()
        #{
        #    return this.LineDeliveryType != LineDeliveryType::OrderLineWithMultipleDeliveries;
        #}
      ENDSOURCE
      SOURCE #purchTable
        #PurchTable purchTable(boolean  update = false)
        #{
        #    return PurchTable::find(this.PurchId, update);
        #}
      ENDSOURCE
      SOURCE #purchUnitModified
        #/// <summary>
        #/// Changes the purchase line based on changes in the <c>PurchUnit</c> field.
        #/// </summary>
        #/// <remarks>
        #/// This method is called from the <c>modifiedField</c> method.
        #/// </remarks>
        #public void purchUnitModified()
        #{
        #    boolean modifyPurchUnit = true;
        #    InventItemBarcode   inventItemBarcode = InventItemBarcode::findPurchBarcodeDimension(this.ItemId, this.inventDim(), '', this.PurchUnit);
        #
        #    if (this.RecId && this.purchTable().MatchingAgreement && !this.refreshAgreementLink())
        #    {
        #        if (!this.unLinkAgreementLinePrompt(fieldNum(PurchLine, PurchUnit)))
        #        {
        #            modifyPurchUnit = false;
        #        }
        #    }
        #
        #    if (modifyPurchUnit)
        #    {
        #        InventMovement::bufferSetTransQtyUnit(this);
        #        this.setInventReceivedNow();
        #    }
        #
        #    if (this.ProjId && this.PurchUnit && !this.ItemId && !this.ProjSalesUnitId)
        #    {
        #        this.ProjSalesUnitId = this.PurchUnit;
        #    }
        #
        #    if (inventItemBarcode.RecId)
        #    {
        #        this.BarCode        = inventItemBarcode.ItemBarCode;
        #        this.BarCodeType    = inventItemBarcode.BarcodeSetupId;
        #    }
        #}
      ENDSOURCE
      SOURCE #qtyMarked
        #/// <summary>
        #///    Retrieves the amount of the inventory items marked for the purchase order line.
        #/// </summary>
        #/// <returns>
        #///    The amount of inventory marked for the inventory transaction related to the purchase order line.
        #/// </returns>
        #public InventQtyMarked qtyMarked()
        #{
        #    InventTransOriginId     inventTransOriginId;
        #    InventQtyMarked         inventQtyMarked;
        #
        #    if (this.isStocked())
        #    {
        #        inventTransOriginId = InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId);
        #        if (inventTransOriginId)
        #        {
        #            inventQtyMarked = InventTransOrigin::qtyMarked(inventTransOriginId);
        #        }
        #    }
        #
        #    return inventQtyMarked;
        #}
      ENDSOURCE
      SOURCE #qualityOrderStatusDisplay
        #/// <summary>
        #/// Retrieves the status of the associated quality orders.
        #/// </summary>
        #/// <returns>
        #/// The current quality order status.
        #/// </returns>
        #
        #//BP deviation documented
        #display InventTestOrderStatusDisplay qualityOrderStatusDisplay()
        #{
        #    return InventQualityOrderTable::referenceDocumentStatusDisplay(this);
        #}
      ENDSOURCE
      SOURCE #quantityToDistribute
        #/// <summary>
        #/// Calculates and returns the quantity to be distributed to the <c>AccountingDistribution</c> table.
        #/// </summary>
        #/// <returns>
        #/// Returns the quantity to be distributed to the <c>AccountingDistribution</c> table.
        #/// </returns>
        #/// <remarks>
        #/// The <c>PurchQty</c> value is not used. Instead, the sum of the quantity invoiced plus the quantity
        #/// that remains to be invoiced, plus the quantity that remains to be delivered is used.
        #/// </remarks>
        #public PurchQty quantityToDistribute()
        #{
        #    return this.PurchQty;
        #}
      ENDSOURCE
      SOURCE #receivedInTotal
        #//BP Deviation Documented
        #display PurchQty   receivedInTotal()
        #{
        #    if (!this.InventTransId)
        #    {
        #        return 0;
        #    }
        #
        #    return this.receivedInTotalServer();
        #}
      ENDSOURCE
      SOURCE #receivedInTotalPrice
        #//BP Deviation Documented
        #server display AmountCur  receivedInTotalPrice()
        #{
        #    AmountCur   receivedAmount;
        #
        #    if (this.ItemId)
        #    {
        #        receivedAmount   = (select sum(LineAmount) from vendInvoiceTrans
        #                                index hint TransIdIdx
        #                                where vendInvoiceTrans.InventTransId == this.InventTransId).LineAmount;
        #
        #        receivedAmount  += (this.receivedOnPackingSlipInTotal() * InventTable::findCostPcsPrice(this.ItemId, this.InventDimId));
        #    }
        #
        #    return receivedAmount;
        #}
      ENDSOURCE
      SOURCE #receivedInTotalServer
        #server PurchQty receivedInTotalServer()
        #{
        #    return this.type().receivedInTotal();
        #}
      ENDSOURCE
      SOURCE #receivedInventInTotal
        #//BP Deviation Documented
        #server display InventQty    receivedInventInTotal()
        #{
        #    InventTransIdSum    inventTransIdSum;
        #    InventQty           inventQty = 0;
        #
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        inventTransIdSum = InventTransIdSum::newTransOriginId(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #
        #        inventQty = (inventTransIdSum.physical() + inventTransIdSum.financial());
        #    }
        #
        #    return inventQty;
        #}
      ENDSOURCE
      SOURCE #receivedOnPackingSlipInTotal
        #/// <summary>
        #/// Retrieves the quantity received on packing slips.
        #/// </summary>
        #/// <returns>
        #/// The quantity received on packing slips.
        #/// </returns>
        #public PurchQty receivedOnPackingSlipInTotal()
        #{
        #    VendPackingSlipTrans            vendPackingSlipTrans;
        #
        #    select sum(Qty) from vendPackingSlipTrans
        #        where vendPackingSlipTrans.InventTransId == this.InventTransId;
        #
        #    return vendPackingSlipTrans.Qty;
        #}
      ENDSOURCE
      SOURCE #reductionEntryAmount_JP
        #/// <summary>
        #/// Displays the asset reduction entry amount
        #/// </summary>
        #/// <param name="_set">
        #/// Set or get the reduction entry amount
        #/// </param>
        #/// <param name="_amount">
        #/// Instance of <c>AssetReductionEntryAmount_JP</c>
        #/// </param>
        #/// <returns>
        #/// The reduction entry amount for asset
        #/// </returns>
        #public edit AssetReductionEntryAmount_JP reductionEntryAmount_JP(
        #    boolean                            _set,
        #    AssetReductionEntryAmount_JP       _amount)
        #{
        #    AssetReductionEntryAmount_JP           amountLoc;
        #    AssetDocumentReductionEntry_JP         reductionEntryDocumentLoc;
        #    AssetDocumentReductionEntryPurchLnk_JP assetDocumentLnk           = AssetDocumentLink_JP::construct(
        #                                                                        AssetDocumentLinkType_JP::Purch,
        #                                                                        AssetDocumentType_JP::AssetReductionEntry_DirectOff);
        #
        #    if (this.AssetId && this.AssetBookId && this.RecId)
        #    {
        #        reductionEntryDocumentLoc = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
        #                                        this.AssetId,
        #                                        this.AssetBookId);
        #        if (reductionEntryDocumentLoc != null)
        #        {
        #            assetDocumentLnk.findByReference(this.TableId, this.RecId, reductionEntryDocumentLoc.parmAssetDocumentEntry().RecId);
        #            if (_set)
        #            {
        #                if (_amount)
        #                {
        #                    if (assetDocumentLnk.parmRecId())
        #                    {
        #                        // update
        #                        assetDocumentLnk.parmReductionEntryAmount(_amount * -1);
        #                        assetDocumentLnk.parmReductionEntryCurrencyCode(this.CurrencyCode);
        #                        assetDocumentLnk.update();
        #                    }
        #                    else
        #                    {
        #                        // new
        #                        assetDocumentLnk.parmPurchLine(this);
        #                        assetDocumentLnk.parmAssetDocumentEntryRecId(reductionEntryDocumentLoc.parmAssetDocumentEntry().RecId);
        #                        assetDocumentLnk.parmReductionEntryAmount(_amount * -1);
        #                        assetDocumentLnk.parmReductionEntryCurrencyCode(this.CurrencyCode);
        #                        assetDocumentLnk.create();
        #                    }
        #                }
        #                else
        #                {
        #                    // remove
        #                    assetDocumentLnk.delete();
        #                }
        #            }
        #            else
        #            {
        #                amountLoc = assetDocumentLnk.parmReductionEntryAmount() * -1;
        #            }
        #        }
        #    }
        #
        #    return amountLoc;
        #}
        #
      ENDSOURCE
      SOURCE #reductionEntryDocumentId_JP
        #/// <summary>
        #/// Displays the asset reduction entry document id
        #/// </summary>
        #/// <returns>
        #/// The document id for asset reduction entry
        #/// </returns>
        #public display AssetReductionEntryProfileId_JP reductionEntryDocumentId_JP()
        #{
        #    AssetReductionEntryProfileId_JP    reductionEntryDocumentIdLoc;
        #    AssetDocumentReductionEntry_JP     reductionEntryDocumentLoc;
        #    if (this.AssetId && this.AssetBookId)
        #    {
        #        reductionEntryDocumentLoc = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
        #            this.AssetId,
        #            this.AssetBookId);
        #        if (reductionEntryDocumentLoc != null)
        #        {
        #            reductionEntryDocumentIdLoc = reductionEntryDocumentLoc.parmAssetDocumentTable().DocumentId;
        #        }
        #    }
        #    return reductionEntryDocumentIdLoc;
        #}
        #
      ENDSOURCE
      SOURCE #referenceWarningTxt
        #/// <summary>
        #/// Retrieves a warning message used for a line which references other entities.
        #/// </summary>
        #/// <returns>A warning message used for a line which references other entities.</returns>
        #str referenceWarningTxt()
        #{
        #    SalesLine       salesLine;
        #    PurchLine       purchLine;
        #    PurchReqLine    purchReqLine;
        #
        #    if (this.InventRefId)
        #    {
        #        switch (this.ItemRefType)
        #        {
        #            case InventRefType::Sales:
        #                salesLine = SalesLine::findInventTransId(this.InventRefTransId);
        #                if (salesLine)
        #                {
        #                    return strFmt("@SYS75609", salesLine.SalesId, salesLine.SalesStatus, this.ItemId);
        #                }
        #                break;
        #            case InventRefType::Purch:
        #                purchLine = PurchLine::findInventTransId(this.InventRefTransId);
        #                if (purchLine)
        #                {
        #                    return strFmt("@SYS75607", purchLine.PurchId, purchLine.PurchStatus, this.ItemId);
        #                }
        #                break;
        #
        #        }
        #    }
        #    // Show warning when deleting unconfirmed purchase line connected to a requisition.
        #    else if (this.PurchReqLineRefId
        #        && !this.isVersioned())
        #    {
        #        purchReqLine = PurchReqLine::findLineRefId(this.PurchReqLineRefId);
        #        return strFmt("@SYS342715", purchReqLine.SequenceNumber, this.PurchReqId, this.LineNumber);
        #    }
        #
        #    return '';
        #}
      ENDSOURCE
      SOURCE #refreshAgreementLink
        #/// <summary>
        #/// Refreshes the link between the <c>AgreementLine</c> and the <c>PurchLine</c>. If the current link has
        #/// become invalid, or if there is no current link, this will search for the best matching <c>AgreementLine</c>
        #/// and update the <c>PurchLine</c> if a new match is found.
        #/// </summary>
        #/// <param name="_showInfolog">
        #/// A flag that indicates whether to print the errors in the Infolog; optional.
        #/// </param>
        #/// <returns>
        #/// false if the link could not be refreshed; this happens when the current link is invalid and no better match could be found
        #/// </returns>
        #public server boolean refreshAgreementLink(boolean _showInfolog = true)
        #{
        #    return this.SalesPurchLine::refreshAgreementLink(new AgreementAutolinkHelperPurchLine(), _showInfolog);
        #}
      ENDSOURCE
      SOURCE #registered
        #//BP Deviation Documented
        #display InventQtyRegistered registered()
        #{
        #    if (this.InventTransId && this.isStocked())
        #    {
        #        return InventTransIdSumSingleStatus::qtyRegistered(InventTransOriginPurchLine::findInventTransOriginId(this.DataAreaId, this.InventTransId));
        #    }
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #registeredInPurchUnit
        #//BP Deviation Documented
        #display PurchQtyRegistered registeredInPurchUnit()
        #{
        #    PurchQtyRegistered purchQtyRegistered;
        #
        #    if (this.isStocked())
        #    {
        #        purchQtyRegistered = this.registered();
        #        if (purchQtyRegistered)
        #        {
        #            purchQtyRegistered = this.unitConvertInvent2Purch(purchQtyRegistered);
        #        }
        #    }
        #    else
        #    {
        #        purchQtyRegistered = TradeNonStockedRegistrationHelper::qtyRegistered(this.SourceDocumentLine);
        #    }
        #
        #    return purchQtyRegistered;
        #}
      ENDSOURCE
      SOURCE #registeredQuantityAndServices
        #/// <summary>
        #/// Gets the registered quantity for the line or the line quantity for a non-tangible line that cannot
        #/// be registered.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchQty</c> value.
        #/// </returns>
        #/// <remarks>
        #/// This method is used during posting for the <c>PurchUpdate</c> enumeration option to show the
        #/// registered quantity and services.
        #/// </remarks>
        #public InventQty registeredQuantityAndServices()
        #{
        #    InventQty   quantity;
        #
        #    if (this.isTangible())
        #    {
        #        //For lines with tangible items the registered quantity is returned
        #        quantity =  this.registered();
        #    }
        #    else
        #    {
        #        //For non-tangible lines, the ordered quantity is returned
        #        quantity = this.unitConvertPurch2Invent(this.PurchQty);
        #    }
        #
        #    return quantity;
        #}
      ENDSOURCE
      SOURCE #registeredQuantityAndServicesInPurchUnit
        #/// <summary>
        #/// Gets the registered quantity for the line or the line quantity for a non-tangible line that cannot
        #/// be registered.
        #/// </summary>
        #/// <returns>
        #/// A <c>PurchQty</c> value.
        #/// </returns>
        #/// <remarks>
        #/// This method is used during posting for the <c>PurchUpdate</c> enumeration option to show the
        #/// registered quantity and services.
        #/// </remarks>
        #public PurchQty registeredQuantityAndServicesInPurchUnit()
        #{
        #    PurchQty quantity;
        #
        #    if (this.isTangible())
        #    {
        #        //For lines with tangible items the registered quantity is returned
        #        quantity = this.registeredInPurchUnit();
        #    }
        #    else
        #    {
        #        //For non-tangible lines, the line quantity is returned
        #        quantity = this.PurchQty;
        #    }
        #
        #    return quantity;
        #}
      ENDSOURCE
      SOURCE #reqTrans
        #/// <summary>
        #/// Finds the corresponding record in the <c>ReqTrans</c> table for the current record in the
        #/// <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="_reqPlanVersionRefRecId">
        #/// Tthe ID of the record in the <c>ReqPlanVersion</c> table; optional.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #/// A record in the <c>ReqTrans</c> table; otherwise, an empty record.
        #/// </returns>
        #ReqTrans reqTrans(
        #    RefRecId _reqPlanVersionRefRecId = ReqPlanVersion::findActiveReqPlanIdDynamic().RecId,
        #    boolean  _forupdate              = false)
        #{
        #    ReqTrans                    reqTrans;
        #    InventTransOriginPurchLine  inventTransOriginPurchLine;
        #
        #
        #    reqTrans.selectForUpdate(_forupdate);
        #
        #    select firstonly reqTrans
        #        where reqTrans.PlanVersion  == _reqPlanVersionRefRecId
        #           && reqTrans.RefType      == ReqRefType::Purch
        #           && reqTrans.RefId        == this.PurchId
        #        exists join inventTransOriginPurchLine
        #            where inventTransOriginPurchLine.InventTransOrigin      == reqTrans.InventTransOrigin
        #               && inventTransOriginPurchLine.PurchLineDataAreaId    == this.DataAreaId
        #               && inventTransOriginPurchLine.PurchLineInventTransId == this.InventTransId;
        #
        #    return reqTrans;
        #}
      ENDSOURCE
      SOURCE #resetDistributions
        #/// <summary>
        #/// Removes and regenerates the distributions for the current document.
        #/// </summary>
        #/// <remarks>
        #/// This is used by the commitments and budget reservations feature to reset the accounting distributions after the parent reference for the current line is changed.
        #/// </remarks>
        #public void resetDistributions()
        #{
        #    SourceDocumentLine  sourceDocumentLine;
        #
        #    /* <SYS>
        #   // Check to see that the commitments feature is enabled and that there are existing distributions.
        #    if (PublicSectorUtils::isFrenchRegulatoryEnabled() && AccountingDistribution::existSourceDocumentLine(this.SourceDocumentLine))
        #    </SYS> */
        #    // <PubSect>
        #    // Check to see that the commitments or budget reservation feature is enabled and that there are existing distributions.
        #    if ((PublicSectorUtils::isBudgetReservationEnabled() || PublicSectorUtils::isFrenchRegulatoryEnabled()) && AccountingDistribution::existSourceDocumentLine(this.SourceDocumentLine))
        #    // </PubSect>
        #    {
        #        select firstonly sourceDocumentLine
        #            where sourceDocumentLine.RecId == this.SourceDocumentLine;
        #
        #        // set the accounting state to draft
        #        SourceDocumentLineProcessor::submitSourceDocumentLine(sourceDocumentLine, false, SourceDocumentLineAccountingStatus::Draft, AccountingDistributionViewModelCaller::construct(AccountingDistributionMethod::None));
        #
        #        // set the accounting state back to fully distributed
        #        SourceDocumentLineProcessor::submitSourceDocumentLine(sourceDocumentLine, false, SourceDocumentLineAccountingStatus::FullyDistributed, AccountingDistributionViewModelCaller::construct(AccountingDistributionMethod::None));
        #    }
        #}
      ENDSOURCE
      SOURCE #resetInvent
        #server void  resetInvent(boolean update = true)
        #{
        #    this.PurchQty                       = 0;
        #    this.QtyOrdered                     = 0;
        #
        #    this.PurchPrice    = 0;
        #    this.LineAmount    = 0;
        #
        #    this.RemainPurchPhysical    = this.PurchQty;
        #    this.RemainPurchFinancial   = 0;
        #    this.RemainInventPhysical   = this.QtyOrdered;
        #    // 1877
        #    this.RemainInventFinancial  = 0;
        #    // 1877
        #
        #    InventMovement::bufferSetTransQtyUnit(this);
        #    this.setInventReceivedNow();
        #
        #    if (update)
        #    {
        #        this.update();
        #        this.PurchStatus   = PurchStatus::Canceled;
        #        this.doUpdate();
        #
        #        InterCompanyUpdateStatus::synchronize(this);
        #    }
        #    else
        #    {
        #        this.PurchStatus   = PurchStatus::Canceled;
        #    }
        #}
      ENDSOURCE
      SOURCE #resetProjectFields
        #/// <summary>
        #/// Resets the project field values on the current purchase order line.
        #/// </summary>
        #// <PubSect>
        #public void resetProjectFields()
        #{
        #    PurchTable  purchTable  = PurchTable::find(this.PurchId);
        #    ProjTable   projTable   = ProjTable::find(purchTable.ProjId);
        #
        #    this.ProjId                 = '';
        #    this.ActivityNumber         = '';
        #    this.ProjCategoryId         = '';
        #    this.ProjLinePropertyId     = '';
        #    this.ProjSalesCurrencyId    = '';
        #    this.ProjSalesUnitId        = '';
        #    this.ProjSalesPrice         = 0;
        #    this.ProjTaxGroupId         = '';
        #    this.ProjTaxItemGroupId     = '';
        #    this.ProjWorker             = 0;
        #
        #    if (projTable.RecId != 0)
        #    {
        #        this.ProjId         = projTable.ProjId;
        #        this.ProjCategoryId = ProjParameters::find().ItemCategory;
        #        this.initFromProjTable(projTable);
        #    }
        #}
        #// </PubSect>
      ENDSOURCE
      SOURCE #returnActionChanged
        #void  returnActionChanged(InventDim inventDim = null)
        #{
        #    ReturnActionDefaults  returnActionDefaults = ReturnActionDefaults::find(this.moduleType(), this.ReturnActionId);
        #
        #    if (returnActionDefaults.RecId)
        #    {
        #        if (!inventDim)
        #        {
        #            inventDim = this.inventDim();
        #        }
        #
        #        inventDim.mergeUsedDim(InventDimGroupSetup::newItemId(this.ItemId), returnActionDefaults.inventDim());
        #        this.setInventDimIdFromInventDim(inventDim);
        #
        #
        #        if (this.ProjId && !this.purchTable().isProjectSalesItemReqPO()
        #            && !this.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO())
        #        {
        #            this.Scrap          = returnActionDefaults.Scrap;
        #
        #            if (this.ItemRefType != InventRefType::Sales &&
        #                this.ItemRefType != InventRefType::InventJournal)
        #            {
        #                this.Scrap  = true;
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #runPriceDiscPolicyDialog
        #/// <summary>
        #/// Calls the <c>runPriceDiscPolicyDialog</c> method of the <c>PriceDiscResultFields</c> table map.
        #/// </summary>
        #/// <param name="_skipCheck">
        #/// A boolean that specifies whether to skip field change validation before start of the dialog;
        #/// optional.
        #/// </param>
        #/// <returns>
        #/// The return value of the <c>runPriceDiscPolicyDialog</c> method of the <c>PriceDiscResultFields</c>
        #/// table map.
        #/// </returns>
        #public boolean runPriceDiscPolicyDialog(boolean _skipCheck = false)
        #{
        #
        #    return this.PriceDiscResultFields::runPriceDiscPolicyDialog(0,
        #                                                                false,
        #                                                                _skipCheck);
        #}
      ENDSOURCE
      SOURCE #salesLine
        #SalesLine salesLine(boolean _update = false)
        #{
        #    SalesLine salesLine;
        #
        #    if (this.ItemRefType == InventRefType::Sales && this.InventRefId && this.InventRefTransId)
        #    {
        #        salesLine = SalesLine::findInventTransId(this.InventRefTransId, _update);
        #    }
        #
        #    return salesLine;
        #}
      ENDSOURCE
      SOURCE #salesPurchTable
        #SalesPurchTable salesPurchTable()
        #{
        #    return this.purchTable();
        #}
      ENDSOURCE
      SOURCE #setAddressFromInventDim
        #/// <summary>
        #/// Sets address based on invent dimension information.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// Invent dimension information.
        #/// </param>
        #/// <param name="_setTaxGroupFromPurchTable">
        #/// True to set tax group from purchase order.
        #/// </param>
        #/// <remarks>
        #/// Currently, the second param is only used in PurchLine::initFromVendInvoiceTrans()
        #/// to pass !_copyPrecisely information. IN code is reusing this to avoid duplicating
        #/// param passing.
        #/// </remarks>
        #public void setAddressFromInventDim(InventDim _inventDim
        #                                    , boolean _setTaxGroupFromPurchTable = true
        #)
        #{
        #    InventLocation              inventLocation;
        #    InventSite                  inventSite;
        #    LogisticsLocationRecId      location;
        #    // <GIN>
        #    PurchLine_IN                purchLine_IN;
        #    // </GIN>
        #
        #    if (_inventDim.RecId
        #    &&  !this.isDropShipment())
        #    {
        #        inventLocation  = InventLocation::find(_inventDim.InventLocationId);
        #        location        = LogisticsLocationDefault::findSimpleDefault(inventLocation,
        #                            LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)).RecId;
        #
        #        if (location)
        #        {
        #            this.setLocation(location, inventLocation);
        #        }
        #        else if (inventLocation.VendAccount
        #                || this.PurchaseType == PurchaseType::ReturnItem
        #                )
        #        {
        #            if (this.PurchaseType != PurchaseType::ReturnItem)
        #            {
        #            this.setAddressFromVendTable(VendTable::find(inventLocation.VendAccount));
        #            }
        #            else
        #            {
        #                this.setAddressFromPurchTable();
        #            }
        #        }
        #        else
        #        {
        #            inventSite  = InventSite::find(_inventDim.InventSiteId);
        #            if (inventSite)
        #            {
        #                location   = LogisticsLocationDefault::findSimpleDefault(inventSite, LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)).RecId;
        #            }
        #
        #            if (location)
        #            {
        #                this.setLocation(location, inventSite);
        #            }
        #            else
        #            {
        #                this.setAddressFromPurchTable();
        #
        #                if (_setTaxGroupFromPurchTable)
        #                {
        #                    this.TaxGroup = this.purchTable().TaxGroup;
        #                }
        #            }
        #        }
        #
        #        // <GIN>
        #        // Note: Please ignore the naming for variable _setTaxGroupFromPurchTable here.
        #        // See details in xml doc <remarks> part.
        #        if (_setTaxGroupFromPurchTable
        #            && (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters()))
        #        {
        #            purchLine_IN = this.purchLine_IN();
        #            purchLine_IN.CompanyLocation_IN = TaxLogisticsLocationControllerHelper_IN::getDefaultLogisticsLocation(_inventDim.InventLocationId, _inventDim.InventSiteId);
        #            purchLine_IN.TaxInformation_IN = TaxInformation_IN::findDefaultbyLocation(purchLine_IN.CompanyLocation_IN).RecId;
        #            this.packPurchLine_IN(purchLine_IN);
        #        }
        #        // </GIN>
        #    }
        #}
      ENDSOURCE
      SOURCE #setAddressFromPurchLine
        #public void  setAddressFromPurchLine(PurchLine  _purchLine)
        #{
        #    this.DeliveryPostalAddress      = _purchLine.DeliveryPostalAddress;
        #    this.DeliveryName               = _purchLine.DeliveryName;
        #    this.AddressRefRecId            = _purchLine.AddressRefRecId;
        #    this.AddressRefTableId          = _purchLine.AddressRefTableId;
        #}
      ENDSOURCE
      SOURCE #setAddressFromPurchTable
        #public void  setAddressFromPurchTable(PurchTable  _purchTable = this.purchTable())
        #{
        #    //Note: Any change made here must also be made in purchTable.copyAddressToLine
        #
        #    this.DeliveryPostalAddress      = _purchTable.DeliveryPostalAddress;
        #    this.DeliveryName               = _purchTable.DeliveryName;
        #    this.AddressRefRecId            = _purchTable.AddressRefRecId;
        #    this.AddressRefTableId          = _purchTable.AddressRefTableId;
        #}
      ENDSOURCE
      SOURCE #setAddressFromVendTable
        #void  setAddressFromVendTable(VendTable _vendTable)
        #{
        #    this.DeliveryName               =_vendTable.name();
        #    this.DeliveryPostalAddress      = DirParty::primaryPostalAddress(_vendTable.Party).RecId;
        #    this.AddressRefRecId            = _vendTable.RecId;
        #    this.AddressRefTableId          = _vendTable.TableId;
        #}
      ENDSOURCE
      SOURCE #setAgreementLine
        #/// <summary>
        #/// Sets the <c>AgreementLine</c> when the procurement category is changed for a purchase line.
        #/// </summary>
        #private void setAgreementLine()
        #{
        #    EcoResCategory ecoResCategory, ecoResCategoryChildren;
        #    AgreementLine  agreementLineLocal;
        #    DataAreaId     companyId = CompanyInfo::find().company();
        #
        #    if(this.isCategoryBased() && this.purchTable().MatchingAgreement)
        #    {
        #        select firstonly RecId from ecoResCategory order by ecoResCategory.Level desc
        #            join Category, Agreement from agreementLineLocal
        #                where ecoResCategory.RecId == agreementLineLocal.Category
        #                    && agreementLineLocal.Agreement == this.purchTable().MatchingAgreement
        #                    && agreementLineLocal.IsDeleted == NoYes::No
        #                    && agreementLineLocal.InventDimDataAreaId == companyId
        #                    && agreementLineLocal.ExpirationDate >= (this.DeliveryDate ? this.DeliveryDate : systemDateGet())
        #                    && agreementLineLocal.EffectiveDate <= (this.DeliveryDate ? this.DeliveryDate : systemDateGet())
        #            exists join ParentCategory, RecId from ecoResCategoryChildren
        #                where ecoResCategoryChildren.CategoryHierarchy == ecoResCategory.CategoryHierarchy
        #                    && ecoResCategoryChildren.NestedSetLeft >= ecoResCategory.NestedSetLeft
        #                    && ecoResCategoryChildren.NestedSetRight <= ecoResCategory.NestedSetRight
        #                    && (ecoResCategory.RecId == this.ProcurementCategory || ecoResCategoryChildren.RecId == this.ProcurementCategory);
        #
        #        if(agreementLineLocal)
        #        {
        #            this.MatchingAgreementLine = agreementLineLocal.RecId;
        #        }
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #setAgreementPrice
        #client server void  setAgreementPrice(AgreementLineQuantityCommitment _agreementLine)
        #{
        #    this.PurchUnit = _agreementLine.ProductUnitOfMeasure;
        #    this.SalesPurchLine::setAgreementQtyAndPrice(_agreementLine);
        #}
      ENDSOURCE
      SOURCE #setAgreementSkipAutoLink
        #/// <summary>
        #/// Sets a value for the AgreementSkipAutoLink field of <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_agreementSkipAutoLink">
        #/// Value for the AgreementSkipAutoLink field to be set on the instance of <c>PurchLine</c>
        #/// </param>
        #/// <remarks>
        #/// This value determines whether or not automatic attempt to link this line to agreement line should take place or not
        #/// in case when agreement specific information is changed for this instance of <c>PurchLine</c>
        #/// </remarks>
        #public void setAgreementSkipAutoLink(AgreementSkipAutoLink _agreementSkipAutoLink)
        #{
        #    this.AgreementSkipAutoLink = _agreementSkipAutoLink;
        #}
        #
      ENDSOURCE
      SOURCE #setCFOP_BR
        #/// <summary>
        #/// It is responsible for setting CFOP code
        #/// </summary>
        #/// <param name="_askToUser">
        #/// boolean to define if should request user intereaction
        #/// </param>
        #public void setCFOP_BR(boolean _askToUser = false)
        #{
        #    CFOPValidation_BR           cfopValidation;
        #
        #    cfopValidation       = CFOPValidation_BR::construct(this);
        #    if (!cfopValidation.checkCFOP(_askToUser))
        #    {
        #        this.cfopTable_BR    = cfopValidation.getDefaultCFOP(_askToUser);
        #        this.onCFOPChange_BR();
        #    }
        #}
      ENDSOURCE
      SOURCE #setDeliveryName
        #/// <summary>
        #///     Sets the delivery name field based on the specified logistic location.
        #/// </summary>
        #public void setDeliveryName()
        #{
        #    this.TradePostalAddress::setDeliveryName();
        #}
      ENDSOURCE
      SOURCE #setDepreciationStartDate
        #void setDepreciationStartDate(boolean _forceSet = false)
        #{
        #    if (this.AssetId != this.orig().AssetId ||
        #        this.AssetBookId != this.orig().AssetBookId || _forceSet)
        #    {
        #        this.DepreciationStartDate = AssetBook::getDepreciationStartDate(this.AssetId, this.AssetBookId);
        #    }
        #}
      ENDSOURCE
      SOURCE #setExciseFields_IN
        #/// <summary>
        #/// Sets excise fields of purch line.
        #/// </summary>
        #public void setExciseFields_IN()
        #{
        #    PurchLine_IN purchLine_IN;
        #
        #    if (TaxParameters::isExciseEnable_IN())
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #        if (!TaxExciseTypeController_IN::isDSAAllowed(purchLine_IN.ExciseType_IN, purchLine_IN.ExciseRecordType_IN, this.ItemId))
        #        {
        #            purchLine_IN.dsa_in = false;
        #        }
        #
        #        if(!TaxExciseTypeController_IN::isDirectSettlementAllowed(
        #        purchLine_IN.ExciseType_IN, purchLine_IN.ExciseRecordType_IN, this.PurchQty > 0 ? TaxDirection::IncomingTax : TaxDirection::OutgoingTax))
        #        {
        #            purchLine_IN.DirectSettlement_IN = DirectSettlement_IN::None;
        #        }
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
        #
      ENDSOURCE
      SOURCE #setInventDimId
        #/// <summary>
        #/// Applies the <c>InventDimId</c> parameter to the <c>InventDimId</c> field and applies default
        #/// values, depending on the new inventory dimensions.
        #/// </summary>
        #/// <param name="_inventDimId">
        #/// The <c>InventDimId</c> value that should be applied to the <c>InventDimId</c> field.
        #/// </param>
        #/// <param name="_inventDim">
        #/// The <c>InventDim</c> record buffer related to the <c>InventDimId</c> parameters; optional.
        #/// </param>
        #public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
        #{
        #    InventDim   currentInventDim = this.InventDimId == _inventDimId ? _inventDim : this.inventDim();
        #
        #    this.InventDimId = _inventDimId;
        #    this.linkInventDim2Dimension(_inventDim, currentInventDim);
        #}
      ENDSOURCE
      SOURCE #setInventDimIdFromInventDim
        #/// <summary>
        #/// Finds or creates an <c>InventDimId</c> value for the <c>InventDim</c> parameter and applies the
        #/// found <c>InventDimId</c> value to the <c>PurchLine.inventDimId</c> field.
        #/// </summary>
        #/// <param name="_inventDim">
        #/// An <c>InventDim</c> record buffer that should be referenced by the current <c>PurchLine</c> record
        #/// buffer.
        #/// </param>
        #public void setInventDimIdFromInventDim(InventDim _inventDim)
        #{
        #    InventDim   inventDim;
        #
        #    inventDim = InventDim::findOrCreate(_inventDim);
        #    this.setInventDimId(inventDim.InventDimId, inventDim);
        #}
      ENDSOURCE
      SOURCE #setInventReceivedNow
        #void  setInventReceivedNow()
        #{
        #    if (this.isStocked())
        #    {
        #        this.InventReceivedNow = UnitOfMeasureConverter::convert(
        #            this.PurchReceivedNow,
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #            NoYes::Yes,
        #            InventTable::itemProduct(this.ItemId));
        #    }
        #    else
        #    {
        #        this.InventReceivedNow = 0;
        #    }
        #}
      ENDSOURCE
      SOURCE #setListCode
        #void  setListCode()
        #{
        #}
      ENDSOURCE
      SOURCE #setLocation
        #/// <summary>
        #///    Sets delivery address information and related information.
        #/// </summary>
        #/// <param name="_locationRecId">
        #///    The record ID of the logistics location.
        #/// </param>
        #/// <param name="_source">
        #///    The record that has an associated address.
        #/// </param>
        #/// <remarks>
        #///    If <c>_source</c> parameter is not specified, the address related information will be set based on the logistics location.
        #/// </remarks>
        #void  setLocation(LogisticsLocationRecId  _locationRecId, Common _source = null)
        #{
        #    LogisticsLocation location = LogisticsLocation::find(_locationRecId);
        #
        #    if (this.PurchaseType != PurchaseType::ReturnItem)
        #    {
        #    if (location.Description)
        #        this.DeliveryName       = location.Description;
        #
        #    this.DeliveryPostalAddress  = LogisticsPostalAddress::addressRecIdFromLocationRecId(location.RecId);
        #
        #    if(_source)
        #    {
        #        LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(_source,
        #            this.DeliveryPostalAddress);
        #    }
        #    else
        #    {
        #        LogisticsLocationSelectForm_PurchLine::construct(this).copyAddressToCaller(this.getDeliveryEntityRecord(),
        #            this.DeliveryPostalAddress);
        #    }
        #    }
        #}
      ENDSOURCE
      SOURCE #setPostingProfile_RU
        #void setPostingProfile_RU()
        #{
        #    FormDataSource      formDataSource;
        #    PurchLine_W         purchLine_W;
        #    InventProfileId_RU  inventProfile = this.inventDim().InventProfileId_RU;
        #
        #    if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(this.ItemId, fieldNum(InventDim, InventProfileId_RU)) &&
        #        (inventProfile && (! this.RecId || inventProfile != this.orig().inventDim().InventProfileId_RU)))
        #    {
        #        purchLine_W = this.purchLine_W();
        #        purchLine_W.PostingProfile_RU = InventProfileCustVendLedger_RU::vendPostingProfile(inventProfile);
        #        this.packPurchLine_W(purchLine_W);
        #
        #        formDataSource = purchLine_W.dataSource();
        #        if (formDataSource)
        #        {
        #            formDataSource.refresh();
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceAgreement
        #server void  setPriceAgreement(InventDim inventDim, PriceDiscPolicyCheckPolicy  _checkPolicy = null )
        #{
        #    this.SalesPurchLine::setPriceAgreement(inventDim, true, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setPriceDisc
        #server void  setPriceDisc(InventDim inventDim)
        #{
        #    PriceDiscPolicyCheckPolicy  checkPolicy = PriceDiscPolicyCheckPolicy::newFromParm(this.PriceDiscResultFields::parmPriceDiscResultFields());
        #
        #    this.setPriceAgreement(inventDim, checkPolicy);
        #    this.LineAmount = this.calcLineAmountForced(this.PurchQty, checkPolicy);
        #    if (TaxParameters::checkTaxParameters_IN())
        #    {
        #        this.assessableValue_IN();
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceDiscChangePolicy
        #/// <summary>
        #/// Calls the <c>createPriceDiscChangePolicy</c> method of the <c>PriceDiscResultFields</c> table map.
        #/// </summary>
        #/// <param name="_policySource">
        #/// An outcome of the <c>PriceDiscSystemSource</c> enumeration that specifies the source of the policy.
        #/// </param>
        #/// <param name="_fieldId">
        #/// A field ID.
        #/// </param>
        #client server void setPriceDiscChangePolicy(PriceDiscSystemSource _policySource, RefFieldId _fieldId = 0)
        #{
        #    if (!this.isInterCompanyOrder() || this.isLinkedToAgreement())
        #    {
        #        this.PriceDiscResultFields::createPriceDiscChangePolicy(ModuleSalesPurch::Purch, _policySource, _fieldId);
        #    }
        #}
      ENDSOURCE
      SOURCE #setPriceDiscMarkup
        #/// <summary>
        #/// Calls the <c>setPriceDiscMarkup</c> method on the <c>SalesPurchLine</c> table map.
        #/// </summary>
        #/// <param name="_priceDisc">
        #/// An instance of the <c>PriceDisc</c> class.
        #/// </param>
        #/// <param name="_checkPolicy">
        #/// An instance of the <c>PriceDiscPolicyCheckPolicy</c> class.
        #/// </param>
        #void setPriceDiscMarkup(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy)
        #{
        #    this.SalesPurchLine::setPriceDiscMarkup(_priceDisc, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setPriceDiscPriceUnit
        #/// <summary>
        #/// Calls the <c>setPriceDiscPriceUnit</c> method on the <c>SalesPurchLine</c> table map.
        #/// </summary>
        #/// <param name="_priceDisc">
        #/// An instance of the <c>PriceDisc</c> class.
        #/// </param>
        #/// <param name="_checkPolicy">
        #/// An instance of the <c>PriceDiscPolicyCheckPolicy</c> class.
        #/// </param>
        #void setPriceDiscPriceUnit(PriceDisc_Price _priceDisc, PriceDiscPolicyCheckPolicy _checkPolicy)
        #{
        #    this.SalesPurchLine::setPriceDiscPriceUnit(_priceDisc, _checkPolicy);
        #}
      ENDSOURCE
      SOURCE #setProjSalesPrice
        #/// <summary>
        #/// Calculate and set the project sales price field.
        #/// </summary>
        #private void setProjSalesPrice()
        #{
        #    InventTable     inventTable;
        #    ProjCategory    category;
        #    boolean         priceFound;
        #
        #    // <PubSect>
        #    BudgetReservationLine_PSN budgetReservationLine = BudgetReservationLine_PSN::find(this.BudgetReservationLine_PSN);
        #    // </PubSect>
        #
        #    Debug::assert(this.ProjId != '');
        #
        #    if(this.defaultCostPriceAsSalesPrice())
        #    {
        #        this.ProjSalesPrice = this.PurchPrice;
        #    }
        #    // <PubSect>
        #    else if (this.isProjectBudgetReservationLineReferenced())
        #    {
        #        this.ProjSalesPrice = budgetReservationLine.ProjSalesPrice;
        #    }
        #    // </PubSect>
        #    else if (this.ProjCategoryId)
        #    {
        #        category = ProjCategory::find(this.ProjCategoryId);
        #        switch (category.CategoryType)
        #        {
        #            case ProjCategoryType::Item:
        #                inventTable = this.inventTable();
        #                if (inventTable.SalesPriceModelBasic    == SalesPriceModelBasic::PurchPrice &&
        #                    inventTable.SalesModel              != SalesPriceModel::None &&
        #                    !(inventTable.SalesModel == SalesPriceModel::Contributionratio && inventTable.SalesContributionRatio >= 100) &&
        #                    !this.purchTable().isProjectSalesItemReqPO() &&
        #                    !this.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO())
        #                {
        #                    this.ProjSalesPrice = this.inventTableModule().updateSalesPrice(inventTable, this.inventTableModule(), this.PurchPrice);
        #                }
        #                break;
        #
        #            case ProjCategoryType::Hour:
        #                [this.ProjSalesPrice, priceFound]
        #                    = ProjHourSalesPrice::findHourSalesPrice(this.ProjId,
        #                                                             this.ProjWorker,
        #                                                             this.ProjCategoryId,
        #                                                             this.ProjLinePropertyId,
        #                                                             this.PurchPrice,
        #                                                             this.ProjSalesCurrencyId);
        #                break;
        #
        #            case ProjCategoryType::Cost:
        #                [this.ProjSalesPrice, priceFound]
        #                    =  ProjCostSalesPrice::findCostSalesPrice(this.ProjId,
        #                                                              this.ProjWorker,
        #                                                              this.ProjCategoryId,
        #                                                              this.PurchPrice,
        #                                                              this.CurrencyCode,
        #                                                              this.ProjSalesCurrencyId);
        #                break;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setPurchStatus
        #void  setPurchStatus(boolean _updateHeader = false)
        #{
        #    PurchLineType purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.setPurchStatus(this, null, _updateHeader);
        #}
      ENDSOURCE
      SOURCE #setRAssetInventProfileId_RU
        #public void setRAssetInventProfileId_RU()
        #{
        #    RAssetParameters    rAssetParameters;
        #    InventDim           inventDim;
        #
        #    rAssetParameters = RAssetParameters::find();
        #
        #    if (this.ItemId                                    &&
        #        InventTable::find(this.ItemId).AssetGroupId_RU &&
        #        rAssetParameters.LowCostAssetInventProfileId)
        #    {
        #        if (RAssetTable::acquisitionPriceFromPurchLine(this) <= rAssetParameters.LowCostAmountLimit)
        #        {
        #            inventDim = InventDim::find(this.InventDimId);
        #            inventDim.InventProfileId_RU = rAssetParameters.LowCostAssetInventProfileId;
        #            this.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #setStockedProduct
        #/// <summary>
        #///    Sets the <c>StockedProduct</c> field for the line based on line type and item model group for the associated item.
        #/// </summary>
        #public void setStockedProduct()
        #{
        #    this.type().setStockedProduct();
        #}
      ENDSOURCE
      SOURCE #setTaxGroup
        #void  setTaxGroup(TaxGroup  _taxGroup)
        #{
        #    PurchLineType  purchLineType;
        #
        #    purchLineType = this.type();
        #    purchLineType.setTaxGroup(_taxGroup);
        #}
      ENDSOURCE
      SOURCE #setTaxGroupAndTaxItemGroupFields_BR
        #/// <summary>
        #/// Set PurchLine.TaxGroup and PurchLine.TaxItemGroup based on <c>TaxesMatrix</c>
        #/// </summary>
        #public void setTaxGroupAndTaxItemGroupFields_BR()
        #{
        #    TaxGroup            taxGroup;
        #    TaxItemGroup        taxItemGroup;
        #
        #    [taxGroup, taxItemGroup] = TaxesMatrix_BR::findTaxGroupAndTaxItemGroup(this.cfopTable_BR,
        #                                                                           this.purchTable().purchTable_BR().SalesPurchOperationType_BR,
        #                                                                           SalesPurchTrntype_BR::Purchase,
        #                                                                           CustVendType_BR::Vendor,
        #                                                                           this.purchTable().OrderAccount,
        #                                                                           this.ItemId,
        #                                                                           this.inventDim().inventSite().fiscalEstablishment().fiscalEstablishmentGroup());
        #    if (!taxGroup)
        #    {
        #        taxGroup = this.purchTable().TaxGroup;
        #    }
        #
        #    if (!taxItemGroup)
        #    {
        #        taxItemGroup = this.inventTable().purchTaxItemGroupId();
        #    }
        #
        #    this.TaxGroup      = taxGroup;
        #    this.TaxItemGroup  = taxItemGroup;
        #}
      ENDSOURCE
      SOURCE #setTaxInfoOfCompany_IN
        #/// <summary>
        #/// Sets tax information of company.
        #/// </summary>
        #/// <param name="_companyInfo">
        #/// The company information.
        #/// </param>
        #public void setTaxInfoOfCompany_IN(CompanyInfo _companyInfo)
        #{
        #    DirPartyLocation        dirPartyLocation;
        #    PurchLine_IN            purchLine_IN;
        #
        #    dirPartyLocation = DirPartyLocation::findPrimaryPartyLocation(_companyInfo.RecId);
        #    if (dirPartyLocation)
        #    {
        #        purchLine_IN = this.purchLine_IN();
        #
        #        purchLine_IN.CompanyLocation_IN = LogisticsLocation::find(dirPartyLocation.Location).RecId;
        #        purchLine_IN.modifiedFieldValue(fieldStr(PurchLine_IN, CompanyLocation_IN));
        #
        #        this.packPurchLine_IN(purchLine_IN);
        #    }
        #}
      ENDSOURCE
      SOURCE #sourceDocumentLine
        #public SourceDocumentLine sourceDocumentLine()
        #{
        #    return SourceDocumentLine::find(this.SourceDocumentLine);
        #}
      ENDSOURCE
      SOURCE #stockedProductChanged
        #/// <summary>
        #/// Applies default values or sets the inventory related field values to null when the <c>StockedProduct</c> field value is changed.
        #/// </summary>
        #void stockedProductChanged()
        #{
        #    if (this.isStocked())
        #    {
        #        // default inventory fields
        #        this.QtyOrdered             = this.calcQtyOrdered();
        #        this.RemainInventPhysical   = this.QtyOrdered;
        #        this.RemainInventFinancial  = 0;
        #        this.Scrap                  = NoYes::No;
        #        this.ItemPBAId              = '';
        #        this.type().initTagging(this.inventTable());
        #        this.setInventReceivedNow();
        #        TradeNonStockedRegistrationHelper::newFromSalesPurchLine(this).deletePendingRegistration();
        #    }
        #    else
        #    {
        #        // blank out inventory fields
        #        this.QtyOrdered             = 0;
        #        this.InventReceivedNow      = 0;
        #        this.RemainInventPhysical   = 0;
        #        this.RemainInventFinancial  = 0;
        #        this.Scrap                  = NoYes::No;
        #        this.ItemTagging            = NoYes::No;
        #        this.CaseTagging            = NoYes::No;
        #        this.PalletTagging          = NoYes::No;
        #        this.ItemPBAId              = '';
        #    }
        #}
      ENDSOURCE
      SOURCE #submitToWorkflow
        #/// <summary>
        #/// Activates the purchase order line workflow.
        #/// </summary>
        #/// <param name="_workflowTemplateName">
        #/// The AOT name of the workflow template the purchase order line will be submitted to.
        #/// </param>
        #/// <param name="_workflowComment">
        #/// The reason for submitting.
        #/// </param>
        #/// <param name="_activatingFromWeb">
        #/// A Boolean value that indicates whether the submission is coming from the enterprise portal.
        #/// </param>
        #/// <remarks>
        #/// This method starts the workflow configuration by calling the <c>ActivateWorkflowTemplate</c> method
        #/// on the <c>Workflow</c> class with information about the purchase order line record.
        #/// </remarks>
        #public void  submitToWorkflow(WorkflowTypeName		 _workflowTemplateName,
        #                              WorkflowComment       _workflowComment,
        #                              boolean               _activatingFromWeb = false)
        #{
        #    ttsbegin;
        #
        #    Workflow::activateFromWorkflowType(_workflowTemplateName,
        #                                           this.RecId,
        #                                           _workflowComment,
        #                                           _activatingFromWeb,
        #                                           curUserId());
        #
        #    PurchLine::setWorkflowState(this.RecId, TradeWorkflowState::Submitted);
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #taxationOrigin_BR
        #/// <summary>
        #/// Displays the origin of the item in the current purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The origin of the item to be used for taxation.
        #/// </returns>
        #//BP Deviation Documented
        #display FITaxationOrigin_BR taxationOrigin_BR()
        #{
        #    return this.inventTable().TaxationOrigin_BR;
        #}
      ENDSOURCE
      SOURCE #taxByLine
        #real taxByLine()
        #{
        #    TaxTrans taxTrans;
        #
        #    if (this.InventTransId)
        #    {
        #        select sum(TaxAmount) from taxTrans
        #        where taxTrans.InventTransId == this.InventTransId;
        #    }
        #
        #    return taxTrans.TaxAmount;
        #}
      ENDSOURCE
      SOURCE #taxDate
        #TransDate taxDate(TransDate transDate)
        #{
        #    return TaxParameters::find().TaxCalculationDateType == TaxCalculationDateType::DeliveryDate ? this.deliveryDate(transDate) : transDate;
        #}
      ENDSOURCE
      SOURCE #taxFiscalClassification_BR
        #/// <summary>
        #/// Displays the fiscal classification code of the item in the purchase order line.
        #/// </summary>
        #/// <returns>
        #/// The fiscal classification code of the item.
        #/// </returns>
        #//BP Deviation Documented
        #display TaxFiscalClassificationId_BR taxFiscalClassification_BR()
        #{
        #    return this.inventTable().TaxFiscalClassification_BR;
        #}
      ENDSOURCE
      SOURCE #taxPcsPrice
        #PriceCur taxPcsPrice(TransDate transDate = systemDateGet(), Tax _tax = null)
        #{
        #    return this.SalesPurchLine::taxPcsPrice(transDate, _tax);
        #}
      ENDSOURCE
      SOURCE #taxWithholdCodeType_IN
        #/// <summary>
        #/// Gets the tax withhold code type.
        #/// </summary>
        #/// <returns>
        #/// The instance of the <c>TaxWithholdCodeType_IN</c> class.
        #/// </returns>
        #public TaxWithholdCodeType_IN taxWithholdCodeType_IN()
        #{
        #    TaxWithholdCodeType_IN  taxWithholdCodeType = TaxWithholdCodeType_IN::None;
        #    PurchLine_IN            purchLine_IN = this.purchLine_IN();
        #
        #    if  (purchLine_IN.tdsGroup_IN != '')
        #    {
        #        taxWithholdCodeType = TaxWithholdCodeType_IN::TDS;
        #    }
        #    else if(purchLine_IN.tcsGroup_IN != '')
        #    {
        #        taxWithholdCodeType = TaxWithholdCodeType_IN::TCS;
        #    }
        #    return taxWithholdCodeType;
        #}
      ENDSOURCE
      SOURCE #templateName
        #/// <summary>
        #/// Sets or gets the information about the <c>DistributionTemplate</c> record for creating
        #/// distributions.
        #/// </summary>
        #/// <param name="_set">
        #/// A Boolean value that indicates whether to update.
        #/// </param>
        #/// <param name="_templateName">
        #/// The name of the distribution template that will be used to create distributions.
        #/// </param>
        #/// <returns>
        #/// The name of the distribution template.
        #/// </returns>
        #// BP Deviation Documented
        #public edit TemplateName templateName(boolean _set, TemplateName _templateName)
        #{
        #    TemplateName                      templateName = "";
        #    AccountingDistributionTemplate    accountingDistributionTemplate;
        #
        #    if (_set)
        #    {
        #        if (_templateName == "")
        #        {
        #            this.AccountingDistributionTemplate = 0;
        #        }
        #        else
        #        {
        #            accountingDistributionTemplate = AccountingDistributionTemplate::findByName(_templateName);
        #
        #            if (accountingDistributionTemplate)
        #            {
        #                this.AccountingDistributionTemplate = accountingDistributionTemplate.RecId;
        #                templateName = accountingDistributionTemplate.Name;
        #            }
        #            else
        #            {
        #                this.AccountingDistributionTemplate = 0;
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (this.AccountingDistributionTemplate != 0)
        #        {
        #            templateName = AccountingDistributionTemplate::find(this.AccountingDistributionTemplate).Name;
        #        }
        #    }
        #
        #    return templateName;
        #}
      ENDSOURCE
      SOURCE #timeZoneSite
        #/// <summary>
        #///    Retrieves the time zone associated with the site on the current purchase order line.
        #/// </summary>
        #/// <returns>
        #///    The site time zone.
        #/// </returns>
        #public display Timezone timeZoneSite()
        #{
        #    return InventSite::timeZoneSite(InventDim::find(this.InventDimId).InventSiteId);
        #}
      ENDSOURCE
      SOURCE #tmsVolume
        #/// <summary>
        #/// Gets the transportation <c>Volume</c> for the <c>PurchLine</c>.
        #/// </summary>
        #/// <returns>
        #/// The transportation volume for the <c>PurchLine</c>.
        #/// </returns>
        #Volume tmsVolume()
        #{
        #    return this.inventTable().UnitVolume * this.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #tmsWeight
        #/// <summary>
        #/// Gets the transportation <c>Weight</c> for the <c>PurchLine</c>.
        #/// </summary>
        #/// <returns>
        #/// The transportation weight for the <c>PurchLine</c>.
        #/// </returns>
        #Weight tmsWeight()
        #{
        #    return this.inventTable().grossWeight() * this.QtyOrdered;
        #}
      ENDSOURCE
      SOURCE #totalDiscountAmount
        #/// <summary>
        #/// Calculates the total discount amount.
        #/// </summary>
        #/// <returns>
        #/// The total discount amount.
        #/// </returns>
        #public Amount totalDiscountAmount()
        #{
        #    Amount          totalDiscountAmount;
        #    PurchTable      purchTable;
        #
        #    purchTable = this.purchTable();
        #
        #    totalDiscountAmount = (purchTable.DiscPercent  && this.endDisc()) ?
        #                          Currency::amount(this.calcLineAmountExclTax()* (purchTable.DiscPercent / 100), this.CurrencyCode) :
        #                          0;
        #
        #    return totalDiscountAmount;
        #}
      ENDSOURCE
      SOURCE #type
        #PurchLineType type(PurchTable _purchTable = this.purchTable())
        #{
        #    return PurchLineType::construct(this, _purchTable);
        #}
      ENDSOURCE
      SOURCE #underDeliveryPct
        #/// <summary>
        #/// Returns the allowed under-delivery percent.
        #/// </summary>
        #/// <returns>
        #/// The under-delivery percent that is defined on the purchase order line if under-delivery is allowed;
        #/// otherwise, 0.
        #/// </returns>
        #public Percent underDeliveryPct()
        #{
        #    if (!PurchParameters::find().SubDelivery)
        #    {
        #        return 0;
        #    }
        #
        #    return this.UnderDeliveryPct;
        #}
      ENDSOURCE
      SOURCE #unitConvertInvent2Purch
        #PurchQty unitConvertInvent2Purch(InventQty _inventQty)
        #{
        #    return UnitOfMeasureConverter::convert(
        #        _inventQty,
        #        UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #        UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #        NoYes::Yes,
        #        InventTable::itemProduct(this.ItemId));
        #}
      ENDSOURCE
      SOURCE #unitConvertPurch2Invent
        #PurchQty unitConvertPurch2Invent(PurchQty _purchQty)
        #{
        #    if (this.ItemId)
        #    {
        #        return UnitOfMeasureConverter::convert(
        #            _purchQty,
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.PurchUnit),
        #            UnitOfMeasure::unitOfMeasureIdBySymbol(this.inventTable().inventUnitId()),
        #            NoYes::Yes,
        #            InventTable::itemProduct(this.ItemId));
        #    }
        #    return _purchQty;
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementDeliveryDates
        #/// <summary>
        #/// Indicates whether the link to the agreement line is valid after changes have been made; if not, the
        #/// user is given an option to remove the link to the associated agreement.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the delivery date field that has been changed.
        #/// </param>
        #public void unLinkAgreementDeliveryDates(FieldId _fieldId)
        #{
        #    PurchLine   purchLineOrig;
        #    boolean     calledFromWeb;
        #    boolean     canRecalculatePrices = true;
        #    PurchTable  purchTable;
        #    InterCompanyEndpointActionPolicy    interCompanyEndpointActionPolicy;
        #
        #    if (this.RecId && !this.isTmp() && !this.refreshAgreementLink())
        #    {
        #        calledFromWeb = webSession() ? true : false;
        #        if (calledFromWeb)
        #        {
        #            warning("@SYS306909");
        #        }
        #        else
        #        {
        #            if (this.unLinkAgreementLinePrompt(_fieldId)
        #                && this.LineDeliveryType != LineDeliveryType::DeliveryLine)
        #            {
        #                purchTable = this.purchTable();
        #                if (purchTable.isInterCompanyOrder())
        #                {
        #                    interCompanyEndpointActionPolicy = purchTable.interCompanyEndpointActionPolicy();
        #
        #                    canRecalculatePrices = interCompanyEndpointActionPolicy.PriceDiscountSearch ? true : false;
        #                }
        #                if (canRecalculatePrices
        #                    && this.doReCalcPricesFromBasePrompt())
        #                {
        #                    purchLineOrig.data(this);
        #                    PurchLine::modifyPurchQty(this, this.inventDim());
        #                    this.(_fieldId) = purchLineOrig.(_fieldId);
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementLine
        #/// <summary>
        #/// Deletes the links between the purchase order line and the agreement line.
        #/// </summary>
        #/// <param name="_updateLine">
        #/// A Boolean value that indicates whether to execute update for a <c>PurchLine</c> buffer; optional.
        #/// </param>
        #public server void unLinkAgreementLine(boolean _updateLine = false)
        #{
        #    AgreementLineReleasedLine agreementLineReleasedLine;
        #
        #    // Set Price Discount Change Policy originated by PriceDiscSystemSource::Agreement.
        #    this.setPriceDiscChangePolicy(PriceDiscSystemSource::Agreement);
        #    if (this.ManualEntryChangepolicy
        #        && this.SystemEntryChangePolicy)
        #    {
        #        this.PriceDiscResultFields::mergerPriceDiscPolicies(ModuleSalesPurch::Purch);
        #    }
        #
        #    switch (this.LineDeliveryType)
        #    {
        #        case LineDeliveryType::OrderLineWithMultipleDeliveries:
        #            AgreementLineReleasedLine::unlinkPurchDeliverySchedule(this.InventTransId);
        #            this.reread();
        #            break;
        #        case LineDeliveryType::DeliveryLine:
        #            AgreementLineReleasedLine::unlinkPurchDeliverySchedule(PurchDeliverySchedule::findOrderLineForDeliveryLine(this.InventTransId).InventTransId);
        #            break;
        #        default:
        #            ttsbegin;
        #
        #            if (this.RecId)
        #            {
        #                delete_from agreementLineReleasedLine
        #                    where agreementLineReleasedLine.PurchLineInventTransId == this.InventTransId
        #                       && agreementLineReleasedLine.PurchLineDataAreaId    == this.DataAreaId
        #                       && agreementLineReleasedLine.ReferenceRelationType  == tableNum(PurchLine);
        #            }
        #
        #            this.MatchingAgreementLine = 0;
        #
        #            if (_updateLine)
        #            {
        #                this.update();
        #            }
        #
        #            ttscommit;
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #unLinkAgreementLinePrompt
        #/// <summary>
        #/// Prompts whether the user wants to delete the link between the agreement line and the purchase order
        #/// line in a text box.
        #/// </summary>
        #/// <param name="_fieldId">
        #/// The field ID of the field that has the changes that introduced a conflict in the relation to the
        #/// linked agreement line; optional.
        #/// </param>
        #/// <param name="_tableId">
        #/// The table ID of the field that has changes that introduced a conflict in the relation to the linked
        #/// agreement line; optional.
        #/// </param>
        #/// <param name="_doUpdate">
        #/// boolean indicating if an update of the purchase order line should be performed when unlinking the agreement line; optional.
        #/// </param>
        #/// <returns>
        #/// true if the user wants to delete the link between the agreement line and the purchase order line;
        #/// otherwise, false.
        #/// </returns>
        #public boolean unLinkAgreementLinePrompt(FieldId _fieldId = 0, TableId _tableId = tableNum(PurchLine), boolean _doUpdate = true)
        #{
        #    boolean     unlink;
        #    DictField   dictField;
        #    PurchLine   localPurchLine;
        #
        #    void unlink()
        #    {
        #        this.unLinkAgreementLine();
        #        unlink = true;
        #    }
        #
        #    if (_fieldId)
        #    {
        #        dictField = new DictField(_tableId,_fieldId);
        #        unlink    = Box::okCancel(strFmt("@SYS306897", dictField.label()),DialogButton::Cancel,"@SYS306896") == DialogButton::Ok;
        #
        #        if (unlink)
        #        {
        #            this.unLinkAgreementLine();
        #        }
        #        else
        #        {
        #            if (_tableId == tableNum(InventDim))
        #            {
        #                _fieldId = fieldNum(PurchLine, InventDimId);
        #            }
        #
        #            if (this.RecId)
        #            {
        #                this.(_fieldId) = this.orig().(_fieldId);
        #            }
        #            else
        #            {
        #                localPurchLine.con2buf(this.buf2con());
        #                localPurchLine.initFromAgreementLine(AgreementLine::find(localPurchLine.MatchingAgreementLine));
        #                this.(_fieldId) = localPurchLine.(_fieldId);
        #            }
        #        }
        #    }
        #    else
        #    {
        #        if (Box::yesNo(strFmt("@SYS306910"),DialogButton::No) == DialogButton::Yes)
        #        {
        #            // The price discount fixed policies will block recalculation of certain TA values when a sales line is related to an agreement hence, we need to unlink before recalc.
        #            unlink();
        #
        #            // Run the price discount policy dialog in order to let the user determine which agreement values to recalulate.
        #            this.runPriceDiscPolicyDialog(true);
        #
        #            PurchLine::modifyPurchQty(this,this.inventDim());
        #
        #            if (_doUpdate)
        #            {
        #                this.update();
        #            }
        #        }
        #    }
        #
        #    return unlink;
        #}
      ENDSOURCE
      SOURCE #update
        #/// <summary>
        #/// Updates the <c>PurchLine</c> record.
        #/// </summary>
        #/// <param name="dropInvent">
        #/// A Boolean value that indicates whether the inventory movement that is associated with the line must
        #/// be updated; optional; false by default.
        #/// </param>
        #/// <param name="updateOrderLineOfDeliverySchedule">
        #/// A Boolean value that indicates whether to update the order line after updating its delivery line;
        #/// optional; true by default.
        #/// </param>
        #/// <param name="updatePurchTableDropShipStatus">
        #/// A Boolean value that indicates whether the drop shipment status should be updated for all lines on the purchase order;
        #/// optional; true by default.
        #/// </param>
        #public void  update(boolean  dropInvent                         = false,
        #                    boolean  updateOrderLineOfDeliverySchedule  = true,
        #                    boolean  updatePurchTableDropShipStatus = true)
        #{
        #    WHSPurchLineUpdater             purchLineUpdater;
        #    WHSSrcLineChangeLoadLineUpdater srcLineChangeLoadLineUpdater;
        #    NoYesId                         autoCreate;
        #    boolean                         whsEnabled;
        #    boolean                         tmsEnabled;
        #    InventTransIdSum                inventTransIdSumDelivery;
        #    InventQty                       origTotalQtyForLoad;
        #    InventQty                       newTotalQtyForLoad;
        #    PurchLineType       purchLineType;
        #
        #    PurchLine origPurchLine;
        #    PurchTotalsSummaryController purchTotalsSummaryController;
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        origPurchLine = this.orig();
        #        purchTotalsSummaryController = PurchTotalsSummaryController::construct(this.PurchId);
        #        purchTotalsSummaryController.checkFields(this);
        #    }
        #
        #    // Update load line and tag table
        #    whsEnabled = WHSInventEnabled::exist(this.ItemId);
        #    tmsEnabled = TMSInventEnabled::exist(this.ItemId);
        #
        #    if (whsEnabled || tmsEnabled)
        #    {
        #        inventTransIdSumDelivery = InventTransIdSum::newTransOriginId(InventTransOrigin::findByInventTransId(this.InventTransId).RecId);
        #        origTotalQtyForLoad = inventTransIdSumDelivery.receipt() + inventTransIdSumDelivery.issue();
        #    }
        #
        #    origPurchLine = this.orig();
        #
        #    purchLineType = this.type();
        #    purchLineType.skipPurchTableDropShipStatusUpdate(!updatePurchTableDropShipStatus);
        #    purchLineType.update(dropInvent, false, updateOrderLineOfDeliverySchedule);
        #
        #    if (whsEnabled || tmsEnabled)
        #    {
        #        inventTransIdSumDelivery.clearTotals();
        #        newTotalQtyForLoad = inventTransIdSumDelivery.receipt() + inventTransIdSumDelivery.issue();
        #
        #        autoCreate = (whsEnabled && WHSParameters::find().AutoCreateLoadPO)
        #        ||           (tmsEnabled && TMSParameters::find().AutoCreateLoadPO);
        #
        #        srcLineChangeLoadLineUpdater = WHSSrcLineChangeLoadLineUpdater::newFromParameters(this,
        #                                                                                          this.InventTransId,
        #                                                                                          this.InventDimId,
        #                                                                                          origPurchLine.InventDimId,
        #                                                                                          newTotalQtyForLoad,
        #                                                                                          origTotalQtyForLoad,
        #                                                                                          this.PurchUnit,
        #                                                                                          origPurchLine.PurchUnit,
        #                                                                                          autoCreate);
        #        srcLineChangeLoadLineUpdater.updateLoadLines();
        #
        #        purchLineUpdater = WHSSourceLineUpdater::newFromSourceLineTableBuffer(this);
        #        purchLineUpdater.setParameters(this, origTotalQtyForLoad, origPurchLine.PurchUnit, srcLineChangeLoadLineUpdater.getloadLineDiffQty());
        #        purchLineUpdater.updateTable();
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        #    {
        #        this.Tax1099RecId = Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(this.Tax1099Fields).Tax1099Box, this.Tax1099RecId);
        #        purchTotalsSummaryController.onUpdate(this);
        #
        #        /* <SYS>
        #        // If the PurchCommitmentLine_PSN field has been changed, then reset the distributions
        #        if (origPurchLine.PurchCommitmentLine_PSN != this.PurchCommitmentLine_PSN)
        #        </SYS> */
        #        // <PubSect>
        #        // If the PurchCommitmentLine_PSN or BudgetReservationLine_PSN fields have been changed, then reset the distributions
        #        if ((origPurchLine.PurchCommitmentLine_PSN != this.PurchCommitmentLine_PSN) || (origPurchLine.BudgetReservationLine_PSN != this.BudgetReservationLine_PSN))
        #        // </PubSect>
        #        {
        #            this.resetDistributions();
        #        }
        #    }
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        #    {
        #        this.checkCrossdocking();
        #    }
        #}
      ENDSOURCE
      SOURCE #updateWhsCrossDock
        #/// <summary>
        #/// Updates the <c>WHSCrossDock</c> field on the <c>WHSPurchLine</c> related table if available.
        #/// </summary>
        #/// <param name="_whsCrossDock">
        #/// The value to set for the <c>WHSCrossDock</c> field.
        #/// </param>
        #/// <returns>
        #/// true, if a related <c>WHSPurchLine</c> record was found and the update was done; otherwise, false.
        #/// </returns>
        #public boolean updateWhsCrossDock(WHSCrossDock _whsCrossDock)
        #{
        #    boolean         ret;
        #    WHSPurchLine    whsPurchLine;
        #
        #    ttsbegin;
        #
        #    whsPurchLine = WHSPurchLine::find(this.InventTransId, true);
        #    if (whsPurchLine)
        #    {
        #        whsPurchLine.CrossDock = _whsCrossDock;
        #        whsPurchLine.update();
        #        ret = true;
        #    }
        #
        #    ttscommit;
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #updateWorkflowState
        #/// <summary>
        #///     This method are setting the field <c>WorkflowState</c> on the current <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_workflowState">
        #///     <c>WorkflowState</c> that the record must be updated with.
        #/// </param>
        #/// <param name="_editableInWorkflow">
        #///     <c>editableInWorkflow</c> that the record must be updated with.
        #/// </param>
        #void  updateWorkflowState(TradeWorkflowState        _workflowState,
        #                          TradeEditableInWorkflow   _editableInWorkflow = NoYes::No)
        #{
        #    this.WorkflowState      = _workflowState;
        #    this.EditableInWorkflow = _editableInWorkflow;
        #}
      ENDSOURCE
      SOURCE #validateBudgetReservationLine_PSN
        #/// <summary>
        #/// Performs validations on the <c>BudgetReservationLine_PSN</c> field on the <c>PurchLine</c> table.
        #/// </summary>
        #/// <returns>
        #/// true if all validations pass or the budget reservation feature is disabled; otherwise, false.
        #/// </returns>
        #// <PubSect>
        #private boolean validateBudgetReservationLine_PSN()
        #{
        #    boolean                     isValid = true;
        #    BudgetReservationLine_PSN   budgetReservationLine;
        #    PurchTable                  purchTable = this.purchTable();
        #
        #    if (this.orig().BudgetReservationLine_PSN != this.BudgetReservationLine_PSN
        #        && this.isBudgetReservationLineReferenced())
        #    {
        #        budgetReservationLine = BudgetReservationLine_PSN::find(this.BudgetReservationLine_PSN);
        #
        #        if (budgetReservationLine.PurchReqLine)
        #        {
        #            isValid = BudgetReservation_PSN::validatePurchReqLineVendor(
        #                budgetReservationLine.PurchReqLine,
        #                this.VendAccount);
        #        }
        #
        #        isValid = isValid && BudgetReservation_PSN::validateBudgetReservationToBeRelieved(
        #            purchTable.AccountingDate,
        #            budgetReservationLine.BudgetReservationHeader_PSN,
        #            BudgetReservationRelievingDocument_PSN::PurchaseOrder,
        #            "@SYP4860844",
        #            "@SYP4860845");
        #
        #        if (isValid && purchTable.ProjId && !budgetReservationLine.ProjId)
        #        {
        #            isValid = checkFailed("@SYP5090025");
        #        }
        #
        #        if (isValid && !purchTable.ProjId && budgetReservationLine.ProjId)
        #        {
        #            isValid = checkFailed("@SYP5090024");
        #        }
        #    }
        #
        #    return isValid;
        #}
        #// </PubSect>
      ENDSOURCE
      SOURCE #validateDelete
        #boolean  validateDelete(boolean _interCompanyForce = false)
        #{
        #    boolean         ok = true;
        #    PurchLineType   purchLineType;
        #
        #    #ISOCountryRegionCodes
        #
        #    ok = super();
        #
        #    if (ok)
        #    {
        #        purchLineType = this.type();
        #        ok = purchLineType.validateDelete(_interCompanyForce);
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail))
        #        && ok)
        #    {
        #        if (this.RetailPackageId)
        #            ok = checkFailed(strFmt("@RET4539",this.RetailPackageId));
        #    }
        #
        #    if (ok
        #    &&  !this.whsCheckDeleteLoadline())
        #    {
        #        ok = checkFailed("@WAX5594");
        #    }
        #
        #    if (TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs)
        #        &&  PurchTable::find(this.PurchId).purchTable_W().CustomsImportOrder_IN
        #        &&  CustomsVendBOETrans_IN::findPurchLineRecId(this.RecId).RecId)
        #    {
        #        ok = checkFailed("@GLS5764");
        #    }
        #
        #    return ok;
        #}
        #
        #
      ENDSOURCE
      SOURCE #validateField
        #/// <summary>
        #///     Validates the value of field.
        #/// </summary>
        #/// <param name="fieldId">
        #///     A FieldId type representing the field to be validated.
        #/// </param>
        #/// <returns>
        #///     true if the field value is valid; otherwise, false.
        #/// </returns>
        #public boolean  validateField(FieldId  fieldId)
        #{
        #    boolean         ok;
        #    PurchLineType   purchLineType;
        #
        #    switch(fieldId)
        #    {
        #        case fieldNum(PurchLine, InventTransId):
        #            if (this.PurchaseType == PurchaseType::Journal
        #                || !this.isStocked())
        #                // No inventory transactions so no need for consistency check to report this as error
        #                return true;
        #            break;
        #        // <PubSect>
        #        case fieldNum(PurchLine, BudgetReservationLine_PSN):
        #            return this.validateBudgetReservationLine_PSN();
        #        // </PubSect>
        #    }
        #
        #    ok = super(fieldId);
        #
        #    if (ok && fieldId == fieldNum(PurchLine, ItemId))
        #    {
        #        if (WHSInventEnabled::exist(this.ItemId) && !WHSFilter::vendFilterMatch(this.VendAccount, this.ItemId))
        #        {
        #            throw error("@WAX1003");
        #        }
        #    }
        #
        #    if (ok)
        #    {
        #        purchLineType = this.type();
        #        ok = purchLineType.validateField(fieldId);
        #    }
        #
        #    if (ok && PublicSectorUtils::isFrenchRegulatoryEnabled() && fieldId == fieldNum(PurchLine, PurchCommitmentLine_PSN))
        #    {
        #        ok = this.checkPurchCommitmentLine();
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #validateFieldValue
        #/// <summary>
        #///     Determines whether the parameter "_fieldName" field is valid.
        #/// </summary>
        #/// <param name="_fieldName">
        #///     The field name of the field to validate.
        #/// </param>
        #/// <param name="_arrayIndex">
        #///     The array index of the field to validate.
        #/// </param>
        #/// <returns>
        #///     true if the field is valid; otherwise, false.
        #/// </returns>
        #public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
        #{
        #    boolean ret;
        #
        #    ret = super(_fieldName, _arrayIndex);
        #    if(ret)
        #    {
        #        switch(_fieldName)
        #        {
        #            case fieldStr(PurchLine, TaxItemGroup):
        #                ret = TaxItemGroupHeading::validatePOTForGTA_IN(this.vendTable_OrderAccount(), this.TaxItemGroup);
        #                break;
        #        }
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateModifyInventDim
        #public boolean validateModifyInventDim(
        #    InventDim          _inventDim,
        #    FieldId            _dimFieldId)
        #{
        #    return this.type().validateModifyInventDim(_inventDim, _dimFieldId);
        #}
      ENDSOURCE
      SOURCE #validateWrite
        #boolean  validateWrite()
        #{
        #    boolean ok = true;
        #
        #    ok = super();
        #
        #    ok = ok && this.validateWrite_Server();
        #
        #    return ok;
        #}
        #
        #
      ENDSOURCE
      SOURCE #validateWrite_Server
        #/// <summary>
        #///     Validates if the current <c>PurcLine</c> table buffer can be written to the database.
        #/// </summary>
        #/// <returns>
        #///     true if the buffer can be written; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #///     This method is forcing server side execution of the validation logic.
        #/// </remarks>
        #server boolean validateWrite_Server()
        #{
        #    boolean         ok;
        #    PurchLineType   purchLineType;
        #    container       taxCheck;
        #    AmountMST       totalAmt;
        #    AmountMST       taxAmount;
        #
        #    PurchTable      purchTable;
        #    PurchTable_W    purchTable_W;
        #    #ISOCountryRegionCodes
        #
        #    purchLineType = this.type();
        #    ok = purchLineType.validateWrite();
        #
        #
        #    if (ok)
        #    {
        #        taxAmount = this.taxByLine();
        #        totalAmt = this.LineAmount + taxAmount;
        #        taxCheck = [totalAmt, this.Tax1099Amount, this.Tax1099StateAmount, this.Tax1099Fields, this.Tax1099State];
        #        ok = Tax1099ElectronicCheck::tax1099EntryValidation(taxCheck);
        #    }
        #
        #    // Verify that a tax code is derived for the given Tax Group and Tax Item Group.
        #    ok = ok && Tax::isValidTaxGroupIntersection(this.TaxGroup, this.TaxItemGroup) != CheckTaxGroups::Error;
        #
        #    // Check to make sure the commitment line is still valid.
        #    // This needs to be done because it's possible one of the values verified against have changed (such as account number).
        #    if (ok && PublicSectorUtils::isFrenchRegulatoryEnabled())
        #    {
        #        ok = this.checkPurchCommitmentLine();
        #    }
        #
        #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
        #        && ok && TaxParameters::find().Customs_IN)
        #    {
        #        ttsbegin;
        #
        #        purchTable = PurchTable::find(this.PurchId);
        #        purchTable_W = purchTable.purchTable_W();
        #        if (CustomsInvoiceRegnTrans_IN::checkInvoiceRegnComplete(this.RecId))
        #        {
        #            purchTable_W.CustomsInvoiceRegistered_IN = NoYes::Yes;
        #        }
        #        else
        #        {
        #            purchTable_W.CustomsInvoiceRegistered_IN = NoYes::No;
        #        }
        #
        #        purchTable.packPurchTable_W(purchTable_W);
        #        purchTable.SysExtensionSerializerMap::postUpdate();
        #        ttscommit;
        #    }
        #    if (ok && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        #    {
        #        this.checkLine_RU();
        #    }
        #
        #    if (ok &&
        #        SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoHU]) &&
        #        this.purchTable().InclTax)
        #    {
        #        ok = this.SalesPurchLine::validateExcludeTaxFromInvoice(this.purchTable().InclTax);
        #    }
        #
        #    return ok;
        #}
      ENDSOURCE
      SOURCE #variencePrice
        #//BP Deviation Documented
        #server display AmountCur variencePrice()
        #{
        #    return this.calcLineAmount(this.varienceQty());
        #}
      ENDSOURCE
      SOURCE #varienceQty
        #//BP Deviation Documented
        #server display PurchQty varienceQty()
        #{
        #    return this.receivedInTotal() - this.PurchQty;
        #}
      ENDSOURCE
      SOURCE #varienceQtyPct
        #//BP Deviation Documented
        #server display Percent varienceQtyPct()
        #{
        #    if (this.PurchQty)
        #    {
        #        return (this.receivedInTotal() * 100) / this.PurchQty;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #vendTable_OrderAccount
        #VendTable vendTable_OrderAccount()
        #{
        #    return this.purchTable().vendTable_OrderAccount();
        #}
      ENDSOURCE
      SOURCE #warningForReference
        #/// <summary>
        #/// Show a warning for a line which references other entities.
        #/// </summary>
        #/// <returns>true if the line can be deleted; otherwise, false.</returns>
        #boolean warningForReference()
        #{
        #    str         warningTxt;
        #
        #    warningTxt = this.referenceWarningTxt();
        #    if (warningTxt)
        #    {
        #        return Box::yesNo(warningTxt+'\n\n'+strFmt("@SYS75610"),DialogButton::Yes) == DialogButton::Yes;
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #whsCheckDeleteLoadline
        #/// <summary>
        #///     Prevent the delete of purch lines that are already associated with a load line if the warehouse
        #///     parameter 'Automatically delete upon order delete' is not enabled.
        #/// </summary>
        #/// <returns>
        #///     true, if purch line is not associated to a load; otherwise, false
        #/// </returns>
        #public boolean whsCheckDeleteLoadline()
        #{
        #    boolean ret                     = true;
        #    WHSParameters whsParameteres    = WHSParameters::find();
        #
        #    if (whsParameteres.RecId
        #        && !whsParameteres.AutoCleanEmptyLoadManifest
        #        &&  WHSLoadLine::existsForInventTransId(this.InventTransId))
        #    {
        #        ret = false;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #whsGetLoads
        #/// <summary>
        #/// Gets the <c>WHSLoadLine</c> record ID associated with this <c>PurchLine</c>.
        #/// </summary>
        #/// <returns>
        #/// The <c>WHSLoadLine</c> record ID associated with this <c>PurchLine</c>.
        #/// </returns>
        #// BP Deviation Documented
        #[SysClientCacheDataMethodAttribute(true)]
        #public server display WHSLoadId whsGetLoads()
        #{
        #    WHSLoadLine loadLine;
        #    WHSLoadId   ret;
        #    int         counter;
        #
        #    if (this.InventTransId
        #    &&  (WHSInventEnabled::exist(this.ItemId)
        #    ||  TMSInventEnabled::exist(this.ItemId)))
        #    {
        #        // For efficiency: Check counter before inventTransId to avoid a SQL call
        #        while select firstOnly10 LoadId from loadLine
        #            where loadLine.InventTransId == this.InventTransId
        #        {
        #            ++counter;
        #
        #            if (counter > 1)
        #            {
        #                break;
        #            }
        #
        #            ret = loadLine.LoadId;
        #        }
        #
        #        switch (counter)
        #        {
        #            case 0:
        #                ret = '';
        #                break;
        #
        #            case 1:
        #                break;
        #
        #            default:
        #                ret = "@WAX402";
        #                break;
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #whsItemGrossWeight
        #/// <summary>
        #///     Retrieves the gross weight for an item
        #/// </summary>
        #/// <returns>
        #///     A decimal representing the gross weight
        #/// </returns>
        #public display ItemGrossWeight whsItemGrossWeight()
        #{
        #    return this.inventTable().grossWeight();
        #}
      ENDSOURCE
      SOURCE #whsItemUnitVolume
        #/// <summary>
        #///     Retrieves the volume for an item
        #/// </summary>
        #/// <returns>
        #///     A decimal representing the item volume
        #/// </returns>
        #public display Volume whsItemUnitVolume()
        #{
        #    return this.inventTable().UnitVolume;
        #}
      ENDSOURCE
      SOURCE #whsPurchLineForInsert
        #private WHSPurchLine whsPurchLineForInsert()
        #{
        #    WHSPurchLine whsPurchLine;
        #
        #    if (this.PackedWHSLine)
        #    {
        #        whsPurchLine = con2Buf(this.PackedWHSLine);
        #    }
        #
        #    return whsPurchLine;
        #}
      ENDSOURCE
      SOURCE #whsVendDeliveryAddress
        #/// <summary>
        #/// Displays the delivery address of the vendor. If there is not one defined, it displays the primary one.
        #/// </summary>
        #/// <returns>
        #/// The vendors delivery address or the primary address if there is not one defined.
        #/// </returns>
        #public display Addressing whsVendDeliveryAddress()
        #{
        #    LogisticsPostalAddressRecId logisticsPostalAddressRecId = TMSAddressPhone::initFromVendAccount(this.VendAccount).parmPostalAddressRecId();
        #    return LogisticsPostalAddress::addressFromRecId(logisticsPostalAddressRecId);
        #}
      ENDSOURCE
      SOURCE #workflowInstructions
        #/// <summary>
        #/// Retrieves the latest workflow step instructions for this record.
        #/// </summary>
        #/// <returns>
        #/// The instructions for the latest work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowStepInstruction  workflowInstructions()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #    WorkflowStepInstruction     stepInstruction;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime, Description from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : stepInstruction = '';
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        stepInstruction = workflowWorkItemTable.Description;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                            {
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                                stepInstruction = workflowWorkItemTable.Description;
        #                            }
        #                        }
        #        }
        #    }
        #
        #    return stepInstruction;
        #}
      ENDSOURCE
      SOURCE #workflowLastComment
        #/// <summary>
        #/// Retrieves the last workflow comment for this record.
        #/// </summary>
        #/// <returns>
        #/// The last comment entered by any user for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public server  WorkflowComment  workflowLastComment()
        #{
        #    WorkflowTrackingTable           workflowTrackingTable;
        #    WorkflowTrackingStatusTable     workflowTrackingStatusTable;
        #    WorkflowTrackingCommentTable    workflowTrackingCommentTable;
        #
        #
        #    select ContextCompanyId, ContextTableId, ContextRecId from workflowTrackingStatusTable
        #        where workflowTrackingStatusTable.ContextCompanyId    == curext()
        #           && workflowTrackingStatusTable.ContextTableId      == this.TableId
        #           && workflowTrackingStatusTable.ContextRecId        == this.RecId
        #        join firstonly TrackingId, CreatedDateTime from workflowTrackingTable order by CreatedDateTime desc
        #            where workflowTrackingTable.WorkflowTrackingStatusTable == workflowTrackingStatusTable.RecId
        #        join Comment from workflowTrackingCommentTable
        #            where workflowTrackingCommentTable.WorkflowTrackingTable == workflowTrackingTable.RecId;
        #
        #    return workflowTrackingCommentTable.Comment;
        #}
      ENDSOURCE
      SOURCE #workflowWorkItemDueDate
        #/// <summary>
        #/// Retrieves the latest workflow due date for this record.
        #/// </summary>
        #/// <returns>
        #/// The due date for the latest work item for this record.
        #/// </returns>
        #
        #//BP Deviation Documented
        #display public WorkflowDueDateTime  workflowWorkItemDueDate()
        #{
        #    List                        workItemList;
        #    ListEnumerator              enumerator;
        #
        #    WorkflowWorkItemInstanceId  workItemInstanceId;
        #
        #    WorkflowWorkItemTable       workflowWorkItemTable;
        #    WorkflowDueDateTime         dueDateTime;
        #
        #    void getRecord()
        #    {
        #        workItemInstanceId = enumerator.current();
        #        select DueDateTime from workflowWorkItemTable
        #            where workflowWorkItemTable.Id == workItemInstanceId;
        #    }
        #
        #
        #    workItemList = Workflow::findWorkItemsForCurrentUser(this);
        #
        #    if (workItemList)
        #    {
        #        enumerator   = workItemList.getEnumerator();
        #
        #        switch(workItemList.elements())
        #        {
        #            case    0 : dueDateTime = DateTimeUtil::minValue();
        #                        break;
        #
        #            case    1 : enumerator.moveNext();
        #
        #                        getRecord();
        #                        dueDateTime = workflowWorkItemTable.DueDateTime;
        #
        #                        break;
        #
        #            default   : dueDateTime = DateTimeUtil::minValue();
        #
        #                        while (enumerator.moveNext())
        #                        {
        #                            getRecord();
        #
        #                            if (workflowWorkItemTable.DueDateTime > dueDateTime)
        #                                dueDateTime = workflowWorkItemTable.DueDateTime;
        #                        }
        #        }
        #    }
        #
        #    return dueDateTime;
        #}
      ENDSOURCE
      SOURCE #checkMultipleAccountingDistExist
        #/// <summary>
        #/// Indicates whether the <c>PurchLine</c> buffer has more than one <c>AccountingDistribution</c>
        #/// records.
        #/// </summary>
        #/// <param name="_purchLine">
        #/// A <c>PurchLine</c> record which needs to be checked for multiple distributions.
        #/// </param>
        #/// <returns>
        #/// true when the count is more than 1; otherwise, false.
        #/// </returns>
        #public static server boolean checkMultipleAccountingDistExist(PurchLine _purchLine)
        #{
        #    return SourceDocumentLineProvider::isAccountingDistributionSplit(_purchLine.sourceDocumentLine(), MonetaryAmount::ExtendedPrice);
        #}
      ENDSOURCE
      SOURCE #checkReceiveQty_IN
        #/// <summary>
        #/// Checks whether exist the receive quantity.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The purch id is used to find record.
        #/// </param>
        #/// <returns>
        #/// Returns ture, if exist the receive quantity; otherwise, false.
        #/// </returns>
        #public static boolean checkReceiveQty_IN(PurchId _purchId)
        #{
        #    PurchLine purchLine;
        #    boolean insert;
        #
        #    while select purchLine
        #        where purchLine.PurchId == _purchId
        #    {
        #        if(CustomsInvoiceRegistrateForm_IN::calcReceiveQty(purchLine))
        #        {
        #            insert = true;
        #        }
        #    }
        #
        #    return insert;
        #}
      ENDSOURCE
      SOURCE #earliestConfirmedDlv
        #/// <summary>
        #/// Finds the purchase order line that have the earliest confirmed delivery date.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The purchase ID that will be used to search for confirmed delivery dates.
        #/// </param>
        #/// <returns>
        #/// The earliest confirmed delivery date for the purchase lines.
        #/// </returns>
        #/// <remarks>
        #/// The returned confirmed delivery date can be passed to the <c>datenull</c> method in order to fully
        #/// confirm the purchase order.
        #/// </remarks>
        #server static PurchLineDlvDate earliestConfirmedDlv(PurchId  _purchId)
        #{
        #    return (select minof(ConfirmedDlv) from purchLine
        #                where purchLine.PurchId == _purchId
        #                   && !purchLine.IsDeleted).ConfirmedDlv;
        #}
      ENDSOURCE
      SOURCE #exist
        #client server static boolean  exist(
        #    PurchId             _purchId,
        #    TradeLineNumber     _lineNumber = int64Min())
        #{
        #    if (_purchId)
        #    {
        #        if (_lineNumber == int64Min())
        #            return (select firstonly RecId from purchLine
        #                        index PurchLineIdx
        #                        where purchLine.PurchId         == _purchId
        #                           && purchLine.IsDeleted       == NoYes::No
        #                   ).RecId     != 0;
        #
        #        return (select firstonly RecId from purchLine
        #                        index PurchLineIdx
        #                        where purchLine.PurchId         == _purchId
        #                           && purchLine.LineNumber      == _lineNumber
        #                           && purchLine.IsDeleted       == NoYes::No
        #                   ).RecId != 0;
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #existDifferentCurrency
        #server static boolean  existDifferentCurrency(PurchId   purchId, CurrencyCode currencyCode)
        #{
        #    if (!purchId || !currencyCode)
        #    {
        #        return false;
        #    }
        #
        #    return (select firstonly RecId from purchLine
        #                   index hint PurchLineIdx
        #                   where purchLine.PurchId          == purchId
        #                      && purchLine.CurrencyCode     != currencyCode
        #                      && purchLine.IsDeleted        == NoYes::No).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #existNonFinalizedLines
        #/// <summary>
        #///    Determines if one or more purchase order lines exist that are not finalized.
        #/// </summary>
        #/// <param name="_purchId">
        #///    The ID of the purchase order.
        #/// </param>
        #/// <returns>
        #///    true if one or more purchase order lines are not finalized; otherwise, false.
        #/// </returns>
        #server static boolean existNonFinalizedLines(PurchId _purchId)
        #{
        #    return (select firstonly RecId from purchLine
        #                   where purchLine.PurchId          == _purchId
        #                      && purchLine.IsFinalized      == NoYes::No).RecId != 0;
        #}
        #
      ENDSOURCE
      SOURCE #find
        #client server static PurchLine find(
        #    PurchId           _purchId,
        #    TradeLineNumber   _lineNumber = int64Min(),
        #    boolean           _update     = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (_purchId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        if (_lineNumber == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId         == _purchId
        #                   && !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId         == _purchId
        #                   && purchLine.LineNumber      == _lineNumber
        #                   && !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findBySourceDocumentLine
        #/// <summary>
        #///    Finds the <c>PurchLine</c> record.
        #/// </summary>
        #/// <param name="_sourceDocumentLine">
        #///    A <c>SourceDocumentLine</c> record RecId.
        #/// </param>
        #/// <param name="_forUpdate">
        #///    A Boolean value that determines whether the record should be selected for update; optional.
        #/// </param>
        #/// <returns>
        #///    A <c>PurchLine</c> record.
        #/// </returns>
        #static public PurchLine findBySourceDocumentLine(   RefRecId _sourceDocumentLine,
        #                                                    boolean  _forUpdate = false)
        #
        #{
        #    PurchLine     purchLine;
        #
        #    if (_sourceDocumentLine)
        #    {
        #        purchLine.selectForUpdate(_forUpdate);
        #
        #        select firstonly purchLine
        #            where purchLine.SourceDocumentLine  == _sourceDocumentLine
        #                ;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findInventTransId
        #static PurchLine findInventTransId(TradeInventTransId   _inventTransId,
        #                                   boolean              _update = false)
        #{
        #    PurchLine purchLine;
        #
        #    if (_inventTransId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        select firstonly purchLine
        #            where purchLine.InventTransId == _inventTransId
        #               && !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findItemIdInventDimId
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>
        #/// </param>
        #/// <param name="itemId">
        #///   An <c>ItemId</c>.
        #/// </param>
        #/// <param name="inventDimId">
        #///   An <c>InventDimId</c>.
        #/// </param>
        #/// <param name="lineNum">
        #///   A line number; optional.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findItemIdInventDimId( PurchId          purchId,
        #                                               ItemId           itemId,
        #                                               InventDimId      inventDimId,
        #                                               TradeLineNumber  lineNum     = int64Min(),
        #                                               boolean          update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        if (lineNum == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId     == purchId      &&
        #                      purchLine.ItemId      == itemId       &&
        #                      purchLine.InventDimId == inventDimId  &&
        #                      !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId     == purchId      &&
        #                      purchLine.LineNumber  == lineNum      &&
        #                      purchLine.ItemId      == itemId       &&
        #                      purchLine.InventDimId == inventDimId    &&
        #                      !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findPurchIdPurchType
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="purchType">
        #///   A <c>PurchType</c>.
        #/// </param>
        #/// <param name="lineNum">
        #///   A line number; optional.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findPurchIdPurchType(  PurchId           purchId,
        #                                                      PurchaseType      purchType,
        #                                                      TradeLineNumber   lineNum     = int64Min(),
        #                                                      boolean           update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        if (lineNum == int64Min())
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == purchId     &&
        #                      purchLine.PurchaseType == purchType &&
        #                      !purchLine.IsDeleted;
        #        }
        #        else
        #        {
        #            select firstonly purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == purchId     &&
        #                      purchLine.LineNumber == lineNum     &&
        #                      purchLine.PurchaseType == purchType &&
        #                      !purchLine.IsDeleted;
        #        }
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findPurchTypeItemIdVarinatId
        #/// <summary>
        #///   Finds the specified record in the <c>PurchLine</c> table.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="purchType">
        #///   A <c>PurchType</c>.
        #/// </param>
        #/// <param name="itemId">
        #///   An <c>ItemId</c>.
        #/// </param>
        #/// <param name="variantId">
        #///   A <c>RetailVariantId</c>.
        #/// </param>
        #/// <param name="update">
        #///   A Boolean value that indicates whether to read the record for update; optional.
        #/// </param>
        #/// <returns>
        #///   A record in the <c>PurchLine</c> table; otherwise, an empty record.
        #/// </returns>
        #client server static PurchLine findPurchTypeItemIdVarinatId(PurchId      purchId,
        #                      PurchaseType  purchType,
        #                      ItemId        itemId,
        #                      RetailVariantId  variantId,
        #                      boolean       update      = false)
        #{
        #    PurchLine  purchLine;
        #
        #    if (purchId)
        #    {
        #        purchLine.selectForUpdate(update);
        #
        #        select firstonly purchLine
        #            index hint PurchLineIdx
        #            where purchLine.PurchId == purchId          &&
        #                  purchLine.PurchaseType == purchType   &&
        #                  purchLine.ItemId == itemId            &&
        #                  purchLine.VariantId == variantId      &&
        #                  !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #static PurchLine findRecId(RecId    _recId,
        #                           boolean  _update = false)
        #{
        #    PurchLine purchLine;
        #
        #    if (_recId)
        #    {
        #        purchLine.selectForUpdate(_update);
        #
        #        select firstonly purchLine
        #            where purchLine.RecId == _recId
        #               && !purchLine.IsDeleted;
        #    }
        #
        #    return purchLine;
        #}
      ENDSOURCE
      SOURCE #getBatchAndWHSQtyToReceive
        #/// <summary>
        #/// Gets the batch Id and the new qty that can be received from the purchase order line, based on the quantity that may have
        #/// already been received previously.
        #/// </summary>
        #/// <param name="_purchId">
        #/// The Id of the purchase order.
        #/// </param>
        #/// <param name="_lineNum">
        #/// The line number of the purchase line.
        #/// </param>
        #/// <param name="_receiptId">
        #/// The Receipt Id for which the purchase line had been received (partially) before.
        #/// </param>
        #/// <param name="_receivingQty">
        #/// The quantity that is intended to be received.
        #/// </param>
        #/// <param name="_receivingUnit">
        #/// The unit of measure for the receipt quantity.
        #/// </param>
        #/// <returns>
        #/// The batch Id of either the purchase order or the associated <c>InventTrans</c> table, and the quantity of the first batch that can be received.
        #/// </returns>
        #public static container getBatchAndWHSQtyToReceive(
        #    PurchId                 _purchId,
        #    TradeLineNumber         _lineNum,
        #    WHSReceiptId            _receiptId,
        #    Qty                     _receivingQty,
        #    UnitOfMeasureSymbol     _receivingUnit)
        #{
        #    PurchLine                       purchLine = PurchLine::find(_purchId, _lineNum);
        #    InventBatchId                   ret;
        #    ItemId                          itemId = purchLine.ItemId;
        #    InventDim                       inventDim;
        #    InventTrans                     inventTrans;
        #    InventTransOrigin               inventTransOrigin;
        #    UnitOfMeasureSymbol             inventUnit = InventTable::find(itemId).inventUnitId();
        #
        #    WHSInventBatchReceiptDetails    batchReceiptDetails;
        #    Qty                             receivingQtyForBatch = _receivingQty;
        #
        #    // try to get the batch number from the order line
        #    ret = purchLine.inventDim().InventBatchId;
        #
        #     // try to get the batch number from the transactions, lessened by such that are already part of the receipt details
        #    if (ret == '')
        #    {
        #        select firstOnly sum(Qty) from inventTrans
        #            where inventTrans.ItemId == itemId
        #                && inventTrans.StatusReceipt == StatusReceipt::Ordered
        #                && inventTrans.StatusIssue == StatusIssue::None
        #            join InventBatchId from inventDim
        #                group by InventBatchId
        #                where inventDim.inventDimId == inventTrans.inventDimId
        #            exists join inventTransOrigin
        #                where inventTransOrigin.RecId == inventTrans.InventTransOrigin
        #                    && inventTransOrigin.InventTransId == purchLine.InventTransId
        #            notexists join batchReceiptDetails
        #                where batchReceiptDetails.ReceiptId == _receiptId
        #                    && batchReceiptDetails.ItemId == itemId
        #                    && batchReceiptDetails.InventBatchId == inventDim.InventBatchId;
        #
        #        if (inventTrans)
        #        {
        #            ret = inventDim.InventBatchId;
        #
        #            // in case the quantity of the batch is less than the total qty to receive, reduce the latter
        #            if (purchLine.OverDeliveryPct == 0
        #                && inventTrans.Qty
        #                && inventTrans.Qty < InventTable::unitConvert(itemId, _receivingUnit, inventUnit, inventUnit, _receivingQty, purchLine.InventDimId))
        #            {
        #                receivingQtyForBatch = InventTable::unitConvert(itemId, inventUnit, _receivingUnit, inventUnit, inventTrans.Qty, purchLine.InventDimId);
        #            }
        #        }
        #    }
        #
        #    return [ret, receivingQtyForBatch];
        #}
      ENDSOURCE
      SOURCE #getLedgerPostingType
        #public static LedgerPostingType getLedgerPostingType(ItemId _itemId)
        #{
        #    LedgerPostingType ledgerPostingType;
        #    InventModelGroup  inventoryModelGroup;
        #
        #    inventoryModelGroup = InventTable::find(_itemId).modelGroup();
        #
        #    if (inventoryModelGroup.PostPhysicalPurchase ||
        #                (!inventoryModelGroup.PostOnhandPhysical &&
        #                 !inventoryModelGroup.PostPhysicalPurchase))
        #    {
        #        ledgerPostingType = LedgerPostingType::PurchConsump;
        #    }
        #    else if (inventoryModelGroup.PostOnhandPhysical &&
        #            !inventoryModelGroup.PostPhysicalPurchase)
        #    {
        #        ledgerPostingType = LedgerPostingType::PurchReceipt;
        #    }
        #
        #    return ledgerPostingType;
        #}
      ENDSOURCE
      SOURCE #getSerialToReceive
        #/// <summary>
        #/// Gets the serial Id from the purchase order line
        #/// </summary>
        #/// <param name="_purchId">
        #/// The Id of the purchase order.
        #/// </param>
        #/// <param name="_lineNum">
        #/// The line number of the purchase line.
        #/// </param>
        #/// <returns>
        #/// The serial Id of either the purchase order or the associated <c>InventTrans</c> table
        #/// </returns>
        #public static InventSerialId getSerialToReceive(
        #    PurchId             _purchId,
        #    TradeLineNumber     _lineNum)
        #{
        #    PurchLine           purchLine = PurchLine::find(_purchId, _lineNum);
        #    InventSerialId      ret;
        #    InventDim           inventDim;
        #    InventTrans         inventTrans;
        #    InventTransOrigin   inventTransOrigin;
        #
        #    // try to get the serial number from the order line
        #    ret = purchLine.inventDim().InventSerialId;
        #
        #    // try to get the serial number from the transactions
        #    if (ret == '')
        #    {
        #        select InventSerialId from inventDim
        #            exists join inventTrans
        #                  where inventTrans.ItemId == purchLine.ItemId
        #                     && inventTrans.StatusReceipt == StatusReceipt::Ordered
        #                     && inventTrans.InventDimId == inventDim.InventDimId
        #            exists join inventTransOrigin
        #                  where inventTransOrigin.RecId == inventTrans.InventTransOrigin
        #                     && inventTransOrigin.InventTransId == purchLine.InventTransId;
        #
        #        ret = inventDim.InventSerialId;
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #getVendorLocationId_IN
        #/// <summary>
        #/// Gets vendor location id.
        #/// </summary>
        #/// <param name="_party">
        #/// The instance of the <c>DirPartyRecId</c> class.
        #/// </param>
        #/// <returns>
        #/// The instance of the <c>LogisticsLocationRecId</c> class.
        #/// </returns>
        #public server static LogisticsLocationRecId getVendorLocationId_IN(DirPartyRecId _party)
        #{
        #    DirPartyLocation  dirPartyLocation;
        #    LogisticsLocation logisticsLocation;
        #
        #    if (_party)
        #    {
        #        select firstonly Location from dirPartyLocation
        #            where dirPartyLocation.Party          == _party
        #                join RecId from logisticsLocation
        #                    where logisticsLocation.RecId == dirPartyLocation.Location;
        #    }
        #
        #    return logisticsLocation.RecId;
        #}
      ENDSOURCE
      SOURCE #hasExensionTableEnabled
        #/// <summary>
        #/// Checks is there any extension table of table <C>PurchLine</C> is enabled.
        #/// </summary>
        #/// <returns>
        #/// true if there is one or more extension tables are enabled. Otherwise, return false.
        #/// </returns>
        #public static boolean hasExensionTableEnabled()
        #{
        #    return SysExtensionSerializerMap::hasExensionTableEnabled(tableNum(PurchLine));
        #}
      ENDSOURCE
      SOURCE #highestPackageLineNum
        #/// <summary>
        #///   Returns the highest package line number from the purchase order.
        #/// </summary>
        #/// <param name="purchId">
        #///   A <c>PurchId</c>.
        #/// </param>
        #/// <param name="packageId">
        #///   A <c>RetailPackageId</c>.
        #/// </param>
        #/// <returns>
        #///   The highest package line number from the purchase order.
        #/// </returns>
        #static LineNum  highestPackageLineNum(PurchId  purchId,RetailPackageId packageId)
        #{
        #    PurchLine   purchLine;
        #
        #    select maxof(rboPackageLineNum) from purchLine
        #    index hint RBOPackageIdx
        #    where purchLine.PurchId == purchId &&
        #          purchLine.RetailPackageId == packageId;
        #
        #
        #    return purchLine.rboPackageLineNum;
        #
        #}
      ENDSOURCE
      SOURCE #highestPurchStatus
        #static PurchStatus   highestPurchStatus(PurchId  purchId)
        #{
        #    PurchLine purchLine;
        #
        #    select maxof(PurchStatus) from purchLine
        #        index hint PurchStatusIdx
        #        where   purchLine.PurchId           == purchId
        #           &&   purchLine.PurchStatus       >  PurchStatus::None
        #           &&   !purchLine.IsDeleted;
        #
        #    if (purchLine)
        #    {
        #        return purchLine.PurchStatus;
        #    }
        #
        #    return PurchStatus::Backorder;
        #}
      ENDSOURCE
      SOURCE #historyExistsOrLatestVersionNotArchived
        #/// <summary>
        #/// This method checks if the line is versioned i.e. line is archived i.e. has historical records,
        #/// or the last version of the purchase order and purchase line is not archived yet.
        #/// </summary>
        #/// <param name="_inventTransId">
        #/// The <c>InventTransId</c> value for the purchase order line.
        #/// </param>
        #/// <param name="_purchId">
        #/// The <c>PurchId</c> value of the purchase order line.
        #/// </param>
        #/// <param name="_purchDataAreaId">
        #/// The <c>DataAreaId</c> value of the purchase order line.
        #/// </param>
        #/// <returns>
        #/// true if the line is archived or the last version has not yet been archived; otherwise false.
        #/// </returns>
        #private static server boolean historyExistsOrLatestVersionNotArchived(TradeInventTransId _inventTransId, PurchId _purchId, DataAreaId _purchDataAreaId)
        #{
        #    PurchTableVersion purchTableLatestVersion;
        #
        #    if(PurchLineHistory::existFromInventTrans(_inventTransId))
        #    {
        #        return true;
        #    }
        #
        #    purchTableLatestVersion = PurchTableVersion::findLatest(_purchId, _purchDataAreaId);
        #
        #    return purchTableLatestVersion.RecId && !purchTableLatestVersion.IsArchived;
        #}
        #
      ENDSOURCE
      SOURCE #initFromInventTableIL
        #/// <summary>
        #/// Updates a <c>PurchLine</c> table buffer based on the item.
        #/// </summary>
        #/// <param name="_inputContract">
        #///     A container with the <c>PurchLine</c> buffer and the <c>InventTable</c> buffer to initialize from.
        #/// </param>
        #/// <returns>
        #///    The initialized <c>PurchLine</c> record.
        #/// </returns>
        #/// <remarks>
        #///     The intention is this method should only be called from \Data Dictionary\Tables\PurchLine\Methods\initFromInventTable and should be run in IL.
        #/// </remarks>
        #private static container initFromInventTableIL(container _inputContract)
        #{
        #    PurchLine       purchLine = con2Buf(conPeek(_inputContract, 1));
        #    InventTable     inventTable = con2Buf(conPeek(_inputContract, 2));
        #    PurchLineType   purchLineType;
        #
        #    purchLineType = purchLine.type();
        #    purchLineType.initFromInventTable(inventTable);
        #
        #    return buf2Con(purchLine, true);
        #}
      ENDSOURCE
      SOURCE #isDeleted
        #/// <summary>
        #/// Checks whether the <c>PurchLine</c> record is deleted.
        #/// </summary>
        #/// <param name="_recId">
        #/// The <c>RecId</c> field of the <c>PurchLine</c> table record.
        #/// </param>
        #/// <returns>
        #/// true if the <c>PurchLine</c> table record is deleted; otherwise, false.
        #/// </returns>
        #public static boolean isDeleted(RecId _recId)
        #{
        #    PurchLine  purchLine;
        #
        #    if (_recId)
        #    {
        #        select firstonly IsDeleted from purchLine
        #               where purchLine.RecId == _recId;
        #    }
        #
        #    return purchLine.IsDeleted;
        #}
      ENDSOURCE
      SOURCE #isDistributionForCreditNote
        #/// <summary>
        #/// Determines if the accounting distribution originates from a credit note.
        #/// </summary>
        #/// <param name="_accountingDistribution">
        #/// An <c>AccountingDistribution</c> record.
        #/// </param>
        #/// <returns>
        #/// true if the accounting distribution originates from a credit note; otherwise, false.
        #/// </returns>
        #public static boolean isDistributionForCreditNote(AccountingDistribution _accountingDistribution)
        #{
        #    SourceDocumentLine  sourceDocumentLine;
        #    PurchLine           purchLine;
        #    PurchLineType       purchLineType;
        #
        #    select firstonly RecId from sourceDocumentLine
        #        where sourceDocumentLine.RecId == _accountingDistribution.SourceDocumentLine
        #    join firstonly purchLine
        #        where purchLine.SourceDocumentLine == sourceDocumentLine.RecId;
        #
        #    purchLineType = PurchLineType::construct(purchLine);
        #
        #    return purchLineType.creditNoteLine();
        #}
      ENDSOURCE
      SOURCE #isTaxExist
        #static boolean isTaxExist(TradeInventTransId _inventTransId, TaxCode _taxCode)
        #{
        #    PurchLine       purchLineloc;
        #    TaxOnItem       taxOnItem;
        #
        #    if (_inventTransId && _taxCode)
        #    {
        #        select firstonly RecId from taxOnItem
        #            where taxOnItem.TaxCode == _taxCode
        #            exists join purchLineloc
        #                where purchLineloc.InventTransId    == _inventTransId
        #                   && purchLineloc.TaxItemGroup     == taxOnItem.TaxItemGroup
        #                   && !purchLineloc.IsDeleted;
        #    }
        #    return taxOnItem.RecId;
        #}
      ENDSOURCE
      SOURCE #isTaxUnrealized
        #static boolean isTaxUnrealized(PurchIdBase _purchID)
        #{
        #    PurchLine       purchLineloc;
        #    TaxGroupData    taxGroupData;
        #    TaxTable        taxTable;
        #
        #    select firstonly RecId from taxTable
        #        where taxTable.UnrealizedTax == true
        #        exists join taxGroupData
        #            where taxGroupData.TaxCode == taxTable.TaxCode
        #        exists join purchLineloc
        #            where purchLineloc.PurchId          == _purchID
        #               && purchLineloc.TaxGroup         == taxGroupData.TaxGroup
        #               && !purchLineloc.IsDeleted;
        #    return taxTable.RecId;
        #}
      ENDSOURCE
      SOURCE #lastLineNum
        #static TradeLineNumber  lastLineNum(PurchId _purchId)
        #{
        #    return (select maxof(LineNumber) from purchLine
        #                index hint PurchLineIdx
        #                where purchLine.PurchId == _purchId).LineNumber;
        #}
      ENDSOURCE
      SOURCE #lookupCountryRegionName_RU
        #/// <summary>
        #/// Performs lookup on <c>LogisticsAddressCountryRegionTranslation</c> table
        #/// </summary>
        #/// <param name="_ctrl">
        #/// Control lookup linked to
        #/// </param>
        #/// <param name="_languageId">
        #/// Code of language to search for
        #/// </param>
        #public static void lookupCountryRegionName_RU(FormStringControl _ctrl, LanguageId _languageId)
        #{
        #    SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(LogisticsAddressCountryRegionTranslation), _ctrl);
        #    Query          query          = new Query();
        #
        #    query.addDataSource(tableNum(LogisticsAddressCountryRegionTranslation));
        #
        #    query.dataSourceNo(1).addRange(fieldNum(LogisticsAddressCountryRegionTranslation, LanguageId)).value(_languageId);
        #
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionTranslation, ShortName));
        #    sysTableLookup.addLookupfield(fieldNum(LogisticsAddressCountryRegionTranslation, LongName));
        #
        #    sysTableLookup.parmQuery(query);
        #    sysTableLookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #lookupRetailVariantId
        #/// <summary>
        #/// Performs the lookup for the <c>RetailVariantId</c> field.
        #/// </summary>
        #/// <param name="_ctrl">
        #/// The form control for which to perform the lookup.
        #/// </param>
        #/// <param name="_itemIdFilter">
        #/// An item id to filter the variants.
        #/// </param>
        #public static void lookupRetailVariantId(FormStringControl _ctrl, ItemId _itemIdFilter)
        #{
        #    FormRun formRun = classfactory.formRunClass(new Args(formStr(RetailVariantLookup)));
        #
        #    formRun.args().parm(_itemIdFilter);
        #    formRun.args().caller(_ctrl);
        #    formRun.init();
        #
        #    formRun.run();
        #    _ctrl.performFormLookup(formRun);
        #}
      ENDSOURCE
      SOURCE #lowestPurchStatus
        #public static PurchStatus   lowestPurchStatus(PurchId  _purchId)
        #{
        #    PurchLine   purchLine;
        #
        #    select minof(PurchStatus) from purchLine
        #        index hint PurchStatusIdx
        #        where   purchLine.PurchId           == _purchId
        #           &&   purchLine.PurchStatus       >  PurchStatus::None
        #           &&   !purchLine.IsDeleted;
        #
        #    if (purchLine)
        #    {
        #        return purchLine.PurchStatus;
        #    }
        #
        #    if (PurchTable::find(_purchId).DocumentStatus != DocumentStatus::None)
        #    {
        #        return PurchStatus::Canceled;
        #    }
        #
        #    return PurchStatus::Backorder;
        #}
      ENDSOURCE
      SOURCE #modifyPurchQty
        #static void  modifyPurchQty(
        #    PurchLine       _purchLine,
        #    InventDim       _inventDim,
        #    boolean         _resetPrice = true)
        #{
        #    if (!_purchLine.interCompanyIsBeingUpdated())
        #    {
        #        InventMovement::setMinMaxQty(_purchLine
        #        , !Global::isRunningOnServer()
        #        );
        #
        #        if (_purchLine.LineDeliveryType == LineDeliveryType::DeliveryLine
        #            || !_resetPrice) //we should recalculate amount even though we do not reset price
        #        {
        #            _purchLine.LineAmount = _purchLine.calcLineAmountForced();
        #        }
        #        else if (_resetPrice)
        #        {
        #            _purchLine.SalesPurchLine::resetPriceAgreement();
        #            _purchLine.setPriceDisc(_inventDim);
        #        }
        #        _purchLine.initPurchQty();
        #
        #        InventMovement::bufferSetTransQtyUnit(_purchLine);
        #
        #        _purchLine.setInventReceivedNow();
        #
        #        // Added ProjParameter clause because this was resetting the sales price.
        #        if (_purchLine.ProjId && !_purchLine.purchTable().isProjectSalesItemReqPO()
        #                && !_purchLine.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO()
        #                && !ProjParameters::find().DefaultCostPriceAsSalesPrice)
        #        {
        #            // Recalculate the project sales price
        #            _purchLine.initFromProjTable(_purchLine.projTable(), true);
        #        }
        #    }
        #    else
        #    {
        #        _purchLine.PurchQty = _purchLine.orig().PurchQty;
        #    }
        #}
      ENDSOURCE
      SOURCE #resetAxPurchLinePolicies
        #/// <summary>
        #///    Resets the price discount policies.
        #/// </summary>
        #/// <param name="_axPurchLine">
        #///    An <c>AxPurchLine</c> object representing the order line that should have the policies reset.
        #/// </param>
        #public static void resetAxPurchLinePolicies(AxPurchLine _axPurchLine)
        #{
        #    _axPurchLine.parmSystemEntrySource(PriceDiscSystemSource::None);
        #    _axPurchLine.parmSystemEntryChangePolicy(0);
        #    _axPurchLine.parmManualEntryChangepolicy(0);
        #}
      ENDSOURCE
      SOURCE #returnedLotQty
        #/// <summary>
        #///     Calulates the returned quantity and catch weight quantity for a purchase order line.
        #///     These quantities include other open return lines as well partially or fully processed return lines (current purchase order line is not included).
        #/// </summary>
        #/// <param name="_inventTransId">
        #///     The inventTransId which identifies a purchase order line (lot id of the initial purchase order line).
        #/// </param>
        #/// <param name="_inventTransIdCurrent">
        #///     The inventTransId which identifies the current return purchase order line (Reference Lot id); optional.
        #/// </param>
        #/// <returns>
        #///     A container with the quantity and the catch weight quantity that is already returned for the current purchase order line.
        #/// </returns>
        #public server static container returnedLotQty(InventTransId _inventTransId,
        #                                              InventTransId _inventTransIdCurrent = '')
        #{
        #    PurchLine   purchLine;
        #
        #    select sum(PurchQty), sum(PdsCWQty) from purchLine
        #        where (purchLine.PurchQty < 0                                                       // Only credit lines
        #            && !(purchLine.IsDeleted && purchLine.PurchStatus == PurchStatus::Backorder)    // Exlude deleted un-invoiced lines
        #            && purchLine.InventRefTransId == _inventTransId                                 // Find the lines that reference the original line
        #            && purchLine.InventTransId    != _inventTransIdCurrent);                        // Exclude current line
        #
        #    return [-purchLine.PurchQty, -purchLine.PdsCWQty];                                      // Quantities are negative. Want to return a positive quantity.
        #}
      ENDSOURCE
      SOURCE #setDeliveryDueWorkflowState
        #/// <summary>
        #/// Sets the <c>PurchLine</c> workflow state for the COR: Delivery due in xx days workflow.
        #/// </summary>
        #/// <param name="_purchLineRecId">
        #/// The record ID <c>PurchLine</c> record.
        #/// </param>
        #/// <param name="_purchCORWorkflowState">
        #/// The workflow state enumeration value to set on the <c>PurchLine</c> record.
        #/// </param>
        #static void setDeliveryDueWorkflowState(RecId _purchLineRecId,
        #                                        TradeWorkflowState _purchCORWorkflowState)
        #{
        #    PurchLine purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_purchLineRecId, true);
        #    purchLine.WfDeliveryDueState = _purchCORWorkflowState;
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #setInvReceivedWorkflowState
        #/// <summary>
        #/// Sets the <c>PurchLine</c> workflow state for the COR: Invoice received, items not received workflow.
        #/// </summary>
        #/// <param name="_purchLineRecId">
        #/// The record ID of the <c>PurchLine</c> record.
        #/// </param>
        #/// <param name="_purchCORWorkflowState">
        #/// The workflow state enumeration value to set on the <c>PurchLine</c> record.
        #/// </param>
        #static void setInvReceivedWorkflowState(RecId _purchLineRecId,
        #                                        TradeWorkflowState _purchCORWorkflowState)
        #{
        #    PurchLine purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_purchLineRecId, true);
        #    purchLine.WfInvReceivedState = _purchCORWorkflowState;
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #setWorkflowState
        #/// <summary>
        #///     This method update the <c>WorkflowState</c> on the specified <c>PurchLine</c>
        #/// </summary>
        #/// <param name="_recId">
        #///     <c>RecId</c> of the record to update.
        #/// </param>
        #/// <param name="_workflowState">
        #///     <c>WorkflowState</c> that the record must be updated with.
        #/// </param>
        #/// <param name="_editableInWorkflow">
        #///     <c>editableInWorkflow</c> that the record must be updated with.
        #/// </param>
        #static void  setWorkflowState(RecId                     _recId,
        #                              TradeWorkflowState        _workflowState,
        #                              TradeEditableInWorkflow   _editableInWorkflow = NoYes::No)
        #{
        #    PurchLine  purchLine;
        #
        #    ttsbegin;
        #
        #    purchLine = PurchLine::findRecId(_recId, true);
        #    purchLine.updateWorkflowState(_workflowState, _editableInWorkflow);
        #    purchLine.doUpdate();
        #
        #    ttscommit;
        #}
      ENDSOURCE
    ENDMETHODS
    EVENTS
      METHOD #initFromPurchLine
        EVENTHANDLERS
          EVENTHANDLER #PurchLineEventHandler
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler
              Method              #setPurchCommitmentLine_PSN
              AOTlink             #\Classes\PurchLineEventHandler\setPurchCommitmentLine_PSN
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #initFromVendInvoiceTrans
        EVENTHANDLERS
          EVENTHANDLER #postInitFromVendInvoiceTrans_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postInitFromVendInvoiceTransHandler_BR
              AOTlink             #\Classes\PurchLineEventHandler_BR\postInitFromVendInvoiceTransHandler_BR
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #PurchLineEventHandler
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler
              Method              #setPurchCommitmentLine_PSN
              AOTlink             #\Classes\PurchLineEventHandler\setPurchCommitmentLine_PSN
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #modifiedField
        EVENTHANDLERS
          EVENTHANDLER #modifiedFieldPost_PMF
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineHandler_PMF
              Method              #modifiedFieldPost
              AOTlink             #\Classes\PurchLineHandler_PMF\modifiedFieldPost
            ENDPROPERTIES
            
          ENDEVENTHANDLER
          EVENTHANDLER #postModifiedField_BR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postModifiedFieldHandler_BR
              AOTlink             #\Classes\PurchLineEventHandler_BR\postModifiedFieldHandler_BR
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #modifyInventDim
        EVENTHANDLERS
          EVENTHANDLER #postModifyInventDimBR
            PROPERTIES
              CalledWhen          #Post
              Class               #PurchLineEventHandler_BR
              Method              #postModifyInventDim
              AOTlink             #\Classes\PurchLineEventHandler_BR\postModifyInventDim
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
      METHOD #validateField
        EVENTHANDLERS
          EVENTHANDLER #pmfValidateFieldPost
            PROPERTIES
              CalledWhen          #Post
              Class               #purchLineHandler_Pmf
              Method              #validateFieldPost
              AOTlink             #\Classes\purchLineHandler_Pmf\validateFieldPost
            ENDPROPERTIES
            
          ENDEVENTHANDLER
        ENDEVENTHANDLERS
      ENDMETHOD
    ENDEVENTS
  ENDTABLE
  

***Element: DBT

; Microsoft Dynamics AX Table : STF_ElectronicInvoiceReferences unloaded
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #STF_ElectronicInvoiceReferences
    EnforceFKRelation 0
    PROPERTIES
      Name                #STF_ElectronicInvoiceReferences
      Label               #@SYS4160096
      TitleField1         #VATNum
      TitleField2         #InvoiceAmount
      TableGroup          #Reference
      PrimaryIndex        #RefInvoiceRecIdIdx
      ClusterIndex        #RefInvoiceRecIdIdx
      Origin              #{D580665F-E30E-496D-9727-366018D26DA7}
    ENDPROPERTIES
    
    FIELDS
      FIELD #InvoiceAmount
        REAL
        PROPERTIES
          Name                #InvoiceAmount
          Label               #@FSA215
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{04BCB35D-E486-419D-866A-FF6CA1919739}
          ExtendedDataType    #AmountCur
        ENDPROPERTIES
        
      FIELD #ItemId
        STRING
        PROPERTIES
          Name                #ItemId
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{B506F6B3-B8F8-4509-97E7-BE9AA26C86B5}
          ExtendedDataType    #ItemId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #LineNumber
        INT64
        PROPERTIES
          Name                #LineNumber
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{13D24DC3-7D85-4A84-BC38-6EDB9D48704B}
          ExtendedDataType    #TradeLineNumber
        ENDPROPERTIES
        
      FIELD #PurchId
        STRING
        PROPERTIES
          Name                #PurchId
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{EBBA81CF-1B87-49B8-B648-6497F9B8F4C7}
          ExtendedDataType    #PurchIdBase
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #RefInvoiceRecId
        INT64
        PROPERTIES
          Name                #RefInvoiceRecId
          Label               #@FSA214
          HelpText            #@FSA216
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{3CD27A38-5D8B-4E85-851A-C6B172E00568}
          ExtendedDataType    #RefRecId
        ENDPROPERTIES
        
      FIELD #UUID
        STRING
        PROPERTIES
          Name                #UUID
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{4F6BA30B-A1C3-4961-8428-F7064604CF86}
          ExtendedDataType    #STF_UUID
          StringSize          #36
        ENDPROPERTIES
        
      FIELD #ValidCFDI
        ENUM
        PROPERTIES
          Name                #ValidCFDI
          Label               #@FSA209
          HelpText            #@FSA210
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{DA324CF8-A408-4DB4-BA11-0D8610EB7DA8}
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #VATNum
        STRING
        PROPERTIES
          Name                #VATNum
          Label               #@FSA214
          Table               #STF_ElectronicInvoiceReferences
          Origin              #{33E6B72F-2A6B-438C-BC24-C2C16263BECF}
          ExtendedDataType    #VATNumJournal
          StringSize          #20
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #VATNum
          #ValidCFDI
          #UUID
          #InvoiceAmount
          #RefInvoiceRecId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #General
        PROPERTIES
          Name                #General
          Label               #@FSA217
        ENDPROPERTIES
        
        GROUPFIELDS
          #VATNum
          #ValidCFDI
          #UUID
          #InvoiceAmount
          #RefInvoiceRecId
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #RefInvoiceRecIdIdx
      PROPERTIES
        Name                #RefInvoiceRecIdIdx
        Origin              #{92D67652-6BDE-4C34-A3D6-A8567372ABC3}
      ENDPROPERTIES
      
      INDEXFIELDS
        #RefInvoiceRecId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #PurchTable
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          UseDefaultRoleNames #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #PurchId
            RelatedField        #PurchId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendInoviceJour
        PROPERTIES
          Name                #VendInoviceJour
          Table               #VendInvoiceJour
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #RefInvoiceRecId
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #exist
        #static boolean exist(RefRecId  _invoiceRecId)
        #{
        #    return _invoiceRecId && (select firstonly RefInvoiceRecId from STF_ElectronicInvoiceReferences
        #                index hint RefInvoiceRecIdIdx
        #                where STF_ElectronicInvoiceReferences.RefInvoiceRecId == _invoiceRecId
        #           ).RecId != 0;
        #}
      ENDSOURCE
      SOURCE #findItemPurchLine
        #static STF_ElectronicInvoiceReferences findItemPurchLine(PurchId _purchId,ItemId _itemId, TradeLineNumber _line, boolean _forUpdate = false)
        #{
        #    STF_ElectronicInvoiceReferences electronicInvoiceReferences;
        #    ;
        #
        #    electronicInvoiceReferences.selectForUpdate(_forUpdate);
        #
        #    select electronicInvoiceReferences
        #        where electronicInvoiceReferences.PurchId == _purchId &&
        #              electronicInvoiceReferences.ItemId == _itemId &&
        #              electronicInvoiceReferences.LineNumber == _line;
        #
        #    return electronicInvoiceReferences;
        #}
      ENDSOURCE
      SOURCE #findRecId
        #static STF_ElectronicInvoiceReferences findRecId(recId _recId, boolean _forUpdate = false)
        #{
        #    STF_ElectronicInvoiceReferences electronicInvoiceReferences;
        #    ;
        #
        #    electronicInvoiceReferences.selectForUpdate(_forUpdate);
        #
        #    select electronicInvoiceReferences
        #        where electronicInvoiceReferences.RecId == _recId;
        #
        #    return electronicInvoiceReferences;
        #}
      ENDSOURCE
      SOURCE #lookupVATNum
        #public static void lookupVATNum(FormControl _callingControl)
        #{
        #    Query                   query;
        #    QueryBuildDataSource    qbds;
        #    SysTableLookup          lookup;
        #    ;
        #
        #    query = new Query();
        #
        #    qbds = query.addDataSource(tablenum(TaxVATNumTable));
        #
        #
        #    lookup = SysTableLookup::newParameters(tablenum(TaxVATNumTable), _callingControl, true);
        #    lookup.parmQuery(query);
        #    lookup.addLookupField(fieldnum(TaxVATNumTable, VATNum), true);
        #    lookup.addLookupField(fieldnum(TaxVATNumTable, Name));
        #    lookup.performFormLookup();
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : STF_EditBankAccountTrans unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #STF_EditBankAccountTrans
    Type: 1
    PROPERTIES
      Name                #STF_EditBankAccountTrans
      Label               #@FSA222
      HelpText            #@FSA9
      Object              #STF_EditBankAccountTrans
      Origin              #{C4DE2BD1-8012-4A6A-9855-AF0DEA0271FA}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : STF_ElectronicInvoiceReferences unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #STF_ElectronicInvoiceReferences
    Type: 1
    PROPERTIES
      Name                #STF_ElectronicInvoiceReferences
      Label               #@FSA220
      HelpText            #@FSA9
      Object              #STF_ElectronicInvoiceReferences
      Origin              #{49D0BD45-6DDA-46DD-B0A7-5FF04E5B558A}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: FTM

; Microsoft Dynamics AX MENUITEM : STF_SATVerifyCFDIServiceAgent_References unloaded
; --------------------------------------------------------------------------------
  VERSION 1
  
  MENUITEM #STF_SATVerifyCFDIServiceAgent_References
    Type: 3
    PROPERTIES
      Name                #STF_SATVerifyCFDIServiceAgent_References
      Label               #@FSA182
      HelpText            #@FSA9
      ObjectType          #Class
      Object              #STF_SATVerifyCFDIServiceAgent_References
      Origin              #{C83686FF-7236-43C0-AC28-5F3EB3A11794}
    ENDPROPERTIES
    
  ENDMENUITEM
  

***Element: CLS

; Microsoft Dynamics AX Class: STF_SATVerifyCFDIServiceAgent descargados
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #STF_SATVerifyCFDIServiceAgent
    PROPERTIES
      Name                #STF_SATVerifyCFDIServiceAgent
      Extends             #RunBase
      Origin              #{893ADD83-B440-45E6-96ED-C54E31BBFD79}
    ENDPROPERTIES
    
    METHODS
      SOURCE #classDeclaration
        #//Project: STF_ElectronicAccounting   Developer: Arly Rubio C.  Date: July/22/2014
        #class STF_SATVerifyCFDIServiceAgent extends RunBase
        #{
        #
        #    FilenameOpen        xmlFileName;
        #
        #    DialogField         fieldxmlFileName;
        #
        #    CustVendInvoiceJour custVendInvoiceJour;
        #
        #    VATNum              vatNumIssuing;
        #    VATNum              vatNumReceptor;
        #    str                 invoiceTotalAmountStr;
        #    str                 invoiceSubTotalAmountStr;
        #
        #    STF_UUID            uuid;
        #    STF_QrCFDI          qrCode;
        #
        #    boolean             taxAuthorityValidation;
        #    boolean             validatedByTaxAuthority;
        #    boolean             electronicInvoiceValid;
        #
        #    CustInvoiceJour     custInvoiceJour;
        #    VendInvoiceJour     vendInvoiceJour;
        #
        #
        #}
      ENDSOURCE
      SOURCE #dialog
        #protected Object dialog()
        #{
        #    Dialog dialog;
        #    ;
        #
        #    dialog = super();
        #    dialog.caption("@INZ130");
        #
        #    fieldxmlFileName = dialog.addField(extendedTypeStr(FilenameOpen));
        #
        #
        #    return dialog;
        #}
      ENDSOURCE
      SOURCE #getFromDialog
        #public boolean getFromDialog()
        #{
        #    boolean             ret = true;
        #    ;
        #
        #    this.parmXMLFileName(fieldxmlFileName.value());
        #
        #    if (!this.parmXMLFileName())
        #        ret = checkFailed("@INZ131");
        #
        #    return ret;
        #
        #}
      ENDSOURCE
      SOURCE #getXMLAttributes
        #void getXMLAttributes()
        #{
        #    XmlDocument xmlDoc;
        #    Set         permissionSet;
        #    ;
        #
        #    permissionSet = new Set(Types::Class);
        #    permissionSet.add(new FileIoPermission(this.parmXMLFileName(),'rw'));
        #
        #    CodeAccessPermission::assertMultiple(permissionSet);
        #    //--- Permissions are set, now perform file operations.
        #
        #    // Create an XmlDocument object to hold the contents of the xml-file.
        #    xmlDoc = new XmlDocument();
        #
        #    //BP Deviation Documented
        #    xmlDoc.load(this.parmXMLFileName());
        #    //BP Deviation Documented
        #
        #    [vatNumIssuing, vatNumReceptor, invoiceTotalAmountStr, uuid, qrCode, invoiceSubTotalAmountStr] = STF_SATVerifyCFDIServiceAgent::readXML(xmlDoc);
        #
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    return connull();
        #}
      ENDSOURCE
      SOURCE #parmCustVendInvoiceJour
        #CustVendInvoiceJour parmCustVendInvoiceJour(CustVendInvoiceJour _custVendInvoiceJour = custVendInvoiceJour)
        #{
        #    ;
        #
        #    custVendInvoiceJour = _custVendInvoiceJour;
        #
        #    return custVendInvoiceJour;
        #}
      ENDSOURCE
      SOURCE #parmElectronicInvoiceValid
        #boolean parmElectronicInvoiceValid(boolean _electronicInvoiceValid = electronicInvoiceValid)
        #{
        #    ;
        #
        #    electronicInvoiceValid = _electronicInvoiceValid;
        #
        #    return electronicInvoiceValid;
        #}
      ENDSOURCE
      SOURCE #parmTaxAuthorityValidation
        #boolean parmTaxAuthorityValidation(boolean _validate = taxAuthorityValidation)
        #{
        #    ;
        #
        #    taxAuthorityValidation = _validate;
        #
        #    return taxAuthorityValidation;
        #}
      ENDSOURCE
      SOURCE #parmUUID
        #STF_UUID parmUUID(STF_UUID _uuid = uuid)
        #{
        #    ;
        #
        #    uuid = _uuid;
        #
        #    return uuid;
        #}
      ENDSOURCE
      SOURCE #parmValidatedByTaxAuthority
        #boolean parmValidatedByTaxAuthority(boolean _validated = validatedByTaxAuthority)
        #{
        #    ;
        #
        #    validatedByTaxAuthority = _validated;
        #
        #    return validatedByTaxAuthority;
        #}
      ENDSOURCE
      SOURCE #parmXMLFileName
        #FilenameOpen parmXMLFileName(FilenameOpen _xmlFileName = xmlFileName)
        #{
        #    ;
        #
        #    xmlFileName = _xmlFileName;
        #
        #    return xmlFileName;
        #}
      ENDSOURCE
      SOURCE #run
        #void run()
        #{
        #
        #    ;
        #
        #    this.getXMLAttributes();
        #    this.parmTaxAuthorityValidation(true);
        #
        #    this.parmElectronicInvoiceValid(this.validateCFDI());
        #
        #    if (this.parmElectronicInvoiceValid())
        #    {
        #        this.updateInvoiceJournal();
        #        info("@INZ139");
        #    }
        #    else
        #        error("@INZ138");
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container packedClass)
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #updateInvoiceJournal
        #void updateInvoiceJournal()
        #{
        #    ;
        #
        #    switch (this.parmCustVendInvoiceJour().TableId)
        #    {
        #        case tableNum(CustInvoiceJour) :
        #            ttsbegin;
        #            custInvoiceJour.STF_UUID        = uuid;
        #            custInvoiceJour.STF_ValidCFDI   = this.parmValidatedByTaxAuthority() ? NoYes::Yes : NoYes::No;
        #            custInvoiceJour.doUpdate();
        #            ttscommit;
        #            break;
        #
        #        case tableNum(VendInvoiceJour) :
        #            ttsbegin;
        #            vendInvoiceJour.STF_UUID        = uuid;
        #            vendInvoiceJour.STF_ValidCFDI   = this.parmValidatedByTaxAuthority() ? NoYes::Yes : NoYes::No;
        #            vendInvoiceJour.doUpdate();
        #            ttscommit;
        #            break;
        #    }
        #
        #/*    if (this.parmCustVendInvoiceJour().isFormDataSource())
        #    {
        #        this.parmCustVendInvoiceJour().dataSource().reread();
        #        this.parmCustVendInvoiceJour().dataSource().refresh();
        #
        #    }
        #*/
        #}
      ENDSOURCE
      SOURCE #validateCFDI
        #boolean validateCFDI()
        #{
        #    boolean             ret;
        #
        #    CustTable           custTable;
        #    VendTable           vendTable;
        #
        #    VATNum              vatNum;
        #    AmountCur           invoiceTotalAmount;
        #    AmountCur           invoiceTotalAmountTmp;
        #
        #    LedgerParameters    ledgerParameters;
        #
        #    str                 status, statusCode;
        #    #define.OkResponse("S - Comprobante obtenido satisfactoriamente.")
        #    ;
        #
        #    ret = true;
        #
        #    ledgerParameters = LedgerParameters::find();
        #
        #    switch (this.parmCustVendInvoiceJour().TableId)
        #    {
        #        case tableNum(CustInvoiceJour) :
        #            custInvoiceJour = CustInvoiceJour::findRecId(this.parmCustVendInvoiceJour().RecId, true);
        #            //custTable = CustTable::find(this.parmCustVendInvoiceJour().InvoiceAccount);
        #            this.parmTaxAuthorityValidation(!custTable.STF_SkipTaxAuthorityValidation);
        #            vatNum              = custTable.VATNum;
        #            invoiceTotalAmount  = this.parmCustVendInvoiceJour().InvoiceAmount;
        #            break;
        #
        #        case tableNum(VendInvoiceJour) :
        #            vendInvoiceJour = VendInvoiceJour::findRecId(this.parmCustVendInvoiceJour().RecId, true);
        #            vendTable = VendTable::find(this.parmCustVendInvoiceJour().InvoiceAccount);
        #            this.parmTaxAuthorityValidation(!vendTable.STF_SkipTaxAuthorityValidation);
        #            vatNum              = vendTable.VATNum;
        #            invoiceTotalAmount  = this.parmCustVendInvoiceJour().InvoiceAmount;
        #            break;
        #    }
        #
        #    //The next line of code call the tax authority´s web service.
        #    if (this.parmTaxAuthorityValidation())
        #    {
        #        [statusCode, status] = STF_SATVerifyCFDIServiceAgent::validateQrCFDI(qrCode);
        #
        #        if(statusCode == #OkResponse)
        #        {
        #            this.parmValidatedByTaxAuthority(true);
        #            info("@INZ136");
        #        }
        #        else
        #            ret = checkFailed("@INZ137");
        #    }
        #
        #    if (ledgerParameters.STF_ValidateVATNum)
        #    {
        #        switch (this.parmCustVendInvoiceJour().TableId)
        #        {
        #            case tableNum(CustInvoiceJour) :
        #                if (vatNum != vatNumReceptor)
        #                    ret = checkFailed(strFmt("@INZ133", vatNum, vatNumReceptor));
        #                break;
        #
        #            case tableNum(VendInvoiceJour) :
        #                if (vatNum != vatNumIssuing)
        #                    ret = checkFailed(strFmt("@INZ133", vatNum, vatNumIssuing));
        #                break;
        #        }
        #    }
        #
        #    if (ledgerParameters.STF_ValidateInvoiceTotalAmount)
        #    {
        #        invoiceTotalAmountTmp = str2Num(invoiceTotalAmountStr);
        #
        #        invoiceTotalAmountTmp = abs(invoiceTotalAmount) - invoiceTotalAmountTmp;
        #
        #        if (abs(invoiceTotalAmountTmp) > ledgerParameters.STF_PermittedVariationInInoviceAmount)
        #        {
        #            ret = checkFailed(strFmt("@INZ134", invoiceTotalAmountStr, invoiceTotalAmount));
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #main
        #static void main(Args _args)
        #{
        #    STF_SATVerifyCFDIServiceAgent   verifyCFDIService;
        #    ;
        #
        #
        #    if (!_args || !_args.caller() || !_args.record().TableId)
        #        throw error(strfmt("@SYS22828", funcname()));
        #
        #
        #    if (_args && (_args.dataset() == tablenum(VendInvoiceJour) || _args.dataset() == tablenum(CustInvoiceJour)))
        #    {
        #
        #        verifyCFDIService = new STF_SATVerifyCFDIServiceAgent();
        #
        #        verifyCFDIService.parmCustVendInvoiceJour(_args.record());
        #
        #
        #        if (verifyCFDIService.prompt())
        #            verifyCFDIService.run();
        #
        #    }
        #    else
        #        throw error(strfmt("@SYS23396", funcname()));
        #
        #}
      ENDSOURCE
      SOURCE #readXML
        #public static container readXML(XmlDocument _xmlDoc)
        #{
        #    XmlDocument xmlDoc;
        #    XmlElement  xmlRoot;
        #    XmlElement  xmlIssuing, xmlReceptor, xmlComplement, xmlElectronicFirm;
        #    str         vatNumIssuing, vatNumReceptor, invoiceTotalAmount, invoiceSubTotalAmount;
        #
        #    STF_UUID    uuid;
        #    STF_QrCFDI  qrCode;
        #
        #    #define.XMLCFDILabel("cfdi:Comprobante")
        #    #define.XMLInvoiceTotalAmountLabel("total")
        #    //Add subTotal to electronict accounting extended
        #    #define.XMLInvoiceSubTotalAmountLabel("subTotal")
        #    #define.XMLIssuingLabel("cfdi:Emisor")
        #    #define.XMLReceptorLabel("cfdi:Receptor")
        #    #define.XMLVATNumLabel("rfc")
        #    #define.XMLComplementLabel("cfdi:Complemento")
        #    #define.XMLElectronicFirmLabel("tfd:TimbreFiscalDigital")
        #    #define.XMLUUIDLabel("UUID")
        #    ;
        #    // Create an XmlDocument object to hold the
        #    // contents of the xml-file
        #    xmlDoc = _xmlDoc;
        #
        #    try
        #    {
        #        // Get the root node
        #        xmlRoot = xmlDoc.getNamedElement(#XMLCFDILabel);
        #
        #        if(xmlRoot.hasAttribute(#XMLInvoiceTotalAmountLabel))
        #            invoiceTotalAmount = xmlRoot.getAttribute(#XMLInvoiceTotalAmountLabel);
        #
        #        //Add subTotal to electronict accounting extended
        #        if(xmlRoot.hasAttribute(#XMLInvoiceSubTotalAmountLabel))
        #            invoiceSubTotalAmount = xmlRoot.getAttribute(#XMLInvoiceSubTotalAmountLabel);
        #
        #        if(xmlRoot.hasChildNodes())
        #        {
        #            xmlIssuing = xmlRoot.getNamedElement(#XMLIssuingLabel);
        #            if(xmlIssuing.hasAttribute(#XMLVATNumLabel))
        #                vatNumIssuing = xmlIssuing.getAttribute(#XMLVATNumLabel);
        #
        #            xmlReceptor = xmlRoot.getNamedElement(#XMLReceptorLabel);
        #            if(xmlReceptor.hasAttribute(#XMLVATNumLabel))
        #                vatNumReceptor = xmlReceptor.getAttribute(#XMLVATNumLabel);
        #
        #            xmlComplement       = xmlRoot.getNamedElement(#XMLComplementLabel);
        #            xmlElectronicFirm   = xmlComplement.getNamedElement(#XMLElectronicFirmLabel);
        #
        #            if(xmlElectronicFirm.hasAttribute(#XMLUUIDLabel))
        #                uuid = xmlElectronicFirm.getAttribute(#XMLUUIDLabel);
        #
        #            if(vatNumIssuing && vatNumReceptor && uuid)
        #                qrCode = strFmt("@INZ150", vatNumIssuing, vatNumReceptor, invoiceTotalAmount, uuid);
        #            else
        #            {
        #                throw error(strFmt("@INZ151", vatNumIssuing, vatNumReceptor, invoiceTotalAmount, uuid));
        #            }
        #        }
        #        else
        #        {
        #             throw error("@INZ152");
        #        }
        #    }
        #    catch
        #    {
        #        throw error("@INZ153");
        #    }
        #    return [vatNumIssuing, vatNumReceptor, invoiceTotalAmount, uuid, qrCode, invoiceSubTotalAmount];
        #}
      ENDSOURCE
      SOURCE #validateQrCFDI
        #public static server container validateQrCFDI(str _qrCode)
        #{
        #    STF_SATVerifyCFDI1.SAT_Consulta.ConsultaCFDIServiceClient        serviceclient;
        #    STF_SATVerifyCFDI1.SAT_Consulta.Acuse                            response;
        #
        #    str                        status, statusCode;
        #    InteropPermission           perm;
        #
        #    #define.configurationName("BasicHttpBinding_IConsultaCFDIService")
        #
        #    CLRObject   clienttype;
        #
        #    System.Exception    ex;
        #
        #    System.ServiceModel.Description.ServiceEndpoint end;
        #    ;
        #
        #    try
        #    {
        #       perm = new InteropPermission(InteropKind::ClrInterop);
        #       perm.assert();
        #
        #        //BP Deviation Documented
        #        clienttype  =   CLRInterop::getType('STF_SATVerifyCFDI.SAT_Consulta.ConsultaCFDIServiceClient');
        #        serviceclient   =   AifUtil::createServiceClient(clienttype);
        #
        #        //BP Deviation Documented
        #        response    = new STF_SATVerifyCFDI1.SAT_Consulta.Acuse();
        #        response    = serviceClient.Consulta(_qrCode);
        #
        #        status      = response.get_Estado();
        #        statusCode  = response.get_CodigoEstatus();
        #
        #
        #
        #
        #        CodeAccessPermission::revertAssert();
        #    }
        #    catch (Exception::CLRError)
        #    {
        #        ex  =   CLRInterop::getLastException();
        #        info(CLRInterop::getAnyTypeForObject(ex.ToString()));
        #        throw error(AifUtil::getClrErrorMessage());
        #    }
        #
        #    return [statusCode, status];
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: STF_CalculateSATVouchersReport descargados
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #STF_CalculateSATVouchersReport
    PROPERTIES
      Name                #STF_CalculateSATVouchersReport
      Extends             #RunBase
      Origin              #{43DB3731-9D88-4269-8ED2-249B66176264}
    ENDPROPERTIES
    
    METHODS
      SOURCE #addBankTransfersAndChecksReferences
        #void addBankTransfersAndChecksReferences(BankAccountTrans _bankAccountTrans, RefRecId _refRecId, Voucher _voucher)
        #{
        #    STF_SATSubVouchersLine  subVoucherLine;
        #    BankTransType           bankTransType;
        #
        #    BankGroupId         bankFrom;
        #    BankGroupId         bankTo;
        #    BankAccount         bankAccountNumFrom;
        #    BankAccount         bankAccountNumTo;
        #
        #    Name                beneficiary;
        #    VATNum              vatNum;
        #    ;
        #
        #    bankTransType = BankTransType::find(_bankAccountTrans.BankTransType);
        #
        #    switch (bankTransType.STF_BankTransactionType)
        #    {
        #        case STF_BankTransactionType::Check :
        #            [bankFrom, bankAccountNumFrom, bankTo, bankAccountNumTo, beneficiary, vatNum] = this.resolveCustVendBankTrans(_bankAccountTrans);
        #
        #            subVoucherLine.clear();
        #            subVoucherLine.ReportId             = this.parmReportId();
        #            subVoucherLine.SubNodeType          = STF_SubNodeType::Check;
        #            subVoucherLine.VoucherLineRefRecId  = _refRecId;
        #            subVoucherLine.CheckNum             = _bankAccountTrans.PaymReference;
        #            subVoucherLine.BankFrom             = bankFrom;
        #            subVoucherLine.BankAccountNumFrom   = bankAccountNumFrom;
        #            subVoucherLine.TransDate            = _bankAccountTrans.TransDate;
        #            subVoucherLine.Amount               = _bankAccountTrans.AmountCur;
        #            subVoucherLine.Beneficiary          = beneficiary;
        #            subVoucherLine.VATNum               = vatNum;
        #            subVoucherLine.Voucher              = _voucher;
        #            subVoucherLine.insert();
        #
        #            this.parmSubNodeFound(true);
        #            break;
        #
        #        case STF_BankTransactionType::Transfer :
        #            [bankFrom, bankAccountNumFrom, bankTo, bankAccountNumTo, beneficiary, vatNum] = this.resolveCustVendBankTrans(_bankAccountTrans);
        #
        #            subVoucherLine.clear();
        #            subVoucherLine.ReportId             = this.parmReportId();
        #            subVoucherLine.SubNodeType          = STF_SubNodeType::Transfer;
        #            subVoucherLine.VoucherLineRefRecId  = _refRecId;
        #            subVoucherLine.BankFrom             = bankFrom;
        #            subVoucherLine.BankAccountNumFrom   = bankAccountNumFrom;
        #            subVoucherLine.BankTo               = bankTo;
        #            subVoucherLine.BankAccountNumTo     = bankAccountNumTo;
        #            subVoucherLine.TransDate            = _bankAccountTrans.TransDate;
        #            subVoucherLine.Amount               = _bankAccountTrans.AmountCur;
        #            subVoucherLine.Beneficiary          = beneficiary;
        #            subVoucherLine.VATNum               = vatNum;
        #            subVoucherLine.Voucher              = _voucher;
        #            subVoucherLine.insert();
        #
        #            this.parmSubNodeFound(true);
        #            break;
        #    }
        #}
      ENDSOURCE
      SOURCE #addBreakdownOfInvoices
        #void addBreakdownOfInvoices(RefRecid _invoiceRefRecId, RefRecId _voucherLineRefRecid, Voucher _voucher)
        #{
        #    STF_ElectronicInvoiceReferences electronicInvoiceReferences;
        #    STF_SATSubVouchersLine          subVoucherLine;
        #    ;
        #
        #    while select electronicInvoiceReferences
        #        index hint RefInvoiceRecIdIdx
        #        where electronicInvoiceReferences.RefInvoiceRecId == _invoiceRefRecId
        #    {
        #        subVoucherLine.clear();
        #
        #        subVoucherLine.ReportId                     = this.parmReportId();
        #        subVoucherLine.SubNodeType                  = STF_SubNodeType::Voucher;
        #        subVoucherLine.VoucherLineRefRecId          = _voucherLineRefRecid;
        #        subVoucherLine.UUID                         = electronicInvoiceReferences.UUID;
        #        subVoucherLine.Amount                       = electronicInvoiceReferences.InvoiceAmount;
        #        subVoucherLine.VATNum                       = electronicInvoiceReferences.VATNum;
        #        subVoucherLine.Voucher                      = _voucher;
        #        subVoucherLine.CustVendOrigin               = STF_CustVendOrigin::Vend;
        #        subVoucherLine.CustVendnvoiceJourRefRecId   = _invoiceRefRecId;
        #        subVoucherLine.insert();
        #
        #        if (!subVoucherLine.UUID)
        #            this.parmInvoiceWithoutElectronicId(true);
        #    }
        #}
      ENDSOURCE
      SOURCE #addCheck
        #void addCheck(BankAccountTrans _bankAccountTrans, RefRecId _refRecId, Voucher _voucher)
        #{
        #    STF_SATSubVouchersLine  subVoucherLine;
        #    BankChequeTable         bankChequeTable;
        #    BankAccountTable        bankAccountTable;
        #
        #    CustTable               custTable;
        #    VendTable               vendTable;
        #
        #    Name                    beneficiary;
        #    VATNum                  vatNum;
        #    ;
        #
        #    subVoucherLine.clear();
        #
        #    if (_bankAccountTrans.ChequeNum) //Add Checks
        #    {
        #        bankChequeTable  = BankChequeTable::find(_bankAccountTrans.AccountId, _bankAccountTrans.ChequeNum);
        #        bankAccountTable = BankAccountTable::find(_bankAccountTrans.AccountId);
        #
        #        if (bankChequeTable.RecId && (bankChequeTable.RecipientType == BankChequeRecipientType::Cust || bankChequeTable.RecipientType == BankChequeRecipientType::Vend))
        #        {
        #            subVoucherLine.ReportId             = this.parmReportId();
        #            subVoucherLine.SubNodeType          = STF_SubNodeType::Check;
        #            subVoucherLine.VoucherLineRefRecId  = _refRecId;
        #            subVoucherLine.CheckNum             = _bankAccountTrans.ChequeNum;
        #            subVoucherLine.BankFrom             = bankAccountTable.RegistrationNum;
        #            subVoucherLine.BankAccountNumFrom   = bankAccountTable.AccountNum;
        #            subVoucherLine.TransDate            = _bankAccountTrans.TransDate;
        #            subVoucherLine.Amount               = _bankAccountTrans.AmountCur;
        #
        #            switch (bankChequeTable.RecipientType)
        #            {
        #                case BankChequeRecipientType::Cust :
        #                    custTable   = CustTable::find(bankChequeTable.RecipientAccountNum);
        #                    beneficiary = custTable.Name();
        #                    vatNum      = custTable.VATNum;
        #
        #                case BankChequeRecipientType::Vend :
        #                    vendTable   = VendTable::find(bankChequeTable.RecipientAccountNum);
        #                    beneficiary = vendTable.Name();
        #                    vatNum      = vendTable.VATNum;
        #                    break;
        #            }
        #
        #            subVoucherLine.Beneficiary          = beneficiary;
        #            subVoucherLine.VATNum               = vatNum;
        #            subVoucherLine.Voucher              = _voucher;
        #            subVoucherLine.insert();
        #
        #            this.parmSubNodeFound(true);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #buildQuery
        #public Query buildQuery()
        #{
        #    QueryBuildDataSource    qbds;
        #    Query                   qry = new Query();
        #
        #    qbds = qry.addDataSource(tablenum(STF_SATChartOfAccountsLine));
        #
        #    qbds.addRange(fieldNum(STF_SATChartOfAccountsLine, ChartId)).value(this.parmBufferRecord().ChartId);
        #    if (this.parmBufferRecord().LedgerAccountsRange)
        #        qbds.addRange(fieldnum(STF_SATChartOfAccountsLine, AccountNum)).value(this.parmBufferRecord().LedgerAccountsRange);
        #
        #    return qry;
        #}
      ENDSOURCE
      SOURCE #calculateVouchersReport
        #void calculateVouchersReport()
        #{
        #    QueryRun                    qry = new QueryRun(this.buildQuery());
        #    STF_SATChartOfAccountsLine  chartOfAccountsLine;
        #   // LedgerTrans                 ledgerTrans;
        #    TransactionLog              transLog;
        #    SysOperationProgress        processProgress;
        #    Integer                     counter = 0;
        #
        #    STF_VoucherTypeTable        voucherTypeTable;
        #    STF_SATVoucherType          defaultVoucherType = STF_SATVoucherType::Journal;
        #
        #    #AviFiles
        #    #define.TotalProgress(1500)
        #    #define.NoConcept("@FSA164")
        #
        #    generalJournalAccountEntry          generalJournalAccountEntry;
        #    generalJournalEntry                 generalJournalEntry;
        #    subledgerVoucherGeneralJournalEntry subledgerVoucherGeneralJournalEntry;
        #
        #    DimensionAttributeValueCombination  comb;
        #    FiscalCalendarPeriod                FiscalCalendarPeriod;
        #    ;
        #
        #
        #    processProgress = new sysOperationProgress();
        #    processProgress.setCaption("@FSA147");
        #    processProgress.setTotal(#TotalProgress);
        #    processProgress.setAnimation(#AviTransfer);
        #
        #    includeClosing  = NoYes::No;
        #    opening         = NoYes::Yes;
        #
        #    reportLines.skipDatabaseLog(true);
        #    reportLines.skipEvents(true);
        #
        #    while (qry.next())
        #    {
        #        chartOfAccountsLine = qry.get(tablenum(STF_SATChartOfAccountsLine));
        #
        #        while  select  RecId from comb
        #           index hint mainaccountidx
        #            where comb.MainAccount ==  MainAccount::findByMainAccountId(chartOfAccountsLine.AccountNum).RecId
        #          {
        #
        #
        #            generalJournalAccountEntry.selectLocked(false);
        #            generalJournalAccountentry.concurrencyModel(ConcurrencyModel::Optimistic);
        #
        #                 while   select   generalJournalAccountEntry
        #                    join generalJournalEntry
        #                    where generalJournalEntry.RecId                                 == generalJournalAccountEntry.GeneralJournalEntry
        #                    join  subledgerVoucherGeneralJournalEntry
        #                    where subledgerVoucherGeneralJournalEntry.GeneralJournalEntry   == generalJournalEntry.RecId
        #                    &&  generalJournalAccountEntry.LedgerDimension                  == comb.RecId//CustTable::find(chartOfAccountsLine.AccountNum).Party
        #                    &&  generalJournalEntry.AccountingDate                          >=  this.parmBufferRecord().FromDate
        #                    &&  generalJournalEntry.AccountingDate                          <=  this.parmBufferRecord().ToDate
        #                    &&  generalJournalEntry.PostingLayer                            ==  CurrentOperationsTax::Current
        #                    join FiscalCalendarPeriod
        #                    where    generalJournalEntry.FiscalCalendarPeriod               ==  FiscalCalendarPeriod.RecId
        #                   // &&  ((generalJournalEntry.FiscalCalendarPeriod                  ==  PeriodCode::Opening &&  !opening)
        #                   // ||  (generalJournalEntry.FiscalCalendarPeriod                   ==  PeriodCode::Regular)
        #                   // ||  (generalJournalEntry.FiscalCalendarPeriod                   ==  PeriodCode::Closing &&  includeClosing))
        #
        #                {
        #                    this.parmSubNodeFound(false);
        #                    transLog = TransactionLog::find(generalJournalAccountEntry.createdTransactionId);
        #
        #                    voucherTypeTable = STF_VoucherTypeTable::find(transLog.Type);
        #
        #                    reportLines.clear();
        #                    reportLines.Concept  = transLog.Txt ? transLog.Txt : #NoConcept;
        #                    reportLines.Type     = voucherTypeTable.VoucherType ? voucherTypeTable.VoucherType : defaultVoucherType;
        #                    reportLines.ReportId = this.parmReportId();
        #                    reportLines.intFromLedgerTrans(generalJournalAccountEntry,generalJournalEntry,subledgerVoucherGeneralJournalEntry);
        #                    reportLines.AccountName = chartOfAccountsLine.AccountName;
        #                    reportLines.FromDate    = this.parmBufferRecord().FromDate;
        #                    reportLines.ToDate      = this.parmBufferRecord().ToDate;
        #
        #                    reportLines.insert();
        #
        #                    //Looking for vouchers receipts.
        #                    this.retrieveReceipts(reportLines.RecId, generalJournalAccountEntry,generalJournalEntry,subledgerVoucherGeneralJournalEntry);
        #                    this.retrieveBankTransactions(reportLines.RecId, generalJournalAccountEntry,generalJournalEntry,subledgerVoucherGeneralJournalEntry);
        #
        #                    if (this.parmSubNodeFound())
        #                    {
        #                        reportLines.selectForUpdate(true);
        #                        ttsbegin;
        #                        reportLines.HasSubNodes = NoYes::Yes;
        #                        reportLines.update();
        #                        ttscommit;
        #                    }
        #
        #               //     processProgress.setText(strFmt("@INZ89", ledgerTrans.Voucher, ledgerTrans.AccountNum));
        #                    counter++;
        #                    processProgress.setCount(counter);
        #                }//while generalJournalAccountEntry
        #        }// while comb
        #    }//while Query
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #//Project: STF_ElectronicAccounting   Developer: Arly Rubio C.  Date: July/22/2014
        #class STF_CalculateSATVouchersReport extends RunBase
        #{
        #    STF_SATVouchersReportId         reportId;
        #
        #    STF_SATVouchersTable            bufferVouchersTable;
        #    STF_SATVouchersLine             reportLines;
        #
        #    NoYes                           opening;
        #    NoYes                           includeClosing;
        #
        #    boolean                         subNodeFound;
        #    boolean                         invoiceWithoutElectronicId;
        #}
      ENDSOURCE
      SOURCE #deletePreviousVouchersReport
        #void deletePreviousVouchersReport()
        #{
        #    STF_SATVouchersLine reportLinesLocal;
        #    ;
        #
        #    reportLinesLocal.skipDatabaseLog();
        #    reportLinesLocal.skipEvents();
        #
        #    delete_from reportLinesLocal
        #        where reportLinesLocal.ReportId == this.parmReportId();
        #}
      ENDSOURCE
      SOURCE #dialog
        #protected Object dialog()
        #{
        #    Dialog dialog;
        #    ;
        #
        #    dialog = super();
        #    dialog.caption("@FSA144");
        #
        #    dialog.addText("@FSA145");
        #
        #    return dialog;
        #}
      ENDSOURCE
      SOURCE #getFromDialog
        #public boolean getFromDialog()
        #{
        #    boolean             ret = true;
        #    ;
        #
        #    return ret;
        #
        #}
      ENDSOURCE
      SOURCE #openForm
        #void openForm()
        #{
        #    Args args = new Args();
        #    ;
        #
        #    args.record(this.parmBufferRecord());
        #
        #    new MenuFunction(MenuItemDisplayStr(STF_SATVouchersLine), MenuItemType::Display).run(args);
        #
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    return connull();
        #}
      ENDSOURCE
      SOURCE #parmBufferRecord
        #STF_SATVouchersTable parmBufferRecord(STF_SATVouchersTable _record = bufferVouchersTable)
        #{
        #    ;
        #
        #    bufferVouchersTable = _record;
        #
        #    return bufferVouchersTable;
        #}
      ENDSOURCE
      SOURCE #parmInvoiceWithoutElectronicId
        #boolean parmInvoiceWithoutElectronicId(boolean _set = invoiceWithoutElectronicId)
        #{
        #    ;
        #
        #    invoiceWithoutElectronicId = _set;
        #
        #    return invoiceWithoutElectronicId;
        #}
      ENDSOURCE
      SOURCE #parmReportId
        #STF_SATVouchersReportId parmReportId(STF_SATVouchersReportId _reportId = reportId)
        #{
        #    ;
        #
        #    reportId = _reportId;
        #
        #    return reportId;
        #}
      ENDSOURCE
      SOURCE #parmSubNodeFound
        #boolean parmSubNodeFound(boolean _subNodeFound = subNodeFound)
        #{
        #    ;
        #
        #    subNodeFound = _subNodeFound;
        #
        #    return subNodeFound;
        #}
      ENDSOURCE
      SOURCE #resolveCustVendBankTrans
        #container resolveCustVendBankTrans(BankAccountTrans _bankAccountTrans)
        #{
        #    VendTable           vendTable;
        #
        #    CustAccount         custAccount;
        #    VendAccount         vendAccount;
        #
        #    CustBankAccount     custBankAccount;
        #    VendBankAccount     vendBankAccount;
        #
        #    BankAccountTable    bankAccountTable;
        #
        #    BankGroupId         bankFrom;
        #    BankGroupId         bankTo;
        #    BankAccount         bankAccountNumFrom;
        #    BankAccount         bankAccountNumTo;
        #
        #    Name                beneficiary;
        #    VATNum              vatNum;
        #
        #    CompanyInfo         companyInfo;
        #    ;
        #
        #
        #    bankAccountTable    = BankAccountTable::find(_bankAccountTrans.AccountId);
        #    custAccount         = CustTrans::findVoucherDate(_bankAccountTrans.Voucher, _bankAccountTrans.TransDate).AccountNum;
        #
        #    if (custAccount)
        #    {
        #        companyInfo     = CompanyInfo::find();
        #        custBankAccount = CustBankAccount::find(custAccount, _bankAccountTrans.STF_CustVendBankAccountId);
        #
        #        bankFrom            = custBankAccount.RegistrationNum;
        #        bankAccountNumFrom  = custBankAccount.AccountNum;
        #        bankTo              = bankAccountTable.RegistrationNum;
        #        bankAccountNumTo    = bankAccountTable.AccountNum;
        #
        #        beneficiary         = companyInfo.Name;
        #        vatNum              = companyInfo.VATNum;
        #    }
        #    else
        #    {
        #        vendAccount = VendTrans::findVoucherDate(_bankAccountTrans.Voucher, _bankAccountTrans.TransDate).AccountNum;
        #
        #        if (vendAccount)
        #        {
        #            vendTable       = VendTable::find(vendAccount);
        #            vendBankAccount = VendBankAccount::find(vendAccount, _bankAccountTrans.STF_CustVendBankAccountId);
        #
        #            bankFrom            = bankAccountTable.RegistrationNum;
        #            bankAccountNumFrom  = bankAccountTable.AccountNum;
        #            bankTo              = vendBankAccount.RegistrationNum;
        #            bankAccountNumTo    = vendBankAccount.AccountNum;
        #
        #            beneficiary         = vendTable.name();
        #            vatNum              = vendTable.VATNum;
        #        }
        #    }
        #
        #    return [bankFrom, bankAccountNumFrom, bankTo, bankAccountNumTo, beneficiary, vatNum];
        #}
      ENDSOURCE
      SOURCE #retrieveBankTransactions
        #void retrieveBankTransactions(RefRecId _refRecId, generalJournalAccountEntry _generalJournalAccountEntry
        #                              ,generalJournalEntry _generalJournalEntry
        #                              ,subledgerVoucherGeneralJournalEntry _subledgerVoucherGeneralJournalEntry)
        #{
        #    BankAccountTrans        bankAccountTrans;
        #    ;
        #
        #    switch (_generalJournalAccountEntry.PostingType)
        #    {
        #        case ledgerPostingType::Bank :
        #            bankAccountTrans = BankAccountTrans::findByVoucher(_subledgerVoucherGeneralJournalEntry.Voucher,_generalJournalEntry.AccountingDate);
        #
        #            if (bankAccountTrans.Cancel == NoYes::Yes)
        #                return;
        #
        #            if (bankAccountTrans.ChequeNum) //Add Checks
        #                this.addCheck(bankAccountTrans, _refRecId, _subledgerVoucherGeneralJournalEntry.Voucher);
        #            else
        #                this.addBankTransfersAndChecksReferences(bankAccountTrans, _refRecId, _subledgerVoucherGeneralJournalEntry.Voucher); //Add bank transfers and checks references.
        #
        #            break;
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #retrieveReceipts
        #void retrieveReceipts(RefRecId _refRecId, generalJournalAccountEntry _generalJournalAccountEntry
        #                     ,generalJournalEntry _generalJournalEntry
        #                     ,subledgerVoucherGeneralJournalEntry _subledgerVoucherGeneralJournalEntry)
        #{
        #    CustInvoiceJour         custInvoiceJour;
        #    VendInvoiceJour         vendInvoiceJour;
        #    STF_SATSubVouchersLine  subVoucherLine;
        #    ;
        #
        #    subVoucherLine.clear();
        #
        #    switch (_generalJournalAccountEntry.PostingType)
        #    {
        #        case ledgerPostingType::CustBalance :
        #            custInvoiceJour = CustInvoiceJour::STF_FindFromVoucher(_subledgerVoucherGeneralJournalEntry.Voucher
        #                                                                    ,_generalJournalEntry.AccountingDate);
        #            if (custInvoiceJour.RecId)
        #            {
        #                this.parmSubNodeFound(true);
        #
        #                subVoucherLine.ReportId                     = this.parmReportId();
        #                subVoucherLine.SubNodeType                  = STF_SubNodeType::Voucher;
        #                subVoucherLine.VoucherLineRefRecId          = _refRecId;
        #                //TODO: If the client has activated the electronic invoice comment the next line.
        #                subVoucherLine.UUID                         = custInvoiceJour.STF_UUID;
        #                //TODO: If the client has activated the electronic invoice uncomment the next line.
        #                //subVoucherLine.UUID                 = EInvoiceJour_MX::findByRecId(custInvoiceJour.RecId).CFDIUUID;
        #                subVoucherLine.Amount                       = custInvoiceJour.InvoiceAmount;
        #                subVoucherLine.VATNum                       = custInvoiceJour.custTable_InvoiceAccount().VATNum;
        #                subVoucherLine.Voucher                      = _subledgerVoucherGeneralJournalEntry.Voucher;
        #                subVoucherLine.CustVendOrigin               = STF_CustVendOrigin::Cust;
        #                subVoucherLine.CustVendnvoiceJourRefRecId   = custInvoiceJour.RecId;
        #                subVoucherLine.insert();
        #
        #                if (!subVoucherLine.UUID)
        #                    this.parmInvoiceWithoutElectronicId(true);
        #            }
        #
        #            break;
        #
        #        case LedgerPostingType::VendBalance :
        #            vendInvoiceJour = VendInvoiceJour::STF_FindFromVoucher(_subledgerVoucherGeneralJournalEntry.Voucher
        #                                                                   ,_generalJournalEntry.AccountingDate);
        #            if (vendInvoiceJour.RecId)
        #            {
        #                this.parmSubNodeFound(true);
        #
        #                subVoucherLine.ReportId                     = this.parmReportId();
        #                subVoucherLine.SubNodeType                  = STF_SubNodeType::Voucher;
        #                subVoucherLine.VoucherLineRefRecId          = _refRecId;
        #                subVoucherLine.UUID                         = vendInvoiceJour.STF_UUID;
        #                subVoucherLine.Amount                       = vendInvoiceJour.InvoiceAmount;
        #                subVoucherLine.VATNum                       = vendInvoiceJour.vendTable_InvoiceAccount().VATNum;
        #                subVoucherLine.Voucher                      = _subledgerVoucherGeneralJournalEntry.Voucher;
        #                subVoucherLine.CustVendOrigin               = STF_CustVendOrigin::Vend;
        #                subVoucherLine.CustVendnvoiceJourRefRecId   = vendInvoiceJour.RecId;
        #                subVoucherLine.insert();
        #
        #                if (!subVoucherLine.UUID)
        #                    this.parmInvoiceWithoutElectronicId(true);
        #            }
        #            break;
        #
        #    }
        #}
      ENDSOURCE
      SOURCE #run
        #void run()
        #{
        #    Integer     deletePreviousReportLines;
        #    ;
        #
        #    this.parmBufferRecord(STF_SATVouchersTable::find(this.parmReportId()));
        #
        #    if (!this.parmBufferRecord().RecId)
        #        throw error("@FSA35");
        #
        #
        #    if (STF_SATVouchersLine::exist(this.parmReportId()))
        #    {
        #        deletePreviousReportLines = Box::yesNoCancel(strFmt("@FSA146", this.parmReportId()), 1);
        #
        #        switch(deletePreviousReportLines)
        #        {
        #            case DialogButton::Yes :
        #                break;
        #
        #            default:
        #                checkFailed("@FSA37");
        #                return;
        #        }
        #    }
        #
        #    this.deletePreviousVouchersReport();
        #    this.calculateVouchersReport();
        #
        #    if (this.parmInvoiceWithoutElectronicId())
        #        warning("@FSA194");
        #
        #    this.openForm();
        #
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container packedClass)
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #main
        #static void main(Args _args)
        #{
        #    STF_CalculateSATVouchersReport  calculateSATVouchersReport;
        #    STF_SATVouchersTable            voucherTableLocal;
        #    ;
        #
        #
        #    if (!_args || !_args.caller() || !_args.record().TableId)
        #        throw error(strfmt("@SYS22828", funcname()));
        #
        #
        #    if (_args && _args.dataset() == tablenum(STF_SATVouchersTable))
        #    {
        #
        #        calculateSATVouchersReport = new STF_CalculateSATVouchersReport();
        #
        #        voucherTableLocal   = _args.record();
        #
        #        calculateSATVouchersReport.parmReportId(voucherTableLocal.ReportId);
        #
        #        if (calculateSATVouchersReport.prompt())
        #            calculateSATVouchersReport.run();
        #
        #    }
        #    else
        #        throw error(strfmt("@SYS23396", funcname()));
        #
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: CLS

; Microsoft Dynamics AX Class: STF_SATVerifyCFDIServiceAgent_References descargados
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #STF_SATVerifyCFDIServiceAgent_References
    PROPERTIES
      Name                #STF_SATVerifyCFDIServiceAgent_References
      Extends             #STF_SATVerifyCFDIServiceAgent
      Origin              #{8E493619-1E8B-4A07-A2AB-A6F4EA423C26}
    ENDPROPERTIES
    
    METHODS
      SOURCE #CalculateVoucherInvoice
        #public void CalculateVoucherInvoice(RecId _vendInvoiceJourRecId)
        #{
        #    STF_ElectronicInvoiceReferences stf_ElectronicInvoiceReferences;
        #    VendInvoiceJour                 vendInvoiceJourRef;
        #    PurchLine                       purchLine;
        #    ;
        #
        #    if(_vendInvoiceJourRecId)
        #    {
        #        vendInvoiceJourRef = VendInvoiceJour::findRecId(_vendInvoiceJourRecId);
        #        If(vendInvoiceJourRef.RecId && vendInvoiceJourRef.PurchId)
        #        {
        #            While select purchLine where purchLine.PurchId == vendInvoiceJourRef.PurchId
        #            {
        #                if(EcoResProduct::findByDisplayProductNumber(purchLine.itemId).ProductType == EcoResProductType::Service)
        #                {
        #                    stf_ElectronicInvoiceReferences = STF_ElectronicInvoiceReferences::findItemPurchLine(purchLine.PurchId,purchLine.ItemId,purchLine.LineNumber,true);
        #                    if(!stf_ElectronicInvoiceReferences.RecId)
        #                    {
        #                        ttsBegin;
        #                        stf_ElectronicInvoiceReferences.ItemId = purchLine.ItemId;
        #                        stf_ElectronicInvoiceReferences.PurchId = purchLine.PurchId;
        #                        stf_ElectronicInvoiceReferences.LineNumber = purchLine.LineNumber;
        #                        stf_ElectronicInvoiceReferences.InvoiceAmount = purchLine.STF_AmmountInvoice;
        #                        stf_ElectronicInvoiceReferences.UUID = purchLine.STF_UUID;
        #                        stf_ElectronicInvoiceReferences.ValidCFDI = purchLine.STF_ValidCFDI;
        #                        stf_ElectronicInvoiceReferences.VATNum = purchLine.STF_VATNum;
        #                        stf_ElectronicInvoiceReferences.RefInvoiceRecId = vendInvoiceJourRef.RecId;
        #                        stf_ElectronicInvoiceReferences.insert();
        #                        ttsCommit;
        #                    }
        #                }
        #            }
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #classDeclaration
        #class STF_SATVerifyCFDIServiceAgent_References extends STF_SATVerifyCFDIServiceAgent
        #{
        #    STF_ElectronicInvoiceReferences electronicInvoiceReferences;
        #    PurchLine                       purchLineReference;
        #    Args                            argsReference;
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    return connull();
        #}
      ENDSOURCE
      SOURCE #parmArgs
        #Args parmArgs(Args _args = argsReference)
        #{
        #    ;
        #
        #    argsReference = _args;
        #
        #    return argsReference;
        #}
      ENDSOURCE
      SOURCE #parmElectronicInvoiceRef
        #STF_ElectronicInvoiceReferences parmElectronicInvoiceRef(STF_ElectronicInvoiceReferences _ref = electronicInvoiceReferences)
        #{
        #    ;
        #
        #    electronicInvoiceReferences = _ref;
        #
        #    return electronicInvoiceReferences;
        #}
      ENDSOURCE
      SOURCE #parmPurchLineRef
        #PurchLine parmPurchLineRef(PurchLine _purchLine = purchLineReference)
        #{
        #    ;
        #
        #    purchLineReference = _purchLine;
        #
        #    return purchLineReference;
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container packedClass)
        #{
        #    return true;
        #}
      ENDSOURCE
      SOURCE #updateInvoiceJournal
        #void updateInvoiceJournal()
        #{
        #
        #    Args                            args;
        #    PurchLine                       purchLine;
        #    STF_ElectronicInvoiceReferences electronicInvoiceReferencesLocal;
        #
        #    ;
        #
        #
        #    args = this.parmArgs();
        #
        #    switch(args.record().TableId)
        #    {
        #        case tableNum(STF_ElectronicInvoiceReferences):
        #            electronicInvoiceReferencesLocal = STF_ElectronicInvoiceReferences::findRecId(this.parmElectronicInvoiceRef().RecId, true);
        #
        #            ttsbegin;
        #            electronicInvoiceReferencesLocal.UUID           = uuid;
        #            electronicInvoiceReferencesLocal.ValidCFDI      = this.parmValidatedByTaxAuthority() ? NoYes::Yes : NoYes::No;
        #            electronicInvoiceReferencesLocal.VATNum         = vatNumIssuing;
        #            electronicInvoiceReferencesLocal.InvoiceAmount  = str2Num(invoiceTotalAmountStr);
        #            electronicInvoiceReferencesLocal.doUpdate();
        #            ttscommit;
        #
        #            break;
        #
        #            if (this.parmElectronicInvoiceRef().isFormDataSource())
        #            {
        #                this.parmElectronicInvoiceRef().dataSource().reread();
        #                this.parmElectronicInvoiceRef().dataSource().refresh();
        #            }
        #
        #        case tableNum(PurchLine):
        #            purchLine = PurchLine::find(this.parmPurchLineRef().PurchId,this.parmPurchLineRef().LineNumber,true);
        #
        #            ttsBegin;
        #            purchLine.STF_UUID = uuid;
        #            purchLine.STF_ValidCFDI = this.parmValidatedByTaxAuthority() ? NoYes::Yes : NoYes::No;
        #            purchLine.STF_VATNum = vatNumIssuing;
        #            purchLine.STF_AmmountInvoice = str2Num(invoiceSubTotalAmountStr);
        #            purchLine.update();
        #            ttsCommit;
        #
        #            break;
        #
        #
        #    }
        #
        #
        #
        #}
      ENDSOURCE
      SOURCE #validateCFDI
        #boolean validateCFDI()
        #{
        #    boolean             ret;
        #
        #    VATNum              vatNum;
        #    AmountCur           invoiceTotalAmount;
        #    //AmountCur           invoiceTotalAmountTmp;
        #
        #    LedgerParameters    ledgerParameters;
        #
        #    str                 status, statusCode;
        #    #define.OkResponse("S - Comprobante obtenido satisfactoriamente.")
        #    ;
        #
        #    ret = true;
        #
        #    ledgerParameters = LedgerParameters::find();
        #
        #
        #    this.parmTaxAuthorityValidation(true);
        #
        #    if(this.parmArgs().record().TableId == tablenum(STF_ElectronicInvoiceReferences))
        #    {
        #        vatNum              = this.parmElectronicInvoiceRef().VATNum;
        #        invoiceTotalAmount  = this.parmElectronicInvoiceRef().InvoiceAmount;
        #    }
        #
        #    //The next line of code call the tax authority´s web service.
        #    if (this.parmTaxAuthorityValidation())
        #    {
        #        [statusCode, status] = STF_SATVerifyCFDIServiceAgent::validateQrCFDI(qrCode);
        #
        #        if(statusCode == #OkResponse)
        #        {
        #            this.parmValidatedByTaxAuthority(true);
        #            info("@FSA183");
        #        }
        #        else
        #            ret = checkFailed("@FSA184");
        #    }
        #
        #/*    if (ledgerParameters.STF_ValidateVATNum)
        #    {
        #        if (vatNum != vatNumIssuing)
        #            ret = checkFailed(strFmt("@FSA177", vatNum, vatNumIssuing));
        #    }
        #
        #    if (ledgerParameters.STF_ValidateInvoiceTotalAmount)
        #    {
        #        invoiceTotalAmountTmp = str2Num(invoiceTotalAmountStr);
        #
        #        invoiceTotalAmountTmp = abs(invoiceTotalAmount) - invoiceTotalAmountTmp;
        #
        #        if (abs(invoiceTotalAmountTmp) > ledgerParameters.STF_PermittedVariationInInvoiceAmount)
        #        {
        #            ret = checkFailed(strFmt("@FSA181", invoiceTotalAmountStr, invoiceTotalAmount));
        #        }
        #    }
        #*/
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #lookupCustVendBankAccount
        #public static void lookupCustVendBankAccount(FormControl _callingControl, LedgerJournalTrans _ledgerJournalTrans, boolean _isCustTrans)
        #{
        #    Query                   query;
        #    QueryBuildDataSource    qbds;
        #    SysTableLookup          lookup;
        #    QueryBuildRange         accountRange;
        #    ;
        #
        #    query = new Query();
        #
        #    if (!_isCustTrans)
        #    {
        #        qbds = query.addDataSource(tablenum(VendBankAccount));
        #        accountRange = qbds.addRange(fieldNum(VendBankAccount, VendAccount));
        #        accountRange.value(queryValue(_ledgerJournalTrans.findMainAccount()));
        #
        #        lookup = SysTableLookup::newParameters(tablenum(VendBankAccount), _callingControl, true);
        #        lookup.parmQuery(query);
        #        lookup.addLookupField(fieldnum(VendBankAccount, AccountID), true);
        #        lookup.addLookupField(fieldnum(VendBankAccount, Name));
        #    }
        #    else
        #    {
        #        qbds = query.addDataSource(tablenum(CustBankAccount));
        #        accountRange = qbds.addRange(fieldNum(CustBankAccount, CustAccount));
        #        accountRange.value(queryValue(_ledgerJournalTrans.findMainAccount()));
        #
        #        lookup = SysTableLookup::newParameters(tablenum(CustBankAccount), _callingControl, true);
        #        lookup.parmQuery(query);
        #        lookup.addLookupField(fieldnum(CustBankAccount, AccountID), true);
        #        lookup.addLookupField(fieldnum(CustBankAccount, Name));
        #    }
        #
        #    lookup.performFormLookup();
        #}
      ENDSOURCE
      SOURCE #main
        #static void main(Args _args)
        #{
        #    STF_SATVerifyCFDIServiceAgent_References   verifyCFDIService;
        #    ;
        #
        #    if (!_args || !_args.caller() || !_args.record().TableId)
        #        throw error(strfmt("@SYS22828", funcname()));
        #
        #    if (_args && (_args.dataset() == tablenum(STF_ElectronicInvoiceReferences) || _args.dataset() == tablenum(PurchLine)))
        #    {
        #        verifyCFDIService = new STF_SATVerifyCFDIServiceAgent_References();
        #        verifyCFDIService.parmArgs(_args);
        #
        #        if(_args.record().TableId == tablenum(STF_ElectronicInvoiceReferences))
        #            verifyCFDIService.parmElectronicInvoiceRef(_args.record());
        #
        #        if(_args.record().TableId == tablenum(PurchLine))
        #            verifyCFDIService.parmPurchLineRef(_args.record());
        #
        #        if (verifyCFDIService.prompt())
        #            verifyCFDIService.run();
        #    }
        #    else
        #        throw error(strfmt("@SYS23396", funcname()));
        #
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #PurchTable
  PROPERTIES
    Name                #PurchTable
    FormTemplate        #DetailsPage
    InteractionClass    #PurchTableInteraction
    Origin              #{0B0A0000-0000-1000-B49B-F07268546162}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #public class FormRun extends ObjectRun
      #{
      #    boolean                         isCalledFromLP;
      #    PurchTableForm                  purchTableForm;
      #    PurchTableType                  purchTableType;
      #
      #    boolean                         isRefreshing;
      #    PurchTable                      purchTableCaller;
      #
      #    QueryBuildRange                 queryBuildRangeProj;
      #    QueryBuildRange                 queryBuildRangePurchLine;
      #    boolean                         isProjectForm;
      #    boolean                         isDocuActionTemplate;
      #
      #    // Used for validateWrite and write to update tax groups on misc. charges and header2lines updates
      #    DialogButton                    copyTaxGroupToMarkupTrans;
      #    PurchTable2LineUpdatePrompt     purchTable2LineUpdatePrompt;
      #
      #    InventDimCtrl_Frm_Mov           inventDimFormSetup;
      #
      #    //PBA begin
      #    boolean                         autoConfig;
      #    // PBA end
      #
      #    Object                          tmpPurchTableTaxTransForm;
      #    Object                          tmpPurchTableTaxWithholdTransForm;
      #    TaxWithholdParameters_IN        taxWithholdParameters;
      #    TaxParameters                   taxParameters;
      #    EximParameters_IN               eximParameters;
      #    TaxExciseTypeController_IN      taxExciseTypeController;
      #    TaxItemGroupHeading             taxItemGroupHeadingRev;
      #    boolean                         isPurchLine_INEnabled;
      #
      #    boolean                         cashDiscOnInvoice;
      #
      #    Map                             interCompanySalesCache;
      #    RecId                           interCompanyIsPriceDiscSearchNeeded;
      #
      #    #Tax1099
      #
      #    PurchId                         purchIdTouched;
      #
      #    DimensionDefaultingController   dimensionDefaultingControllerHeader;
      #    DimensionDefaultingController   dimensionDefaultingControllerLine;
      #
      #    LedgerDimensionDefaultAccountController     ledgerDefaultAccountControllerLine;
      #
      #    boolean                         keepName; // When set to false Name is defaulted from category description.
      #
      #    NumberSeqFormHandler            numberSeqFormHandler;
      #    //Asset qualifier related variables
      #    container                       assetRules;
      #    List                            assetQualifierList;
      #    Description                     selectedAssetQualifier;
      #
      #    LogisticsLocationRecId          postalAddressLocation;
      #
      #    #AssetRules
      #    #resAppl
      #    #define.grpAssetQualifier('grpAssetQualifier')
      #    #define.editAssetQualifier('editAssetQualifier')
      #
      #    boolean                         hasEMSAccess;
      #
      #    BankLCImportFeatureChecker      bankLCImportFeatureChecker;
      #    BankLGFeatureChecker            bankLGFeatureChecker;
      #    boolean                         enableLCFeature;
      #    boolean                         enableLGFeature;
      #
      #    boolean                         wasCalledFromVendorSearch;
      #    VendAccount                     vendAccountSearch;
      #    // Default create values
      #    ItemId                          defaultItemId;
      #    InventDim                       defaultInventDim;
      #    TransDate                       defaultDate;
      #    boolean                         zakatParameterEnabled;
      #    InventItemBarcode               itemBarcode;
      #
      #    #resAppl
      #
      #
      #    boolean                         workflowEnabled;
      #    boolean                         isRU;
      #    boolean                         isPurchTableEnabled_RU;
      #    // RU assets
      #    Map                             itemTypeCache;
      #    Map                             itemInventDimSetupCache;
      #    #ISOCountryRegionCodes
      #
      #    DueDate                         priorDueDate;
      #    boolean                         isPurchLine_WEnabled;
      #    boolean                         isPurchTableEnabled_W;
      #    SalesPurchOperationTypeController_BR salesPurchOperationTypeController_BR;
      #    boolean                         isPurchTableEnabled_BR;
      #
      #    boolean                         advanceHoldersEnabled;
      #
      #    PurchLine                       defaultPurchLine;
      #
      #    PurchParameters purchParameters;
      #
      #    ImageListAppl_PurchTableForm  imageListAppl_PurchTableForm;
      #
      #    int                            purchTableRecVersion;
      #
      #    boolean                         skipLinkActive;
      #    boolean                         linkActiveHeaderExecuted;
      #
      #    boolean                         executePersonalization;
      #    QueryBuildRange                 queryRange;
      #    QueryBuildRange                 queryRangeQuantity;
      #    QueryBuildRange                 queryRangeOptionsRef;
      #    QueryBuildRange                 queryRangeGroup;
      #    InventQty                       salesLineMaxQty;
      #    boolean                         itemChanged;
      #    boolean                         inTextLine;
      #    boolean                         onInit;
      #    boolean                         fromQty;
      #    boolean                         fromLostControl;
      #    SalesLine                       salesLine;
      #    FilePath                        filePath;
      #
      #    boolean                         isWHSPurchLineEnabled;
      #
      #    // <GMY>
      #    boolean                             isSelfBilldInvoiceEnabled_MY;
      #    boolean                             isIsoMY;
      #    boolean                             isWrnPrintedMY;
      #    VendInvoiceJourLookupController_MY  vendInvoiceJourLookupController;
      #    // </GMY>
      #
      #    //BEGIN STF_MEGA_Presupuestos Dev: ECA
      #    Amount editedLineAmount;
      #    //END STF_MEGA_Presupuestos Dev: ECA
      #    //RZP
      #    QueryBuildRange CurrencyQBR;//RZP
      #    QueryBuildRange QBRssetTable;
      #}
    ENDSOURCE
    SOURCE #allowEditAsset_RU
      #boolean allowEditAsset_RU()
      #{
      #    boolean ret;
      #
      #    if (itemTypeCache && purchLine.ItemId)
      #    {
      #        if (itemTypeCache.exists(purchLine.ItemId))
      #        {
      #            ret = itemTypeCache.lookup(purchLine.ItemId);
      #        }
      #        else
      #        {
      #            ret = InventTable::find(purchLine.ItemId).AssetGroupId_RU != '';
      #            itemTypeCache.insert(purchLine.ItemId, ret);
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #allowEditLedgerAccount_RU
      #boolean allowEditLedgerAccount_RU()
      #{
      #    boolean                     allowEdit = ! purchLine_W.MarkupCode_RU;
      #
      #    if (allowEdit && itemInventDimSetupCache && purchLine.ItemId)
      #    {
      #        if (itemInventDimSetupCache.exists(purchLine.ItemId))
      #        {
      #            allowEdit = itemInventDimSetupCache.lookup(purchLine.ItemId);
      #        }
      #        else
      #        {
      #            allowEdit = !EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(purchLine.ItemId, fieldNum(InventDim, InventProfileId_RU));
      #            itemInventDimSetupCache.insert(purchLine.ItemId, allowEdit);
      #        }
      #    }
      #
      #    return allowEdit;
      #}
    ENDSOURCE
    SOURCE #applyBackOrderLinesSelection
      #/// <summary>
      #/// If form was called by BackOrderLines list page, applies additional ranges to the form data source to show only sales orders that were selected in a list page.
      #/// </summary>
      #/// <remarks>
      #/// If form called not from BackOrderLines list page no action is taken.
      #/// </remarks>
      #private void applyBackOrderLinesSelection()
      #{
      #    Map             selectedPurchIds;
      #    MapEnumerator   en;
      #
      #    if (!this.isCalledFromPurchLineBackOrderListPage() || !element.args().record())
      #    {
      #        return;
      #    }
      #
      #    // Apply filter to show only Purch Orders selected in the list page...
      #    selectedPurchIds = PurchLineBackOrderListPageInteraction::getPurchIdsSelected(element.args().record().dataSource());
      #    if (selectedPurchIds)
      #    {
      #        // Dynalinks need to be cleared to avoid transfer only currently selected record from a list page.
      #        purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).clearDynalinks();
      #
      #        en = new MapEnumerator(selectedPurchIds);
      #        while(en.moveNext())
      #        {
      #            purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,PurchId)).value(en.currentValue());
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #automaticTotalDiscount
      #public void automaticTotalDiscount()
      #{
      #    PurchTable localPurchTable;
      #
      #    if (PurchParameters::find().AutomaticTotalDiscount)
      #    {
      #        for (localPurchTable = purchTable_ds.getFirst(true) ? purchTable_ds.getFirst(true) : purchTable_ds.cursor(); localPurchTable; localPurchTable = purchTable_ds.getNext())
      #        {
      #            localPurchTable.updateFinalDisc();
      #        }
      #        purchTable_ds.reread();
      #        purchTable_ds.refresh();
      #        purchLine_ds.research(true);
      #    }
      #}
    ENDSOURCE
    SOURCE #budgetControlLine
      #public void budgetControlLine()
      #{
      #    if (purchLine)
      #    {
      #        // Submit to source document processor for an on-demand budget check
      #        SourceDocumentProcessorFacade::submitOnDemandSourceDocLineImpl(purchLine);
      #
      #        // <PubSect>
      #        if (purchLine.isBudgetReservationLineReferenced())
      #        {
      #            // Checks the purchase order line balance against the referenced budget reservation line.
      #            BudgetReservation_PSN::checkBudgetReservationBalance(purchLine.BudgetReservationLine_PSN, purchTable.SourceDocumentHeader);
      #        }
      #        // </PubSect>
      #
      #        purchLine_ds.updateBudgetCheckResultDisplay();
      #    }
      #}
    ENDSOURCE
    SOURCE #budgetCreateTransfer
      #public void budgetCreateTransfer()
      #{
      #    BudgetCreateTransfer budgetCreateTransfer = BudgetCreateTransfer::construct();
      #
      #    // The source number for the created transfer is the purchase order id.
      #    budgetCreateTransfer.parmBudgetTransferSourceNumber(purchTable.PurchId);
      #
      #    budgetCreateTransfer.parmToLedgerDimensionDate(systemDateGet());
      #
      #    // Set the To ledger dimension to 0.
      #    budgetCreateTransfer.parmToLedgerDimension(0);
      #
      #    // Set the currency to the currency on the selected purchase order line.
      #    budgetCreateTransfer.parmCurrency(purchLine.CurrencyCode);
      #
      #    // Set the budget type as Expense.
      #    budgetCreateTransfer.parmBudgetType(BudgetType::Expense);
      #
      #    BudgetCreateTransferManager::launchCreateTransferForm(budgetCreateTransfer);
      #}
    ENDSOURCE
    SOURCE #canClose
      #public boolean canClose()
      #{
      #    boolean ret;
      #
      #    ret = super();
      #
      #    // PBA begin
      #    if (!purchLine.PBAItemLine::checkMandatory() )
      #    {
      #        return false;
      #    }
      #    // PBA end
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #canSubmitToWorkflow
      #public boolean canSubmitToWorkflow()
      #{
      #    return purchTable.canSubmitToWorkflow();
      #}
    ENDSOURCE
    SOURCE #checkCreditNoteLine
      #void  checkCreditNoteLine()
      #{
      #    boolean  allowEdit;
      #
      #    allowEdit = purchLine.allowEditReturnActionId();
      #    purchLine_ds.object(fieldNum(PurchLine, ReturnActionId)).allowEdit(allowEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, ReturnActionId)).skip(!allowEdit);
      #
      #    allowEdit = purchLine.allowEditScrap();
      #    purchLine_ds.object(fieldNum(PurchLine, Scrap)).allowEdit(allowEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Scrap)).skip(allowEdit);
      #}
    ENDSOURCE
    SOURCE #close
      #void close()
      #{
      #    xSysLastValue::saveLast(purchTableForm);
      #
      #    // Current price references may need to be deleted.
      #    purchLine.SalesPurchLine::cleanUpPriceHistoryRef();
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #configBankDocumentControls
      #/// <summary>
      #///     Configs the BankDocument Controls.
      #/// </summary>
      #public void configBankDocumentControls()
      #{
      #    boolean         enableDocumentType = false;
      #    PurchTableType  purchTableTypeLcoal;
      #
      #    if (enableLCFeature
      #    ||  enableLGFeature)
      #    {
      #        purchTableTypeLcoal = purchTable.type();
      #        enableDocumentType  = purchTableTypeLcoal.mayBankDocumentTypeBeModified();
      #        element.configPaymentGroupControls();
      #        purchTable_DS.object(fieldNum(PurchTable, BankDocumentType)).allowEdit(enableDocumentType);
      #    }
      #}
    ENDSOURCE
    SOURCE #configPaymentGroupControls
      #/// <summary>
      #/// Configs the payment group controls based on the value of field <c>BankDocumentType</c>
      #/// </summary>
      #private void configPaymentGroupControls()
      #{
      #    boolean flag;
      #
      #    flag = !purchTable.isMarkedForBankLC();
      #
      #    purchTable_DS.object(fieldNum(PurchTable, Payment)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, FixedDueDate)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, PaymMode)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, PaymSpec)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, PaymentSched)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, CashDisc)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, CashDiscPercent)).allowEdit(flag);
      #    purchTable_DS.object(fieldNum(PurchTable, SettleVoucher)).allowEdit(flag);
      #}
    ENDSOURCE
    SOURCE #createAgreementLink
      #public void createAgreementLink()
      #{
      #    AgreementLine                           localAgreementLine;
      #    Args                                    args;
      #    FormRun                                 formRun;
      #    PurchTableForm_DlvScheduleSyncEnabled   purchTableFormDlvSchedule;
      #    PurchLine                               origPurchLine;
      #
      #    args = new Args(formStr(AgreementLinePrompt));
      #    args.caller(element);
      #    args.record(purchLine);
      #    args.parm(int642str(purchTable.MatchingAgreement));
      #    formRun = classfactory.formRunClass(args);
      #    formRun.init();
      #    formRun.run();
      #    formRun.wait(true);
      #    localAgreementLine = args.record() as AgreementLine;
      #
      #    if (localAgreementLine)
      #    {
      #        // Make a pre-associated copy of the current purchase line.
      #        origPurchLine = purchLine.data().orig();
      #        if (isPurchLine_INEnabled || isPurchLine_WEnabled)
      #        {
      #            origPurchLine.SysExtensionSerializerMap::copyExtensionTableData(purchLine, true);
      #        }
      #
      #        ttsbegin;
      #
      #        PurchTableForm::createAgreementLinkServer(purchLine, localAgreementLine);
      #
      #        if (purchLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries)
      #        {
      #            purchTableFormDlvSchedule = purchTableForm as PurchTableForm_DlvScheduleSyncEnabled;
      #            purchTableFormDlvSchedule.parmOrderLineOrig(origPurchLine);
      #            if (purchTableFormDlvSchedule.deliveryLinesSync(purchLine, false))
      #            {
      #                // Need to refresh delivery lines on grid.
      #                purchLine_DS.executeQuery();
      #            }
      #        }
      #
      #        ttscommit;
      #        purchLine_DS.research(true);
      #
      #        this.enableAgreementButtons();
      #    }
      #}
    ENDSOURCE
    SOURCE #disableConsInvoiceControl_JP
      #/// <summary>
      #/// Disable the consolidation invoice related controls.
      #/// </summary>
      #public void disableConsInvoiceControl_JP()
      #{
      #    if (!VendConsInvoiceType_JP::isVendConsInvoiceEnabled())
      #    {
      #        purchTable_ds.object(fieldNum(PurchTable, ConsTarget_JP)).visible(false);
      #        consTarget_JP.visible(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #distributionFormClosed
      #/// <summary>
      #/// Method called upon closing of the <c>AccountingDistribution</c> form.
      #/// </summary>
      #public void distributionFormClosed()
      #{
      #    purchTable_ds.reread();
      #    purchTable_ds.refresh();
      #    purchTable_ds.selectionChanged();
      #}
    ENDSOURCE
    SOURCE #docCursor
      #public Common docCursor()
      #{
      #    Common docCursor;
      #
      #    docCursor = super();
      #
      #    if (docCursor.TableId == tableNum(InventDim))
      #    {
      #        docCursor = purchLine;
      #    }
      #
      #    return docCursor;
      #}
    ENDSOURCE
    SOURCE #doRefresh
      #public void doRefresh(boolean _lineRefreshNeeded = false)
      #{
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
      #    {
      #        purchTable_ds.reread();
      #        purchTable_ds.refresh();
      #
      #        if (_lineRefreshNeeded)
      #        {
      #            purchLine_ds.reread();
      #            purchLine_ds.refresh();
      #        }
      #        else
      #        {
      #            purchLine_ds.research(true);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #editPurch
      #public void editPurch(boolean _allowEdit, boolean _allowDelete = _allowEdit)
      #{
      #    /// BEGIN STF_MEGA_Presupuestos DEV: Eugenio Canales
      #    VendInvoiceJour vendInvoiceJour;
      #    /// END STF_MEGA_Presupuestos DEV: Eugenio Canales
      #
      #    boolean allowEditEmplAccount_RU;
      #    purchTable_ds.allowEdit    (_allowEdit);
      #    purchTable_ds.allowDelete  (_allowEdit && _allowDelete);
      #    purchLine_ds.allowEdit     (_allowEdit);
      #    purchLine_ds.allowCreate   (_allowEdit);
      #    purchLine_ds.allowDelete   (_allowEdit && _allowDelete);
      #    if (advanceHoldersEnabled)
      #    {
      #        allowEditEmplAccount_RU = PaymTerm::isEmplAccountUsed_RU(purchTable.Payment);
      #        purchTable_W_ds.object(fieldNum(PurchTable_W, EmplAccount_RU)).allowEdit(allowEditEmplAccount_RU);
      #        purchTable_ds.object(fieldNum(PurchTable, CashDisc)).allowEdit(!allowEditEmplAccount_RU);
      #    }
      #
      #    /// BEGIN STF_MEGA_Presupuestos DEV: Eugenio Canales
      #    /*select firstOnly vendInvoiceJour
      #        where vendInvoiceJour.PurchId == PurchTable.PurchId;
      #
      #    if(vendInvoiceJour)
      #    {
      #        PurchTable_ISBudgetKeyId.allowEdit(false);
      #        PurchTable_ItemBuyerGroupId.allowEdit(false);
      #    }*/
      #    /// END STF_MEGA_Presupuestos DEV: Eugenio Canales
      #
      #}
    ENDSOURCE
    SOURCE #enableAdvanceAction
      #/// <summary>
      #/// Enables advance action button on header when <c>PurchaseType</c> field of <c>PurchTable</c> table has <c>PurchaseType::Purch</c> enum value .
      #/// </summary>
      #[SysObsoleteAttribute('Prepay elements are controlled by the PurchTableInteraction class', true)]
      #public void enableAdvanceAction()
      #{
      #
      #}
    ENDSOURCE
    SOURCE #enableAgreementButtons
      #protected void enableAgreementButtons()
      #{
      #    boolean agreementLineEnabled, createLinkEnabled, removeLinkEnabled;
      #
      #    [agreementLineEnabled, createLinkEnabled, removeLinkEnabled] = purchTableForm.getEnabledAgreementButtons(purchTable, purchLine);
      #
      #    agreementLine.enabled(agreementLineEnabled);
      #    createLink.enabled(createLinkEnabled);
      #    removeLink.enabled(removeLinkEnabled);
      #
      #    buttonPurchAgreement.enabled(purchTable.MatchingAgreement);
      #}
    ENDSOURCE
    SOURCE #enableApplyDEPB_IN
      #boolean enableApplyDEPB_IN()
      #{
      #    boolean ret;
      #    if (eximPurchLine_IN.EximIncentiveSchemeGroup)
      #    {
      #        ret = EximSetOffRulesTable_IN::checkUtilizedDEPBLicense(eximPurchLine_IN.EximIncentiveSchemeGroup);
      #    }
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #enableContractNumber_SA
      #public void enableContractNumber_SA()
      #{
      #    purchTable_ContractNum_SA.enabled(VendInfoZakat_SA::findByVendAccount(purchTable.OrderAccount).IsSubcontractor);
      #}
    ENDSOURCE
    SOURCE #enableDepreciationStartDate
      #//
      #// This method enables/disables depreciation start date control
      #//
      #void enableDepreciationStartDate(boolean _setDate = true)
      #{
      #    AssetBook assetBook;
      #
      #    assetBook = AssetBook::find(purchLine.AssetId, purchLine.AssetBookId);
      #    if (assetBook && (purchLine.AssetTransTypePurch == AssetTransTypePurch::Acquisition || purchLine.AssetTransTypePurch == AssetTransTypePurch::AcquisitionAdj) &&
      #    !assetBook.depreciationStarted() && assetBook.DepreciationConvention == AssetDepreciationConvention::None)
      #    {
      #        if (!depreciationStartDate.enabled())
      #        {
      #            depreciationStartDate.enabled(true);
      #            purchLine.setDepreciationStartDate(_setDate);
      #        }
      #    }
      #    else
      #    {
      #        purchLine.setDepreciationStartDate(true);
      #        depreciationStartDate.enabled(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #enabledVATTaxAgent_RU
      #void enabledVATTaxAgent_RU()
      #{
      #    vatTaxAgent_RU.allowEdit(! PurchLine::exist(purchTable.PurchId));
      #}
    ENDSOURCE
    SOURCE #enableFieldsActive_IN
      #public void enableFieldsActive_IN()
      #{
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, DirectSettlement_IN)).enabled(purchLine_IN.ExciseType_IN == ExciseType_IN::Manufacturer);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, cenvatCreditAvailed_IN)).enabled(purchLine_IN.ExciseRecordType_IN == ExciseRecordType_IN::RG23C    &&
      #                                                                             purchLine_IN.DirectSettlement_IN == DirectSettlement_IN::PLA      &&
      #                                                                             purchLine.PurchQty < 0                                         &&
      #                                                                             taxParameters.Excise_IN);
      #    customsImportAssessableValue_IN.enabled(purchTable_W.CustomsImportOrder_IN == NoYes::Yes    &&
      #                                            taxParameters.Customs_IN == NoYes::Yes);
      #    purchLine_CustomsMaxRetailPrice_IN.visible(purchTable_W.CustomsImportOrder_IN == NoYes::Yes &&
      #                                               taxParameters.Customs_IN == NoYes::Yes);
      #    purchLine_MaximumRetailPrice_IN.enabled(purchTable_W.CustomsImportOrder_IN == NoYes::No);
      #    element.setEximFieldsAccess_IN();
      #}
    ENDSOURCE
    SOURCE #enableForeignTrade_RU
      #void enableForeignTrade_RU()
      #{
      #    purchLine_W_ds.object(fieldNum(PurchLine_W, InvoiceGTDId_RU)).enabled(
      #        purchLine_W_ds.object(fieldNum(PurchLine_W, CountryRegionName_RU)).enabled(
      #            purchLine.isCategoryBased()));
      #}
    ENDSOURCE
    SOURCE #enableInvoice4PaymButtons
      #public void enableInvoice4PaymButtons()
      #{
      #    purchTableForm.enableInvoice4PaymButton_RU(buttonUpdateInvoice4Paym_RU);
      #    buttonProformaInvoice4Paym_RU.enabled(buttonUpdateInvoice4Paym_RU.enabled());
      #}
    ENDSOURCE
    SOURCE #enableLedgerDimensionDefaultAccount
      #public void enableLedgerDimensionDefaultAccount()
      #{
      #    if (purchLine.canEditLedgerDimensionDefaultAccount())
      #    {
      #        purchLine_LedgerDimension.allowEdit(true
      #            && (! isRU || this.allowEditLedgerAccount_RU())
      #        );
      #
      #    }
      #    else
      #    {
      #        if (purchLine.IsFinalized == NoYes::No)
      #        {
      #            if (!isRU || purchLine_W.MarkupCode_RU)
      #            {
      #                purchLine.LedgerDimension = 0;
      #            }
      #        }
      #        purchLine_LedgerDimension.allowEdit(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #enableLinePBAActions
      #public void enableLinePBAActions()
      #{
      #    boolean isPBAExecuteButtonEnabled;
      #    isPBAExecuteButtonEnabled = purchTableForm.isPBAExecuteButtonEnabled(purchLine);
      #
      #    pbaExecute.enabled(isPBAExecuteButtonEnabled);
      #}
    ENDSOURCE
    SOURCE #enableMarkupCode_RU
      #public void enableMarkupCode_RU()
      #{
      #    if (isRU)
      #    {
      #        purchLine_W_ds.object(fieldNum(PurchLine_W, MarkupCode_RU))
      #            .enabled(purchLine.isMarkupCodeEnabled_RU());
      #    }
      #}
    ENDSOURCE
    SOURCE #enableProjSalesPrice
      #public void enableProjSalesPrice()
      #{
      #    boolean mustDefaultCostPriceAsSalesPrice;
      #    boolean isTiedToItemReq;
      #
      #    if (purchLine.ProjId)
      #    {
      #        if (!purchLine.ItemId && ProjParameters::find().DefaultCostPriceAsSalesPrice)
      #        {
      #            mustDefaultCostPriceAsSalesPrice = true;
      #        }
      #
      #        if(purchTable.isProjectSalesItemReqPO())
      #        {
      #            isTiedToItemReq = true;
      #        }
      #
      #        if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(purchLine.ProjId).ProjInvoiceProjId))
      #        {
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(false);
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(true);
      #        }
      #        else
      #        {
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(!mustDefaultCostPriceAsSalesPrice);
      #            purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(mustDefaultCostPriceAsSalesPrice);
      #        }
      #
      #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesPrice)).allowEdit(!mustDefaultCostPriceAsSalesPrice && !isTiedToItemReq);
      #    }
      #}
    ENDSOURCE
    SOURCE #enableRetentionProject
      #void enableRetentionProject()
      #{
      #    if(isConfigurationkeyEnabled(configurationKeyNum(PSAAPRetainage)))
      #    {
      #        if(purchLine.ProjId)
      #        {
      #            purchLine_PSARetainScheduleId.visible(true);
      #        }
      #        else
      #        {
      #            purchLine_PSARetainScheduleId.visible(false);
      #        }
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #enableServiceFields_BR
      #public void enableServiceFields_BR()
      #{
      #    InventTable inventTable;
      #    boolean     enable;
      #
      #    select firstonly ItemType from inventTable where inventTable.ItemId == purchLine.ItemId;
      #
      #    enable = inventTable.ItemType == ItemType::Service;
      #
      #    purchLine_ds.object(fieldNum(PurchLine, TaxServiceCode_BR)).allowEdit(enable);
      #}
    ENDSOURCE
    SOURCE #enableTMSFields
      #public void enableTMSFields()
      #{
      #    TMSTransportationTemplateId transTempId;
      #    TMSCarrierCode              carrierCode;
      #    TMSCarrierGroupCode         carrierGroupCode;
      #    TMSModeCode                 modeCode;
      #    boolean                     modeCodeEnabled;
      #
      #    transTempId         = tmsPurchTable.TransportationTemplateId;
      #    carrierCode         = tmsPurchTable.CarrierCode;
      #    carrierGroupCode    = tmsPurchTable.CarrierGroupCode;
      #    modeCode            = tmsPurchTable.ModeCode;
      #    modeCodeEnabled     = tmsPurchTable.ModeCode != '' && tmsPurchTable.CarrierCode == '';
      #
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, ModeCode)).allowEdit(!(carrierCode || transTempId || carrierGroupCode));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, CarrierCode)).allowEdit(!(transTempId ||carrierGroupCode || modeCodeEnabled));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, CarrierServiceCode)).allowEdit(!(transTempId || carrierGroupCode || modeCodeEnabled));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, CarrierGroupCode)).allowEdit(!(transTempId || carrierCode || modeCode));
      #    tmsPurchTable_ds.object(fieldNum(TMSPurchTable, TransportationTemplateId)).allowEdit(!(carrierCode || carrierGroupCode || modeCode));
      #}
    ENDSOURCE
    SOURCE #endDiscount
      #public void endDiscount()
      #{
      #    purchTable.updateFinalDisc();
      #    purchtable_ds.refresh();
      #
      #}
    ENDSOURCE
    SOURCE #filenameLookupFilename
      #str filenameLookupFilename()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #filenameLookupFilter
      #FilenameFilter filenameLookupFilter()
      #{
      #    return ["@SYS54806",'*.*',"@SYS98008",'*.jpg', "@MCR33266",'*.gif', "@SYS98008",'*.jpg',"@MCR33267",'*.tif',"@MCR33268",'*.bmp'];
      #}
    ENDSOURCE
    SOURCE #filenameLookupInitialPath
      #str filenameLookupInitialPath()
      #{
      #    return filePath;
      #}
    ENDSOURCE
    SOURCE #filenameLookupTitle
      #str filenameLookupTitle()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #filePathLookupTitle
      #str filePathLookupTitle()
      #{
      #    return '';
      #}
    ENDSOURCE
    SOURCE #fillPackageTree
      #/// <summary>
      #/// Fill Package Tree
      #/// </summary>
      #void fillPackageTree()
      #{
      #    ImageRes    imageRes    = imageListAppl_PurchTableForm.image(#imageFolder);
      #
      #    TreeItemIdx     purchIdx,packageIdx,packageLineIdx;
      #    PurchLine       purchLineSearch;
      #    RetailPackagePurch packagePurch;
      #    ;
      #    packageTree.deleteAll();
      #
      #    purchIdx = SysFormTreeControl::addTreeItem(packageTree,
      #                                               "@RET4405" + purchTable.PurchId,
      #                                               FormTreeAdd::Root,
      #                                               "@SYS15812",
      #                                               imageRes,
      #                                               true);
      #
      #
      #    while select packagePurch
      #    where packagePurch.PurchId == purchTable.PurchId
      #    {
      #        packageIdx = SysFormTreeControl::addTreeItem(packageTree,
      #                                                     "@RET4406" + packagePurch.PackageId + '  ' +
      #                                                     RetailPackageTable::find(packagePurch.PackageId).PackageName +
      #                                                     '  ' + "@RET4407" + num2str(packagePurch.Qty,2,2,0,0),
      #                                                     purchIdx,
      #                                                     packagePurch,
      #                                                     imageRes,
      #                                                     true);
      #
      #        while select ItemId, PurchQty from purchLineSearch
      #        where purchLineSearch.PurchId           == purchTable.PurchId &&
      #              purchLineSearch.RetailPackageId   == packagePurch.PackageId &&
      #              purchLineSearch.rboPackageLineNum == packagePurch.LineNum
      #        {
      #            packageLineIdx = SysFormTreeControl::addTreeItem(packageTree,
      #                                                             purchLineSearch.ItemId + '  ' +
      #                                                             InventTable::find(purchLineSearch.ItemId).defaultProductName() +
      #                                                             '  ' + "@RET4407" + num2str(purchLineSearch.PurchQty,2,2,0,0),
      #                                                             packageIdx,
      #                                                             "@SYS7407",
      #                                                             imageRes,
      #                                                             false);
      #        }
      #
      #    }
      #
      #    SysFormTreeControl::expandTree(packageTree, packageTree.getRoot(), 1);
      #
      #
      #}
    ENDSOURCE
    SOURCE #formBOEJournalClosed_IN
      #/// <summary>
      #/// BOE Journal form close event handler
      #/// </summary>
      #public void formBOEJournalClosed_IN()
      #{
      #    purchTable_ds.research(true);
      #}
    ENDSOURCE
    SOURCE #formControlIsDataBound
      #private boolean  formControlIsDataBound(Object  _formControl)
      #{
      #    FormControlType formControlType = SysFormRun::controlType(classIdGet(_formControl));
      #    boolean         ret             = false;
      #
      #    if (formControlType == FormControlType::CheckBox
      #    ||  formControlType == FormControlType::ComboBox
      #    ||  formControlType == FormControlType::ListBox
      #    ||  formControlType == FormControlType::RadioButton
      #    ||  formControlType == FormControlType::String
      #    ||  formControlType == FormControlType::StaticText
      #    ||  formControlType == FormControlType::Date
      #    ||  formControlType == FormControlType::Integer
      #    ||  formControlType == FormControlType::Real
      #    ||  formControlType == FormControlType::Time
      #    ||  formControlType == FormControlType::Image
      #    ||  formControlType == FormControlType::Grid
      #    ||  formControlType == FormControlType::TabPage)
      #    {
      #        ret = true;
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #handleSecurity
      #void handleSecurity(FormDataSource _fds, boolean _hasAccess)
      #{
      #    if (_fds && !_fds.allowCheck() && !_hasAccess)
      #    {
      #        _fds.query().dataSourceNo(1).enabled(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #hasTableAccess
      #boolean hasTableAccess(TableId _tableId, AccessType _neededAccessLevel = AccessType::View)
      #{
      #    DictTable dictTable = new DictTable(_tableId);
      #
      #    if (dictTable)
      #    {
      #        return dictTable.rights() >= _neededAccessLevel;
      #    }
      #    return false;
      #}
    ENDSOURCE
    SOURCE #hideQualityManagement
      #void hideQualityManagement()
      #{
      #    status_qualityOrderStatusDisplay.visible(false);
      #    statusLine_qualityOrderStatusDisplay.visible(false);
      #    purchTable_qualityOrderStatusDisplay.visible(false);
      #    purchLine_qualityOrderStatusDisplay.visible(false);
      #
      #    lineStripProductQualitySeparator.visible(false);
      #    inventNonConformanceTableTableHeader.visible(false);
      #    inventQualityOrderTableTableHeader.visible(false);
      #    inventNonConformanceTableLine.visible(false);
      #    inventQualityOrderTableLine.visible(false);
      #}
    ENDSOURCE
    SOURCE #init
      #public void  init()
      #{
      #    Object              caller;
      #    boolean             wasCalledFromPurchLineBackOrderListPage = this.isCalledFromPurchLineBackOrderListPage();
      #    boolean             isFrenchRegulatoryEnabled = PublicSectorUtils::isFrenchRegulatoryEnabled();
      #    CFMPaymentRequestTable  paymentRequest;
      #    STF_PurchOrder_AssetTmp     purchAsset;
      #    PurchLine                   purchLineLocal;
      #    AssetTable                  assetTableLocal;
      #    ;
      #
      #
      #    #define.menuPurchTableForNew("PurchTableForNew_Action")
      #
      #    imageListAppl_PurchTableForm = ImageListAppl_PurchTableForm::construct();
      #
      #    #ISOCountryRegionCodes
      #
      #    isPurchLine_INEnabled   = PurchLine_IN::isExtensionEnabled();
      #    isPurchLine_WEnabled    = PurchLine_W::isExtensionEnabled();
      #    isPurchTableEnabled_W   = PurchTable_W::isExtensionEnabled();
      #    isPurchTableEnabled_BR   = PurchTable_BR::isExtensionEnabled();
      #    isPurchTableEnabled_RU   = PurchTable_RU::isExtensionEnabled();
      #    // <GMY>
      #    isSelfBilldInvoiceEnabled_MY        = TaxGSTFeatureChecker_MY::isSelfBilledInvoiceEnabled();
      #    isIsoMY                             = TaxGSTFeatureChecker_MY::isCountryRegionMY();
      #    if(isIsoMY)
      #    {
      #        vendInvoiceJourLookupController = VendInvoiceJourLookupController_MY::construct();
      #        isWrnPrintedMY                  = false;
      #    }
      #    // </GMY>
      #
      #    isCalledFromLP = TradeFormHelper::isCalledFromForm(element.args(), formStr(PurchTableListPage));
      #
      #    if (element.args())
      #    {
      #        if (!element.args().record() && element.args().lookupRecord())
      #        {
      #            //Called from EP
      #            element.args().record(element.args().lookupRecord());
      #            element.args().lookupRecord(null);
      #        }
      #    }
      #
      #    if (element.args() && !isCalledFromLP)
      #    {
      #        element.args().copyCallerQuery(CopyCallerQuery::No);
      #    }
      #
      #    if (isCalledFromLP
      #        && element.args()
      #        && element.args().record()
      #        && element.args().menuItemName() != #menuPurchTableForNew)
      #    {
      #        purchTableCaller = element.args().record() as PurchTable;
      #    }
      #
      #    zakatParameterEnabled = LedgerParameters::find().IsZakatEnabled_SA;
      #    // </GSA
      #    this.initCalledFromVendorSearch();
      #    super();
      #    isDocuActionTemplate = DocuActionForTemplate::createTemplateOnMenuButton(mbTemplatesButton, purchTable.TableId);
      #    FormSecurity::setFormDataSourceMaxAccessRight(this);
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(RAsset)))
      #    {
      #        itemTypeCache = new Map(Types::String, Types::Enum);
      #    }
      #
      #    isRU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
      #
      #    if (isRU)
      #    {
      #        itemInventDimSetupCache = new Map(Types::String, Types::Enum);
      #    }
      #
      #    advanceHoldersEnabled = EmplParameters_RU::enableAdvanceHolders();
      #
      #    purchTableBudgetCheckResult.imageList(imageListAppl_PurchTableForm.imageList());
      #    purchLineBudgetCheckResult.imageList(imageListAppl_PurchTableForm.imageList());
      #
      #    dimensionDefaultingControllerHeader = DimensionDefaultingController::constructInGroupWithValues(false, true, true, 0, this, groupFinancialDimensionHeader , "@SYS101181");
      #    dimensionDefaultingControllerHeader.parmAttributeValueSetDataSource(purchTable_ds, fieldStr(PurchTable, DefaultDimension));
      #
      #    DimensionDefaultingController::initContainerId(groupFinancialDimensionLine, 2);
      #    dimensionDefaultingControllerLine = DimensionDefaultingController::constructInGroupWithValues(false, true, true, 0, this, groupFinancialDimensionLine , "@SYS101181");
      #    dimensionDefaultingControllerLine.parmAttributeValueSetDataSource(purchLine_ds, fieldStr(PurchLine, DefaultDimension));
      #
      #    ledgerDefaultAccountControllerLine = LedgerDimensionDefaultAccountController::construct(purchLine_ds, fieldStr(PurchLine, LedgerDimension));
      #    ledgerDefaultAccountControllerLine.parmControl(purchLine_LedgerDimension);
      #
      #    // Initialization specifically for projects
      #    // Only show purchase orders associated to projects if form is called from the project main menu
      #    if (element.args().parmEnumType() == enumNum(PurchTableFormId) && element.args().parmEnum() == PurchTableFormId::Project)
      #    {
      #        if (! element.args().record()) // called from menu
      #        {
      #            purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable, ProjId)).value(SysQuery::valueNotEmptyString());
      #        }
      #
      #        isProjectForm = true;
      #    }
      #
      #    // Initialization for call from PuchLineBackOrderListForm
      #    if (wasCalledFromPurchLineBackOrderListPage)
      #    {
      #        this.applyBackOrderLinesSelection();
      #        purchTableForm = PurchTableForm::construct(PurchTableFormId::None, element.args().record());
      #    }
      #    else
      #    {
      #        purchTableForm = PurchTableForm::constructFromArgs(this.args());
      #    }
      #
      #    purchTableForm.parmPurchTableFormRun(element);
      #    purchTableForm.parmDimensionDefaultingControllerHeader(dimensionDefaultingControllerHeader);
      #
      #    TaxVATNumTable::enableLookupVATNum(vatNum);
      #
      #    element.updateDesign(InventDimFormDesignUpdate::Init);
      #    lineSpec.visibleColsValue(8+conLen(inventDimFormSetup.dimFieldsActive(inventDimFormSetup.parmDimParmVisibleGrid())));
      #
      #    purchTable_ds.object(fieldNum(PurchTable, PurchaseType)).allowEdit(purchTableForm.editPurchaseType());
      #    purchTable_ds.query(purchTableForm.queryPurchTable(purchTable_ds.query()));
      #    purchLine_ds.query(purchTableForm.queryPurchLine(purchLine_ds.query()));
      #
      #    groupNotificationToTheCentralBank.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]));
      #
      #    if (!TaxParameters::find().CashDiscOnInvoice)
      #    {
      #        purchTable_ds.object(fieldNum(PurchTable, CashDiscPercent)).allowEdit(false);
      #    }
      #
      #    interCompanySalesCache = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Container);
      #
      #    if (!InventParameters::find().UseQualityManagement)
      #    {
      #        element.hideQualityManagement();
      #    }
      #
      #    //Hide 1099 Tab if neither 1099G or 1099S keys are enabled
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector))
      #            && !(isConfigurationkeyEnabled(configurationKeyNum(Tax1099G)) || isConfigurationkeyEnabled(configurationKeyNum(Tax1099S))))
      #    {
      #        tabLineTax1099.visible(false);
      #    }
      #
      #    // Hide the Environment tab
      #    environment.visible(false);
      #
      #    //CFM payment requests
      #    if (element.args().dataset() == tableNum(CFMPaymentRequestTable))
      #    {
      #        paymentRequest = element.args().record();
      #        purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable, RecId)).value(queryValue(paymentRequest.HeaderRefRecId));
      #    }
      #
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
      #    {
      #        taxWithholdParameters   = TaxWithholdParameters_IN::find();
      #        taxParameters           = TaxParameters::find();
      #        eximParameters          = EximParameters_IN::find();
      #
      #        taxExciseTypeController = TaxExciseTypeController_IN::construct(exciseNone_IN,
      #                                                                        exciseManufacture_IN,
      #                                                                        exciseTraders_IN,
      #                                                                        taxInformation_IN_ECCNumber,
      #                                                                        taxInformation_IN_ManECCRegistrationNumberTable,
      #                                                                        taxInformation_IN_TraderECCRegistrationNumberTable,
      #                                                                        purchLine_IN_DS);
      #        taxExciseTypeController.parmFieldNumDirectSettlement(fieldNum(PurchLine_IN, DirectSettlement_IN));
      #        taxExciseTypeController.parmFieldNumDSA(fieldNum(PurchLine_IN, dsa_in));
      #
      #        element.setVisible_IN();
      #        element.updateDesign_IN();
      #        element.setTaxWithholdVisible_IN();
      #    }
      #
      #    if (LedgerParameters::find().IsEncumbranceProcessEnabled == NoYes::No)
      #    {
      #        buttonSubLedgerJournalLines.visible(false);
      #        encumbranceSummary.visible(false);
      #        ledgerTransact.visible(false);
      #    }
      #    else
      #    {
      #        buttonSubLedgerJournalLines.visible(true);
      #        encumbranceSummary.visible(true);
      #        ledgerTransact.visible(true);
      #    }
      #
      #    purchParameters = PurchParameters::find();
      #    if (purchParameters.ChangeRequestEnabled == NoYes::No &&
      #        purchParameters.ChangeRequestAllowOverride == NoYes::No)
      #    {
      #        workflowEnabled = false;
      #    }
      #    else
      #    {
      #        workflowEnabled = true;
      #    }
      #
      #    element.design().workflowEnabled(workflowEnabled);
      #
      #    bankLGFeatureChecker    = BankLGFeatureChecker::construct();
      #    enableLGFeature         = bankLGFeatureChecker.checkFeatureEnabled();
      #    bankLGRequestForm.visible(enableLGFeature);
      #
      #    bankLCImportFeatureChecker = BankLCImportFeatureChecker::construct();
      #    enableLCFeature            = bankLCImportFeatureChecker.checkFeatureEnabled();
      #    purchTable_DS.object(fieldNum(PurchTable, BankDocumentType)).visible(enableLCFeature || enableLGFeature);
      #    buttonCreateBankLCImport.visible(enableLCFeature);
      #
      #    zakat_SA.visible(zakatParameterEnabled);
      #
      #    headerForeignTrade_ListCode.visible(IntrastatParameters::find().euSalesListTransferPurchases);
      #
      #    lineDeliveryType.imageList(imageListAppl_PurchTableForm.imageList());
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
      #    {
      #        packageTree.setImagelist(imageListAppl_PurchTableForm.imageList());
      #        packageTree.setStateImagelist(imageListAppl_PurchTableForm.imageList());
      #    }
      #
      #    // Needed to check validity of address
      #    logisticsPostalAddressHeader_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidFrom));
      #    logisticsPostalAddressHeader_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidTo));
      #    logisticsPostalAddressHeader_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, CountryRegionId));
      #    logisticsPostalAddressLine_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidFrom));
      #    logisticsPostalAddressLine_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, ValidTo));
      #    logisticsPostalAddressLine_ds.addFieldToSelectionList(fieldNum(LogisticsPostalAddress, CountryRegionId));
      #
      #
      #    //if the Purchase Requisition control is enabled, then disable it if the commitments feature is enabled.
      #    if (purchReq_PurchReqId.enabled())
      #    {
      #        purchReq_PurchReqId.enabled(!isFrenchRegulatoryEnabled);
      #    }
      #
      #    //Make the commitments fields mandatory and visible if the feature is enabled, otherwise hide them and make them non-mandatory.
      #    purchCommitmentLineLookup_PSN.visible(isFrenchRegulatoryEnabled);
      #    purchCommitmentLineLookup_PSN.mandatory(isFrenchRegulatoryEnabled);
      #
      #
      #    purchCommitmentLineLookup2_PSN.visible(isFrenchRegulatoryEnabled);
      #    purchCommitmentLineLookup2_PSN.mandatory(isFrenchRegulatoryEnabled);
      #
      #    commitment_PSN.visible(isFrenchRegulatoryEnabled);
      #
      #    // <PubSect>
      #    BudgetReservation.visible(PublicSectorUtils::isBudgetReservationEnabled());
      #    // </PubSect>
      #
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
      #    {
      #        element.disableConsInvoiceControl_JP();
      #    }
      #
      #    if (BrazilParameters::isEnabled())
      #    {
      #        salesPurchOperationTypeController_BR = new SalesPurchOperationTypeController_BR(this.name());
      #        purchTable_BR_DS.object(fieldNum(PurchTable_BR, cfpsId_BR)).visible(BrazilParameters::isCFPSEnabled_BR());
      #    }
      #
      #    if (VendAdvanceInvoice::isDeactivated())
      #    {
      #        prepayPurchTableHeading.visible(false);
      #        buttonRemovePurchPrepayTable.visible(false);
      #        buttonUpdatePrepayInvoice.visible(false);
      #    }
      #
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
      #    {
      #        purchTable_DS.object(fieldNum(PurchTable, StatProcId)).visible(false);
      #        purchLine_DS.object( fieldNum(PurchLine,  StatProcId)).visible(false);
      #    }
      #
      #    if (element.args().parmEnumType() == enumNum(FormOpenMode))
      #    {
      #        caller = element.args().caller();
      #        if (caller && caller is SysSetupFormRun)
      #        {
      #            skipLinkActive = element.args().parmEnum() == FormOpenMode::ForNew;
      #        }
      #    }
      #
      #    if (RetailSMB::IsRetailSMBEnabled())
      #    {
      #        RetailSMB::SetVisible(element);
      #    }
      #    mcrPriceHistory.visible(purchParameters.mcrEnablePriceDetails);
      #
      #    //BEGIN             STF_MEGA_INFOR          Dev: Roberto Zamora
      #    while select purchLineLocal where purchLineLocal.PurchId == purchTableCaller.PurchId
      #    {
      #        select purchAsset where purchAsset.PurchLineRecId == purchLineLocal.RecId;
      #        if(purchAsset)
      #            continue;
      #        purchAsset.RecId = purchLineLocal.RecId;
      #        select assetTableLocal where assetTableLocal.AssetId == purchLineLocal.AssetId;
      #        purchAsset.Department = assetTableLocal.Department;
      #        purchAsset.GuaranteeDate = assetTableLocal.GuaranteeDate;
      #        purchAsset.Location = assetTableLocal.Location;
      #        purchAsset.Make = assetTableLocal.Make;
      #        purchAsset.Model = assetTableLocal.Model;
      #        purchAsset.ModelYear = assetTableLocal.ModelYear;
      #        purchAsset.Notes = assetTableLocal.Notes;
      #        purchAsset.insert();
      #    }
      #    element.STF_checkNewFixedAsset();
      #    PurchLine_ds.active();
      #    //END               STF_MEGA_INFOR          Dev: Roberto Zamora
      #
      #}
      #
      #
      #
    ENDSOURCE
    SOURCE #initCalledFromVendorSearch
      #private void initCalledFromVendorSearch()
      #{
      #    Object                      myCaller;
      #    VendTmpCurrentVendorResult  vendTmpCurrentVendorResult;
      #
      #    wasCalledFromVendorSearch = false;
      #
      #    if (element.args())
      #    {
      #        myCaller = element.args().caller();
      #        if (myCaller && myCaller is FormRun)
      #        {
      #            if (element.args().caller().name() == formStr(VendSearchResults))
      #            {
      #                wasCalledFromVendorSearch   = true;
      #                vendTmpCurrentVendorResult  = element.args().record();
      #                vendAccountSearch           = vendTmpCurrentVendorResult.VendorAccountNum;
      #            }
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #interCompanyIsPriceDiscSearchNeeded
      #RecId interCompanyIsPriceDiscSearchNeeded()
      #{
      #    return interCompanyIsPriceDiscSearchNeeded;
      #}
    ENDSOURCE
    SOURCE #interCompanyRefreshCache
      #void interCompanyRefreshCache()
      #{
      #    interCompanySalesCache = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Container);
      #}
    ENDSOURCE
    SOURCE #inventDimSetupObject
      #Object inventDimSetupObject()
      #{
      #    return inventDimFormSetup;
      #}
    ENDSOURCE
    SOURCE #invoiceMatchingAccess
      #public void invoiceMatchingAccess()
      #{
      #    invoiceMatching.visible(VendParameters::find().editUseInvoiceMatching());
      #}
    ENDSOURCE
    SOURCE #isCalledFromPurchLineBackOrderListPage
      #private boolean isCalledFromPurchLineBackOrderListPage()
      #{
      #    return TradeFormHelper::isCalledFromForm(element.args(), formStr(PurchLineBackOrderListPage));
      #}
    ENDSOURCE
    SOURCE #lineTaxTransSource
      #public void lineTaxTransSource()
      #{
      #    element.automaticTotalDiscount();
      #
      #    PurchTotals::showTaxLine(menuitemDisplayStr(TaxTmpWorkPurchOrder), purchTable,purchLine);
      #}
    ENDSOURCE
    SOURCE #markupTransFormClosed
      #public void markupTransFormClosed()
      #{
      #    int pos;
      #
      #    // Update budget check result for changes from edit
      #    purchLine_ds.updateBudgetCheckResultDisplay();
      #
      #    if (isPurchLine_INEnabled)
      #    {
      #        purchLine_IN_ds.reread();
      #        purchLine_IN_ds.refresh();
      #    }
      #
      #    if (isPurchLine_WEnabled)
      #    {
      #        purchLine_W_ds.reread();
      #        purchLine_W_ds.refresh();
      #    }
      #
      #    if (purchTable.mcrDropShipment)
      #    {
      #        pos = purchLine_ds.getPosition();
      #        purchLine_ds.research(true);
      #        purchLine_ds.setPosition(pos);
      #    }
      #
      #    purchTable_ds.reread();
      #    purchTable_ds.refresh();
      #    purchTable_ds.selectionChanged();
      #}
    ENDSOURCE
    SOURCE #multiLineDiscount
      #/// <summary>
      #/// Calculates multi line discounts.
      #/// </summary>
      #public void multiLineDiscount()
      #{
      #    element.automaticTotalDiscount();
      #
      #    if (purchTable.updateMultiLineDisc())
      #    {
      #        purchLine_ds.research(true);
      #    }
      #}
    ENDSOURCE
    SOURCE #nextGroup
      #void  nextGroup()
      #{
      #    if (!PurchLine::exist(purchTable.PurchId))
      #    {
      #        purchLine_ds.create();
      #    }
      #
      #    purchLine_ItemId.setFocus();
      #}
    ENDSOURCE
    SOURCE #numberSeqFormHandler
      #NumberSeqFormHandler numberSeqFormHandler()
      #{
      #    // Activate number sequence handler
      #    if (!numberSeqFormHandler)
      #    {
      #        numberSeqFormHandler = NumberSeqFormHandler::newForm(EMSParameter::numRefFlowId().NumberSequenceId,
      #                                                         element,
      #                                                         emsPurchOrderFlowRelation_ds,
      #                                                         fieldNum(EMSPurchOrderFlowRelation, FlowId));
      #    }
      #    return numberSeqFormHandler;
      #}
    ENDSOURCE
    SOURCE #packageAllowEdit
      #/// <summary>
      #/// Package Allow Edit
      #/// </summary>
      #/// <param name="allowEdit">
      #/// True to allow Edit, False otherwise
      #/// </param>
      #void packageAllowEdit(boolean allowEdit)
      #{
      #    purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit(allowEdit && purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit());
      #    purchLine_ds.object(fieldNum(PurchLine, VariantId)).allowEdit(allowEdit);
      #    if (!pdsIsCWItem(purchLine.ItemId))
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, PurchQty)).allowEdit(allowEdit && purchLine_ds.object(fieldNum(PurchLine, PurchQty)).allowEdit());
      #    }
      #    purchLine_ds.object(fieldNum(PurchLine, PurchUnit)).allowEdit(allowEdit && purchLine_ds.object(fieldNum(PurchLine, PurchUnit)).allowEdit());
      #    inventDim_ds.allowEdit(allowEdit && inventDim_ds.allowEdit());
      #    retailPackagePurch_ds.object(fieldNum(RetailPackagePurch, Qty)).allowEdit(allowEdit);
      #
      #}
    ENDSOURCE
    SOURCE #parmPostalAddressLocation
      #public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = 0)
      #{
      #    if (!_postalAddressLocation)
      #    {
      #        // Set location by active datasource
      #        if (element.dataSource().name() == purchLine_ds.name())
      #        {
      #            _postalAddressLocation = purchLine.deliveryLocation();
      #        }
      #        else
      #        {
      #            _postalAddressLocation = purchTable.deliveryLocation();
      #        }
      #    }
      #
      #    postalAddressLocation = _postalAddressLocation;
      #    return postalAddressLocation;
      #}
    ENDSOURCE
    SOURCE #pbaConfigureLine
      #void pbaConfigureLine()
      #{
      #    PBATablePBAInstance   pbaTablePBAInstance;
      #
      #    purchLine_DS.write();
      #
      #    if (PCRuntimeLibrary::isConstraintBasedConfigurable(purchLine.ItemId))
      #    {
      #        PCExecuteVariantConfiguration::execute(purchLine, purchLine.ItemId, inventDim.ConfigId);
      #    }
      #    else
      #    {
      #        if (!autoConfig )
      #        {
      #            PBAExecute::execute(purchLine,pbaTablePBAInstance, '');
      #        }
      #
      #        autoConfig = false;
      #    }
      #
      #    purchline_ds.research(true);
      #}
    ENDSOURCE
    SOURCE #performVendInvoiceJourLookup_MY
      #/// <summary>
      #/// Performs lookup for <c>VendInvoiceJour</c> table.
      #/// </summary>
      #/// <param name="_control">
      #/// The control to require lookup.
      #/// </param>
      #/// <param name="_vendAccount">
      #/// The account of vendor.
      #/// </param>
      #// <GMY>
      #public void performVendInvoiceJourLookup_MY(
      #    FormStringControl   _control,
      #    VendAccount         _vendAccount)
      #{
      #    vendInvoiceJourLookupController.parmVendAccount(_vendAccount);
      #    vendInvoiceJourLookupController.performLookup(_control);
      #}
      #// <GMY>
    ENDSOURCE
    SOURCE #PrintManagement
      #/// <summary>
      #/// Launch the print management setup form.
      #/// </summary>
      #public void PrintManagement()
      #{
      #    PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();
      #
      #    setupContext.addHierarchyContext(PrintMgmtHierarchyType::Purch, PrintMgmtNodeType::PurchTable);
      #    setupContext.parmCaller(element);
      #    setupContext.parmReferencedTableBuffer(purchTable_ds.cursor());
      #    setupContext.parmCountryRegionId(LogisticsPostalAddress::findRecId(purchTable.DeliveryPostalAddress).CountryRegionId);
      #    PrintMgmt::launchSetup(setupContext);
      #}
    ENDSOURCE
    SOURCE #purchLineResearch
      #void purchLineResearch()
      #{
      #    purchLine_ds.research(true);
      #}
    ENDSOURCE
    SOURCE #purchTable
      #PurchTable purchTable()
      #{
      #    return purchTable;
      #}
    ENDSOURCE
    SOURCE #refreshPurchLine_IN
      #public void refreshPurchLine_IN()
      #{
      #    purchLine_ds.reread();
      #    purchLine_ds.refresh();
      #    purchLine_IN_ds.reread();
      #    purchLine_IN_ds.refresh();
      #    purchLine_W_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #removeAgreementLink
      #public void removeAgreementLink()
      #{
      #    PurchTableForm_DlvScheduleSyncEnabled purchTableFormDlvSchedule;
      #    PurchLine       origPurchLine = purchLine.orig().data();
      #    boolean doNotAsk;
      #
      #
      #    if (purchLine.unLinkAgreementLinePrompt())
      #    {
      #        // When the user manually removes a link to an agreement line, then also prevent automatic (re)linking of agreement lines
      #        purchLine.AgreementSkipAutoLink = NoYes::Yes;
      #
      #        if (purchLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries)
      #        {
      #            purchTableFormDlvSchedule = purchTableForm as PurchTableForm_DlvScheduleSyncEnabled;
      #            purchTableFormDlvSchedule.parmOrderLineOrig(origPurchLine);
      #            if (purchTableFormDlvSchedule.deliveryLinesSync(purchLine, doNotAsk))
      #            {
      #                // Need to update delivery lines on grid.
      #                purchLine_DS.executeQuery();
      #            }
      #        }
      #        purchLine_DS.research(true);
      #        this.enableAgreementButtons();
      #    }
      #}
    ENDSOURCE
    SOURCE #resetAssetContainers
      #/// <summary>
      #///     Resets the asset containers to empty.
      #/// </summary>
      #public void resetAssetContainers()
      #{
      #    assetRules              = conNull();
      #    assetQualifierList      = new List(Types::Container);
      #    selectedAssetQualifier  = '';
      #}
    ENDSOURCE
    SOURCE #run
      #public void run()
      #{
      #    super();
      #    docuActionTemplateUndefined.visible(!isDocuActionTemplate);
      #
      #    if (RetailSMB::IsRetailSMBEnabled())
      #    {
      #        RetailUtils::HidePart(element, identifierStr(PurchEncumbranceSummaryPart));
      #    }
      #}
    ENDSOURCE
    SOURCE #selectControl
      #public boolean selectControl(FormControl _control)
      #{
      #    boolean  ok;
      #
      #    ok = super(_control);
      #
      #    if (ok  &&  workflowEnabled && _control  &&  element.formControlIsDataBound(_control))
      #    {
      #        element.toggleWorkflow_ds(_control);
      #    }
      #
      #    return ok;
      #}
    ENDSOURCE
    SOURCE #setAccountingDistributionView
      #public void setAccountingDistributionView(AccountingDistributionView    _accountingDistributionView)
      #{
      #    purchTableForm.subscribeToAccDistViewEvents(_accountingDistributionView);
      #}
    ENDSOURCE
    SOURCE #setAllowEdit1099GFields
      #/// <summary>
      #/// Sets the 1099G fields to be editable if G-2 is selected
      #/// </summary>
      #/// <remarks>
      #/// When G-2 is selected, the fields are set as editable, when it is not selected they are uneditable
      #/// </remarks>
      #void setAllowEdit1099GFields()
      #{
      #    boolean     canEdit;
      #    boolean     canEditTax1099;
      #    #Tax1099
      #
      #    canEditTax1099 = purchLine.allowEditTax1099();
      #
      #    canEdit = purchTableForm.can1099GFieldsBeEdited(purchLine) && canEditTax1099;
      #
      #    tax1099GFields.allowEdit(canEdit);
      #
      #    canEdit = purchTableForm.can1099G1FieldsBeEdited(purchLine) && canEditTax1099;
      #
      #    tax1099G1Fields.allowEdit(canEdit);
      #}
    ENDSOURCE
    SOURCE #setAllowEdit1099SFields
      #/// <summary>
      #/// Sets the editable state of S-2 fields based on the value of S-2
      #/// </summary>
      #/// <remarks>
      #/// When S-2 is selected the fields are editable, when it is not selected they are not editable.
      #/// </remarks>
      #void setAllowEdit1099SFields()
      #{
      #    boolean canEdit;
      #
      #    #Tax1099
      #
      #    canEdit = purchTableForm.can1099SFieldsBeEdited(purchLine) && purchLine.allowEditTax1099();
      #
      #    tax1099SFields.allowEdit(canEdit);
      #}
    ENDSOURCE
    SOURCE #setAllowEditTax1099
      #/// <summary>
      #/// Sets the editable status of tax1099Amount and tax1099StateAmount based upon the invoice status
      #/// </summary>
      #/// <remarks>
      #/// If the record is marked as Invoiced then the fields are not editable.
      #/// </remarks>
      #void setAllowEditTax1099()
      #{
      #    boolean canEdit;
      #    Tax1099Fields tax1099Fields;
      #    #Tax1099
      #
      #    canEdit = purchLine.allowEditTax1099();
      #
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099Fields)).allowEdit(canEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099Amount)).allowEdit(canEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099State)).allowEdit(canEdit);
      #    purchLine_ds.object(fieldNum(PurchLine, Tax1099StateAmount)).allowEdit(canEdit);
      #
      #    //Amounts on setup tab are not editable for 1099-S
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
      #    {
      #        tax1099Fields = Tax1099Fields::find(purchLine.Tax1099Fields);
      #
      #        if (canEdit && (tax1099Fields.Tax1099Box == #S_2))
      #        {
      #            line1099Fields_Tax1099Amount.allowEdit(false);
      #            line1099Fields_Tax1099StateAmount.allowEdit(false);
      #        }
      #        else
      #        {
      #            line1099Fields_Tax1099Amount.allowEdit(true);
      #            line1099Fields_Tax1099StateAmount.allowEdit(true);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #setCFOP_BR
      #public RefRecId setCFOP_BR(boolean _userInteraction = false)
      #{
      #    CFOPValidation_BR           cfopValidation;
      #    RefRecId                    cfopTableRecId;
      #
      #    cfopValidation  = CFOPValidation_BR::construct(purchTable);
      #
      #    cfopTableRecId = cfopValidation.getDefaultCFOP(_userInteraction);
      #
      #    return cfopTableRecId;
      #}
      #
    ENDSOURCE
    SOURCE #setControls
      #void setControls()
      #{
      #    // Disable the Substance and Destination Process fields if the Source Process is not setup yet
      #    flow_SubstanceId.enabled(emsFlow.SourceProcessId ? true : false);
      #    flow_DestinationProcessId.enabled(emsFlow.SourceProcessId ? true : false);
      #}
    ENDSOURCE
    SOURCE #setEditCommitmentLineAllowed
      #/// <summary>
      #/// Enables or disables editability of the commitment line field.
      #/// </summary>
      #/// <param name="_allowEdit">
      #/// Whether to enable editing.
      #/// </param>
      #void setEditCommitmentLineAllowed(boolean _allowEdit)
      #{
      #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, PurchCommitmentLine_PSN)).allowEdit(_allowEdit);
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #setEditItemCategoryAllowed
      #/// <summary>
      #/// Enables or disables editing of the item and procurement category fields.
      #/// </summary>
      #/// <param name="allowEdit">
      #/// Whether to enable editing.
      #/// </param>
      #void setEditItemCategoryAllowed(boolean allowEdit)
      #{
      #    purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit(allowEdit);
      #
      #    if (BrazilParameters::isEnabled())
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, ProcurementCategory)).allowEdit(false);
      #    }
      #    else
      #    {
      #        purchLine_ds.object(fieldNum(PurchLine, ProcurementCategory)).allowEdit(allowEdit);
      #    }
      #
      #}
    ENDSOURCE
    SOURCE #setEditLinenumberAllowed
      #/// <summary>
      #/// Enables or disables editing of the line number field.
      #/// </summary>
      #/// <param name="_allowEdit">
      #/// A bolean specifying whether editing is allowed.
      #/// </param>
      #void setEditLinenumberAllowed(boolean _allowEdit)
      #{
      #    purchLine_ds.object(fieldNum(PurchLine, LineNumber)).allowEdit(_allowEdit);
      #}
    ENDSOURCE
    SOURCE #setEximFieldsAccess_IN
      #public void setEximFieldsAccess_IN()
      #{
      #    boolean           isVisible;
      #    boolean           isInvoice;
      #
      #    isVisible = (taxParameters.EximIncentiveSchemes_IN && purchTable_W.CustomsImportOrder_IN);
      #    isInvoice = (purchLine.PurchQty > 0);
      #
      #    exim_IN.visible(isVisible);
      #    eximPurchLine_IN_ApplyDEPB.visible(isVisible && eximParameters.ActivateEPCG);
      #    incentiveSchemeGroup_IN.visible(isVisible);
      #
      #    exim_IN.allowEdit(isInvoice);
      #    eximPurchLine_IN_ApplyDEPB.allowEdit(isInvoice);
      #    incentiveSchemeGroup_IN.enabled(isInvoice);
      #}
    ENDSOURCE
    SOURCE #setIsPwpField
      #public void setIsPwpField()
      #{
      #    if (!isConfigurationkeyEnabled(configurationKeyNum(Project3)))
      #    {
      #        return;
      #    }
      #
      #    if (ProjLineProperty::find(purchline.ProjLinePropertyId).ToBeInvoiced)
      #    {
      #        purchline_ds.object(fieldNum(PurchLine, IsPwp)).allowEdit(true);
      #    }
      #    else
      #    {
      #        purchline_ds.object(fieldNum(PurchLine, IsPwp)).allowEdit(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #setLineDefaults
      #/// <summary>
      #/// Sets default values to be used when creating an order line.
      #/// </summary>
      #public void setLineDefaults()
      #{
      #    Object      callerFormObject;
      #
      #    // Make sure this was called via a form.
      #    if (element.args().caller() && element.args().caller() is FormRun)
      #    {
      #        if (element.args().caller().name() == formStr(ReqSupplyDemandSchedule))
      #        {
      #            callerFormObject = element.args().caller();
      #
      #            if (formHasMethod(callerFormObject, identifierStr(parmItemId)))
      #            {
      #                defaultItemId = callerFormObject.parmItemId();
      #            }
      #
      #            if (formHasMethod(callerFormObject, identifierStr(defaultInventDim)))
      #            {
      #                defaultInventDim = callerFormObject.defaultInventDim();
      #            }
      #
      #            if (formHasMethod(callerFormObject, identifierStr(getFromDate)))
      #            {
      #                defaultDate = callerFormObject.getFromDate();
      #            }
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #setTaxWithholdEnabled_IN
      #void setTaxWithholdEnabled_IN()
      #{
      #
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tcsGroup_IN)).enabled(!purchTable_W.tdsGroup_IN &&
      #                                                                    taxWithholdParameters.tcsActivate);
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tdsGroup_IN)).enabled(!purchTable_W.tcsGroup_IN &&
      #                                                                    taxWithholdParameters.tdsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tcsGroup_IN)).enabled(!purchLine_IN.tdsGroup_IN    &&
      #                                                                   taxWithholdParameters.tcsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tdsGroup_IN)).enabled(!purchLine_IN.tcsGroup_IN    &&
      #                                                                   taxWithholdParameters.tdsActivate);
      #    buttonWithholdTax_IN.enabled((purchLine_IN.tdsGroup_IN || purchLine_IN.tcsGroup_IN) &&
      #                                 (taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate));
      #    if (purchLine.InventRefId && purchLine.InventRefTransId && !purchTable.isInterCompanyOrder())
      #    {
      #        purchTable_W_ds.object(fieldNum(PurchTable_W, tcsGroup_IN)).enabled(!purchLine.InventRefId      &&
      #                                                                        !purchLine.InventRefTransId &&
      #                                                                         taxWithholdParameters.tcsActivate);
      #        purchTable_W_ds.object(fieldNum(PurchTable_W, tdsGroup_IN)).enabled(!purchLine.InventRefId      &&
      #                                                                        !purchLine.InventRefTransId &&
      #                                                                         taxWithholdParameters.tdsActivate);
      #        purchLine_IN_ds.object(fieldNum(PurchLine_IN, tcsGroup_IN)).enabled(!purchLine.InventRefId        &&
      #                                                                      !purchLine.InventRefTransId   &&
      #                                                                       taxWithholdParameters.tcsActivate);
      #        purchLine_IN_ds.object(fieldNum(PurchLine_IN, tdsGroup_IN)).enabled(!purchLine.InventRefId        &&
      #                                                                      !purchLine.InventRefTransId   &&
      #                                                                       taxWithholdParameters.tdsActivate);
      #    }
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, SoftwareDeclReceived_IN)).enabled((purchLine_IN.tdsGroup_IN != ''));
      #}
    ENDSOURCE
    SOURCE #setTaxWithholdVisible_IN
      #void setTaxWithholdVisible_IN()
      #{
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tdsGroup_IN)).visible(taxWithholdParameters.tdsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tdsGroup_IN)).visible(taxWithholdParameters.tdsActivate);
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, tcsGroup_IN)).visible(taxWithholdParameters.tcsActivate);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, tcsGroup_IN)).visible(taxWithholdParameters.tcsActivate);
      #    withholdingTax_IN.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #    buttonWithholdTax_IN.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #    withholdingTax.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
      #}
    ENDSOURCE
    SOURCE #setTitleText
      #public void setTitleText()
      #{
      #    headerTitle.text(strFmt('%1 : %2 - %3', purchTable.PurchId,
      #                                            purchTable.InvoiceAccount,
      #                                            purchTable.vendTable_InvoiceAccount().name()));
      #}
    ENDSOURCE
    SOURCE #setupAsset
      #/// <summary>
      #///     Sets asset group on the line based on asset rules defined.
      #/// </summary>
      #/// <param name = "_purchLine">
      #///     A <c>Purchline</c> buffer based on which asset rules needs to be looked up.
      #/// </param>
      #/// <returns>
      #///     true if an asset group can be set and if no user selection is required; otherwise, false.
      #/// </returns>
      #boolean setupAsset(PurchLine _purchLine)
      #{
      #    container       optionContainer;
      #    container       assetQualifierContainer;
      #    int             i;
      #    boolean         ret;
      #    str             temp;
      #    ListEnumerator  valueList;
      #    //Begin:    Project: STF_InterfazInfor  Developer: Eduardo Iñiguez   Date: June/21/2016
      #    InventTable    InventTable;
      #    //End:    Project: STF_InterfazInfor  Developer: Eduardo Iñiguez   Date: June/21/2016
      #
      #    ret = true;
      #
      #    ///Begin:    Project: STF_InterfazInfor  Developer: Eduardo Iñiguez   Date: June/21/2016
      #
      #    select * from InventTable
      #        where InventTable.ItemId==purchLine.ItemId;
      #    //End:    Project: STF_InterfazInfor  Developer: Eduardo Iñiguez   Date: June/21/2016
      #    //Find asset information only for lines which are being created or lines which already have asset information set
      #    //For purchase lines where asset information was not set when created, there should not be any re-evaluation for asset rules.
      #    if (_purchLine.ProcurementCategory
      #        && purchTable.PurchaseType == PurchaseType::Purch
      #        && (!purchLine.RecId || purchLine.CreateFixedAsset)
      #        && !assetRules
      #        ///Begin:    Project: STF_InterfazInfor  Developer: Eduardo Iñiguez   Date: June/21/2016
      #        && InventTable.STF_FixedAsset == NoYes::Yes
      #        //End:    Project: STF_InterfazInfor  Developer: Eduardo Iñiguez   Date: June/21/2016
      #        )
      #    {
      #        if (AssetParameters::canAssetBeAutoCreated())
      #        {
      #            assetRules = PurchTableForm::setupAssetGroup(_purchLine);
      #        }
      #
      #        //Load assetQualifierList
      #        if (conLen(assetRules) > 0)
      #        {
      #            optionContainer = conPeek(assetRules, #AssetOptionContainerPosition);
      #
      #            if (conLen(optionContainer) != 0)
      #            {
      #                //Load asset qualifier options
      #                if (!_purchLine.AssetGroup)
      #                {
      #                    //Asset group does not exist but qualifiers exist; User needs to select a qualifier
      #                    ret = checkFailed("@SYS136416");
      #                }
      #
      #                assetQualifierList = new List(Types::Container);
      #                for (i = 1; i < conLen(optionContainer); i += 3)
      #                {
      #                    assetQualifierContainer = [conPeek(optionContainer, i), conPeek(optionContainer, i+1)];
      #                    assetQualifierList.addEnd(assetQualifierContainer);
      #
      #                    valueList = assetQualifierList.getEnumerator();
      #
      #                    temp = conPeek(assetQualifierContainer, #AssetOptionContainerGroupPosition);
      #
      #                    if (_purchLine.AssetGroup == temp)
      #                    {
      #                        selectedAssetQualifier = conPeek(assetQualifierContainer, #AssetOptionContainerTextPosition);
      #                    }
      #                }
      #            }
      #        }
      #    }
      #
      #    if (assetQualifierList && !assetQualifierList.empty())
      #    {
      #        //Qualifier options exist, so load asset info controls
      #        element.design().controlName(#grpAssetQualifier).visible(true);
      #        txtAssetQualifierQuestion.text(conPeek(assetRules, #AssetQualifierTextPosition));
      #        editAssetQualifier.text(selectedAssetQualifier);
      #        editAssetQualifier.mandatory(true);
      #    }
      #    else
      #    {
      #        element.design().controlName(#grpAssetQualifier).visible(false);
      #        editAssetQualifier.mandatory(false);
      #    }
      #
      #    return ret;
      #
      #}
    ENDSOURCE
    SOURCE #setupEnvironmentalTab
      #/// <summary>
      #/// Set the environmetal tab visibility and the enabled state.
      #/// </summary>
      #/// <remarks>
      #/// Environmental tab is visible for selected vendor and items. Environmental tab is enabled when a <c>PurchLine</c> record exists in the form.
      #/// </remarks>
      #public void setupEnvironmentalTab()
      #{
      #    // Environment tab is only shown for selected vendor and items
      #    environment.visible(isConfigurationkeyEnabled(configurationKeyNum(EMS)) &&
      #                         EMSActivation::isActive(purchTable.OrderAccount , purchLine.ItemId , purchLine.InventDimId));
      #
      #    environment.enabled(purchLine.RecId != 0);
      #    environmentActionPane.enabled(purchLine.RecId != 0);
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(psaPwp)))
      #    {
      #        if (ProjTable::setFieldPwpThresholdPercent(ProjTable::find(purchLine.ProjId)))
      #        {
      #            purchLine_IsPwp.visible(true);
      #            psaPwpPercent.visible(true);
      #        }
      #        else
      #        {
      #            purchLine_IsPwp.visible(false);
      #            psaPwpPercent.visible(false);
      #        }
      #
      #        element.setIsPwpField();
      #
      #        if (purchLine.IsPwp)
      #        {
      #            buttonSubledgerdistribution.enabled(false);
      #            buttonSourceDocumentDistributionHeader.enabled(false);
      #        }
      #        else
      #        {
      #            buttonSubledgerdistribution.enabled(true);
      #            buttonSourceDocumentDistributionHeader.enabled(true);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #setVisible_IN
      #private void setVisible_IN()
      #{
      #    TaxParameters       taxParametersLoc = TaxParameters::find();
      #    boolean             isTaxParametersMarked   = TaxParameters::checkTaxParameters_IN();
      #
      #    exciseNone_IN.visible(true);
      #    exciseTraders_IN.visible(false);
      #    exciseManufacture_IN.visible(false);
      #    purchTable_W_ds.object(fieldNum(PurchTable_W, CustomsImportOrder_IN)).visible(taxParametersLoc.Customs_IN);
      #
      #    companyInformation.visible(isTaxParametersMarked);
      #    tabTaxInformation_IN.visible(isTaxParametersMarked || TaxWithholdParameters_IN::checkTaxParameters());
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, AssessableValue_IN)).visible(isTaxParametersMarked);
      #    purchLine_IN_ds.object(fieldNum(PurchLine_IN, MaximumRetailPrice_IN)).visible(isTaxParametersMarked);
      #    excise_IN.visible(taxParametersLoc.Excise_IN);
      #    customs_IN.visible(taxParametersLoc.Customs_IN);
      #    exim_IN.visible(taxParametersLoc.Customs_IN && taxParametersLoc.EximIncentiveSchemes_IN);
      #    serviceTax_IN.visible(taxParametersLoc.ServiceTax_IN);
      #    indiaSalesTax.visible(taxParametersLoc.SalesTax_IN);
      #    indiaVAT.visible(taxParametersLoc.vat_in);
      #}
    ENDSOURCE
    SOURCE #setWidthHeight
      #void setWidthHeight()
      #{
      #    element.design(1).width(element.design(1).widthValue());
      #    element.design(1).height(element.design(1).heightValue());
      #}
    ENDSOURCE
    SOURCE #shouldHeaderChangeRequestsBeEnabled
      #protected boolean shouldHeaderChangeRequestsBeEnabled()
      #{
      #    return purchTable.ChangeRequestRequired;
      #}
    ENDSOURCE
    SOURCE #shouldHeaderInterCompanyBeEnabled
      #protected boolean shouldHeaderInterCompanyBeEnabled()
      #{
      #    return purchTable.isInterCompanyOrder();
      #}
    ENDSOURCE
    SOURCE #shouldLineInterCompanyBeEnabled
      #protected boolean shouldLineInterCompanyBeEnabled()
      #{
      #    return purchTable.isInterCompanyOrder() && !purchLine.isCategoryBased();
      #}
    ENDSOURCE
    SOURCE #showDeliveryAddressFiscalInformation_BR
      #/// <summary>
      #/// Shows or hides Address fiscal information depending on the Purchase type.
      #/// The fields should not be showed if the Purchase type is ReturnItem
      #/// </summary>
      #public void showDeliveryAddressFiscalInformation_BR()
      #{
      #    if(purchTable.PurchaseType == PurchaseType::ReturnItem)
      #    {
      #        headerDlvAddressFiscalInformation_BR.visible(true);
      #        lineDlvAddressFiscalInformation_BR.visible(true);
      #    }
      #    else
      #    {
      #        headerDlvAddressFiscalInformation_BR.visible(false);
      #        lineDlvAddressFiscalInformation_BR.visible(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #showInactiveAddressBar
      #public void showInactiveAddressBar()
      #{
      #    LogisticsLocationEntity::showHideEffectiveAddressMessageBar(element, logisticsPostalAddressHeader, logisticsPostalAddressLine);
      #}
    ENDSOURCE
    SOURCE #STF_checkForAssetId
      #public void STF_checkForAssetId()
      #{
      #    AssetTable      assetTableLocal;//Roberto Zamora
      #    ;
      #    select assetTableLocal where assetTableLocal.AssetId == PurchLine.AssetId;
      #    STF_PurchOrder_AssetTmp.Location = assetTableLocal.Location;
      #    STF_PurchOrder_AssetTmp.Model = assetTableLocal.Model;
      #    STF_PurchOrder_AssetTmp.ModelYear = assetTableLocal.ModelYear;
      #    STF_PurchOrder_AssetTmp.Department = assetTableLocal.Department;
      #    STF_PurchOrder_AssetTmp.Make = assetTableLocal.Make;
      #    STF_PurchOrder_AssetTmp.GuaranteeDate = assetTableLocal.GuaranteeDate;
      #    STF_PurchOrder_AssetTmp.Notes = assetTableLocal.Notes;
      #   // STF_PurchOrder_AssetTmp_ds.reread();
      #    //STF_PurchOrder_AssetTmp_ds.research(true);
      #    //STF_PurchOrder_AssetTmp_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #STF_checkNewFixedAsset
      #//STF_MEGA_INFOR                Dev:Roberto Zamora
      #public void STF_checkNewFixedAsset()
      #{
      #    InventTable             inventTable;
      #    DefaultDimensionView    defDimView;
      #    ;
      #
      #
      #    inventTable = InventTable::find(PurchLine.ItemId);
      #
      #    select DisplayValue from defDimView where defDimView.DefaultDimension == PurchLine.DefaultDimension && defDimView.Name == "ActivosFijos";
      #
      #    if(inventTable.STF_FixedAsset && inventTable.ItemType == ItemType::Service && defDimView.DisplayValue == "TANG")
      #    {
      #        select STF_AssetGroup from inventTable where InventTable.ItemId == PurchLine.ItemId;
      #        AssetTable_Location.enabled(true);
      #        FixedAssets_AssetGroup.enabled(true);
      #        fields.enabled(true);
      #        PurchLine.AssetGroup = inventTable.STF_AssetGroup;
      #        FixedAssets.allowEdit(true);
      #        FixedAssets.enabled(true);
      #        PurchLine_ds.allowEdit(true);
      #        AssetTable_Location.mandatory(NoYes::Yes);
      #        AssetTable_Model.mandatory(NoYes::Yes);
      #        AssetTable_ModelYear.mandatory(NoYes::Yes);
      #        AssetTable_Make.mandatory(NoYes::Yes);
      #        STF_PurchOrder_AssetTmp_ds.object(fieldNum(STF_PurchOrder_AssetTmp,Location)).mandatory(true);
      #    }
      #    else
      #    {
      #        AssetTable_Location.enabled(false);
      #        FixedAssets_AssetGroup.enabled(false);
      #        fields.enabled(false);
      #        PurchLine.AssetGroup = "";
      #        AssetTable_Location.mandatory(NoYes::No);
      #        AssetTable_Model.mandatory(NoYes::No);
      #        AssetTable_ModelYear.mandatory(NoYes::No);
      #        AssetTable_Make.mandatory(NoYes::No);
      #        STF_PurchOrder_AssetTmp_ds.object(fieldNum(STF_PurchOrder_AssetTmp,Location)).mandatory(false);
      #    }
      #
      #    PurchLine.AssetGroup = "";
      #}
    ENDSOURCE
    SOURCE #task
      #public int task(int _taskId)
      #{
      #    #task
      #    int ret;
      #
      #    if (_taskId == #taskF5)
      #    {
      #        purchTableCaller.data(purchTable);
      #        isRefreshing = true;
      #    }
      #
      #    ret = super(_taskId);
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #tmsSetCarrierFieldsFromDlvMode
      #public void tmsSetCarrierFieldsFromDlvMode(DlvModeId   _dlvModeId)
      #{
      #    TMSCarrierService carrierService;
      #
      #    carrierService = TMSCarrierService::findByDlvModeId(_dlvModeId);
      #
      #    tmsPurchTable.CarrierCode           = carrierService.CarrierCode;
      #    tmsPurchTable.CarrierServiceCode    = carrierService.CarrierServiceCode;
      #    tmsPurchTable.ModeCode              = TMSCarrier::find(carrierService.CarrierCode).ModeCode;
      #
      #    tmsPurchTable_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #tmsUpdatePurchTable
      #/// <summary>
      #/// Updates purchase order when transportation fields are updated
      #/// </summary>
      #public void tmsUpdatePurchTable()
      #{
      #    purchTable.DlvMode = TMSCarrierService::findDlvModeId(tmsPurchTable.CarrierCode, tmsPurchTable.CarrierServiceCode);
      #
      #    purchTable_ds.refresh();
      #}
    ENDSOURCE
    SOURCE #toggleWorkflow_ds
      #private void  toggleWorkflow_ds(Object  _formControl)
      #{
      #    Object  parentControl;
      #
      #    int     dataSourceId;
      #    int     oldWorkflow_ds;
      #
      #    // The reference fields does not point to a datasource in the design,
      #    // but the reference group (parent control) does
      #    parentControl = _formControl.parentControl();
      #    if (parentControl  &&  parentControl is FormReferenceGroupControl)
      #    {
      #        dataSourceId = parentControl.dataSource();
      #    }
      #    else
      #    {
      #        dataSourceId = _formControl.dataSource();
      #    }
      #
      #    oldWorkflow_ds = element.design().workflowDatasource();
      #
      #    // Return if the form datasource isn't changed or it is empty
      #    if (!dataSourceId || dataSourceId == oldWorkflow_ds)
      #    {
      #        return;
      #    }
      #
      #    // Distinguish between header and line-item workflow
      #    if (dataSourceId == purchLine_ds.id()
      #    ||  dataSourceId == purchLineForeignTradeCategory_ds.id()
      #    ||  dataSourceId == inventDim_ds.id()
      #    ||  dataSourceId == emsPurchOrderFlowRelation_ds.id()
      #    ||  dataSourceId == emsFlow_ds.id())
      #    {
      #        // Return if the workflow datasource isn't changed
      #        if (oldWorkflow_ds == purchLine_ds.id())
      #        {
      #            return;
      #        }
      #
      #        // Only enable "line-items" when the header already has been submitted
      #        if (!element.canSubmitToWorkflow())
      #        {
      #            element.design().workflowDatasource(purchLine_ds.id());
      #            element.design().workflowType(workFlowTypeStr(PurchLineTemplate));
      #
      #            element.updateWorkflowControls();
      #        }
      #    }
      #    else
      #    {
      #        // Return if the workflow datasource isn't changed
      #        if (oldWorkflow_ds == purchTable_ds.id())
      #        {
      #            return;
      #        }
      #
      #        element.design().workflowDatasource(purchTable_ds.id());
      #        element.design().workflowType(workFlowTypeStr(PurchTableTemplate));
      #
      #        element.updateWorkflowControls();
      #    }
      #}
    ENDSOURCE
    SOURCE #updateControlsForFrenchConfirmedPO
      #/// <summary>
      #/// Enables or disables specific controls for purchase orders that have been confirmed at some point in the past.
      #/// </summary>
      #/// <remarks>
      #/// This is only used for the French regulatory feature.
      #/// </remarks>
      #public void updateControlsForFrenchConfirmedPO()
      #{
      #    boolean canEnable;
      #
      #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
      #    {
      #        canEnable = purchTable.canModifyPurchaseOrder();
      #
      #        purchLine_ds.allowDelete(canEnable);
      #        purchLine_ds.allowCreate(canEnable);
      #
      #        // Header buttons
      #        buttonPurchCancel.enabled(canEnable);
      #        purchaseCalculate.enabled(canEnable);
      #        purchOrderMiscCharges.enabled(canEnable);
      #
      #        // Grid buttons
      #        lineStripNew.enabled(canEnable);
      #        buttonLineQuickQuote.enabled(canEnable);
      #        lineStripDelete.enabled(canEnable);
      #        buttonLineExpandBOM.enabled(canEnable);
      #        markupTrans_LinePurchTable.enabled(canEnable);
      #
      #        // Grid fields
      #        purchLine_PurchQtyGrid.allowEdit(canEnable);
      #        purchLine_PurchPriceGrid.allowEdit(canEnable);
      #        purchLine_LineDiscGrid.allowEdit(canEnable);
      #        purchLine_LinePercentGrid.allowEdit(canEnable);
      #        purchLine_LineAmountGrid.allowEdit(canEnable);
      #        purchLine_PurchUnitGrid.allowEdit(canEnable);
      #        purchCommitmentLineLookup_PSN.allowEdit(canEnable);
      #
      #        // Line details tab fields
      #        lineSalesTax_TaxItemGroup.allowEdit(canEnable);
      #        lineSalesTax_TaxGroup.allowEdit(canEnable);
      #        lineDisc.allowEdit(canEnable);
      #        linePercent.allowEdit(canEnable);
      #        multiLnDisc.allowEdit(canEnable);
      #        multiLnPercent.allowEdit(canEnable);
      #        purchLine_PriceUnit.allowEdit(canEnable);
      #        purchLine_PurchMarkup.allowEdit(canEnable);
      #        projectCostPrice_PurchQty.allowEdit(canEnable);
      #        projectCostPrice_PurchPrice.allowEdit(canEnable);
      #        projectCostPrice_LineAmount.allowEdit(canEnable);
      #        purchCommitmentLineLookup2_PSN.allowEdit(canEnable);
      #    }
      #}
    ENDSOURCE
    SOURCE #updateDesign
      #void updateDesign(InventDimFormDesignUpdate mode)
      #{
      #    InventMovement movement = InventMovement::construct(purchLine);
      #    Set            validInventDimDSset;
      #    InventDimControlIdCollection inventDimControlIdCollection;
      #    boolean emptyLine;
      #    // <GMY>
      #    boolean             isInvoiceTypeEditable_MY;
      #    // </GMY>
      #
      #    switch (mode)
      #    {
      #        case InventDimFormDesignUpdate::Init:
      #            if (!inventDimFormSetup)
      #            {
      #                validInventDimDSset = new Set(Types::String);
      #                validInventDimDSset.add(inventDim_ds.name());
      #                inventDimControlIdCollection = InventDimControlIdCollection::construct();
      #                inventDimControlIdCollection.add(storageDimensionsLine.id(), false);
      #                inventDimControlIdCollection.add(trackingDimesions.id(), false);
      #                inventDimControlIdCollection.add(productDimensions.id(), false);
      #                inventDimControlIdCollection.add(inventoryDimensionsGrid.id(), true);
      #                inventDimFormSetup = InventDimCtrl_Frm_Mov_OrderLine::newFromFormMovement(element, movement, validInventDimDSset
      #                , inventDimControlIdCollection
      #                );
      #
      #            }
      #        case InventDimFormDesignUpdate::Active,
      #             InventDimFormDesignUpdate::FieldChange:
      #            emptyLine = purchLine.ItemId == '' && purchLine.ProcurementCategory == 0;
      #            storageDimensionsLine.allowEdit(!emptyLine);
      #            trackingDimesions.allowEdit(!emptyLine);
      #            productDimensions.allowEdit(!emptyLine);
      #            inventoryDimensionsGrid.allowEdit(!emptyLine);
      #            if (!emptyLine)
      #            {//For performance reasons, only call the inventDimFormSetup if the order line has an item ID or Category ID.
      #                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
      #                inventDimFormSetup.formSetControls(mode == InventDimFormDesignUpdate::Active);
      #            }
      #            break;
      #
      #        default : throw error(strFmt("@SYS54195",funcName()));
      #    }
      #
      #    // <GMY>
      #    if (isSelfBilldInvoiceEnabled_MY)
      #    {
      #        isInvoiceTypeEditable_MY = (purchTable.PurchStatus != PurchStatus::Invoiced && purchTable.PurchStatus != PurchStatus::Canceled);
      #        gstInvoice_MY_M_editInvoiceType_MY.allowEdit(isInvoiceTypeEditable_MY);
      #        purchTable_W_ds.object(fieldNum(PurchTable_W, TaxGSTImportDeclarationNo_MY)).allowEdit(isInvoiceTypeEditable_MY);
      #
      #        this.updateDesignForGSTApprovalNumber_MY();
      #    }
      #    // </GMY>
      #
      #    purchLine_DS.updateDesignForProject();
      #}
    ENDSOURCE
    SOURCE #updateDesign_IN
      #public void updateDesign_IN()
      #{
      #    if(!taxParameters)
      #    {
      #        taxParameters = TaxParameters::find();
      #    }
      #    if (taxParameters.ServiceTax_IN)
      #    {
      #        taxItemGroupHeadingRev = TaxItemGroupHeading::find(purchLine.TaxItemGroup);
      #    }
      #    if (purchTable_W.CustomsImportOrder_IN)
      #    {
      #        if (TaxParameters::find().ServiceTax_IN)
      #        {
      #            purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(true);
      #        }
      #        else
      #        {
      #            purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(false);
      #        }
      #
      #        purchLine_IN_AssessableValueAccountingCurrency.visible(true);
      #    }
      #    else
      #    {
      #        if (taxParameters.ServiceTax_IN)
      #        {
      #            if (taxItemGroupHeadingRev.ServiceTaxBasis_IN == ServiceTaxBasis_IN::CashBasis)
      #            {
      #                purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(false);// Legacy Cash behaviour kept intact.
      #            }
      #            else if (taxItemGroupHeadingRev.ReverseChargePercentage_IN != 0) // POTBasis
      #            {
      #                purchLine_IN_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(true);
      #            }
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #updateDesignForGSTApprovalNumber_MY
      #/// <summary>
      #/// Updates the design for GST approval number.
      #/// </summary>
      #// <GMY>
      #public void updateDesignForGSTApprovalNumber_MY()
      #{
      #    FormDataObject      formDateObj;
      #
      #    formDateObj = purchTable_W_ds.object(fieldNum(PurchTable_W, gstApprovalNumber_MY));
      #    if (purchTable_W.InvoiceType_MY == InvoiceType_MY::SelfBilled
      #        && purchTable.PurchStatus   != PurchStatus::Invoiced
      #        && purchTable.PurchStatus   != PurchStatus::Canceled)
      #    {
      #        formDateObj.allowEdit(true);
      #        formDateObj.mandatory(true);
      #    }
      #    else
      #    {
      #        formDateObj.allowEdit(false);
      #        formDateObj.mandatory(false);
      #    }
      #}
      #// <GMY>
    ENDSOURCE
    SOURCE #updateFormState
      #public void updateFormState(SourceDocumentLineRecId _sourceDocumentLineRecId)
      #{
      #    // Accounting distribution form has closed - update budget check result for changes from edit
      #    purchLine_ds.updateBudgetCheckResultDisplay();
      #}
    ENDSOURCE
    SOURCE #updateRFIDTagging
      #void  updateRFIDTagging()
      #{
      #    RFIDItemTaggingLevel    taggingLevel;
      #    boolean                 itemTagging;
      #    boolean                 caseTagging;
      #    boolean                 palletTagging;
      #
      #    if (inventDimFormSetup.parmDimParmEnabled().InventSerialIdFlag)
      #    {
      #        itemTagging = true;
      #        caseTagging = true;
      #    }
      #    else
      #    {
      #        itemTagging = false;
      #        caseTagging = false;
      #    }
      #
      #    if (inventDimFormSetup.parmDimParmEnabled().wmsPalletIdFlag
      #        &&  purchLine.inventTable().PalletTagging)
      #    {
      #        palletTagging = true;
      #    }
      #    else
      #    {
      #        palletTagging = false;
      #    }
      #
      #    if (itemTagging  ||  caseTagging)
      #    {
      #        taggingLevel = purchLine.inventTable().ItemTaggingLevel;
      #
      #        switch (taggingLevel)
      #        {
      #            case RFIDItemTaggingLevel::None :
      #                itemTagging = false;
      #                caseTagging = false;
      #                break;
      #
      #            case RFIDItemTaggingLevel::ItemLevel :
      #                caseTagging = false;
      #                break;
      #
      #            case RFIDItemTaggingLevel::CaseLevel :
      #                itemTagging = false;
      #                break;
      #        }
      #    }
      #
      #    purchLine_ds.object(fieldNum(PurchLine, ItemTagging)).allowEdit     ( itemTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, ItemTagging)).skip          (!itemTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, CaseTagging)).allowEdit     ( caseTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, CaseTagging)).skip          (!caseTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, PalletTagging)).allowEdit   ( palletTagging);
      #    purchLine_ds.object(fieldNum(PurchLine, PalletTagging)).skip        (!palletTagging);
      #}
    ENDSOURCE
    SOURCE #updateSourceRefControlsAfterLookup_MY
      #/// <summary>
      #///     Updates the controls used for selecting source invoice transaction.
      #/// </summary>
      #// <GMY>
      #public void updateSourceRefControlsAfterLookup_MY()
      #{
      #    VendInvoiceJour     vendInvoiceJourInstance;
      #    RecId               vendInvoiceJourRecId;
      #
      #    vendInvoiceJourRecId = vendInvoiceJourLookupController.parmVendInvoiceJourRecId();
      #    if (vendInvoiceJourRecId != 0)
      #    {
      #        vendInvoiceJourInstance = VendInvoiceJour::findRecId(vendInvoiceJourRecId);
      #        if(vendInvoiceJourInstance)
      #        {
      #            purchLine_W.RefInvoiceId_MY       = vendInvoiceJourInstance.InvoiceId;
      #            purchLine_W.RefInvoiceDate_MY     = vendInvoiceJourInstance.InvoiceDate;
      #        }
      #        vendInvoiceJourLookupController.parmVendInvoiceJourRecId(0);
      #    }
      #}
      #// </GMY>
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable
          Table               #PurchTable
          Index               #PurchIdx
          StartPosition       #Last
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD PurchId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OrderAccount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.reread();
                #    purchLine_ds.refresh();
                #    purchTable_ds.rereadReferenceDataSources();
                #    if (isPurchTableEnabled_W)
                #    {
                #        purchTable_W_ds.refresh();
                #    }
                #    dimensionDefaultingControllerHeader.activated();
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        purchTable.enableDataSourceFields_BR();
                #        purchTable_BR_ds.refresh();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Email
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LogisticsElectronicAddressLookup lookup = LogisticsElectronicAddressLookup::newParameters(_formControl);
                #
                #    lookup.addParty(purchTable.contactPerson().Party);
                #    lookup.addParty(purchTable.vendTable_OrderAccount().Party);
                #
                #    lookup.parmMethodType(LogisticsElectronicAddressMethodType::Email);
                #    lookup.performFormLookup();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CurrencyCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    if (TaxParameters::isCustomsEnable_IN())
                #    {
                #        if (PurchTable::find(purchLine.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
                #        {
                #            //When user changes the currency code. MRP defaulted from item is converted using Customs exchange rate for Export orders.
                #            purchLine_IN.MaximumRetailPrice_IN = Currency::customsCurAmount_IN(purchLine_IN.CustomsMaxRetailPrice_IN, purchTable.CurrencyCode, Direction_IN::Import, systemDateGet(), false);
                #        }
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Payment
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    boolean allowEditEmplAccount_RU;
                #
                #    super();
                #
                #    if (advanceHoldersEnabled)
                #    {
                #        allowEditEmplAccount_RU = PaymTerm::isEmplAccountUsed_RU(purchTable.Payment);
                #        purchTable_W_ds.object(fieldNum(PurchTable_W, EmplAccount_RU)).allowEdit(allowEditEmplAccount_RU);
                #        purchTable_ds.object(fieldNum(PurchTable, CashDisc)).allowEdit(!allowEditEmplAccount_RU);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CashDisc
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    CashDisc    cashDisc;
                #
                #    super();
                #
                #    cashDisc = CashDisc::find(purchTable.CashDisc);
                #    purchTable.CashDiscPercent = cashDisc.Percent;
                #
                #    purchTable.dataSource().refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VendGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    dimensionDefaultingControllerHeader.activated();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DlvMode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    element.tmsSetCarrierFieldsFromDlvMode(purchTable.DlvMode);
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchaseType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Modifies the purchase lines when the purchase type is changed.
                #/// </summary>
                #/// <remarks>
                #/// This method calls the <c>modifyPurchaseType</c> method of the <c>PurchTableType</c> class to
                #/// so that the fixed asset information is cleared if necessary. The purchase line data source
                #/// is refreshed as the information may have been modified.
                #/// </remarks>
                #public void modified()
                #{
                #    super();
                #
                #    purchTableType = purchTable.type();
                #    purchTableType.modifyPurchaseType();
                #    element.configBankDocumentControls();
                #    purchLine_ds.refresh();
                #    element.enableAdvanceAction();
                #    if (BrazilParameters::isEnabled())
                #    {
                #        purchTable.enableDataSourceFields_BR();
                #        purchTable_ds.rereadReferenceDataSources();
                #        element.showDeliveryAddressFiscalInformation_BR();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD URL
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LogisticsElectronicAddressLookup lookup = LogisticsElectronicAddressLookup::newParameters(_formControl);
                #
                #    lookup.addParty(purchTable.contactPerson().Party);
                #    lookup.addParty(purchTable.vendTable_OrderAccount().Party);
                #
                #    lookup.parmMethodType(LogisticsElectronicAddressMethodType::URL);
                #    lookup.performFormLookup();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymentSched
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    if (purchTable.PaymentSched)
                #    {
                #        buttonPaymentSchedule.enabled(true);
                #    }
                #    else
                #    {
                #        buttonPaymentSchedule.enabled(false);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventSiteId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchTable_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ContactPersonId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    purchTable_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventLocationId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    //BEGIN             STF_MEGA_PreGoLive              Dev: Roberto Zamora
                #    if(PurchTable.InventLocationId)
                #        STF_CCAndLocationsParameters::findByLocationId(PurchTable.InventLocationId, PurchTable.DefaultDimension);
                #    //END               STF_MEGA_PreGoLive              Dev: Roberto Zamora
                #    purchTable_ds.refresh();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    if (purchTable.InventSiteId)
                #    {
                #        InventLocation::lookupBySiteIdAllTypes(_formControl, purchTable.InventSiteId);
                #    }
                #    else
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    dimensionDefaultingControllerHeader.activated();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VATNum
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    if (TaxVATNumTable::taxVATNumTableEnabled())
                #        TaxVATNumTable::jumpRefVATNum(purchTable, element);
                #    else
                #        super();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    if (TaxVATNumTable::taxVATNumTableEnabled())
                #        TaxVATNumTable::lookupVATNum(vatNum,purchTable);
                #    else
                #        super(_formControl, _filterStr);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD FixedDueDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    PaymCalendarAdjustedDate        paymCalendarAdjustedDate;
                #
                #    super();
                #
                #    // perform the payment calendar work only for the required countries
                #    if (SysCountryRegionCode::isLegalEntityInConsolidatedCountryRegion())
                #    {
                #        paymCalendarAdjustedDate = PaymCalendarSourcePurchaseOrder::getAdjustedDate(purchTable);
                #
                #        purchTable.FixedDueDate = PaymCalendarProcessor::getAdjustedDueDate(purchTable.FixedDueDate, priorDueDate, paymCalendarAdjustedDate);
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ContractNum_SA
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(
                #    FormControl _formControl,
                #    str         _filterStr)
                #{
                #    VendContractZakat_SA::lookupContracts(_formControl, purchTable.OrderAccount);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD DeliveryPostalAddress
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        purchTable_ds.cacheCalculateMethod(tableMethodStr(PurchTable, deliveryCNPJCPFNUM_BR));
                #        purchTable_ds.cacheCalculateMethod(tableMethodStr(PurchTable, deliveryIENum_BR));
                #    }
                #
                #    purchTable_ds.refresh();
                #
                #    element.showInactiveAddressBar();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #    LogisticsLocationSelectionLookup_Purch lookup;
                #
                #    lookup = LogisticsLocationSelectionLookup_Purch::newParameters(_formReferenceControl);
                #
                #    lookup.parmInventSiteId(purchTable.InventSiteId);
                #    lookup.parmInventLocationId(purchTable.InventLocationId);
                #
                #    lookup.addRoleByType(LogisticsLocationRoleType::Delivery);
                #    lookup.parmReturnLocation(false);
                #
                #    ret = lookup.performFormLookup();
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD BankDocumentType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.configBankDocumentControls();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountingDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret = true;
                #
                #    if(!purchTable.checkAccountingDateFiscalYear())
                #    {
                #        purchTable.AccountingDate = purchTable.orig().AccountingDate;
                #        ret = false;
                #        Box::warning("@SYS335906");
                #    }
                #    else
                #    {
                #        ret = super();
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    dimensionDefaultingControllerHeader.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
                #    dimensionDefaultingControllerLine.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #reread_BR
          #public void reread_BR()
          #{
          #    purchTable_BR_ds.reread();
          #    purchTable_BR_ds.rereadReferenceDataSources();
          #    purchtable_BR_ds.refresh();
          #}
        ENDSOURCE
        SOURCE #enableJournalButtons
          #/// <summary>
          #///     Enables journal buttons.
          #/// </summary>
          #public void enableJournalButtons()
          #{
          #    #ISOCountryRegionCodes
          #
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
          #    {
          #        purchTableForm.parmButtonUpdateInvoiceRegistration_IN(buttonUpdateInvoiceRegistration_IN);
          #        purchTableForm.parmButtonUpdateBillOfEntry_IN(buttonUpdateBillOfEntry_IN);
          #        purchTableForm.parmButtonJournalBillOfEntry_IN(buttonJournalBillOfEntry_IN);
          #    }
          #
          #    // Enable journal buttons
          #    purchTableForm.enableUpdateJournalButtons(purchTable,
          #                                              buttonUpdatePurchaseOrder,
          #                                              buttonUpdateReceiptsList,
          #                                              buttonUpdatePackingSlip,
          #                                              buttonUpdateInvoice,
          #                                              buttonProformaPurchaseOrder,
          #                                              buttonProformaReceiptsList,
          #                                              buttonProformaPackingSlip,
          #                                              buttonProformaInvoice
          #                                              ,buttonUpdateInvoice4Paym_RU,
          #                                              buttonUpdateFacture_RU,
          #                                              factureEditLinesVend_RU,
          #                                              buttonProformaInvoice4Paym_RU,
          #                                              buttonProformaFacture_RU,
          #                                              factureEditLinesVend_Proforma_RU
          #                                              , buttonConfirmationRequest,
          #                                              mcrButtonDeliverMenuItemButton,
          #                                              mcrButtonReleaseMenuItemButton,
          #                                              mcrButtonProformaDeliver,
          #                                              mcrButtonProformaRelease);
          #    // Re-enable journal buttons when multiple orders are selected.
          #    buttonConfirm.enabled(buttonUpdatePurchaseOrder.enabled());
          #}
        ENDSOURCE
        SOURCE #enableDistributionTemplate
          #/// <summary>
          #/// Enables the <c>AccountingDistributionTemplate</c> field based on the purchase order header state.
          #/// </summary>
          #public void enableDistributionTemplate()
          #{
          #    distributionTemplateHeader.allowEdit(purchTable.canApplyAllocationOrDistributionTemplate());
          #}
          #
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    logisticsPostalAddressHeader_ds.validTimeStateUpdate(ValidTimeStateUpdate::Correction);
          #    logisticsPostalAddressHeader_ds.query().validTimeStateDateTimeRange(DateTimeUtil::minValue(), DateTimeUtil::maxValue());
          #    super();
          #
          #    if ((isCalledFromLP || isRefreshing)
          #        && purchTableCaller
          #        && purchTableCaller.PurchId != purchTable.PurchId)
          #    {
          #        purchTable_ds.findRecord(purchTableCaller);
          #        isRefreshing = false;
          #    }
          #}
        ENDSOURCE
        SOURCE #updateBudgetCheckResultDisplay
          #/// <summary>
          #/// Updates budget check result display cache.
          #/// </summary>
          #public void updateBudgetCheckResultDisplay()
          #{
          #    if (this.cacheCalculateMethod(tableMethodStr(PurchTable, displayBudgetCheckResult)))
          #    {
          #        purchTable_ds.refresh();
          #        // Must refresh form cache for ALL purchase order lines.
          #        purchLine_ds.research(true);
          #    }
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    Query  query;
          #
          #    switch(element.args().dataset())
          #    {
          #        case tableNum(CostControlTransCommittedCost):
          #            purchTable_ds.autoQuery(false);
          #
          #            query   = new Query();
          #            queryBuildRangeProj = query.addDataSource(tableNum(PurchTable)).addRange(fieldNum(PurchTable, PurchId));
          #            purchTable_ds.query(query);
          #            break;
          #    }
          #
          #    super();
          #
          #    if ((TradeFormHelper::isCalledFromForm(element.args(), formStr(VendTable))
          #        || TradeFormHelper::isCalledFromForm(element.args(), formStr(VendTableListPage)))
          #        && element.args().record().TableId == tableNum(VendTable))
          #    {
          #        this.query().dataSourceTable(tableNum(PurchTable)).clearDynalinks();
          #    }
          #
          #    if(InventParameters::find().UseQualityManagement)
          #    {
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, qualityOrderStatusDisplay), false);
          #    }
          #    purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, displayBudgetCheckResult), false);
          #    purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, displayDocumentStatus));
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
          #    {
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, agreementDocumentTitle_RU), true);
          #    }
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, deliveryCNPJCPFNUM_BR));
          #        purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, deliveryIENum_BR));
          #    }
          #    purchTable_ds.cacheAddMethod(tableMethodStr(PurchTable, editReasonComment));
          #}
          #
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #    List                    purchTable2LineUpdateFields;
          #    ListEnumerator          purchTable2LineUpdateFieldsEnumerator;
          #    PurchTable2LineField    purchTable2LineField;
          #
          #    ret = super();
          #
          #    copyTaxGroupToMarkupTrans = DialogButton::No;
          #    if (ret && purchTable.TaxGroup != purchTable.orig().TaxGroup)
          #    {
          #        copyTaxGroupToMarkupTrans   = MarkupTrans::promptCopyTaxGroupToMarkupTrans(purchTable.TableId, purchTable.RecId);
          #        ret                         = copyTaxGroupToMarkupTrans != DialogButton::Cancel;
          #    }
          #
          #    if (ret)
          #    {
          #        purchTable2LineUpdatePrompt = PurchTable2LineUpdatePrompt::newExecuteExtendedPrompt(purchTable, copyTaxGroupToMarkupTrans);
          #        // If the purchTable2LineUpdatePrompt object is null no fields are to be updated.
          #        if(purchTable2LineUpdatePrompt)
          #        {
          #            ret = purchTable2LineUpdatePrompt.parmExtendedPromptReturnValue();
          #        }
          #    }
          #
          #    if (isRU
          #        && ret
          #        && purchTable2LineUpdatePrompt)
          #    {
          #        purchTable2LineUpdateFields = List::create(purchTable2LineUpdatePrompt.packedSalesPurchTableToLineUpdateFields());
          #
          #        purchTable2LineUpdateFieldsEnumerator = purchTable2LineUpdateFields.getEnumerator();
          #
          #        while (purchTable2LineUpdateFieldsEnumerator.moveNext())
          #        {
          #            purchTable2LineField = purchTable2LineUpdateFieldsEnumerator.current();
          #            if (purchTable2LineField.parmFieldId()          == PurchTable::fieldIdToInternalFieldId_W(fieldNum(PurchTable_RU, InventProfileId_RU), tableNum(PurchTable_RU))
          #                && purchTable2LineField.parmUpdateLines()   == NoYes::No)
          #            {
          #                // must be checked for possible inconsistence if user did not select to propagate inventProfileId to the order lines
          #                // otherwise it will be checked on sales order validateWrite() method
          #                ret = purchTable.checkInventProfile_RU(true);
          #            }
          #        }
          #    }
          #
          #    if(ret)
          #    {
          #        if(!STF_BudgetKeyIdUnion::exist(purchTable.ISBudgetKeyId))
          #        {
          #            ret = false;
          #            throw error("La partida presupuestal no es válida");
          #        }
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #void  write()
          #{
          #    DialogButton            copyAddress     = DialogButton::No;
          #    boolean                 convertCurrency = false;
          #    boolean                 rollBackCurrencyChange;
          #    TradeCurencyConversion  tradeCurrencyConversion;
          #    LogisticsPostalAddressRecId originalDeliveryPostalAddress;
          #    boolean                     mustReread;
          #    TMSPurchTable           newTMSPurchTable;
          #
          #    if (purchTable.checkUpdate())
          #    {
          #        if (PurchLine::exist(purchTable.PurchId) || MarkupTrans::exist(purchTable.TableId, purchTable.RecId))
          #        {
          #            if (purchTable.CurrencyCode != purchTable.orig().CurrencyCode)
          #            {
          #                [convertCurrency, tradeCurrencyConversion] = PurchTable::promptConvertCurrencyCode(purchTable);
          #                rollBackCurrencyChange = !convertCurrency;
          #            }
          #        }
          #
          #        if (PurchLine::exist(purchTable.PurchId))
          #        {
          #            if (purchTable.DeliveryPostalAddress != purchTable.orig().DeliveryPostalAddress)
          #            {
          #                copyAddress = PurchTable::promptCopyDeliveryAddress();
          #                originalDeliveryPostalAddress = purchTable.orig().DeliveryPostalAddress;
          #            }
          #        }
          #
          #        ttsbegin;
          #
          #        if (convertCurrency)
          #        {
          #            if (isConfigurationkeyEnabled(configurationKeyNum(LedgerAdv2BudgetCtrl)))
          #            {
          #                purchTable.convertCurrencyCode(purchTable.CurrencyCode, tradeCurrencyConversion, purchTable.AccountingDate);
          #            }
          #            else
          #            {
          #                purchTable.convertCurrencyCode(purchTable.CurrencyCode, tradeCurrencyConversion);
          #            }
          #        }
          #        else
          #        {
          #            if (rollBackCurrencyChange)
          #            {
          #                // Cancel has been choosen in the dialogue:
          #                // Currency code should not be recalculated, in fact all changes in currency code should be
          #                // rolled back...
          #                purchTable.CurrencyCode = purchTable.orig().CurrencyCode;
          #            }
          #        }
          #
          #        dimensionDefaultingControllerHeader.writing();
          #
          #        if (TaxThaiGovCertificationFeatureChecker::isTaxBranchEnabled())
          #        {
          #            purchTable_W.TaxBranch = TaxBranchType::getTaxBranchRecIdByDefaultDimension(purchTable.DefaultDimension);
          #        }
          #
          #        if (copyTaxGroupToMarkupTrans == DialogButton::Yes || copyTaxGroupToMarkupTrans == DialogButton::YesToAll)
          #        {
          #            MarkupTrans::updateTaxGroup(purchTable.TableId, purchTable.RecId, purchTable.TaxGroup, purchTable.orig().TaxGroup, copyTaxGroupToMarkupTrans,
          #                purchTable.isInvoiceMatched());
          #            copyTaxGroupToMarkupTrans = DialogButton::No;
          #        }
          #
          #        super();
          #        if(SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(PurchTable_Intrastat)))
          #        {
          #           purchtable_Intrastat.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #        if (isPurchTableEnabled_W)
          #        {
          #            purchTable_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #        if (isPurchTableEnabled_RU)
          #        {
          #            purchTable_RU.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #        if (isPurchTableEnabled_BR)
          #        {
          #            purchTable_BR.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchTable);
          #        }
          #
          #        if (copyAddress != DialogButton::Cancel  &&  copyAddress != DialogButton::No)
          #        {
          #            purchTable.copyAddressToLine(copyAddress, originalDeliveryPostalAddress);
          #        }
          #
          #        if (purchTable2LineUpdatePrompt)
          #        {
          #            purchTable2LineUpdatePrompt.run();
          #            purchTable2LineUpdatePrompt = null;
          #            mustReread = true;
          #        }
          #
          #        if (!tmsPurchTable.isTmp()) // No need to query for TMSPurchTable if it is disabled
          #        {
          #            newTMSPurchTable = TMSPurchTable::find(purchTable.PurchId);
          #
          #            tmsPurchTable.data(newTMSPurchTable);
          #            tmsPurchTable.reread();
          #        }
          #
          #        ttscommit;
          #
          #        if (mustReread)
          #        {
          #            purchLine_ds.research(true);
          #        }
          #        if (BrazilParameters::isEnabled())
          #        {
          #            purchLine_ds.research(true);
          #        }
          #    }
          #    defaultPurchLine.clear();
          #    purchTable_ds.reread();
          #    purchTable_ds.refresh();
          #}
        ENDSOURCE
        SOURCE #delete
          #void  delete()
          #{
          #    if (purchTableType)
          #    {
          #        purchTableType.formMethodDataSourceDelete(element, purchTable_ds);
          #    }
          #
          #    super();
          #
          #    dimensionDefaultingControllerHeader.deleted();
          #}
        ENDSOURCE
        SOURCE #create
          #void  create(boolean  append = true)
          #{
          #    PurchTable      newPurchTable;
          #    TMSPurchTable   newTMSPurchTable;
          #    boolean         purchTableFormCreate;
          #    QueryBuildDataSource    purchTableDS;
          #
          #    element.editPurch(true);
          #
          #    if (wasCalledFromVendorSearch)
          #    {
          #        purchTableFormCreate = purchTableForm.createFromVendorSearch(vendAccountSearch);
          #    }
          #    else
          #    {
          #        purchTableFormCreate = purchTableForm.create();
          #    }
          #    if (purchTableFormCreate)
          #    {
          #        if(skipLinkActive)
          #        {
          #            skipLinkActive = false;
          #            if (!linkActiveHeaderExecuted)
          #            {
          #                this.linkActive();
          #            }
          #        }
          #        newPurchTable = purchTableForm.purchTable();
          #        if (newPurchTable.ProjId && element.args().dataset() == tableNum(ProjTable))
          #        {
          #            purchTableDS = purchTable_ds.queryRun().query().dataSourceTable(tableNum(PurchTable));
          #            purchTableDS.addRange(fieldNum(PurchTable, PurchId)).value(newPurchTable.PurchId);
          #        }
          #        defaultPurchLine.clear();
          #        element.setLineDefaults();
          #
          #        if (newPurchTable)
          #        {
          #            dimensionDefaultingControllerHeader.activated();
          #            if (purchTable.AccountingDate)
          #            {
          #                dimensionDefaultingControllerHeader.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
          #            }
          #
          #            super(append);
          #            purchTable.data(newPurchTable);
          #            if (isPurchTableEnabled_W || isPurchTableEnabled_RU || isPurchTableEnabled_BR)
          #            {
          #                purchTable.SysExtensionSerializerMap::unpackAll();
          #            }
          #            purchTable_ds.rereadReferenceDataSources();
          #
          #            lineViewTab.setFocus();
          #
          #            if (!tmsPurchTable.isTmp()) // No need to query for TMSPurchTable if it is disabled
          #            {
          #                newTMSPurchTable = TMSPurchTable::find(purchTable.PurchId);
          #
          #                tmsPurchTable.data(newTMSPurchTable);
          #                tmsPurchTable.reread();
          #            }
          #        }
          #        else
          #        {
          #            element.editPurch(purchTableForm.editHeaderAllowed(), purchTableForm.deleteHeaderAllowed());
          #        }
          #    }
          #    else
          #    {
          #        if(TradeFormHelper::isCalledFromForm(element.args()))
          #        {
          #            element.close();
          #        }
          #        else
          #        {
          #            this.editPurch();
          #        }
          #    }
          #
          #    skipLinkActive = false;
          #}
        ENDSOURCE
        SOURCE #active
          #int  active()
          #{
          #    int                                 ret;
          #    PurchTotals                         purchTotals;
          #    boolean                             editHeaderAllowed;
          #    boolean                             deleteHeaderAllowed;
          #    boolean                             allowEditDeliveryPostalAddress;
          #
          #    purchTableForm.purchTable(purchTable);
          #
          #    editHeaderAllowed   = purchTableForm.editHeaderAllowed();
          #    deleteHeaderAllowed = purchTableForm.deleteHeaderAllowed();
          #
          #    element.editPurch(editHeaderAllowed, deleteHeaderAllowed);
          #
          #    ret = super();
          #
          #    dimensionDefaultingControllerHeader.activated();
          #
          #    if (purchTable.AccountingDate)
          #    {
          #        dimensionDefaultingControllerHeader.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
          #    }
          #
          #    if (purchTable.RecId)
          #    {
          #        purchTable_ds.enableDistributionTemplate();
          #    }
          #
          #    interCompanyAllowIndirectCreationOrig.visible(purchTable.interCompanyAllowIndirectCreationOrig() ? true : false);
          #
          #    purchTableForm.setHeaderAccess();
          #    allowEditDeliveryPostalAddress = purchTable_ds.object(fieldNum(PurchTable, DeliveryPostalAddress)).allowEdit();
          #    logisticsLocationSelectHeader.enabled(allowEditDeliveryPostalAddress);
          #    dirPartyPostalAddressNewHeader.enabled(allowEditDeliveryPostalAddress);
          #
          #    if (isRU)
          #    {
          #        purchTable_ds.object(fieldNum(PurchTable, PostingProfile)).allowEdit(! purchTable_W.EmplAccount_RU);
          #    }
          #
          #    if (tmpPurchTableTaxTransForm && !tmpPurchTableTaxTransForm.closed())
          #    {
          #        purchTotals = PurchTotals::newPurchTable(purchTable);
          #        purchTotals.calc();
          #        tmpPurchTableTaxTransForm.pushTaxObject(purchTotals.tax());
          #    }
          #    // <GIN>
          #    if (TaxWithholdParameters_IN::checkTaxParameters())
          #    {
          #        if ( tmpPurchTableTaxWithholdTransForm && !tmpPurchTableTaxWithholdTransForm.closed())
          #        {
          #            purchTotals = PurchTotals::newPurchTable(purchTable);
          #            purchTotals.calc();
          #            tmpPurchTableTaxWithholdTransForm.pushTaxObject(purchTotals.taxWithhold_IN());
          #        }
          #    }
          #    if (TaxParameters::checkTaxParameters_IN())
          #    {
          #        if (ExciseRecordTypeTable_IN::existForceBatchValidation(ExciseRecordType_IN::RG23D)
          #            && (purchTable_W.ExciseVendorType_IN == ExciseVendorType_IN::FirstStageDealer
          #                || purchTable_W.ExciseVendorType_IN == ExciseVendorType_IN::SecondStageDealer))
          #        {
          #            ExciseManufacturerImporterInvDetails_IN.enabled(true);
          #        }
          #        else
          #        {
          #            ExciseManufacturerImporterInvDetails_IN.enabled(false);
          #        }
          #    }
          #    // </GIN>
          #
          #    element.interCompanyRefreshCache();
          #
          #    if (isRU)
          #    {
          #        element.enabledVATTaxAgent_RU();
          #    }
          #
          #    purchTable_ds.object(fieldNum(PurchTable,ProjId)).allowEdit(purchTable.ProjId ? true : false);
          #    if (purchTable.ProjId && !purchTable.isProjectSalesItemReqPO())
          #    {
          #        headerInquiry_CostControlCommittedCost.enabled(true);
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #        {
          #            if ((purchTable.PurchStatus == PurchStatus::Received) ||
          #                (purchTable.PurchStatus == PurchStatus::Invoiced))
          #            {
          #                purchTable_ds.object(fieldNum(PurchTable,ProjId)).allowEdit(false);
          #            }
          #            else
          #            {
          #                purchTable_ds.object(fieldNum(PurchTable,ProjId)).allowEdit(true);
          #            }
          #        }
          #    }
          #    else
          #    {
          #        headerInquiry_CostControlCommittedCost.enabled(false);
          #    }
          #
          #    element.configBankDocumentControls();
          #    element.setTitleText();
          #    element.showInactiveAddressBar();
          #
          #    if (zakatParameterEnabled)
          #    {
          #        element.enableContractNumber_SA();
          #    }
          #
          #    buttonSourceDocumentDistributionHeader.enabled(purchTable.SourceDocumentLine ? true : false);
          #
          #    element.updateControlsForFrenchConfirmedPO();
          #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #    {
          #        retailAddItemMenuItem.enabled(editPurchOrder.enabled()
          #            && !purchTable.mcrDropShipment);
          #
          #        retailSumLines_ds.executeQuery();
          #
          #        if (rboItemPackage.isActivePage() && treeView.value())  //Only fills the package tree when package tab is chosen and user has selected tree view
          #            element.fillPackageTree();
          #
          #    }
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        purchTableForm.activate_BR();
          #        element.showDeliveryAddressFiscalInformation_BR();
          #    }
          #
          #    if (TaxParameters::isCustomsEnable_IN())
          #    {
          #        customsImportAssessableValue_IN.enabled(purchTable_W.CustomsImportOrder_IN == NoYes::Yes && TaxParameters::find().Customs_IN == NoYes::Yes);
          #        purchLine_CustomsMaxRetailPrice_IN.visible(PurchTable::find(purchTable.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes && TaxParameters::find().Customs_IN == NoYes::Yes);
          #        purchLine_MaximumRetailPrice_IN.enabled(PurchTable::find(purchLine.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::No);
          #    }
          #    if (TaxWithholdParameters_IN::checkTaxParameters())
          #    {
          #        element.setTaxWithholdEnabled_IN();
          #    }
          #
          #    purchTable_ds.enableJournalButtons();
          #
          #    element.enableTMSFields();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #linkActive
          #void linkActive()
          #{
          #    ProjTable                       projTableLink;
          #    ProjTable                       projTableLinkQuery;
          #    ProjInvoiceTable                projInvoiceTableLink;
          #    QueryBuildRange                 projIdPurchTable;
          #    ProjWIPTable                    projWIPTable;
          #    CostControlTransCommittedCost   costControlTransCommittedCost;
          #    PurchLine                       purchLineLink;
          #    QueryBuildDataSource            purchTableDS;
          #    QueryBuildDataSource            queryBuildDataSource;
          #    InterCompanyPurchSalesReference interCompanyPurchReference;
          #
          #    if (skipLinkActive)
          #    {
          #        return;
          #    }
          #
          #    // Initialize QueryBuildDataSource as table PurchTable.
          #    purchTableDS = purchTable_ds.query().dataSourceTable(tableNum(PurchTable));
          #
          #    switch(element.args().dataset())
          #    {
          #        case tableNum(InterCompanyPurchSalesReference):
          #            // Clear dynalinks, since multiple order can be shown
          #            purchTableDS.clearDynalinks();
          #            // Show all orders referenced from the original order
          #            interCompanyPurchReference  = element.args().record() as InterCompanyPurchSalesReference;
          #            queryBuildDataSource        = purchTableDS.addDataSource(tableNum(InterCompanyPurchSalesReference));
          #            queryBuildDataSource.relations(true);
          #            queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
          #            queryBuildDataSource.addRange(fieldNum(InterCompanyPurchSalesReference, SalesId)).value(interCompanyPurchReference.SalesId);
          #            break;
          #
          #        case tableNum(CostControlTransCommittedCost):
          #            costControlTransCommittedCost = element.args().record();
          #            queryBuildRangeProj.value(queryValue(costControlTransCommittedCost.RefId));
          #            break;
          #
          #
          #        case tableNum(ProjTable):
          #            // Clear any range on field ProjId of table PurchTable
          #            projIdPurchTable    = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            while (projIdPurchTable)
          #            {
          #                purchTableDS.clearRange(fieldNum(PurchTable,ProjId));
          #                projIdPurchTable  = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            }
          #
          #            projTableLink = element.args().record();
          #
          #            // Find all records in PurchLine that matches the Project Id.
          #            while select PurchId from purchLineLink group by PurchId
          #                where purchLineLink.ProjId  == projTableLink.ProjId
          #                  && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // Find all records in PurchLine that matches the sub-projects of the Project Id.
          #            while select ProjId from projTableLinkQuery
          #                where projTableLinkQuery.ParentId == projTableLink.ProjId
          #                join PurchId from purchLineLink group by PurchId
          #                    where purchLineLink.ProjId == projTableLinkQuery.ProjId
          #                        && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // Clear the dynalinks to remove the dynalink range by Project Id in PurchTable.
          #            if (purchTableDS.findRange(fieldNum(PurchTable,PurchId)))
          #            {
          #                purchTableDS.clearDynalinks();
          #            }
          #
          #            break;
          #
          #        case tableNum(ProjInvoiceTable):
          #            // Clear any range on field ProjId of table PurchTable
          #            projIdPurchTable    = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            while (projIdPurchTable)
          #            {
          #                purchTableDS.clearRange(fieldNum(PurchTable,ProjId));
          #                projIdPurchTable  = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            }
          #
          #            projInvoiceTableLink   = element.args().record();
          #
          #            // Find all records in PurchLine that matches the Project Ids related to a Project Contract.
          #            while select ProjId from projTableLink
          #                where projTableLink.ProjInvoiceProjId   == projInvoiceTableLink.ProjInvoiceProjId
          #                join PurchId from purchLineLink
          #                    where purchLineLink.ProjId == projTableLink.ProjId
          #                      && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // If no matching records foung in PurchLine, look for records in PurchTable.
          #            if (!purchTableDS.findRange(fieldNum(PurchTable, PurchId)))
          #            {
          #                while select ProjId from projTableLink
          #                    where projTableLink.ProjInvoiceProjId   == projInvoiceTableLink.ProjInvoiceProjId
          #                {
          #                    purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,ProjId)).value(projTableLink.ProjId);
          #                }
          #            }
          #            break;
          #
          #        case tableNum(ProjWIPTable)     :
          #            // Clear any range on field ProjId of table PurchTable
          #            projIdPurchTable    = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            while (projIdPurchTable)
          #            {
          #                purchTableDS.clearRange(fieldNum(PurchTable,ProjId));
          #                projIdPurchTable  = purchTableDS.findRange(fieldNum(PurchTable,ProjId));
          #            }
          #
          #            projWIPTable   =   element.args().record();
          #
          #            // Find all records in PurchLine that matches the Project Ids related to an estimate project.
          #            while select ProjId from projTableLink
          #                where projTableLink.wipProject  == projWIPTable.ProjId
          #                join PurchId from purchLineLink
          #                    where purchLineLink.ProjId == projTableLink.ProjId
          #                      && !purchLineLink.IsDeleted
          #            {
          #                purchTableDS.addRange(fieldNum(PurchTable,PurchId)).value(purchLineLink.PurchId);
          #            }
          #
          #            // If no matching records foung in PurchLine, look for records in PurchTable.
          #            if (!purchTableDS.findRange(fieldNum(PurchTable, PurchId)))
          #            {
          #                while select ProjId from projTableLink
          #                    where projTableLink.wipProject  == projWIPTable.ProjId
          #                {
          #                    purchTable_ds.query().dataSourceTable(tableNum(PurchTable)).addRange(fieldNum(PurchTable,ProjId)).value(projTableLink.ProjId);
          #
          #                }
          #            }
          #            break;
          #    }
          #
          #    if (purchTableForm.linkActive())
          #    {
          #        purchTableForm.purchTable(element.args().record());
          #        purchTable_ds.query(purchTableForm.queryPurchTable(purchTable_ds.query()));
          #    }
          #
          #    if (purchTableType)
          #    {
          #        purchTableType.formMethodDataSourceLinkActive(element, purchTable_ds);
          #    }
          #
          #    super();
          #    linkActiveHeaderExecuted = true;
          #}
        ENDSOURCE
        SOURCE #editPurch
          #void  editPurch()
          #{
          #    purchTableForm.purchTable(purchTable);
          #
          #    element.editPurch(purchTableForm.editHeaderAllowed(), purchTableForm.deleteHeaderAllowed());
          #
          #    if (isRU)
          #    {
          #        element.enableInvoice4PaymButtons();
          #    }
          #}
        ENDSOURCE
        SOURCE #editHeader
          #void editHeader()
          #{
          #    this.editPurch();
          #}
        ENDSOURCE
        SOURCE #reReadLines
          #void  reReadLines()
          #{
          #    purchLine_ds.executeQuery();
          #    this.editPurch();
          #}
        ENDSOURCE
        SOURCE #leave
          #public boolean leave()
          #{
          #    // PBA begin
          #    if( ! purchLine.PBAItemLine::checkMandatory() )
          #    {
          #        return false;
          #    }
          #    // PBA end
          #
          #    return super();
          #}
        ENDSOURCE
        SOURCE #setTouched
          #/// <summary>
          #/// Reset some informtaion when the current record is updated.
          #/// </summary>
          #void setTouched()
          #{
          #    purchIdTouched = purchTable.PurchId;
          #}
        ENDSOURCE
        SOURCE #reReadPackages
          #/// <summary>
          #/// Re-Read Packages
          #/// </summary>
          #void  reReadPackages()
          #{
          #    retailPackagePurch_ds.executeQuery();
          #}
        ENDSOURCE
        SOURCE #onSummaryRecordsInvalid
          #/// <summary>
          #///     Refreshes the summary factboxes to show updated record
          #/// </summary>
          #/// <param name="_tableId">
          #///     Table id of the table whose record became invalid
          #/// </param>
          #public void onSummaryRecordsInvalid(TableId _tableId)
          #{
          #    PartList                partList;
          #    FormRun                 formPart;
          #    str                     formName;
          #    int                     counter;
          #    PurchTotalsSummary      purchTotalsSummary;
          #    PurchEncumbranceSummary purchEncumbranceSummary;
          #
          #    if (purchParameters.AutomaticFactBoxUpdateOnPO_PSN && isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #    {
          #        switch(_tableId)
          #        {
          #            case tableNum(PurchTotalsSummary):
          #                purchTotalsSummary = PurchTotalsSummary::findByPurchId(purchTable.PurchId);
          #                formName = formStr(PurchTotalsSummaryPart);
          #                break;
          #
          #            case tableNum(PurchEncumbranceSummary):
          #                purchEncumbranceSummary = PurchEncumbranceSummary::findByPurchId(purchTable.PurchId);
          #                formName = formStr(PurchEncumbranceSummaryPart);
          #                break;
          #        }
          #
          #        if ((purchTotalsSummary && purchTotalsSummary.IsValid) || (purchEncumbranceSummary && !purchEncumbranceSummary.IsValid))
          #        {
          #            partList = new PartList(element);
          #            for(counter = 1; counter <= partList.partCount(); counter++)
          #            {
          #                if(partList.getPartById(counter).name() == formName)
          #                {
          #                    formPart = partList.getPartById(counter);
          #                    formPart.dataSource().reread();
          #                    formPart.dataSource().refresh();
          #                    break;
          #                }
          #            }
          #        }
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine
          Table               #PurchLine
          Index               #PurchLineIdx
          JoinSource          #PurchTable
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD ItemId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    InventLookup lookup;
                #
                #    lookup = new InventLookup(_formControl, new Query(), formStr(InventItemIdLookupPurchase));
                #    lookup.run();
                #}
              ENDSOURCE
              SOURCE #modified
                #void  modified()
                #{
                #    ItemId                  itemId;
                #    LedgerDimensionAccount  ledgerDimension;
                #    RefRecId                sourceDocumentLine;
                #    InventTable             inventTableLoc;
                #
                #    super();
                #
                #    itemId              = purchLine.ItemId;
                #    ledgerDimension     = purchLine.LedgerDimension;
                #    sourceDocumentLine  = purchLine.SourceDocumentLine;
                #
                #    purchTableForm.resetPurchLine(purchLine);
                #
                #    purchLine.ItemId    = itemId;
                #    purchLine.LedgerDimension = ledgerDimension;
                #    purchLine.SourceDocumentLine = sourceDocumentLine;
                #
                #    purchLine_ds.itemIdModified();
                #
                #    element.enableLinePBAActions();
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #    purchLine_ds.enableDistributionTemplate();
                #
                #    element.enableProjSalesPrice();
                #
                #    element.setEditCommitmentLineAllowed(purchLine.ItemId || purchLine.ProcurementCategory);
                #
                #    if (TaxParameters::checkTaxParameters_IN())
                #    {
                #        inventTableLoc                         = InventTable::find(purchLine.ItemId);
                #        purchLine_IN.ExciseTariffCodes_IN      = inventTableLoc.ExciseTariffCodes_IN;
                #        purchLine_IN.CustomsTariffCodeTable_IN = inventTableLoc.CustomsImportTariffCodeTable_IN;
                #        purchLine_IN.ServiceCodeTable_IN       = inventTableLoc.ServiceCodeTable_IN;
                #
                #        if (PurchTable::find(purchLine.PurchId).purchTable_W().CustomsImportOrder_IN == NoYes::Yes)
                #        {
                #            //MRP defaulted from item is converted using Customs exchange rate for Import orders.
                #            purchLine_IN.MaximumRetailPrice_IN = Currency::customsCurAmount_IN(purchLine_IN.CustomsMaxRetailPrice_IN, purchTable.CurrencyCode, Direction_IN::Import, systemDateGet(), false);
                #        }
                #        purchLine_IN_DS.enableExciseFields_IN();
                #    }
                #
                #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
                #    {
                #        purchLine_IN.SalesPurchJournalLineExtension_IN::initFromPrimaryTable(purchLine, true);
                #        taxInformation_IN_DS.linkActive();
                #        purchLine_IN_DS.refresh();
                #        purchLine_ds.rereadReferenceDataSources();
                #    }
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        if (purchLine.inventTable().ItemType != ItemType::Service)
                #        {
                #            purchLine.LedgerDimension = SalesPurchOperationType_BR::find(purchTable_BR.SalesPurchOperationType_BR).LedgerDimension;
                #        }
                #
                #        purchLine.setCFOP_BR();
                #
                #        element.enableServiceFields_BR();
                #    }
                #
                #    //BEGIN                 STF_MEGA_INFOR/STF_InventoryIssueFixedAsset/STF_FixedAssetPurchOrder          Dev: Roberto Zamora
                #    PurchLine_ds.STF_CreateFixedAsset();
                #    PurchLine_ds.STF_SerialNumberMandatory();
                #    //PurchLine_ds.object(fieldNum(PurchLine,CreateFixedAsset)).modified();
                #    //END                   STF_MEGA_INFOR/STF_InventoryIssueFixedAsset/STF_FixedAssetPurchOrder          Dev: Roberto Zamora
                #}
                #
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Name
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    // Do not default Name from category when modified.
                #    keepName = true;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PriceUnit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #
                #    purchLine_ds.refresh();
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchPrice
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #
                #    purchLine_ds.refresh();
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LinePercent
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LineDisc
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LineAmount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #
                #    purchLine_ds.active();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchUnit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #
                #    PurchLine::modifyPurchQty(purchLine, inventDim, !purchLine.MatchingAgreementLine);
                #    interCompanyIsPriceDiscSearchNeeded = purchLine.RecId;
                #
                #    purchLine_ds.refresh();
                #    // <GIN>
                #    if (isPurchLine_INEnabled)
                #    {
                #        purchLine_IN_ds.refresh();
                #    }
                #    // </GIN>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VendAccount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        purchLine_ds.refresh();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchQty
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    TaxParameters   taxParametersLoc = TaxParameters::find();
                #    boolean         isCustomsEnabled = TaxParameters::isCustomsEnable_IN();
                #    boolean         isExciseEnabled  = TaxParameters::isExciseEnable_IN();
                #    ;
                #    super();
                #
                #    purchLine.purchQtyModifiedInteraction(inventDim);
                #
                #    purchLine.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
                #    purchLine.modifyWMSLocation(inventDim, false);
                #
                #    interCompanyIsPriceDiscSearchNeeded = purchLine.RecId;
                #
                #    element.checkCreditNoteLine();
                #
                #    if (isCustomsEnabled || isExciseEnabled)
                #    {
                #        if (taxParametersLoc.Excise_IN)
                #        {
                #            if (purchLine.PurchQty >= 0)
                #            {
                #                purchLine_IN.cenvatCreditAvailed_IN = NoYes::No;
                #            }
                #        }
                #        element.enableFieldsActive_IN();
                #
                #        purchLine_IN_DS.enableExciseFields_IN();
                #
                #        if (TaxParameters::find().EximIncentiveSchemes_IN
                #            && purchLine.PurchQty < 0)
                #        {
                #            eximPurchLine_IN.EximPorts                  = 0;
                #            eximPurchLine_IN.EximIncentiveSchemeGroup   = 0;
                #            eximPurchLine_IN.EximProductGroupTable      = 0;
                #            eximPurchLine_IN.ApplyDEPB            = NoYes::No;
                #            eximPurchLine_IN_ds.refresh();
                #        }
                #
                #        element.setEximFieldsAccess_IN();
                #    }
                #
                #    // <PubSect>
                #    if (PublicSectorUtils::isBudgetReservationEnabled() && purchLine.PurchQty < 0)
                #    {
                #        purchTableForm.enableBudgetReservationFields(purchLine);
                #    }
                #    // </PubSect>
                #
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PurchMarkup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MultiLnDisc
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MultiLnPercent
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxItemGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isRU)
                #    {
                #        inventDim_ds.setRecord(purchLine.inventDimProfileRAsset_RU(inventDim));
                #    }
                #    if(TaxItemGroupHeading::find(purchLine.TaxItemGroup).ReverseChargePercentage_IN)
                #    {
                #        purchLine_ds.object(fieldNum(PurchLine_IN, IsRecoverableServiceTax_IN)).visible(true);
                #    }
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Tax1099Amount
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && ret && purchLine.Tax1099Amount == 0.0 && tax1099BoxDetail.Tax1099PropertyOrServices == NoYes::No)
                #    {
                #        ret = checkFailed(strFmt("@SPS1165","@SYS23907", "@SPS1100"));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjTransId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    ProjItemTrans::jumpRefTransId(purchLine, element);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ReturnActionId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void  modified()
                #{
                #    super();
                #    purchLine.returnActionChanged(inventDim);
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjCategoryId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    purchLine_DS.updateDesignForProject();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ProjId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(purchLine.ProjId).ProjInvoiceProjId))
                #    {
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(false);
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(true);
                #    }
                #    else
                #    {
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).allowEdit(!purchLine.isInvoiceMatched());
                #        purchLine_ds.object(fieldNum(PurchLine, ProjSalesCurrencyId)).skip(purchLine.isInvoiceMatched());
                #    }
                #
                #    purchLine_ds.enableDistributionTemplate();
                #
                #    element.enableLedgerDimensionDefaultAccount();
                #
                #    dimensionDefaultingControllerLine.activated();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Modifies the <c>AssetId</c> field value on the <c>PurchLine</c> table buffer.
                #/// </summary>
                #/// <remarks>
                #/// This method calls the
                #/// <c>setAllowEditAssetFields</c> method of the <c>purchTableForm</c> class to correctly
                #/// set the <c>allowEdit</c> property of the fixed asset fields.
                #/// </remarks>
                #public void modified()
                #{
                #
                #    super();
                #
                #    purchLine_ds.refresh();
                #
                #    purchLine.setDepreciationStartDate();
                #    element.enableDepreciationStartDate();
                #
                #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
                #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
                #    {
                #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
                #    }
                #
                #    purchline_ds.enableDistributionTemplate();
                #
                #    element.enableLedgerDimensionDefaultAccount();
                #
                #    dimensionDefaultingControllerLine.activated();
                #
                #    //BEGIN             STF_MEGA_INFOR              Dev: Roberto Zamora
                #    //if(PurchLine.AssetId)
                #    //{
                #        element.STF_checkForAssetId();
                #    //}
                #    /*else
                #    {
                #        STF_PurchOrder_AssetTmp_ds.delete();
                #        STF_PurchOrder_AssetTmp_ds.research();
                #        STF_PurchOrder_AssetTmp_ds.reread();
                #        STF_PurchOrder_AssetTmp_ds.refresh();
                #    }*/
                #    //END               STF_MEGA_INFOR              Dev: Roberto Zamora
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetTransTypePurch
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    element.enableDepreciationStartDate();
                #}
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetBookId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
                #    {
                #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
                #    }
                #
                #    purchLine.setDepreciationStartDate();
                #    element.enableDepreciationStartDate();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ItemTagging
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.updateRFIDTagging();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CaseTagging
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.updateRFIDTagging();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ActivityNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(purchLine.ProjId));
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CreateFixedAsset
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Modifies the <c>CreateFixedAssetField</c> field value on the <c>PurchLine</c> table buffer.
                #/// </summary>
                #/// <remarks>
                #/// This method broadcasts the change in value of the <c>CreateFixedAssetField</c> field by
                #/// calling <c>createFixedAssetModified</c> on the data source. Then it calls the
                #/// <c>setAllowEditAssetFields</c> method of the <c>purchTableForm</c> class to correctly
                #/// set the <c>allowEdit</c> property of the fixed asset fields.
                #/// </remarks>
                #public void modified()
                #{
                #    InventTable         inventTable;
                #    ;
                #
                #    super();
                #
                #    purchLine_ds.createFixedAssetModified();
                #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
                #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
                #    {
                #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
                #    }
                #
                #    if(PurchLine.CreateFixedAsset)
                #    {
                #        AssetTable_Location.enabled(true);
                #        FixedAssets_AssetGroup.enabled(true);
                #        fields.enabled(true);
                #        PurchLine.AssetGroup = InventTable::find(PurchLine.ItemId).STF_AssetGroup;
                #        AssetTable_Location.mandatory(NoYes::Yes);
                #        //PurchLine_ds.STF_CreateFixedAsset();
                #    }
                #    else
                #    {
                #        AssetTable_Location.enabled(false);
                #        FixedAssets_AssetGroup.enabled(false);
                #        fields.enabled(false);
                #        PurchLine.AssetGroup = "";
                #        AssetTable_Location.mandatory(NoYes::Yes);
                #    }
                #
                #
                #     purchLine_ds.enableDistributionTemplate();
                #    //BEGIN             STF_MEGA_INFOR          Dev: Roberto Zamora
                #   // element.STF_checkNewFixedAsset();
                #    //element.STF_checkForAssetId();
                #    //END             STF_MEGA_INFOR          Dev: Roberto Zamora
                #
                #    //Fields.allowEdit(true);
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AssetGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    element.enableLedgerDimensionDefaultAccount();
                #
                #    dimensionDefaultingControllerLine.activated();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD ProcurementCategory
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return EcoResCategory::resolveCategoryHierarchyRole(
                #        _formReferenceControl,
                #        EcoResCategoryNamedHierarchyRole::Procurement);
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && purchTable.MatchingAgreement)
                #    {
                #        return EcoResCategory::lookupCategoryHierarchyRole(
                #            _formReferenceControl,
                #            EcoResCategoryNamedHierarchyRole::Procurement,
                #            false, true, true, null, 0, 0, 0, purchTable.MatchingAgreement);
                #    }
                #    else
                #    {
                #        return EcoResCategory::lookupCategoryHierarchyRole(
                #            _formReferenceControl,
                #            EcoResCategoryNamedHierarchyRole::Procurement);
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    PurchCategory               procurementCategory;
                #    ItemFreeTxt                 name;
                #    LedgerDimensionAccount      ledgerDimension;
                #
                #    name                = purchLine.Name;
                #
                #    procurementCategory = purchLine.ProcurementCategory;
                #    ledgerDimension     = purchLine.LedgerDimension;
                #
                #    purchTableForm.resetPurchLine(purchLine);
                #
                #    purchLine.ProcurementCategory       = procurementCategory;
                #    purchLine.LedgerDimension           = ledgerDimension;
                #
                #    super();
                #
                #    // Name is defaulted from category in super(). So we revert to saved value, if needed.
                #    if (keepName)
                #    {
                #        purchLine.Name  = name;
                #    }
                #
                #    // Enabled/disable fields
                #    purchLine_ds.changedInventoriedStatus();
                #
                #    element.enableLinePBAActions();
                #    element.enableForeignTrade_RU();
                #
                #    if (purchLine.isCategoryBased())
                #    {
                #        if (purchTable.MatchingAgreement)
                #        {
                #            purchLine.SalesPurchLine::autoMatchAgreementLine(purchTable.MatchingAgreement);
                #        }
                #
                #        if (purchLineForeignTradeCategory.PurchLineDataAreaId == '')
                #        {//Only create a new record if no one exist
                #            purchLineForeignTradeCategory_ds.allowCreate(true);
                #            purchLineForeignTradeCategory_ds.create();
                #            purchLineForeignTradeCategory_ds.allowEdit(true);
                #            purchLineForeignTradeCategory_ds.allowCreate(false);
                #        }
                #    }
                #    else
                #    {
                #        purchLineForeignTradeCategory.clearFormFields();
                #        purchLineForeignTradeCategory_ds.allowEdit(false);
                #        purchLineForeignTradeCategory_ds.refresh();
                #    }
                #
                #    purchLine_ds.enableDistributionTemplate();
                #
                #    dimensionDefaultingControllerLine.activated();
                #
                #    element.enableProjSalesPrice();
                #
                #    element.setEditCommitmentLineAllowed(purchLine.ItemId || purchLine.ProcurementCategory);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #    EcoResCategory  ecoResCategory;
                #    EcoResCategory  ecoResCategoryChildren;
                #    AgreementLine   agreementLineLocal;
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && purchTable.MatchingAgreement)
                #    {
                #        select RecId from ecoResCategory
                #            where ecoResCategory.RecId == purchLine.ProcurementCategory
                #                join Category from agreementLineLocal
                #                where ecoResCategory.RecId == agreementLineLocal.Category
                #                && agreementLineLocal.Agreement == purchTable.MatchingAgreement;
                #
                #        if (!ecoResCategory.RecId)
                #        {
                #            select RecId from ecoResCategory
                #                join Category from agreementLineLocal
                #                where ecoResCategory.RecId == agreementLineLocal.Category
                #                && agreementLineLocal.Agreement == purchTable.MatchingAgreement
                #                    exists join ParentCategory, RecId from ecoResCategoryChildren
                #                    where ecoResCategoryChildren.CategoryHierarchy == ecoResCategory.CategoryHierarchy
                #                    && (ecoResCategoryChildren.NestedSetLeft >= ecoResCategory.NestedSetLeft
                #                    && ecoResCategoryChildren.NestedSetRight <= ecoResCategory.NestedSetRight)
                #                    && (ecoResCategory.RecId == purchLine.ProcurementCategory || ecoResCategoryChildren.RecId == purchLine.ProcurementCategory);
                #        }
                #
                #        if (ecoResCategory.RecId || ecoResCategoryChildren.RecId)
                #        {
                #            ret = super();
                #        }
                #        else
                #        {
                #            ret = false;
                #        }
                #    }
                #    else
                #    {
                #        ret = super();
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD LedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return ledgerDefaultAccountControllerLine.resolveReference();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD Tax1099Fields
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && purchLine.Tax1099Amount != 0.0 && !purchLine.Tax1099Fields)
                #    {
                #        ret = checkFailed(strFmt("@SYS86315", "@SYS23885"));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        element.setAllowEdit1099GFields();
                #        element.setAllowEdit1099SFields();
                #
                #        Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(purchLine.Tax1099Fields).Tax1099Box, tax1099BoxDetail.RecId);
                #        tax1099BoxDetail_ds.executeQuery();
                #        element.redraw();
                #    }
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD DeliveryPostalAddress
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #
                #    element.showInactiveAddressBar();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #    LogisticsLocationSelectionLookup_Purch lookup;
                #
                #    lookup = LogisticsLocationSelectionLookup_Purch::newParameters(_formReferenceControl);
                #
                #    lookup.parmInventSiteId(inventDim.InventSiteId);
                #    lookup.parmInventLocationId(inventDim.InventLocationId);
                #
                #    lookup.addRoleByType(LogisticsLocationRoleType::Delivery);
                #    lookup.parmReturnLocation(false);
                #
                #    ret = lookup.performFormLookup();
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD itemPBAId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    InventTable             inventTable;//Dev:  Roberto Zamora
                #    ;
                #    PBAVersion::lookupPBAId(_formControl, purchLine.ItemId);
                #    //BEGIN                 STF_MEGA_INFOR              Dev: Roberto Zamora
                #    /*select STF_FixedAsset from inventTable where inventTable.ItemId == PurchLine.ItemId;
                #    if(!inventTable.STF_FixedAsset)
                #        TabLineFixedAsset.allowEdit(false);
                #    else
                #        TabLineFixedAsset.allowEdit(true);*/
                #    //END                   STF_MEGA_INFOR              Dev: Roberto Zamora
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxServiceCode_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    NoYes                   serviceCodeOnDlvAddress;
                #    LogisticsPostalAddress  logisticsPostalAddress;
                #
                #    serviceCodeOnDlvAddress = purchTable_BR.ServiceCodeOnDlvAddress_BR;
                #    logisticsPostalAddress = LogisticsLocationEntity::location2PostalAddress(purchLine.deliveryLocation());
                #
                #    TaxServiceCode_BR::lookup(_formControl, serviceCodeOnDlvAddress,
                #                              logisticsPostalAddress.CountryRegionId,
                #                              logisticsPostalAddress.State,
                #                              logisticsPostalAddress.City);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD CFOPTable_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common                      ret;
                #    CFOPAttributesDeterminer_BR cfopAttributes;
                #
                #    if (BrazilParameters::isEnabled())
                #    {
                #        cfopAttributes     = CFOPAttributesDeterminer_BR::construct(purchLine);
                #
                #        ret = CFOPTable_BR::lookupCFOPTable(_formReferenceControl, cfopAttributes);
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD VariantId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #/// <summary>
                #/// Variant ID - Jump Ref
                #/// </summary>
                #public void jumpRef()
                #{
                #    Args args = new Args();
                #
                #    args.caller(element);
                #    args.record(InventTable::find(purchLine.ItemId));
                #    args.lookupRecord(EcoResDistinctProductVariant::find(InventDimCombination::findVariantId(purchLine.VariantId).DistinctProductVariant));
                #
                #    new MenuFunction(menuitemDisplayStr(EcoResProductVariantsAction), MenuItemType::Display).run(args);
                #}
              ENDSOURCE
              SOURCE #modified
                #/// <summary>
                #/// Variant ID - Modified
                #/// </summary>
                #public void modified()
                #{
                #    InventDim               combInventDim;
                #    InventDim               inventDimOrig;
                #    List                    dimProductFields;
                #    ListEnumerator          enumerator;
                #    FieldId                 inventDimFieldId;
                #    InventDimGroupSetup     inventDimGroupSetup;
                #    boolean                 priceDiscSearchNeeded = false;
                #
                #    super();
                #
                #    combInventDim = InventDimCombination::findVariantId(purchLine.VariantId).inventDim();
                #
                #    if (combInventDim)
                #    {
                #        inventDimOrig.data(inventDim);
                #
                #        inventDim.InventSizeId  = combInventDim.InventSizeId;
                #        inventDim.InventColorId = combInventDim.InventColorId;
                #        inventDim.InventStyleId = combInventDim.InventStyleId;
                #        inventDim.ConfigId      = combInventDim.ConfigId;
                #
                #        // set Name according to VariantId
                #        purchLine.InventDimId    = InventDim::findOrCreate(inventDim).InventDimId;
                #        purchLine.initFromProductDimensions(inventDim);
                #        // Get the active dimension fields from the item's product dimension group and loop over them
                #        inventDimGroupSetup = InventDimGroupSetup::newItemId(purchLine.ItemId);
                #        dimProductFields = inventDimGroupSetup.ecoResProductDimGroupSetup().activeDimensionFields();
                #        enumerator = dimProductFields.getEnumerator();
                #
                #        if (enumerator)
                #        {
                #            while (enumerator.moveNext() && !priceDiscSearchNeeded)
                #            {
                #                inventDimFieldId = enumerator.current();
                #
                #                // If a dimension was changed
                #                if (inventDimOrig.(inventDimFieldId) != inventDim.(inventDimFieldId))
                #                {
                #                    // and it is active for price search
                #                    if (InventDim::mustUseFieldPurchPriceDisc(inventDimFieldId, inventDimGroupSetup))
                #                    {
                #                        priceDiscSearchNeeded = true;
                #                    }
                #                }
                #            }
                #
                #            // then trigger price recalculation
                #            if (priceDiscSearchNeeded)
                #            {
                #                purchLine.modifyInventDim(inventDim, inventDimFieldId, !purchLine.MatchingAgreementLine);
                #            }
                #
                #            // Update item name
                #            purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #        }
                #    }
                #}
              ENDSOURCE
              SOURCE #lookup
                #/// <summary>
                #/// Variant ID - Lookup
                #/// </summary>
                #/// <param name="_formControl">
                #/// Form String Control
                #/// </param>
                #/// <param name="_filterStr">
                #/// Filter String
                #/// </param>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    PurchLine::lookupRetailVariantId(_formControl, purchLine.ItemId);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MCRDropShipment
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MCRDropShipComment
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MCRDropShipStatus
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PDSCalculationId
            PROPERTIES
              AllowEdit           #No
              Skip                #Yes
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD ProjWorker
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    HcmWorkerLookup workerLookup;
                #    ProjParameters  projParameters = ProjParameters::find();
                #    boolean         includeTerminated = true;
                #
                #    if (projParameters.ShowInactiveEmployees == NoYes::No)
                #    {
                #        includeTerminated = false;
                #    }
                #    workerLookup = HcmWorkerLookup::newCustomOptions(
                #        false, // includeEmployees
                #        true, // includeContractors
                #        true, // includeActive
                #        false, // includePending
                #        includeTerminated, // includeTerminated
                #        true, // includeOnlyCurrentLegalEntity
                #        true, // lock workerTypeFilters
                #        true, // lock workerStatusFilters
                #        true); // lock legalEntityFilters
                #
                #    return workerLookup.lookupWorker(_formReferenceControl);
                #}
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD PurchCommitmentLine_PSN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #/// <summary>
                #/// Adds the 'View details' link to the commitment context menu.
                #/// </summary>
                #public void jumpRef()
                #{
                #    PurchCommitmentHeader_PSN::jumpRefPurchCommitment(purchLine.PurchCommitmentLine_PSN);
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common commitmentLookupTableBuffer;
                #
                #    PurchCommitmentLineLookup_PSN   purchCommitmentLineLookupClass = PurchCommitmentLineLookup_PSN::construct(_formReferenceControl, purchLine);
                #
                #    commitmentLookupTableBuffer = purchCommitmentLineLookupClass.performFormLookup();
                #
                #    return commitmentLookupTableBuffer;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD BudgetReservationLine_PSN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <PubSect>
                #public void modified()
                #{
                #    super();
                #
                #    purchLine_ds.refresh();
                #
                #    purchTableForm.setAllowEditProjectFields(purchLine, purchLine_ds);
                #
                #    purchLine_ds.updateDesignForProject();
                #
                #    element.enableProjSalesPrice();
                #
                #    groupFinancialDimensionLine.enabled(!purchLine.isBudgetReservationLineReferenced());
                #}
                #// </PubSect>
              ENDSOURCE
              SOURCE #jumpRef
                #/// <summary>
                #/// Adds the view details link to the budget reservation context menu.
                #/// </summary>
                #// <PubSect>
                #public void jumpRef()
                #{
                #    BudgetReservation_PSN::jumpRefBudgetReservation(purchLine.BudgetReservationLine_PSN);
                #}
                #// </PubSect>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #STF_SerialNumberMandatory
          #public void STF_SerialNumberMandatory()
          #{
          #    RefRecId        dimGroup;
          #    boolean         SerialNumMandatory;
          #    ;
          #
          #    dimGroup = InventTable::find(PurchLine.ItemId).trackingDimensionGroup();
          #    SerialNumMandatory = EcoResTrackingDimensionGroupFldSetup::findByDimensionGroupFieldId(dimGroup, fieldNum(InventDim, InventSerialId)).IsActive;
          #    if(PurchTable::find(purchTableCaller.PurchId).DocumentState != VersioningDocumentState::Approved)
          #        InventoryDimensions_inventSerialId.mandatory(SerialNumMandatory && InventTable::find(PurchLine.ItemId).ItemType == ItemType::Service);
          #}
        ENDSOURCE
        SOURCE #STF_CreateFixedAsset
          #public void STF_CreateFixedAsset()
          #{
          #    InventTable             inventTable;
          #    InventTableModule       inventTableModule;
          #    ;
          #
          #    element.STF_checkNewFixedAsset();
          #
          #    select STF_FixedAsset from inventTable where inventTable.ItemId == PurchLine.ItemId;
          #    select STF_PurchOrderFixedAsset from inventTableModule where inventTableModule.ItemId == inventTable.ItemId && inventTableModule.ModuleType == ModuleInventPurchSales::Purch;
          #
          #    TabLineFixedAsset.allowEdit(inventTable.STF_FixedAsset && (inventTable.ItemType == ItemType::Service));
          #    //PurchLine.CreateFixedAsset = (inventTable.STF_FixedAsset && STF_InventTableModule.STF_PurchOrderFixedAsset);
          #    FixedAssets_CreateFixedAsset.allowEdit(NoYes::No);
          #}
        ENDSOURCE
        SOURCE #PISCOFINSFixedAssetCreditAppropMethod_BR
          #//BP Deviation documented
          #display FBPISCOFINSFixedAssetAppropMethod_BR PISCOFINSFixedAssetCreditAppropMethod_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.PISCOFINSFixedAssetCreditAppropMethod_BR();
          #}
          #
        ENDSOURCE
        SOURCE #PISCOFINSFixedAssetCreditInstallments_BR
          #//BP Deviation documented
          #display FBPisCofinsFixedAssetCreditInstls_BR PISCOFINSFixedAssetCreditInstallments_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.PISCOFINSFixedAssetCreditInstallments_BR();
          #}
          #
        ENDSOURCE
        SOURCE #PISCOFINSFixedAssetCreditGroup_BR
          #//BP Deviation documented
          #display FBPISCOFINSFixedAssetCreditGroup_BR PISCOFINSFixedAssetCreditGroup_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.PISCOFINSFixedAssetCreditGroup_BR();
          #}
          #
        ENDSOURCE
        SOURCE #PISCOFINSFixedAssetCreditPurpose_BR
          #//BP Deviation documented
          #display FBPISCOFINSFixedAssetCreditPurpose_BR PISCOFINSFixedAssetCreditPurpose_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.PISCOFINSFixedAssetCreditPurpose_BR();
          #}
          #
        ENDSOURCE
        SOURCE #reread
          #public void reread()
          #{
          #    // Current price references may need to be deleted.
          #    purchLine.SalesPurchLine::cleanUpPriceHistoryRef();
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #updateDesignForProject
          #public void updateDesignForProject()
          #{
          #    //<PubSect>
          #    BudgetReservationLine_PSN budgetReservationLine = BudgetReservationLine_PSN::find(purchLine.BudgetReservationLine_PSN);
          #
          #    if (purchLine.ProjId == ''
          #        || purchLine.isProjItemBased()
          #        || (budgetReservationLine.RecId != 0 && budgetReservationLine.ProjId && PublicSectorUtils::isBudgetReservationEnabled()))
          #    //</PubSect>
          #    /*<SYS>
          #    if (purchLine.ProjId == '' || purchLine.isProjItemBased())
          #    </SYS>*/
          #    {
          #        purchLine_DS.object(fieldNum(PurchLine, ProjWorker)).allowEdit(false);
          #    }
          #    else
          #    {
          #        purchLine_DS.object(fieldNum(PurchLine, ProjWorker)).allowEdit(true);
          #    }
          #}
        ENDSOURCE
        SOURCE #deleteMarked
          # public void deleteMarked()
          #{
          #    purchTableForm.parmInPurchlineDeleteMarked(true);
          #
          #    super();
          #
          #    purchTable.type().updateDistribution();
          #
          #    purchTableForm.parmInPurchlineDeleteMarked(false);
          #}
        ENDSOURCE
        SOURCE #ICMSCreditInstallments_BR
          #//BP Deviation documented
          #display ICMSCreditInstallments_BR ICMSCreditInstallments_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.ICMSCreditInstallments_BR();
          #}
          #
        ENDSOURCE
        SOURCE #PISCOFINSReceivableLongTerm_BR
          #//BP Deviation documented
          #display NoYes PISCOFINSReceivableLongTerm_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.PISCOFINSReceivableLongTerm_BR();
          #}
          #
        ENDSOURCE
        SOURCE #ICMSReceivableLongTerm_BR
          #//BP Deviation documented
          #display NoYes ICMSReceivableLongTerm_BR(PurchLine _purchLine)
          #{
          #    return _purchLine.ICMSReceivableLongTerm_BR();
          #}
          #
        ENDSOURCE
        SOURCE #active
          #/// <summary>
          #/// Activates the <c>PurchLine</c> datasource.
          #/// </summary>
          #/// <returns>
          #/// An integer value indicating if the method is successful. It always returns 1.
          #/// </returns>
          #/// <remarks>
          #/// This method calls the <c>setAllowEditAssetFields</c> method of the <c>PurchTableForm</c> class
          #/// to ensure that the fixed asset fields are available to be edited.
          #/// </remarks>
          #int  active()
          #{
          #    int     ret;
          #    boolean allowEdit;
          #    boolean allowEditDeliveryPostalAddress;
          #    #ISOCountryRegionCodes
          #    InventTable     inventTable;//RZP
          #    boolean         STF_SNMandatory;
          #    AssetTable      assetTableLocal;
          #
          #    ;
          #
          #    ret = super();
          #    dimensionDefaultingControllerLine.activated();
          #    dimensionDefaultingControllerLine.setEditability(!purchLine.IsInvoiceMatched);
          #    if (purchTable.AccountingDate)
          #    {
          #        dimensionDefaultingControllerLine.setNonActiveValueTolerance(ErrorTolerance::Warning, purchTable.AccountingDate);
          #    }
          #
          #    purchTableForm.purchTable(purchTable);
          #
          #    element.setEditItemCategoryAllowed(purchLine.RecId == 0);
          #    element.setEditLinenumberAllowed(purchTableForm.editLineNumberAllowed(purchLine));
          #    element.showInactiveAddressBar();
          #
          #    allowEdit = purchTableForm.editLineAllowed(purchLine) || purchLine.editableInWorkflow();
          #
          #    purchLine_ds.allowCreate(purchTableForm.createLineAllowed(purchLine));
          #    purchLine_ds.allowEdit  (allowEdit);
          #    purchLine_ds.allowDelete(purchTableForm.deleteLineAllowed(purchLine));
          #
          #    inventDim_ds.allowEdit  (allowEdit);
          #
          #    element.checkCreditNoteLine();
          #
          #    element.updateDesign(InventDimFormDesignUpdate::Active);
          #
          #    purchLine_ds.object(fieldNum(PurchLine, PurchReceivedNow)).allowEdit(purchLine.purchReceivedNowAllowEdit());
          #
          #    element.setAllowEditTax1099();
          #
          #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #    {
          #        element.setAllowEdit1099GFields();
          #        element.setAllowEdit1099SFields();
          #        element.setEditCommitmentLineAllowed(purchLine.ItemId || purchLine.ProcurementCategory);
          #    }
          #    element.updateRFIDTagging();
          #
          #    if (isRU)
          #    {
          #        element.enabledVATTaxAgent_RU();
          #        element.enableMarkupCode_RU();
          #        element.enableForeignTrade_RU();
          #    }
          #
          #    purchTableForm.interCompanySetLineAccess(purchLine);
          #    purchTableForm.directDeliverySetLineAccess(purchLine);
          #    allowEditDeliveryPostalAddress = purchLine_ds.object(fieldNum(PurchLine, DeliveryPostalAddress)).allowEdit();
          #    logisticsLocationSelectLine.enabled(allowEditDeliveryPostalAddress);
          #    dirPartyPostalAddressNewLine.enabled(allowEditDeliveryPostalAddress);
          #
          #    if (purchLine.ProjId)
          #    {
          #        if (purchLine.purchTable().isProjectSalesItemReqPO() ||
          #            purchLine.getProjCreditNoteSource().purchTable().isProjectSalesItemReqPO())
          #        {
          #            lineInquiry_CostControlCommittedCost.enabled(false);
          #        }
          #        else
          #        {
          #            lineInquiry_CostControlCommittedCost.enabled(true);
          #        }
          #    }
          #    else
          #    {
          #        lineInquiry_CostControlCommittedCost.enabled(false);
          #    }
          #
          #    element.resetAssetContainers();
          #
          #    if(tabLineFixedAsset.isActivePage())
          #    {
          #        element.setupAsset(purchLine);
          #    }
          #    else
          #    {
          #        element.design().controlName(#grpAssetQualifier).visible(false);
          #    }
          #
          #    //purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);//Dev: Roberto Zamora
          #    if (AssetDocumentUtility_JP::isAssetDocumentEnabled())
          #    {
          #        purchTableForm.setAllowVisibleReductionEntryFields_JP(purchTable, purchLine, reductionEntry_JP);
          #    }
          #
          #    // If the date is not set
          #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]))
          #    {
          #        if(!purchLine.DepreciationStartDate)
          #        {
          #            purchLine.setDepreciationStartDate();
          #        }
          #        element.enableDepreciationStartDate(false);
          #    }
          #
          #    if (purchLine.RecId)
          #    {
          #        purchLine_ds.enableDistributionTemplate();
          #    }
          #
          #    element.setupEnvironmentalTab();
          #
          #    element.enableLedgerDimensionDefaultAccount();
          #
          #    element.enableRetentionProject();
          #
          #    element.enableProjSalesPrice();
          #
          #    element.updateControlsForFrenchConfirmedPO();
          #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #    {
          #        allowEdit = allowEdit && (!purchLine.RetailPackageId);    //User may not be allowed to edit purchase order lines that belong to a package
          #        element.packageAllowEdit(allowEdit);
          #    }
          #
          #    if (ret && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
          #    {
          #        element.enableFieldsActive_IN();
          #        element.updateDesign_IN();
          #        if (taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate)
          #        {
          #            element.setTaxWithholdEnabled_IN();
          #        }
          #        purchLine_IN_ds.enableExciseFields_IN();
          #    }
          #
          #    isWHSPurchLineEnabled = WHSPurchLine::isExtensionRecordNeeded(purchLine);
          #    crossDock.enabled(isWHSPurchLineEnabled);
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        element.enableServiceFields_BR();
          #    }
          #
          #    // <PubSect>
          #    if (PublicSectorUtils::isBudgetReservationEnabled())
          #    {
          #        purchTableForm.enableBudgetReservationFields(purchLine);
          #        groupFinancialDimensionLine.enabled(purchLine.BudgetReservationLine_PSN == 0);
          #        purchTableForm.determineFinancialEditingForBudgRes(purchLine);
          #    }
          #    // </PubSect>
          #    //BEGIN                 STF_MEGA_INFOR          Dev: Roberto Zamora
          #   /* STF_PurchOrder_AssetTmp_ds.executeQuery();
          #    STF_PurchOrder_AssetTmp_ds.research(true);
          #    STF_PurchOrder_AssetTmp_ds.reread();
          #    STF_PurchOrder_AssetTmp_ds.refresh();*/
          #
          #
          #    select STF_FixedAsset from inventTable where inventTable.ItemId == PurchLine.ItemId;
          #    //BEGIN DEV::BLIZARRAGA
          #    if(!inventTable.STF_FixedAsset)
          #    {
          #        AssetTable_Location.enabled(false);
          #        TabLineFixedAsset.allowEdit(false);
          #        purchLine_ds.enableDistributionTemplate();
          #    }
          #    else
          #    {
          #        allowEdit = true;
          #        //if(PurchLine.CreateFixedAsset)
          #        //{
          #        AssetTable_Location.enabled(true);
          #        AssetTable_Location.enabled(true);
          #        FixedAssets_AssetGroup.enabled(true);
          #        fields.enabled(true);
          #        /*}
          #        else
          #        {
          #            AssetTable_Location.enabled(false);
          #            AssetTable_Location.enabled(false);
          #            FixedAssets_AssetGroup.enabled(false);
          #            fields.enabled(false);
          #        }*/
          #        //purchLine_ds.enableDistributionTemplate();
          #        FixedAssets.allowEdit(true);
          #        FixedAssets.enabled(true);
          #        PurchLine_ds.allowEdit(allowEdit);
          #        TabLineFixedAsset.allowEdit(true);
          #    }
          #    //END DEV::BLIZARRAGA
          #    //END                   STF_MEGA_INFOR          Dev: Roberto Zamora
          #
          #    //BEGIN                 STF_FixedAssetPurchOrder            Dev: Roberto Zamora
          #    //STF_SNMandatory = InventDim_ds.object(fieldNum(InventDim, InventSerialId)).enabled();
          #    //InventDim_ds.object(fieldNum(InventDim, InventSerialId)).mandatory(STF_SNMandatory);
          #    PurchLine_ds.STF_CreateFixedAsset();
          #    PurchLine_ds.STF_SerialNumberMandatory();
          #    //END                   STF_FixedAssetPurchOrder            Dev: Roberto Zamora
          #    return ret;
          #}
          #
          #
        ENDSOURCE
        SOURCE #initInventDim
          #/// <summary>
          #/// Updates <c>InventDim</c> with new data which has been set due to modification of <c>PurchLine</c>.
          #/// </summary>
          #private void initInventDim()
          #{
          #    inventDim.data(InventDim::find(purchLine.InventDimId));
          #
          #    // Override the initial value if a default is provided.
          #    if (defaultInventDim && purchLine.ItemId == defaultItemId)
          #    {
          #        inventDim.initFromInventDim(defaultInventDim);
          #    }
          #}
        ENDSOURCE
        SOURCE #lineDeliveryTypeImage
          #//BP Deviation documented
          #display LineDeliveryTypeImage lineDeliveryTypeImage(PurchLine _purchLine)
          #{
          #    return imageListAppl_PurchTableForm.image(_purchLine.lineDeliveryImageRessNo());
          #}
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    logisticsPostalAddressLine_ds.validTimeStateUpdate(ValidTimeStateUpdate::Correction);
          #    logisticsPostalAddressLine_ds.query().validTimeStateDateTimeRange(DateTimeUtil::minValue(), DateTimeUtil::maxValue());
          #
          #    super();
          #
          #    if (isCalledFromLP)
          #    {
          #        isCalledFromLP = false;
          #        if (purchTable && TradeFormHelper::isEditableNotGridView(element.args()))
          #        {
          #            purchLine_PurchQtyGrid.setFocus();
          #        }
          #    }
          #}
        ENDSOURCE
        SOURCE #updateBudgetCheckResultDisplay
          #/// <summary>
          #/// Updates budget check result display cache.
          #/// </summary>
          #public void updateBudgetCheckResultDisplay()
          #{
          #    if (Ledger::isLedgerBudgetControlEnabled())
          #    {
          #        if (this.cacheCalculateMethod(tableMethodStr(PurchLine, displayBudgetCheckResult)))
          #        {
          #            purchLine_ds.refresh();
          #        }
          #    }
          #}
        ENDSOURCE
        SOURCE #enableBudgetControlLineInquiry
          #/// <summary>
          #/// Eanbles the <c>BudgetControlLine</c> inquiry button.
          #/// </summary>
          #private void enableBudgetControlLineInquiry()
          #{
          #    budgetControlLine.enabled(budgetControlLine.visible() && purchLine.IsModified);
          #}
        ENDSOURCE
        SOURCE #editAssetQualifier
          #// BP deviation documented
          #edit AssetRuleAssetQualifier editAssetQualifier(boolean set, AssetRuleAssetQualifier _qualifier)
          #{
          #    if(set)
          #    {
          #        if(AssetRuleTmpAssetQualifierLookup::getAssetGroupFromQualifier(_qualifier, assetQualifierList) != '')
          #        {
          #            selectedAssetQualifier = _qualifier;
          #        }
          #    }
          #    return  selectedAssetQualifier;
          #}
        ENDSOURCE
        SOURCE #validateDelete
          #public boolean validateDelete()
          #{
          #    boolean ret = true;
          #    str warning = purchLine.type(purchTable).getDeleteWarning();
          #
          #    if (warning != "")
          #    {
          #        ret = (Box::yesNo(warning, DialogButton::No) == DialogButton::Yes)
          #            && purchLine.validateDelete();
          #    }
          #    else
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #itemIdModified
          #void itemIdModified()
          #{
          #    purchLine.itemIdChanged(purchTable.MatchingAgreement);
          #
          #    this.changedInventoriedStatus();
          #    isWHSPurchLineEnabled = WHSPurchLine::isExtensionRecordNeeded(purchLine);
          #    crossDock.enabled(isWHSPurchLineEnabled);
          #
          #    // Reread ReferenceGroup controls, e.g. to show the category name.
          #    purchLine_ds.rereadReferenceDataSources();
          #
          #    element.enableLedgerDimensionDefaultAccount();
          #
          #    dimensionDefaultingControllerLine.activated();
          #    element.enableMarkupCode_RU();
          #    element.enableForeignTrade_RU();
          #}
        ENDSOURCE
        SOURCE #changedInventoriedStatus
          #/// <summary>
          #/// Updates the form to reflect the current inventoried status inventoried status, i.e. after a change to the itemid, category, or inventoried field.
          #/// </summary>
          #void changedInventoriedStatus()
          #{
          #    // Update inventDim with new data which has been set due to modification
          #    this.initInventDim();
          #    purchLine.modifyInventDim(inventDim, fieldNum(InventDim,InventLocationId), !purchLine.MatchingAgreementLine);
          #
          #    InventMovement::bufferSetTransQtyUnit(purchLine);
          #    // Update inventdim fields
          #    element.updateDesign(InventDimFormDesignUpdate::FieldChange);
          #    // Update tagging fields based on dimension settings.
          #    element.updateRFIDTagging();
          #
          #    // Disable category editing if itemid is selected
          #    purchLine_ds.object(fieldNum(PurchLine, ProcurementCategory)).allowEdit(purchLine.ItemId == '');
          #    // Disable itemid editing if only a category is selected
          #    purchLine_ds.object(fieldNum(PurchLine, ItemId)).allowEdit(!purchLine.isCategoryBased());
          #
          #    // Update allow edit for scrap
          #    element.checkCreditNoteLine();
          #    // Update allow edit for inventory fields
          #    purchTableForm.interCompanySetLineAccess(purchLine);
          #    purchTableForm.directDeliverySetLineAccess(purchLine);
          #
          #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
          #}
        ENDSOURCE
        SOURCE #create
          #void  create(boolean append = true)
          #{
          #    InventTable                 inventTable;
          #    STF_PurchOrder_AssetTmp     purchAsset;//STF_MEGA_INFOR         Dev: Roberto Zamora
          #    ;
          #    element.setEditItemCategoryAllowed(true);
          #    distributionTemplateLine.allowEdit(true);
          #
          #    dimensionDefaultingControllerLine.activated();
          #
          #    if (!purchTableForm.canNewLineBeAppended(purchLine))
          #    {
          #        append = false;
          #    }
          #
          #    purchTableForm.purchLine_CreatePreSuper(purchLine);
          #
          #    if (purchTable.checkUpdate())
          #    {
          #        super(append);
          #    }
          #
          #    if (purchTable && tabPageDetails.isActivePage())
          #    {
          #        purchLine_ItemId.setFocus();
          #    }
          #
          #    // Invoke postSuper to store an initialized purchLine used for further creation. Only store it if an item
          #    // has not been defined or we have a default item.
          #    if ((!purchLine.ItemId && !purchLine.ProcurementCategory)
          #        || (defaultItemId && defaultItemId == purchLine.ItemId))
          #    {
          #        purchTableForm.purchLine_CreatePostSuper(purchLine);
          #    }
          #
          #    // filter exists on ItemId
          #    if (purchLine.ItemId)
          #    {
          #        this.itemIdModified();
          #    }
          #
          #    // filter exists on ProcurementCategory
          #    if (purchLine.ProcurementCategory)
          #    {
          #        this.changedInventoriedStatus();
          #    }
          #
          #    this.createFixedAssetModified();
          #        //BEGIN                 STF_MEGA_INFOR                   DEV: Roberto Zamora
          #    select purchAsset where purchAsset.PurchLineRecId == PurchLine.RecId;
          #    if(!purchAsset)
          #    {
          #        purchAsset.PurchLineRecId = PurchLine.RecId;
          #        purchAsset.insert();
          #    }
          #    //END                  STF_MEGA_INFOR                   DEV: Roberto Zamora
          #}
        ENDSOURCE
        SOURCE #createFixedAssetModified
          #/// <summary>
          #/// Broadcasts that the <c>CreateFixedAsset</c> field value has changed to the <c>purchLine</c> table buffer.
          #/// </summary>
          #void createFixedAssetModified()
          #{
          #    purchLine.modifyCreateFixedAsset();
          #}
        ENDSOURCE
        SOURCE #delete
          #void  delete()
          #{
          #    PurchId purchId;
          #    boolean mustFormResearchAfterDelete = purchTableForm.mustFormResearchAfterDelete(purchLine);
          #    STF_PurchOrder_AssetTmp             purchAssets;//STF_MEGA_INFOR            Dev: Roberto Zamora
          #    RefRecId                            purchLineRecId;
          #    if (purchLine.checkDelete(true, purchTable))
          #    {
          #        purchId = purchLine.PurchId;
          #
          #        ttsbegin;
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #        {
          #            purchLine.type(purchTable).deleteRetailSumLinesFromPurch();
          #        }
          #
          #        //This is a performance optimization. Indicates we can skip updating the purchTable
          #        //header distribution on this line because we are in a multiselect delete of lines.
          #        //Update will be done at the end in PurchLine_ds.deleteMarked()
          #        if (purchTableForm.parmInPurchlineDeleteMarked())
          #        {
          #            purchLine.SkipDistributionUpdate = NoYes::Yes;
          #        }
          #
          #        // Current price references may need to be deleted.
          #        purchLine.SalesPurchLine::cleanUpPriceHistoryRef();
          #
          #        //BEGIN             STF_MEGA_INFOR            Dev: Roberto Zamora
          #        purchLineRecId = PurchLine.RecId;
          #        //END               STF_MEGA_INFOR            Dev: Roberto Zamora
          #
          #        super();
          #        purchTable_ds.onSummaryRecordsInvalid(tableNum(PurchTotalsSummary));
          #
          #        ttscommit;
          #
          #        dimensionDefaultingControllerLine.deleted();
          #
          #        if ( mustFormResearchAfterDelete )
          #        {
          #            purchLine_ds.research(true);
          #        }
          #
          #        if (purchId && PurchTable::exist(purchId))
          #        {
          #            purchTable_ds.reread();
          #            purchTable_ds.refresh();
          #        }
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
          #        {
          #            retailSumLines_ds.research();
          #        }
          #        element.setupEnvironmentalTab();
          #        //BEGIN             STF_MEGA_INFOR            Dev: Roberto Zamora
          #        ttsBegin;
          #        delete_from purchAssets where purchAssets.PurchLineRecId == PurchLine.RecId;
          #        ttsCommit;
          #        //END               STF_MEGA_INFOR            Dev: Roberto Zamora
          #    }
          #}
        ENDSOURCE
        SOURCE #enableDistributionTemplate
          #/// <summary>
          #/// Enables the <c>AccountingDistributionTemplate</c> field based on the purchase order line state.
          #/// </summary>
          #public void enableDistributionTemplate()
          #{
          #    if (purchLine.canApplyAllocationOrDistributionTemplate())
          #    {
          #        distributionTemplateLine.allowEdit(true);
          #       // FixedAssets.enableChilds(false);
          #
          #
          #    }
          #    else
          #    {
          #        distributionTemplateLine.allowEdit(false);
          #        // FixedAssets.enableChilds(true);
          #    }
          #
          #
          #    //element.STF_checkNewFixedAsset();
          #
          #}
        ENDSOURCE
        SOURCE #initValue
          #void initValue()
          #{
          #    if (purchTable
          #       && (defaultPurchLine.PurchId != purchTable.PurchId
          #       || (defaultPurchLine.PurchId == purchTable.PurchId
          #       && purchTableRecVersion      != purchTable.RecVersion)))
          #    {
          #        defaultPurchLine.initFromPurchTable(purchTable);
          #        defaultPurchLine.initFromVendTable(purchTable.vendTable_OrderAccount());
          #        purchTableRecVersion = purchTable.RecVersion;
          #    }
          #
          #    purchLine.data(defaultPurchLine);
          #    if (isPurchLine_INEnabled || isPurchLine_WEnabled)
          #    {
          #        // The defaulted extension table record are packed in defaultPurchLine
          #        // and been copied to purchLine.PackedExtensions field. Unpack it to apply
          #        // these default value to extension table data source.
          #        purchLine.SysExtensionSerializerMap::unpackAll();
          #    }
          #
          #    // For category based lines Name should be kept if manually modified.
          #    keepName = false;
          #
          #    if (defaultItemId)
          #    {
          #        purchLine.ItemId = defaultItemId;
          #    }
          #
          #    if (defaultDate)
          #    {
          #        purchLine.ShippingDateRequested = defaultDate;
          #    }
          #
          #    if (TaxParameters::isServiceTaxEnable_IN())
          #    {
          #        purchLine_IN.IsRecoverableServiceTax_IN = NoYes::Yes;
          #    }
          #    super();
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    InventTable         inventTable; //Dev: Roberto Zamora
          #
          #    super();
          #
          #    this.query().dataSourceTable(tableNum(PurchLine)).addRange(fieldNum(PurchLine,IsDeleted)).value(queryValue(NoYes::No));
          #
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, whsGetLoads));
          #
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, receivedInTotal), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, invoicedInTotal), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, itemName), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, displayBudgetCheckResult), false);
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, calcPendingQtyPurchDisplay));
          #    purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, getPurchReqItemName), false);
          #    if (InventParameters::find().UseQualityManagement)
          #    {
          #        purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, qualityOrderStatusDisplay), false);
          #    }
          #
          #    if (BrazilParameters::isEnabled())
          #    {
          #        purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, deliveryCNPJCPFNUM_BR));
          #        purchLine_ds.cacheAddMethod(tableMethodStr(PurchLine, deliveryIENum_BR));
          #    }
          #
          #    purchLine.setDepreciationStartDate(true);
          #    element.enableDepreciationStartDate();
          #
          #    element.invoiceMatchingAccess();
          #    //BEGIN                 STF_MEGA_INFOR                  Dev: Roberto Zamora
          #    if(PurchLine.ItemId)
          #    {
          #        select STF_FixedAsset from inventTable where inventTable.ItemId == PurchLine.ItemId;
          #        TabLineFixedAsset.allowEdit(inventTable.STF_FixedAsset);
          #    }
          #    //END                   STF_MEGA_INFOR                  Dev: Roberto Zamora
          #
          #}
        ENDSOURCE
        SOURCE #leave
          #public boolean leave()
          #{
          #    boolean ret;
          #
          #    // PBA begin
          #    if( !purchLine.PBAItemLine::checkMandatory() )
          #    {
          #        return false;
          #    }
          #    // PBA end
          #
          #    ret = super();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #linkActive
          #void  linkActive()
          #{
          #    #ISOCountryRegionCodes
          #    super();
          #
          #    /* Set Caption */
          #    if (!purchLine && purchTable)
          #    {
          #        purchTableForm.purchTable(purchTable);
          #        purchLine_ds.create();
          #    }
          #
          #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]))
          #    {
          #        if(!purchLine.DepreciationStartDate)
          #        {
          #            purchLine.setDepreciationStartDate();
          #        }
          #        element.enableDepreciationStartDate(false);
          #    }
          #}
        ENDSOURCE
        SOURCE #purchTable_ds
          #FormDataSource purchTable_ds()
          #{
          #    return purchTable_ds;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    //BEGIN STF_MEGA_Presupuestos
          #    Amount      exceso;
          #    Amount      montoDisponible;
          #    Amount      lineAmount = 0;
          #    Amount      lineAmountOri = 0;
          #    PurchLIne   _purchLine;
          #    PurchLIne   _purchLineNum;
          #    PurchLIne   _purchLineSum;
          #    PurchTable  _purchTableSum;
          #    DimensionValue              centroCosto;
          #    MonthsOfYear                month;
          #    ISBudgetItemTable           capexBudgetItemTable;
          #    IsBudgetItemTrans           capexBudgetItemTrans;
          #    STF_ISBudgetItemTableOpex   opexBudgetItemTable;
          #    CurrencyExchangeHelper      curExchHelper = CurrencyExchangeHelper::construct();
          #
          #    #MacroLib.STF_CUR
          #    //END STF_MEGA_Presupuestos
          #
          #    boolean ret = true;
          #
          #    //Set SubLedgerDistributions and SubLedgerJournalLines as needing to be created/updated
          #    purchTable_ds.setTouched();
          #
          #    ret = element.setupAsset(purchLine);
          #
          #    purchLine.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
          #
          #    if (!purchLine.isAgreementLinkValid(true))
          #    {
          #        ret = purchLine.unLinkAgreementLinePrompt(0, tableNum(PurchLine), false);
          #    }
          #
          #    copyTaxGroupToMarkupTrans = DialogButton::No;
          #    if (ret && purchLine.TaxGroup != purchLine.orig().TaxGroup)
          #    {
          #        copyTaxGroupToMarkupTrans   = MarkupTrans::promptCopyTaxGroupToMarkupTrans(purchLine.TableId, purchLine.RecId);
          #        ret                         = copyTaxGroupToMarkupTrans != DialogButton::Cancel;
          #    }
          #
          #    if(!STF_PurchaseOrderNoValidateBudget::exist(PurchTable.PurchId))
          #    {
          #        if(!purchLine.PurchReqId)
          #        {
          #            if(PurchTable.ISBudgetKeyId)
          #            {
          #                select sum(lineAmount) from _purchLine
          #                    where _purchLine.PurchId == PurchLine.PurchId;
          #
          #                select firstOnly budgetId from capexBudgetItemTable
          #                    where capexBudgetItemTable.BudgetKeyId == PurchTable.ISBudgetKeyId;
          #
          #                select firstOnly rate2 from capexBudgetItemTrans
          #                    where capexBudgetItemTrans.BudgetKeyId == PurchTable.ISBudgetKeyId;
          #
          #                select firstOnly budgetId from opexBudgetItemTable
          #                    where opexBudgetItemTable.BudgetKeyId == PurchTable.ISBudgetKeyId;
          #
          #                select count(purchId) from _purchLineNum
          #                    where _purchLineNum.PurchId == PurchTable.PurchId;
          #
          #                if(capexBudgetItemTable.BudgetId like "0*")
          #                {
          #                    montoDisponible = STF_ValidateBudgetControl::ValidateCurCapex(PurchTable.ISBudgetKeyId, PurchTable.CurrencyCode);
          #
          #                    lineAmountOri = PurchLine.orig().LineAmount;
          #                    lineAmount = purchLine.LineAmount;
          #                    montoDisponible = montoDisponible + lineAmountOri;
          #
          #                    if((lineAmount ) > (montoDisponible))
          #                    {
          #                        ret = false;
          #                        exceso = lineAmount - montoDisponible;
          #                        if(PurchTable.CurrencyCode == #STF_USD)
          #                            error(strFmt("El presupuesto no es suficiente para procesar la orden de compra, pues se excede en %1 dólares.", exceso));
          #                        else
          #                            error(strFmt("El presupuesto no es suficiente para procesar la orden de compra, pues se excede en %1 pesos.", exceso));
          #                    }
          #                    else
          #                    {
          #                        ret = true;
          #                    }
          #                }
          #                else if(opexBudgetItemTable.BudgetId like "1*")
          #                {
          #                    centroCosto = STF_DimensionCC::getCentroCosto(PurchLine.DefaultDimension);
          #                    month = MthofYr(PurchTable.AccountingDate);
          #
          #                    if(!centroCosto)
          #                    {
          #                        ret = false;
          #                        error("El campo centro de costos es necesario antes asignar un monto.");
          #                    }
          #
          #                    montoDisponible = STF_ValidateBudgetControl::ValidateAvailOpex(PurchTable.ISBudgetKeyId,DateTimeUtil::date(PurchTable.createdDateTime),centroCosto);
          #
          #                    lineAmountOri = PurchLine.orig().LineAmount;
          #
          #                    if(lineAmountOri != 0)
          #                    {
          #                        curExchHelper.parmExchangeDate(systemdateget());
          #                        curExchHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::current(),DateTimeUtil::date(PurchTable.createdDateTime));
          #                        lineAmountOri = curExchHelper.calculateTransactionToAccounting(PurchLine.CurrencyCode, lineAmountOri,true);
          #                    }
          #                    montoDisponible = montoDisponible + lineAmountOri;
          #
          #                    lineAmount = purchLine.LineAmount;
          #
          #                    if(lineAmount != 0)
          #                    {
          #                        curExchHelper.parmExchangeDate(systemdateget());
          #                        curExchHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::current(),DateTimeUtil::date(PurchTable.createdDateTime));
          #                        lineAmount = curExchHelper.calculateTransactionToAccounting(PurchLine.CurrencyCode, lineAmount,true); //.calculateAmountCurToMst(this.LineAmount,true);
          #                    }
          #
          #                    if(lineAmount > (montoDisponible))
          #                    {
          #                        ret = false;
          #                        exceso = lineAmount - montoDisponible;
          #                        error(strFmt("El presupuesto no es suficiente para procesar la orden de compra, pues se excede en %1 pesos dentro del centro de costo %2 en el mes de %3 .", exceso,centroCosto,enum2Value(month)));
          #                    }
          #                    else
          #                    {
          #                        ret = true;
          #                    }
          #                }
          #            }
          #        }
          #    }
          #    //END STF_MEGA_Presupuestos DEV: FPE
          #
          #
          #    ret = super() && ret;
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #void  write()
          #{
          #    PurchLine       localPurchLine;
          #    boolean         agreementWasChanged = (purchLine.MatchingAgreementLine != purchLine.orig().MatchingAgreementLine);
          #    boolean         isPurchLineReread;
          #    boolean         isPurchLineRefreshed;
          #
          #    PurchLineWritePreSuperInputContract     inputContractPre = PurchLineWritePreSuperInputContract::construct();
          #    PurchLineWritePreSuperOutputContract    outputContractPre;
          #    PurchLineWritePostSuperInputContract    inputContractPost = PurchLineWritePostSuperInputContract::construct();
          #    PurchLineWritePostSuperOutputContract   outputContractPost;
          #    boolean             newTax1099Detail;
          #    Tax1099Fields       tax1099Fields;
          #    STF_PurchOrder_AssetTmp                 purchAssets;//STF_MEGA_INFOR            Dev: Roberto Zamora
          #
          #    newTax1099Detail = tax1099BoxDetail.RecId;
          #
          #    dimensionDefaultingControllerLine.writing();
          #
          #    inputContractPre.parmPurchTable(purchTable);
          #    inputContractPre.parmPurchLine(purchLine);
          #    outputContractPre   = purchTableForm.purchLine_WritePreSuper(inputContractPre);
          #    autoConfig          = outputContractPre.parmAutoConfig();
          #    inputContractPost.parmOrigTaxGroup(purchLine.orig().TaxGroup);
          #
          #    if (outputContractPre.parmPurchTableCheckUpdate())
          #    {
          #        buf2Buf(outputContractPre.parmPurchLine(), purchLine);
          #
          #        if (PurchLine::hasExensionTableEnabled())
          #        {
          #            purchLine.SysExtensionSerializerMap::unpackAll();
          #        }
          #
          #        purchLine.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && (purchLine.Tax1099Fields || purchLine.Tax1099RecId))
          #        {
          #            //Must make sure we write tax1099Detail only when we are writing purchLine to maintain relationship
          #            if (purchLine.Tax1099Fields)
          #            {
          #                tax1099Fields = outputContractPre.parmTax1099Fields();
          #            }
          #
          #            if (tax1099Fields && (tax1099Fields.Tax1099Box == #G_1
          #                                    || tax1099Fields.Tax1099Box == #G_2
          #                                    || tax1099Fields.Tax1099Box == #S_2))
          #            {
          #                try
          #                {
          #                    tax1099BoxDetail_ds.write(true);
          #
          #                    if (!newTax1099Detail)
          #                    {
          #                        purchLine.Tax1099RecId = tax1099BoxDetail.RecId;
          #                    }
          #                }
          #                catch
          #                {
          #                    return;
          #                }
          #            }
          #            else
          #            {
          #                if (tax1099BoxDetail)
          #                {
          #                    tax1099BoxDetail.delete();
          #                }
          #                purchLine.Tax1099RecId = 0;
          #            }
          #        }
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)) && outputContractPre.parmRetailSumLinesHasChanged())
          #        {
          #            retailSumLines_ds.research();
          #        }
          #
          #        if (isWHSPurchLineEnabled && !whsPurchLine.RecId)
          #        {
          #            purchLine.PackedWHSLine = buf2Con(whsPurchLine);
          #        }
          #        purchLine.LineAmount=round(purchLine.LineAmount,0.01);
          #        super();
          #
          #        if (isWHSPurchLineEnabled)
          #        {
          #            whsPurchLine.data(WHSPurchLine::find(purchLine.InventTransId));
          #        }
          #
          #        if(SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(PurchLine_Intrastat)))
          #        {
          #           purchLine_Intrastat.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchLine);
          #        }
          #        if (isPurchLine_INEnabled)
          #        {
          #            purchLine_IN.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchLine);
          #        }
          #        if (isPurchLine_WEnabled)
          #        {
          #            purchLine_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(purchLine);
          #        }
          #
          #        inputContractPost.parmPurchTableCheckUpdate(outputContractPre.parmPurchTableCheckUpdate());
          #        inputContractPost.parmPurchLine(purchLine);
          #        inputContractPost.parmAutoConfig(autoConfig);
          #
          #        if (copyTaxGroupToMarkupTrans == DialogButton::Yes || copyTaxGroupToMarkupTrans == DialogButton::YesToAll)
          #        {
          #            inputContractPost.parmCopyTaxGroupToMarkupTrans(copyTaxGroupToMarkupTrans);
          #            copyTaxGroupToMarkupTrans = DialogButton::No;
          #        }
          #
          #        purchTable_ds.onSummaryRecordsInvalid(tableNum(PurchTotalsSummary));
          #
          #        if (purchLine.isCategoryBased() && !purchLineForeignTradeCategory.PurchLineInventTransId)
          #        {
          #            purchLineForeignTradeCategory.initFromPurchLine(purchLine);
          #            purchLineForeignTradeCategory_ds.write();
          #            inputContractPost.parmUpdatePendingRegistrationsNonStocked(true);
          #        }
          #
          #        outputContractPost = purchTableForm.purchLine_WritePostSuper(inputContractPost);
          #
          #        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)) && outputContractPost.parmRetailSumLinesHasChanged())
          #        {
          #            retailSumLines_ds.research();
          #            purchLine_ds.reread();
          #            isPurchLineReread = true;
          #            purchLine_ds.refresh();
          #            isPurchLineRefreshed = true;
          #        }
          #
          #        if (purchLine.InventDimId != inventDim.InventDimId)
          #        {
          #            inventDim.data(InventDim::find(purchLine.InventDimId));
          #            inventDim_ds.setCurrent();
          #        }
          #
          #        purchTableForm.refreshDeliverySchedule(purchLine, agreementWasChanged && !purchLine.MatchingAgreementLine);
          #
          #        if (TaxParameters::isCustomsEnable_IN()
          #            && purchTable_W.CustomsImportOrder_IN
          #            && TaxParameters::find().EximIncentiveSchemes_IN
          #            && eximPurchLine_IN)
          #        {
          #            eximPurchLine_IN.write();
          #        }
          #
          #        if (purchTable.InterCompanyOrder)
          #        {
          #            localPurchLine.data(purchLine.data());
          #            purchLine_ds.executeQuery();
          #            purchLine_ds.findRecord(localPurchLine);
          #        }
          #
          #        if (!(isPurchLineReread && isPurchLineRefreshed))
          #        {
          #            // update purchase order line budget check result display.
          #            purchLine_ds.updateBudgetCheckResultDisplay();
          #        }
          #        purchTable_ds.reread();
          #        purchTable_ds.refresh();
          #        purchLine_ds.reread();
          #        purchLine_ds.refresh();
          #    }
          #    else
          #    {
          #        outputContractPost = purchTableForm.purchLine_WritePostSuper(inputContractPost);
          #        purchLine_ds.reread();
          #        purchTable_ds.reread();
          #    }
          #
          #    if (isRU)
          #    {
          #        element.enableInvoice4PaymButtons();
          #    }
          #
          #    interCompanyIsPriceDiscSearchNeeded = 0;
          #
          #
          #    if (outputContractPost.parmCreditNoteCashDiscMessage())
          #    {
          #        info("@SYS99051");
          #    }
          #
          #    // <PubSect>
          #    if (purchLine.isBudgetReservationLineReferenced() && purchLine.LineAmount < 0)
          #    {
          #        purchLine.BudgetReservationLine_PSN = 0;
          #        info("@SYP4990146");
          #    }
          #    // </PubSect>
          #
          #    //BEGIN             STF_MEGA_INFOR          Dev: Roberto Zamora
          #    ttsBegin;
          #    delete_from purchAssets where purchAssets.PurchLineRecId == 0;
          #    ttsCommit;
          #    //END               STF_MEGA_INFOR          Dev: Roberto Zamora
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLineForeignTradeCategory
          Table               #PurchLineForeignTradeCategory
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #allowEdtItemCodeId
          #void allowEdtItemCodeId()
          #{
          #    if (purchLine.isCategoryBased())
          #    {
          #        if (purchLine.receivedInTotal()    != 0
          #        ||  purchLine.registered()         != 0
          #        ||  purchLine.invoicedInTotal()    != 0)
          #        {
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).allowEdit(false);
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).skip(true);
          #        }
          #        else
          #        {
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).allowEdit(true);
          #            purchLineForeignTradeCategory_ds.object(fieldNum(PurchLineForeignTradeCategory, ItemCodeId)).skip(false);
          #        }
          #    }
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int     ret;
          #    boolean allowEditLine;
          #
          #    ret = super();
          #
          #    if (purchLine.isCategoryBased())
          #    {
          #        allowEditLine = purchTableForm.editLineAllowed(purchLine);
          #        purchLineForeignTradeCategory_ds.allowEdit(allowEditLine);
          #        if (allowEditLine)
          #        {
          #            purchLineForeignTradeCategory_ds.allowEdtItemCodeId();
          #        }
          #    }
          #    else
          #    {
          #        purchLineForeignTradeCategory_ds.allowEdit(false);
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret = true;
          #
          #    if (purchLine.RecId && purchLine.isCategoryBased())
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    boolean             isPurchLineResearch;
          #    PurchTableVersion   purchTableVersion;
          #
          #    if (purchLine.RecId && purchLine.isCategoryBased())
          #    {
          #        if (!purchTable.ChangeRequestRequired && purchTable.DocumentState == VersioningDocumentState::Confirmed)
          #        {
          #            purchTableVersion = PurchTableVersion::findLatest(purchTable.PurchId, purchTable.DataAreaId);
          #            if (purchTableVersion && purchTableVersion.IsArchived == NoYes::No)
          #                isPurchLineResearch = true;
          #        }
          #
          #        super();
          #
          #        if (isPurchLineResearch)
          #            purchLine_ds.research(true);
          #    }
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    if (purchLine.isCategoryBased())
          #    {
          #        super(_append);
          #    }
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    super();
          #
          #    this.query().dataSourceTable(this.table()).addRange(fieldNum(PurchLineForeignTradeCategory, IsDeleted)).value(queryValue(NoYes::No));
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          JoinSource          #PurchLine
          LinkType            #InnerJoin
          DelayActive         #No
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD inventBatchId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventBatchId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventBatchId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD wMSLocationId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,wmsLocationId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,wmsLocationId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD wMSPalletId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,wmsPalletId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,wmsPalletId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD inventSerialId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventSerialId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventSerialId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventLocationId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (inventDim.orig().InventSiteId != inventDim.InventSiteId)
                #    {
                #        purchLine.modifyInventDim(inventDim, fieldNum(InventDim, InventSiteId), !purchLine.MatchingAgreementLine);
                #    }
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventLocationId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine.setAddressFromInventDim(inventDim);
                #    purchLine_ds.rereadReferenceDataSources();
                #    purchLine_ds.refresh();
                #
                #    // <GIN>
                #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
                #    {
                #        taxInformation_IN_DS.linkActive();
                #        purchLine_IN_ds.refresh();
                #    }
                #    // </GIN>
                #
                #    //BEGIN             STF_MEGA_PreGoLive              Dev: Roberto Zamora
                #    //if(InventDim.InventLocationId)
                #      //  PurchLine.DefaultDimension = STF_CCAndLocationsParameters::findByLocationId(InventDim.InventLocationId, PurchLine.DefaultDimension);
                #    //END               STF_MEGA_PreGoLive              Dev: Roberto Zamora
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #    RetailStoreTable                    rboStoreTable;
                #    RetailChannelTable                  retailChannelTable;
                #    RetailChannelAssortedProductView    retailChannelAssortedProductView;
                #    InventTable                         inventTable;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventLocationId));
                #    }
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(Retail))
                #        && ret)
                #    {
                #        select firstonly InventLocation, RecId, PoItemFilter, StoreNumber from rboStoreTable where
                #            rboStoreTable.InventLocation == inventDim.InventLocationId;
                #
                #        if (rboStoreTable.RecId && rboStoreTable.PoItemFilter == true)
                #        {
                #            select firstonly RecId
                #                from retailChannelTable
                #                    where retailChannelTable.RecId == rboStoreTable.RecId
                #                join omOperatingUnitId, ProductID, InventLocationDataAreaId from retailChannelAssortedProductView
                #                    where retailChannelAssortedProductView.omOperatingUnitId == retailChannelTable.omOperatingUnitID
                #                join ItemId, Product, DataAreaId from inventTable
                #                    where inventTable.Product == retailChannelAssortedProductView.ProductID &&
                #                    inventTable.DataAreaId == retailChannelAssortedProductView.InventLocationDataAreaId &&
                #                    inventTable.DataAreaId == purchLine.DataAreaId &&
                #                    inventTable.ItemId == purchLine.ItemId;
                #
                #
                #            if (!retailChannelTable)
                #            {
                #                return checkFailed(strFmt("@RET4631", purchLine.ItemId, rboStoreTable.StoreNumber));
                #            }
                #        }
                #    }
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD configId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,ConfigId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    if(!EcoResProductMasterConfigurationMgr::configure(  _formControl,
                #                                                        purchLine.ItemId,
                #                                                        InventDim::findOrCreate(inventDim).InventDimId,
                #                                                        purchLine.deliveryDate(),
                #                                                        purchLine.ItemBOMId,
                #                                                        purchLine.QtyOrdered))
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,ConfigId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventSizeId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventSizeId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventSizeId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventColorId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventColorId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventColorId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventSiteId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventSiteId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventSiteId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine.setAddressFromInventDim(inventDim);
                #    purchLine_ds.rereadReferenceDataSources();
                #    purchLine_ds.refresh();
                #
                #    // <GIN>
                #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
                #    {
                #        taxInformation_IN_DS.linkActive();
                #        purchLine_IN_ds.refresh();
                #    }
                #    // </GIN>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventGtdId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,
                #                              fieldNum(InventDim, InventGtdId_RU));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,
                #                                                fieldNum(InventDim, InventGtdId_RU));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventProfileId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim, fieldNum(InventDim, InventProfileId_RU));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim, fieldNum(InventDim, InventProfileId_RU));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventOwnerId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim, fieldNum(InventDim, InventOwnerId_RU));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,
                #                            fieldNum(InventDim, InventOwnerId_RU));
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventStyleId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim,InventStyleId), !purchLine.MatchingAgreementLine);
                #
                #    purchLine_ds.cacheCalculateMethod(tableMethodStr(PurchLine, itemName));
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim,InventStyleId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD InventStatusId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ret)
                #    {
                #        ret = purchLine.validateModifyInventDim(inventDim,fieldNum(InventDim, InventStatusId));
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    purchLine.modifyInventDim(inventDim,fieldNum(InventDim, InventStatusId), !purchLine.MatchingAgreementLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #//    super();
          #}
        ENDSOURCE
        SOURCE #initValue
          #void initValue()
          #{
          #    purchLine_ds.initInventDim();
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #FiscalEstablishment
          #display FiscalEstablishmentId_BR FiscalEstablishment()
          #{
          #    return inventDim.inventSite().fiscalEstablishment().FiscalEstablishmentId;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EMSPurchOrderFlowRelation
          Table               #EMSPurchOrderFlowRelation
          AllowCheck          #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    super();
          #    hasEMSAccess = element.hasTableAccess(this.table());
          #    element.handleSecurity(this, hasEMSAccess);
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceCreatePre();
          #
          #    super(_append);
          #
          #    element.numberSeqFormHandler().formMethodDataSourceCreate();
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceDelete();
          #    super();
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceWrite();
          #    super();
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean isValid;
          #
          #    isValid = super();
          #
          #    if (isValid)
          #    {
          #        isValid = element.numberSeqFormHandler().formMethodDataSourceValidateWrite(isValid);
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    super();
          #
          #    emsPurchOrderFlowRelation.RefRecId = purchLine.RecId;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EMSFlow
          Table               #EMSFlow
          AllowCheck          #No
          JoinSource          #EMSPurchOrderFlowRelation
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD SubstanceId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    // The lookup should only be available if Source is set, otherwise this field is disabled.
                #    // The lookup should only show the substances associated to the source, as well as with destination
                #    // if the destination has a value.
                #    SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tableNum(EMSSubstance), _formControl);
                #    Query                query;
                #    QueryBuildDataSource qbsEMSSubstance, qbsEMSProcessReference;
                #    QueryBuildRange      queryBuildRange;
                #
                #    if (emsFlow.SourceProcessId != '' && emsFlow.IsAccidental == false)
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSSubstance, SubstanceId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSSubstance, Description));
                #
                #        query = new Query();
                #        qbsEMSSubstance = query.addDataSource(tableNum(EMSSubstance));
                #        qbsEMSProcessReference = qbsEMSSubstance.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #
                #        if (emsFlow.DestinationProcessId != '')
                #        {
                #            queryBuildRange.value(
                #                    strFmt('((%2.%3 == \"%5\") && (%2.%4 == \"%6\")) && ((%1.%7 == %2.%7) || (%1.%8 == %2.%8))',
                #                       query.dataSourceTable(tableNum(EMSSubstance)).name(),
                #                       query.dataSourceTable(tableNum(EMSProcessReference)).name(),
                #                       fieldStr(EMSProcessReference,SourceProcessId),
                #                       fieldStr(EMSProcessReference,DestinationProcessId),
                #                       emsFlow.SourceProcessId,
                #                       emsFlow.DestinationProcessId,
                #                       fieldStr(EMSSubstance, SubstanceId),
                #                       fieldStr(EMSSubstance, SubstanceCategoryId)));
                #        }
                #        else
                #        {
                #             queryBuildRange.value(
                #                    strFmt('(%2.%3 == \"%5\") && ((%1.%6 == %2.%6) || (%1.%7 == %2.%7))',
                #                       query.dataSourceTable(tableNum(EMSSubstance)).name(),
                #                       query.dataSourceTable(tableNum(EMSProcessReference)).name(),
                #                       fieldStr(EMSProcessReference,SourceProcessId),
                #                       fieldStr(EMSProcessReference,DestinationProcessId),
                #                       emsFlow.SourceProcessId,
                #                       fieldStr(EMSSubstance, SubstanceId),
                #                       fieldStr(EMSSubstance, SubstanceCategoryId)));
                #        }
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    emsFlow.UnitOfMeasure = EMSSubstance::find(emsFlow.SubstanceId).UnitOfMeasure;
                #    emsFlow_UnitOfMeasure.value(emsFlow.UnitOfMeasure);
                #    if (UnitOfMeasureConverter::canBeConverted(
                #            UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.PurchUnit),
                #            emsFlow.UnitOfMeasure))
                #    {
                #        emsFlow.UnitOfMeasure = UnitOfMeasure::findBySymbol(purchLine.PurchUnit).RecId;
                #        emsFlow.SubstanceEntryQty = purchLine.PurchQty;
                #    }
                #    else
                #    {
                #        emsFlow.SubstanceEntryQty = 0;
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD SourceProcessId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(EMSProcess), _formControl);
                #    Query                   query;
                #    QueryBuildDataSource    qbsEMSProcess, qbsEMSProcessReference;
                #    QueryBuildRange         queryBuildRange;
                #    EMSSubstanceCategoryId  substanceCategoryId;
                #
                #    if (emsFlow.DestinationProcessId != '')
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, ProcessId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, Description));
                #
                #        query = new Query();
                #        qbsEMSProcess = query.addDataSource(tableNum(EMSProcess));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,ProcessId));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,Description));
                #        qbsEMSProcessReference = qbsEMSProcess.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.addLink(fieldNum(EMSProcess,ProcessId),fieldNum(EMSProcessReference,SourceProcessId));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,DestinationProcessId));
                #        queryBuildRange.value(queryValue(emsFlow.DestinationProcessId));
                #        if (emsFlow.SubstanceId != '')
                #        {
                #            queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #            substanceCategoryId = EMSSubstance::find(emsFlow.SubstanceId).SubstanceCategoryId;
                #            queryBuildRange.value(
                #                  strFmt('(%1 == "%3") || (%2 == "%4")',
                #                       fieldStr(EMSProcessReference,SubstanceId),
                #                       fieldStr(EMSProcessReference,SubstanceCategoryId),
                #                       emsFlow.SubstanceId,
                #                       substanceCategoryId));
                #        }
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #    else if (emsFlow.SubstanceId != '')
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, ProcessId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, Description));
                #
                #        query = new Query();
                #        qbsEMSProcess = query.addDataSource(tableNum(EMSProcess));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,ProcessId));
                #        qbsEMSProcess.addGroupByField(fieldNum(EMSProcess,Description));
                #        qbsEMSProcessReference = qbsEMSProcess.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.addLink(fieldNum(EMSProcess,ProcessId),fieldNum(EMSProcessReference,SourceProcessId));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #        substanceCategoryId = EMSSubstance::find(emsFlow.SubstanceId).SubstanceCategoryId;
                #        queryBuildRange.value(
                #              strFmt('(%1 == "%3") || (%2 == "%4")',
                #                   fieldStr(EMSProcessReference,SubstanceId),
                #                   fieldStr(EMSProcessReference,SubstanceCategoryId),
                #                   emsFlow.SubstanceId,
                #                   substanceCategoryId));
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #    else
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    // This should control and disable the Substance and Destination if the
                #    // Source is cleared out.
                #    element.setControls();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DestinationProcessId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    // The lookup should only be available if Source is set, otherwise this field is disabled.
                #    // The lookup should only show the processes associated to the source, as well as with the substance
                #    // if the substance has a value.
                #
                #    SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(EMSProcess), _formControl);
                #    Query                   query;
                #    QueryBuildDataSource    qbsEMSProcess, qbsEMSProcessReference;
                #    QueryBuildRange         queryBuildRange;
                #    EMSSubstanceCategoryId  substanceCategoryId;
                #
                #    if (emsFlow.SourceProcessId != '' && emsFlow.IsAccidental == false)
                #    {
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, ProcessId));
                #        sysTableLookup.addLookupfield(fieldNum(EMSProcess, Description));
                #
                #        query = new Query();
                #        qbsEMSProcess = query.addDataSource(tableNum(EMSProcess));
                #        qbsEMSProcessReference = qbsEMSProcess.addDataSource(tableNum(EMSProcessReference));
                #        qbsEMSProcessReference.addLink(fieldNum(EMSProcess,ProcessId),fieldNum(EMSProcessReference,DestinationProcessId));
                #        qbsEMSProcessReference.joinMode(JoinMode::ExistsJoin);
                #
                #        queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SourceProcessId));
                #        queryBuildRange.value(queryValue(emsFlow.SourceProcessId));
                #
                #        if (emsFlow.SubstanceId != '')
                #        {
                #            queryBuildRange = qbsEMSProcessReference.addRange(fieldNum(EMSProcessReference,SubstanceId));
                #            substanceCategoryId = EMSSubstance::find(emsFlow.SubstanceId).SubstanceCategoryId;
                #            queryBuildRange.value(
                #                  strFmt('(%1 == "%3") || (%2 == "%4")',
                #                       fieldStr(EMSProcessReference,SubstanceId),
                #                       fieldStr(EMSProcessReference,SubstanceCategoryId),
                #                       emsFlow.SubstanceId,
                #                       substanceCategoryId));
                #        }
                #
                #        sysTableLookup.parmQuery(query);
                #        sysTableLookup.performFormLookup();
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    super();
          #    hasEMSAccess = element.hasTableAccess(this.table());
          #    element.handleSecurity(this, hasEMSAccess);
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean isValid;
          #
          #    // Because of the join type between EMSFlow and EMSInvoiceRegisterFlowRelation tables,
          #    // the FlowId is not set during EMSFlow.initValue that's why setting FlowID is
          #    // intentionally done in this method, before writing to the table.
          #    emsFlow.FlowId = !emsFlow.FlowId ? emsPurchOrderFlowRelation.FlowId : emsFlow.FlowId;
          #
          #    isValid = super();
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    super(_append);
          #
          #    // This should control and disable the Substance and Destination since the
          #    // Source is still empty at this point.
          #    element.setControls();
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #
          #    super();
          #
          #    // Set the sourceProcessId if only one is available.
          #    if (EMSProcessRelation::typeLikeCount(EMSRelationTypes::Vendor,
          #                                      tableNum(VendTable),
          #                                      VendTable::find(purchTable.OrderAccount).RecId) == 1)
          #    {
          #        emsFlow.SourceProcessId = EMSProcessRelation::find(EMSRelationTypes::Vendor,
          #                                          tableNum(VendTable),
          #                                          VendTable::find(purchTable.OrderAccount).RecId).ProcessID;
          #    }
          #    // Set the substanceId if only one is available.
          #    if (EMSSubstance::itemLikeCount(purchLine.ItemId, purchLine.InventDimId) == 1)
          #    {
          #        emsFlow.SubstanceId = EMSSubstance::findbyItemId(purchLine.ItemId, purchLine.InventDimId).SubstanceId;
          #        emsFlow.UnitOfMeasure = EMSSubstance::find(emsFlow.SubstanceId).UnitOfMeasure;
          #        if (UnitOfMeasureConverter::canBeConverted(
          #                UnitOfMeasure::unitOfMeasureIdBySymbol(purchLine.PurchUnit),
          #                emsFlow.UnitOfMeasure))
          #        {
          #            emsFlow.UnitOfMeasure = UnitOfMeasure::findBySymbol(purchLine.PurchUnit).RecId;
          #            emsFlow.SubstanceEntryQty = purchLine.PurchQty;
          #        }
          #    }
          #    // Set the destinationprocessId if only one is available.
          #    if (EMSProcessReference::destinationProcessLikeCount(emsFlow.SourceProcessId, emsFlow.SubstanceId) == 1)
          #    {
          #        emsFlow.DestinationProcessId = EMSProcessReference::find(emsFlow.SourceProcessId, emsFlow.SubstanceId).DestinationProcessId;
          #    }
          #
          #
          #    emsFlow.FlowOriginType = EMSFlowOriginType::PurchaseOrder;
          #    emsFlow.TransactionCurrencyAmount = purchLine.LineAmount;
          #    emsFlow.TransactionCurrency       = purchLine.CurrencyCode;
          #    emsFlow.TransDate                 = purchLine.DeliveryDate;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    emsFlow.ScopeType = EMSProcessReference::find(emsFlow.SourceProcessId, emsFlow.SubstanceId).ScopeType;
          #    super();
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    flow_SourceProcessId.allowEdit(!emsFlow.IsProcessed);
          #    flow_SubstanceId.allowEdit(!emsFlow.IsProcessed);
          #    flow_SubstanceEntryQty.allowEdit(!emsFlow.IsProcessed);
          #    emsFlow_UnitOfMeasure.allowEdit(!emsFlow.IsProcessed);
          #    flow_DestinationProcessId.allowEdit(!emsFlow.IsProcessed);
          #    flow_FromDateTime.allowEdit(!emsFlow.IsProcessed);
          #    flow_ToDateTime.allowEdit(!emsFlow.IsProcessed);
          #    flow_Amount.allowEdit(!emsFlow.IsProcessed);
          #    emsFlow_TransactionCurrency.allowEdit(!emsFlow.IsProcessed);
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    element.numberSeqFormHandler().formMethodDataSourceDelete();
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PDSAdvancedPriceInfo
          Table               #PDSAdvancedPriceInfo
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (!#PDSPotencyEnabled)
          #    {
          #        pdsAdvancedPriceInfo_DS.joinSource(null);
          #        pdsAdvancedPriceInfo_DS.linkType(QueryDataLinkType::None);
          #    }
          #    super();
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    //super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_Intrastat
          Table               #PurchTable_Intrastat
          JoinSource          #PurchTable
          LinkType            #OuterJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine_Intrastat
          Table               #PurchLine_Intrastat
          JoinSource          #PurchLine
          LinkType            #OuterJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_BR
          Table               #PurchTable_BR
          JoinSource          #PurchTable
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD CFPSId_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    CFPSTable_BR::lookup(_formControl, SalesPurchBoth_BR::Purch);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD SalesPurchOperationType_BR
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    CFOPAttributesDeterminer_BR cfopAttributesDeterminer;
                #    boolean                     ret;
                #
                #    cfopAttributesDeterminer = CFOPAttributesDeterminer_BR::construct(purchLine);
                #
                #    ret = salesPurchOperationTypeController_BR.validate(purchTable_BR.SalesPurchOperationType_BR, cfopAttributesDeterminer);
                #
                #    if (ret && !purchTable.createInventTrans_BR())
                #    {
                #        if (Box::yesNo("@GLS104", DialogButton::No) == DialogButton::No)
                #        {
                #            return false;
                #        }
                #    }
                #
                #    return super() && ret;
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    CFOPAttributesDeterminer_BR cfopAttributesDeterminer;
                #    SalesPurchOperationTypeController_BR s;
                #
                #    cfopAttributesDeterminer = CFOPAttributesDeterminer_BR::construct(purchLine);
                #    s = new SalesPurchOperationTypeController_BR (element.name());
                #    return s.lookupReference(_formReferenceControl, cfopAttributesDeterminer);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchTableEnabled_BR)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RetailPackagePurch
          Table               #RetailPackagePurch
          AllowCheck          #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD PackageId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Qty
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Retail Package Purchase - Qty - Modified
                #/// </summary>
                #public void modified()
                #{
                #    super();
                #
                #    purchTable_ds.reReadLines();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD QtyReceived
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Retail Package Purch - Qty Received - Modified
                #/// </summary>
                #public void modified()
                #{
                #    super();
                #
                #    purchTable_ds.reReadLines();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #delete
          #/// <summary>
          #/// Retail Package Purch - Delete
          #/// </summary>
          #public void delete()
          #{
          #    super();
          #
          #    purchTable_ds.reread();
          #    purchTable_ds.reReadLines();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RetailSumLines
          Table               #RetailSumLines
          Index               #PurchLineIdx
          CounterField        #LineNum
          AllowCheck          #No
          JoinSource          #PurchTable
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD ItemId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Retail Sum Lines - Item ID - Modified
                #/// </summary>
                #public void modified()
                #{
                #    ;
                #
                #    retailSumLines_DS.inventLocationIdActive();
                #
                #    super();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #/// <summary>
          #/// Retail Sum Lines - Write
          #/// </summary>
          #public void write()
          #{
          #    super();
          #
          #    purchLine_ds.refresh();
          #    purchLine_ds.research(true);
          #    purchLine_ds.active();
          #
          #}
        ENDSOURCE
        SOURCE #active
          #/// <summary>
          #/// Retail Sum LInes - Active
          #/// </summary>
          #/// <returns>
          #/// boolean
          #/// </returns>
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    this.inventLocationIdActive();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #inventLocationIdActive
          #/// <summary>
          #/// Retail Sum Lines - Invent Location ID active
          #/// </summary>
          #void inventLocationIdActive()
          #{
          #    InventDimGroupFieldSetup inventDimGroupFieldSetup = InventDimGroupSetup::newItemId(retailSumLines.ItemId).getFieldSetup(fieldNum(InventDim,InventLocationId));
          #
          #    fshSumLines_InventLocationId.allowEdit(inventDimGroupFieldSetup.isActive());
          #}
        ENDSOURCE
        SOURCE #initValue
          #/// <summary>
          #/// Retail Sum Lines - Initilize Value
          #/// </summary>
          #public void initValue()
          #{
          #    super();
          #
          #    retailSumlines.InventLocationId = purchTable.InventLocationId;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #EximPurchLine_IN
          Table               #EximPurchLine_IN
          Index               #PurchLineRecIdx
          AllowCheck          #No
          AllowDelete         #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD EximIncentiveSchemeGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    if (eximPurchLine_IN.EximIncentiveSchemeGroup)
                #    {
                #        eximPurchLine_IN.EximPorts = EximIncentiveSchemeGroup_IN::find(eximPurchLine_IN.EximIncentiveSchemeGroup).EximPortId;
                #    }
                #
                #    eximPurchLine_IN_ds.object(fieldNum(EximPurchLine_IN, ApplyDEPB)).allowEdit(element.enableApplyDEPB_IN());
                #    eximPurchLine_IN_ds.rereadReferenceDataSources();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #    if (ret)
          #    {
          #        eximPurchLine_IN_ApplyDEPB.allowEdit(element.enableApplyDEPB_IN());
          #    }
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #prev
          #int prev()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.prev();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #next
          #int next()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.next();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #last
          #int last()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.last();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #first
          #int first()
          #{
          #    int ret;
          #
          #    ret = purchLine_ds.first();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    purchLine_ds.create();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #Tax1099BoxDetail
          Table               #Tax1099BoxDetail
          AllowCheck          #No
          JoinSource          #PurchLine
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD State
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    tax1099BoxDetail.Tax1099StateTaxID = VendStateTaxID::findByVendState(purchTable.InvoiceAccount,tax1099BoxDetail.State).StateTaxID;
                #
                #    element.redraw();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    Tax1099BoxDetail::lookupTax1099State(_formControl, purchTable.InvoiceAccount);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    Tax1099BoxDetail::jumpRefTax1099State(purchTable.InvoiceAccount,tax1099BoxDetail.State);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write(boolean _tax1099DetailRequired = false)
          #{
          #
          #    Tax1099Fields tax1099Fields;
          #
          #    if (_tax1099DetailRequired)
          #    {
          #        //Called as a child record for PurchLine
          #        super();
          #        tax1099Fields = Tax1099Fields::find(purchLine.Tax1099Fields);
          #
          #        if (tax1099Fields.Tax1099Box == #G_2)
          #        {
          #            if(tax1099BoxDetail.Tax1099TaxYear > year(systemDateGet()) && tax1099BoxDetail.Tax1099TaxYear < (year(systemDateGet()) + 15))
          #            {
          #                warning("@SPS2");
          #            }
          #        }
          #    }
          #
          #    else if(purchLine.validateWrite())
          #    {
          #        purchline_ds.write();
          #    }
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean         isValid;
          #    Tax1099Fields   tax1099Fields;
          #
          #
          #    isValid = super();
          #    tax1099Fields = Tax1099Fields::find(purchLine.Tax1099Fields);
          #
          #    if(isValid)
          #    {
          #        if (isValid && tax1099Fields.Tax1099Box == #G_1)
          #        {
          #            if ((abs(tax1099BoxDetail.Tax1099StateTaxWithheld) > abs(purchLine.Tax1099Amount)))
          #            {
          #                isValid = checkFailed(strFmt("@SPS1943"));
          #            }
          #        }
          #
          #        if (tax1099Fields.Tax1099Box == #S_2)
          #        {
          #            if ((tax1099BoxDetail.Tax1099DateOfClosing == dateNull()) || (tax1099BoxDetail.Tax1099AddressorLegalDesc ==""))
          #            {
          #                isValid = checkFailed("@SPS3");
          #            }
          #        }
          #
          #        else if (tax1099Fields.Tax1099Box == #G_2)
          #        {
          #            if ((tax1099BoxDetail.Tax1099TaxYear < (year(systemDateGet())-15)) || (tax1099BoxDetail.Tax1099TaxYear > (year(systemDateGet()) + 10)) )
          #            {
          #                isValid = checkFailed(strFmt("@SPS17", "@SPS1064", int2str(year(systemDateGet()) - 15), int2str(year(systemDateGet()) + 10)));
          #            }
          #        }
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RAssetPurchTrans
          Table               #RAssetPurchTrans
          Index               #TableRecAssetIdx
          AllowCheck          #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret = super();
          #
          #    rassetpurchTrans_ds.allowDelete(rAssetPurchTrans.Posted ?
          #                                    false :
          #                                    purchTableForm.editLineAllowed(purchLine) && (element.allowEditAsset_RU() || purchLine.ProcurementCategory));
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    super();
          #    purchTable_ds.reread();
          #    purchTable_ds.refresh();
          #    purchTable_ds.selectionChanged();
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    super();
          #    purchTable_ds.reread();
          #    purchTable_ds.refresh();
          #    purchTable_ds.selectionChanged();
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    super();
          #    rAssetPurchTrans.initFromPurchLine(purchLine);
          #}
        ENDSOURCE
        SOURCE #linkActive
          #public void linkActive()
          #{
          #    boolean allowEdit;
          #
          #    super();
          #
          #    allowEdit = purchTableForm.editLineAllowed(purchLine) && (element.allowEditAsset_RU() || purchLine.ProcurementCategory);
          #
          #    rassetpurchTrans_ds.allowEdit(allowEdit);
          #    rassetpurchTrans_ds.allowCreate(allowEdit);
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TaxInformation_IN
          Table               #TaxInformation_IN
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine_IN
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD SalesTaxRegistrationNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.SalesTaxRegistrationNumber).RegistrationNumber,
                #        TaxType_IN::SalesTax,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TIN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.tin).RegistrationNumber,
                #        TaxType_IN::VAT,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TAN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxWithholdRegNumbers_IN::jumpRef(
                #        TaxWithholdRegNumbers_IN::find(taxInformation_IN.tin).RegistrationNumber,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ManECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.ManECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TraderECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.TraderECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD IECRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.iecRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Customs,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD STCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.stcRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::ServiceTax,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ECCNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.eccNumber).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        purchLine);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine_IN
          Table               #PurchLine_IN
          JoinSource          #PurchLine
          LinkType            #Passive
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD CompanyLocation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRefLocationAddressForm(purchLine_IN.CompanyLocation_IN, this);
                #}
                #
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    purchLine_IN_DS.object(fieldNum(PurchLine_IN, TaxInformation_IN)).modified();
                #    purchLine.DeliveryPostalAddress = LogisticsPostalAddress::findByLocation(purchLine_IN.CompanyLocation_IN).RecId;
                #    purchLine_DS.object(fieldNum(PurchLine, DeliveryPostalAddress)).modified();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxLogisticsLocationControllerHelper_IN::lookupAllLogisticsLocation(_formReferenceControl,inventDim.InventLocationId,inventDim.InventSiteId,true);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD CustomsTariffCodeTable_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return CustomsTariffCodeTable_IN::resolveCustomsTariffCode(_formReferenceControl, Direction_IN::Import);
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = CustomsTariffCodeTable_IN::lookupDirectionImportExport(_formReferenceControl, enum2str(Direction_IN::Import));
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD DirectSettlement_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    if (purchLine_IN.DirectSettlement_IN != DirectSettlement_IN::PLA)
                #    {
                #        purchLine_IN.cenvatCreditAvailed_IN = NoYes::No;
                #    }
                #    element.enableFieldsActive_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ExciseRecordType_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    if (purchLine_IN.ExciseRecordType_IN != ExciseRecordType_IN::RG23C)
                #    {
                #        purchLine_IN.cenvatCreditAvailed_IN = NoYes::No;
                #    }
                #    element.enableFieldsActive_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ExciseType_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    purchLine_IN.SalesPurchJournalLineExtension_IN::initFromPrimaryTable(purchLine);
                #
                #    purchLine_IN_ds.enableExciseFields_IN();
                #    purchLine_IN_DS.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD TaxInformation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRef(purchLine_IN.TaxInformation_IN, this);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    taxInformation_IN_DS.linkActive();
                #}
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxInformation_IN::lookup(_formReferenceControl, purchline_IN.CompanyLocation_IN);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD TCSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TDSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    if (ret)
          #    {
          #        purchLine_IN_ds.rereadReferenceDataSources();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    if (purchLine.RecId && purchLine_IN.RecId)
          #    {
          #        purchLine.type().update_IN();
          #    }
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #leaveRecord
          #public boolean leaveRecord(boolean _forceUpdate = false)
          #{
          #    boolean ret;
          #
          #    if (purchLine_IN.PurchLine)
          #    {
          #        ret = super(_forceUpdate);
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret = true;
          #
          #    if (purchLine_IN.PurchLine)
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #exciseNone_IN
          #edit ExciseNone_IN exciseNone_IN(
          #    boolean         _set,
          #    ExciseNone_IN   _exciseNone_IN)
          #{
          #    ExciseNone_IN           exciseNone;
          #    purchLine_IN.ExciseRecordType_IN = TaxExciseTypeController_IN::exciseNone(_set,_exciseNone_IN, purchLine_IN.ExciseRecordType_IN);
          #
          #    exciseNone = taxExciseTypeController.exciseRecordType2ExciseNone(purchLine_IN.ExciseRecordType_IN);
          #    return exciseNone;
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchLine_INEnabled)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
        SOURCE #exciseManufacture_IN
          #edit ExciseManufacture_IN exciseManufacture_IN(
          #    boolean                 _set,
          #    ExciseManufacture_IN    _exciseManufacture_IN)
          #{
          #    ExciseManufacture_IN    exciseManufacture;
          #
          #    purchLine_IN.ExciseRecordType_IN = TaxExciseTypeController_IN::exciseManufacture(
          #        _set,
          #        _exciseManufacture_IN,
          #        purchLine_IN.ExciseRecordType_IN);
          #
          #    exciseManufacture = taxExciseTypeController.exciseRecordType2ExciseManufacture(purchLine_IN.ExciseRecordType_IN);
          #
          #    return exciseManufacture;
          #}
        ENDSOURCE
        SOURCE #exciseTraders_IN
          #edit ExciseTraders_IN exciseTraders_IN(
          #    boolean          _set,
          #    ExciseTraders_IN _exciseTraders_IN)
          #{
          #    ExciseTraders_IN        exciseTraders;
          #
          #    purchLine_IN.ExciseRecordType_IN = TaxExciseTypeController_IN::exciseTraders(_set,_exciseTraders_IN, purchLine_IN.ExciseRecordType_IN);
          #
          #    exciseTraders = taxExciseTypeController.exciseRecordType2ExciseTraders(purchLine_IN.ExciseRecordType_IN);
          #
          #    return exciseTraders;
          #}
        ENDSOURCE
        SOURCE #enableExciseFields_IN
          #public void enableExciseFields_IN()
          #{
          #    if (TaxParameters::isExciseEnable_IN())
          #    {
          #        taxExciseTypeController.buildUI(
          #            purchLine_IN.ExciseType_IN,
          #            purchLine_IN.ExciseRecordType_IN,
          #            purchLine.ItemId,
          #            purchLine.PurchQty > 0 ? TaxDirection::IncomingTax : TaxDirection::OutgoingTax);
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchLine_W
          Table               #PurchLine_W
          JoinSource          #PurchLine
          LinkType            #Passive
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD CountryRegionName_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    PurchLine::lookupCountryRegionName_RU(_formControl, purchTable.LanguageId);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MarkupCode_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.enableLedgerDimensionDefaultAccount();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    MarkupTable::serviceMarkupCodeLookup_RU(_formControl);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #    super();
          #
          #    // <GMY>
          #    if (isIsoMY)
          #    {
          #        if (purchTable.hasLinesWithoutRefrence_MY() && purchTable.hasLinesWithRefrence_MY())
          #        {
          #            if (!isWrnPrintedMY)
          #            {
          #                warning("@SYP4860678");
          #                isWrnPrintedMY = true;
          #            }
          #        }
          #        else
          #        {
          #            isWrnPrintedMY = false;
          #        }
          #    }
          #    // </GMY>
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #
          #    if (purchLine_W.PurchLine)
          #    {
          #        ret = super();
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    // <GMY>
          #    if (ret && isIsoMY)
          #    {
          #        if (purchLine_W.RefInvoiceId_MY && purchLine_W.RefInvoiceDate_MY)
          #        {
          #            if(!VendInvoiceJour::existByInvoiceIdTransDate(purchLine_W.RefInvoiceId_MY, purchLine_W.RefInvoiceDate_MY))
          #            {
          #                ret = checkFailed("@SYP4860680");
          #            }
          #        }
          #        else if ((purchLine_W.RefInvoiceId_MY && !purchLine_W.RefInvoiceDate_MY) || (!purchLine_W.RefInvoiceId_MY && purchLine_W.RefInvoiceDate_MY))
          #        {
          #            ret = checkFailed("@SYP4860689");
          #        }
          #    }
          #    // <GMY>
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchLine_WEnabled)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_W
          Table               #PurchTable_W
          JoinSource          #PurchTable
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD TCSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TDSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD GSTApprovalNumber_MY
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD InvoicePostalAddress_TH
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common      ret;
                #    VendTable   vendTable = VendTable::find(purchTable.InvoiceAccount);
                #
                #    ret = LogisticsLocationSelectionLookup::lookupAddressForm(_formReferenceControl, vendTable, [LogisticsLocationRoleType::Invoice], false);
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchTableEnabled_W)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchTable_RU
          Table               #PurchTable_RU
          JoinSource          #PurchTable
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD AgreementHeaderExt_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    // force a refresh because the agreement document title is indirectly related on a different datasource
                #    purchTable_DS.cacheCalculateMethod(tableMethodStr(PurchTable, agreementDocumentTitle_RU));
                #    purchTable_DS.refresh();
                #}
                #
              ENDSOURCE
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = PurchAgreementHeaderExt_RU::purchAgreementReferenceLookup(_formReferenceControl,
                #        purchTable.OrderAccount,
                #        purchTable.AccountingDate,
                #        purchTable.InvoiceAccount);
                #
                #    return ret;
                #}
                #
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    PurchAgreementHeaderExt_RU::purchAgreementJumpRef(purchTable_RU.AgreementHeaderExt_RU);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (isPurchTableEnabled_RU)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #WHSLoadLine
          Table               #WHSLoadLine
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    if (tabLoad.isActivePage())
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TMSPurchTable
          Table               #TMSPurchTable
          AllowCheck          #No
          JoinSource          #PurchTable
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD CarrierCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    if (tmsPurchTable.RecId == 0)
                #    {
                #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
                #    }
                #
                #    super();
                #
                #    tmsPurchTable.ModeCode  = TMSCarrier::find(tmsPurchTable.CarrierCode).ModeCode;
                #
                #    if (!tmsPurchTable.CarrierCode
                #    || !TMSCarrierService::exist(tmsPurchTable.CarrierServiceCode, tmsPurchTable.CarrierCode))
                #    {
                #        tmsPurchTable.CarrierServiceCode    = "";
                #    }
                #
                #    tmsPurchTable_ds.refresh();
                #
                #    element.tmsUpdatePurchTable();
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CarrierServiceCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    if (tmsPurchTable.RecId == 0)
                #    {
                #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
                #    }
                #
                #    super();
                #
                #    element.tmsUpdatePurchTable();
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD ModeCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    if (tmsPurchTable.RecId == 0)
                #    {
                #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
                #    }
                #
                #    super();
                #
                #    purchTable_ds.reread();
                #    purchTable_ds.refresh();
                #
                #    element.enableTMSFields();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #/// <summary>
          #/// Determines whether the current record is valid and ready to be written to the database.
          #/// </summary>
          #/// <returns>
          #/// true if the record is valid; otherwise, false.
          #/// </returns>
          #/// <remarks>
          #/// Some purchase table records don't have a corresponding tms transportation table record
          #/// so call super only if corresponding record exists
          #/// </remarks>
          #public boolean validateWrite()
          #{
          #    boolean ret = true;
          #
          #    if (tmsPurchTable.CarrierCode != "" && tmsPurchTable.CarrierServiceCode == "")
          #    {
          #        ret = checkFailed("@TRX733");
          #    }
          #
          #    if (ret
          #    && tmsPurchTable.CarrierCode
          #    && tmsPurchTable.CarrierServiceCode
          #    && !TMSCarrierService::exist(tmsPurchTable.CarrierServiceCode, tmsPurchTable.CarrierCode))
          #    {
          #        ret = checkFailed("@TRX734");
          #    }
          #
          #    if (ret && tmsPurchTable.RecId != 0)
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #write
          #/// <summary>
          #///    Persists a record in the database when super is called.
          #/// </summary>
          #/// <remarks>
          #/// Some purchase table records don't have a corresponding tms transportation table record
          #/// so call write method and not super and it will update database properly
          #/// </remarks>
          #public void write()
          #{
          #    if (!tmsPurchTable.RecId)
          #    {
          #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
          #    }
          #
          #    tmsPurchTable.write();
          #}
          #
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    element.enableTMSFields();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PurchRFQReplyLinePurchLine
          Table               #PurchRFQReplyLinePurchLine
          Index               #PurchRFQReplyLineIdx
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    return true;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    // Commented out call to Super() to avoid unintentional insert of new record
          #    // or updating an existing record ( Kernel behavior caused by Outerjoin to PurchLine)
          #
          #    //super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #WHSPurchLine
          Table               #WHSPurchLine
          AllowCheck          #No
          JoinSource          #PurchLine
          LinkType            #OuterJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #
          #    if (whsPurchLine.RecId)
          #    {
          #        ret = super();
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    if (whsPurchLine.RecId)
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #STF_PurchOrder_AssetTmp
          Table               #STF_PurchOrder_AssetTmp
          JoinSource          #PurchLine
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    super();
          #
          #    CurrencyQBR = this.query().dataSourceName('STF_PurchOrder_AssetTmp').addRange(fieldnum(STF_PurchOrder_AssetTmp,PurchLineRecId));
          #}
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    CurrencyQBR.value(queryValue(PurchLine.RecId));
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LogisticsPostalAddressHeader
          Table               #LogisticsPostalAddress
          JoinSource          #PurchTable
          JoinRelation        #DeliveryPostalAddress
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LogisticsPostalAddressLine
          Table               #LogisticsPostalAddress
          JoinSource          #PurchLine
          JoinRelation        #DeliveryPostalAddress
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustomsTariffCodeTable_IN
          Table               #CustomsTariffCodeTable_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #CustomsTariffCodeTable_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #ExciseTariffCodes_IN
          Table               #ExciseTariffCodes_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #ExciseTariffCodes_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #SalesTaxFormTypes_IN
          Table               #SalesTaxFormTypes_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #SalesTaxFormTypes_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #ServiceCodeTable_IN
          Table               #ServiceCodeTable_IN
          JoinSource          #PurchLine_IN
          JoinRelation        #ServiceCodeTable_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #InvoicePostalAddress
          Table               #LogisticsPostalAddress
          JoinSource          #PurchTable_W
          JoinRelation        #InvoicePostalAddress_TH
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDREFERENCEDATASOURCES
  
  JOINS
    PurchLine PurchTable
    PurchLineForeignTradeCategory PurchLine
    InventDim PurchLine
    EMSPurchOrderFlowRelation PurchLine
    EMSFlow EMSPurchOrderFlowRelation
    PDSAdvancedPriceInfo PurchLine
    PurchTable_Intrastat PurchTable
    PurchLine_Intrastat PurchLine
    PurchTable_BR PurchTable
    RetailPackagePurch PurchLine
    RetailSumLines PurchTable
    EximPurchLine_IN PurchLine
    Tax1099BoxDetail PurchLine
    RAssetPurchTrans PurchLine
    TaxInformation_IN PurchLine_IN
    PurchLine_IN PurchLine
    PurchLine_W PurchLine
    PurchTable_W PurchTable
    PurchTable_RU PurchTable
    WHSLoadLine PurchLine
    TMSPurchTable PurchTable
    PurchRFQReplyLinePurchLine PurchLine
    WHSPurchLine PurchLine
    STF_PurchOrder_AssetTmp PurchLine
    LogisticsPostalAddressHeader PurchTable
    LogisticsPostalAddressLine PurchLine
    CustomsTariffCodeTable_IN PurchLine_IN
    ExciseTariffCodes_IN PurchLine_IN
    SalesTaxFormTypes_IN PurchLine_IN
    ServiceCodeTable_IN PurchLine_IN
    InvoicePostalAddress PurchTable_W
  ENDJOINS
  
  PARTREFERENCES
    PARTREFERENCE #PurchLatestOrdersPart
      PROPERTIES
        Name                #PurchLatestOrdersPart
        MenuItemName        #PurchLatestOrdersPart
        DataSource          #PurchTable
        DataSourceRelation  #EDT.PurchTable.OrderAccount
        ElementPosition     #536870911
      ENDPROPERTIES
      
    ENDPARTREFERENCE
    
    PARTREFERENCE #PurchTotalsSummaryPart
      PROPERTIES
        Name                #PurchTotalsSummaryPart
        MenuItemName        #PurchTotalsSummaryPart
        DataSource          #PurchTable
        DataSourceRelation  #EDT.PurchTable.PurchId
        ElementPosition     #1073741822
      ENDPROPERTIES
      
    ENDPARTREFERENCE
    
    PARTREFERENCE #PurchEncumbranceSummaryPart
      PROPERTIES
        Name                #PurchEncumbranceSummaryPart
        MenuItemName        #PurchEncumbranceSummaryPart
        DataSource          #PurchTable
        DataSourceRelation  #EDT.PurchTable.PurchId
        ElementPosition     #1610612733
      ENDPROPERTIES
      
    ENDPARTREFERENCE
    
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS15812
      TitleDatasource     #PurchTable
      DataSource          #PurchTable
      HideIfEmpty         #No
      WorkflowEnabled     #Yes
      WorkflowDatasource  #PurchTable
      WorkflowType        #PurchTableTemplate
      Style               #DetailsFormTransaction
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #1073741822
          HierarchyParent     #FSHSum
          Style               #Strip
          DataSource          #RetailSumLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPaneHeader
          AutoDeclaration     #Yes
          ElementPosition     #357913941
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #EnvironmentActionPane
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Environment
          Style               #Strip
          DataSource          #EMSPurchOrderFlowRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #LineOverviewActionStrip
          ElementPosition     #1073741822
          HierarchyParent     #LineViewLines
          Style               #Strip
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #RAssetActionPane
          ElementPosition     #1073741822
          HierarchyParent     #Asset_RU
          Style               #Strip
          DataSource          #RAssetPurchTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Customs
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #1932735276
          HierarchyParent     #ActionPaneHeader
          Caption             #@GLS5007
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #EnvironmentActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #EnvironmentActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #General
          AutoDeclaration     #Yes
          ElementPosition     #1717986912
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS114913
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #GeneralSMB
          AutoDeclaration     #Yes
          Visible             #No
          ConfigurationKey    #Retail
          ElementPosition     #1825361094
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS114913
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Invoice
          AutoDeclaration     #Yes
          ElementPosition     #1288490184
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS14204
        ENDPROPERTIES
        
        METHODS
          SOURCE #selectionChanged
            #public void selectionChanged()
            #{
            #    PurchLine purchLineLoc;
            #
            #    super();
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAAPRetainage)))
            #    {
            #        if(!buttonUpdateInvoice.enabled())
            #        {
            #            select firstonly purchLineLoc
            #                where purchLineLoc.PurchId == purchTable.PurchId &&
            #                      purchLineLoc.psaTotalRetainAmount > 0;
            #
            #            if(purchLineLoc)
            #            {
            #                buttonUpdateInvoice.enabled(true);
            #            }
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #LineOverviewActionTab
          ElementPosition     #1431655764
          HierarchyParent     #LineOverviewActionStrip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Manage
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS115306
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Purchase
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS53872
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #PurchOrder
          AutoDeclaration     #Yes
          ElementPosition     #429496728
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS25545
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #RAssetActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #RAssetActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Receive
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #ActionPaneHeader
          Caption             #@SYS52744
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #Retail
          AutoDeclaration     #Yes
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1503238548
          HierarchyParent     #ActionPaneHeader
          Caption             #@RET4885
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #TMS
          ElementPosition     #1646404124
          HierarchyParent     #ActionPaneHeader
          Caption             #@TRX1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #WHS
          ElementPosition     #1574821336
          HierarchyParent     #ActionPaneHeader
          Caption             #@WAX13
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroupTMS
          HelpText            #@TRX617
          ElementPosition     #1610612733
          HierarchyParent     #TMS
          Caption             #@TRX597
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroupWHS
          ElementPosition     #1431655764
          HierarchyParent     #WHS
          Caption             #@SYS40422
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #CustomsGenerate
          ElementPosition     #1288490187
          HierarchyParent     #Customs
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #CustomsJournal
          ElementPosition     #1717986916
          HierarchyParent     #Customs
          Caption             #@SYS2827
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #CustomsMaintain
          ElementPosition     #858993458
          HierarchyParent     #Customs
          Caption             #@SYS316594
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #EnvironmentButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #EnvironmentActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #Functions
          ElementPosition     #1476395005
          HierarchyParent     #Retail
          Caption             #@RET4211
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #FunctionsSMB
          ElementPosition     #1431655764
          HierarchyParent     #GeneralSMB
          Caption             #@RET4211
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralMaintain
          ElementPosition     #1533916890
          HierarchyParent     #General
          Caption             #@SYS316594
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralRelatedInfo
          ElementPosition     #1840700268
          HierarchyParent     #General
          Caption             #@SYS111665
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralSetup
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #General
          Caption             #@SYS342635
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralSetupSMB
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #GeneralSMB
          Caption             #@SYS342635
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GeneralVendor
          ElementPosition     #920350134
          HierarchyParent     #General
          Caption             #@SYS8079
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #Inquiries
          Visible             #No
          ElementPosition     #1073741822
          HierarchyParent     #Retail
          Caption             #@RET5171
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #IntercompanyTracing
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1227133512
          HierarchyParent     #Manage
          Caption             #@SYS317473
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceBill
          ElementPosition     #805306365
          HierarchyParent     #Invoice
          Caption             #@SYS114665
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceChange
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #Invoice
          Caption             #@SYS317554
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceIntroduce
          AutoDeclaration     #Yes
          ElementPosition     #1342177275
          HierarchyParent     #Invoice
          Caption             #@SYS317556
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceJournals
          ElementPosition     #1879048185
          HierarchyParent     #Invoice
          Caption             #@SYS9020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceJournalsSMB
          ElementPosition     #1073741823
          HierarchyParent     #GeneralSMB
          Caption             #@SYS9020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceProcess
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #Invoice
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceProcessSMB
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #GeneralSMB
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #InvoiceSettle
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Invoice
          Caption             #@SYS114666
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LabelChangeJournal
          CountryRegionCodes  #RU
          ConfigurationKey    #Retail
          ElementPosition     #2013265917
          HierarchyParent     #Retail
          Caption             #@SYP4880932
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LineOverviewActionButtonGroup
          ElementPosition     #1610612733
          HierarchyParent     #LineOverviewActionTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LineOverviewCoreActionButtonGroup
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #LineOverviewActionTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LineOverviewWHS
          ElementPosition     #1879048189
          HierarchyParent     #LineOverviewActionTab
          Caption             #@WAX374
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageBankDocument
          AutoDeclaration     #Yes
          ElementPosition     #1533916890
          HierarchyParent     #Manage
          Caption             #@SYS313653
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageBudget
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #Manage
          Caption             #@SYS80981
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageHistory
          ElementPosition     #1840700268
          HierarchyParent     #Manage
          Caption             #@SYS35017
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ManageView
          ElementPosition     #613566756
          HierarchyParent     #Manage
          Caption             #@SYS53394
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #MCRPurchaseRelease
          ElementPosition     #2004318066
          HierarchyParent     #Purchase
          Caption             #@SYS16190
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #MCRReceiveDeliver
          ElementPosition     #1932735281
          HierarchyParent     #Receive
          Caption             #@SYS78211
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #Post
          ElementPosition     #1073741822
          HierarchyParent     #TMS
          Caption             #@SYS41360
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ProductLabels
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #Retail
          Caption             #@RET4915
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ProductLabelsSMB
          AutoDeclaration     #Yes
          ElementPosition     #1968526675
          HierarchyParent     #GeneralSMB
          Caption             #@RET4915
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseAccounting
          ElementPosition     #1717986912
          HierarchyParent     #Purchase
          Caption             #@SYS314071
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseCalculate
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Purchase
          Caption             #@SYS1085
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseCreate
          AutoDeclaration     #Yes
          ElementPosition     #429496728
          HierarchyParent     #Purchase
          Caption             #@SYS112171
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseGenerate
          AutoDeclaration     #Yes
          ElementPosition     #1503238548
          HierarchyParent     #Purchase
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseJournals
          ElementPosition     #1861152489
          HierarchyParent     #Purchase
          Caption             #@SYS2827
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchasePrepay
          AutoDeclaration     #Yes
          ElementPosition     #1288490184
          HierarchyParent     #Purchase
          Caption             #@SYS319483
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchaseTax
          ElementPosition     #858993456
          HierarchyParent     #Purchase
          Caption             #@SYS333536
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderAttachments
          ElementPosition     #1908874352
          HierarchyParent     #PurchOrder
          Caption             #@SYS316708
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderCopy
          AutoDeclaration     #Yes
          ElementPosition     #1193046470
          HierarchyParent     #PurchOrder
          Caption             #@SYS80350
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderList
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1670265058
          HierarchyParent     #PurchOrder
          Caption             #@SYS118440
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderMaintain
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #PurchOrder
          Caption             #@SYS316703
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderMiscCharges
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #Purchase
          Caption             #@SYS114608
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderNew
          ElementPosition     #477218588
          HierarchyParent     #PurchOrder
          Caption             #@SYS2055
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #PurchOrderView
          ElementPosition     #1431655764
          HierarchyParent     #PurchOrder
          Caption             #@SYS53394
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #RAssetButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #RAssetActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveDelivery
          ElementPosition     #1503238551
          HierarchyParent     #Receive
          Caption             #@SYS4508
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveJournals
          ElementPosition     #1717986916
          HierarchyParent     #Receive
          Caption             #@SYS9020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveProcess
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #Receive
          Caption             #@SYS26349
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ReceiveQualityManagement
          ElementPosition     #1288490187
          HierarchyParent     #Receive
          Caption             #@SYS113616
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ShowGroup
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #PurchOrder
          Caption             #@SYS317437
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #STF_ElectronicAccounting
          ElementPosition     #2013265917
          HierarchyParent     #LineOverviewActionTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Flow
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #EnvironmentGroup
          DataSource          #EMSPurchOrderFlowRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridGroup
          VisibleRows         #10
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #Grid1
          ElementPosition     #1610612733
          HierarchyParent     #FSHSum
          DataSource          #RetailSumLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #GridAsset
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #Asset_RU
          DataSource          #RAssetPurchTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #GridLoads
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GroupLoads
          DataSource          #WHSLoadLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #LineSpec
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #LineViewLines
          VisibleRows         #5
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #PackageGrid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridGroup1
          DataSource          #RetailPackagePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Account
          VerticalSpacing     #5
          ElementPosition     #715827882
          HierarchyParent     #Vendor
          FrameType           #None
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AdministrationForSubcontract
          ElementPosition     #2139095038
          HierarchyParent     #TabLineGeneral
          Caption             #@SYS40777
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AdministrationGroup
          ElementPosition     #1431655764
          HierarchyParent     #GroupSetupMid
          DataSource          #PurchTable
          DataGroup           #Administration
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Agreement_RU
          CountryRegionCodes  #RU
          ElementPosition     #1932735281
          HierarchyParent     #GroupGeneralRight
          DataSource          #PurchTable_RU
          DataGroup           #Agreement_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Asset_RU
          CountryRegionCodes  #RU
          Height              #Column height
          ConfigurationKey    #RAsset
          ElementPosition     #1288490184
          HierarchyParent     #TabLineFixedAsset
          Caption             #@GLS106645
          DataSource          #RAssetPurchTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Barcode
          ElementPosition     #1073741822
          HierarchyParent     #TabLinePicking
          DataSource          #PurchLine
          DataGroup           #Barcode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BaseInfo
          ElementPosition     #1073741822
          HierarchyParent     #GroupGeneralLeft
          Caption             #@SYS15812
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BudgetReservation
          AutoDeclaration     #Yes
          ElementPosition     #1968526675
          HierarchyParent     #GeneralMid
          Caption             #@SYP4990143
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ChooseGroup
          ElementPosition     #1717986916
          HierarchyParent     #RBOItemPackage
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Commitment_PSN
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1968526675
          HierarchyParent     #GeneralLeft
          Caption             #@SPS1834
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CompanyInformation
          AutoDeclaration     #Yes
          ElementPosition     #314964266
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS103911
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ConfirmingPO
          ElementPosition     #2143289342
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable
          DataGroup           #ConfirmingPO
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ConsTarget_JP
          AutoDeclaration     #Yes
          CountryRegionCodes  #JP
          ElementPosition     #2013265918
          HierarchyParent     #GroupGeneralLeft
          DataSource          #PurchTable
          DataGroup           #ConsTarget_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ContactInfo
          ElementPosition     #1073741822
          HierarchyParent     #GroupGeneralMid
          Caption             #@SYS21663
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CrossDock
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #TabLinePicking
          DataSource          #WHSPurchLine
          DataGroup           #CrossDock
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Crossdocking
          ElementPosition     #715827882
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #Crossdocking
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CrossdockingDates
          ElementPosition     #1073741823
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #CrossdockingDates
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Currency
          ElementPosition     #858993458
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable
          DataGroup           #Currency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Customs_IN
          AutoDeclaration     #Yes
          ElementPosition     #816043782
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5007
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CustReference
          ElementPosition     #1431655763
          HierarchyParent     #GeneralMid
          DataSource          #PurchLine
          DataGroup           #DeliveryRef
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DateAndTime
          ElementPosition     #1840700268
          HierarchyParent     #GroupSetupRight
          Caption             #@SYS112412
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DateAndTimeLine
          ElementPosition     #1757032074
          HierarchyParent     #TabLineSetup
          Caption             #@SYS112412
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Delivery
          ElementPosition     #1073741822
          HierarchyParent     #DeliveryExt
          DataSource          #PurchTable
          DataGroup           #Delivery
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Delivery_RU
          ElementPosition     #1610612733
          HierarchyParent     #DeliveryExt
          FrameType           #None
          DataSource          #PurchTable_RU
          DataGroup           #Delivery
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryDateLine
          ElementPosition     #1073741822
          HierarchyParent     #TabLineDelivery
          Caption             #@SYS16056
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryExt
          ElementPosition     #1073741822
          HierarchyParent     #TabHeaderDelivery
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryHeader
          ElementPosition     #858993458
          HierarchyParent     #LineViewHeader
          Caption             #@SYS4508
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryLine
          ElementPosition     #1610612734
          HierarchyParent     #TabLineDelivery
          Caption             #@SYS4508
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DeliveryLineForSubcontracts
          ElementPosition     #2146435070
          HierarchyParent     #TabLineSetup
          Caption             #@SYS4508
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Dimension
          ElementPosition     #1431655764
          HierarchyParent     #TabHeaderDimension
          DataSource          #PurchTable
          DataGroup           #Dimension
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DIOTInformation_MX
          CountryRegionCodes  #MX
          ElementPosition     #1952257860
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #DIOTInformation_MX
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Disc
          ElementPosition     #1073741822
          HierarchyParent     #TabLinePriceDisc
          Caption             #@SYS11829
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DiscMarkup
          ElementPosition     #1717986916
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable
          DataGroup           #DiscountMiscCharges
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DiscountsHeader
          ElementPosition     #1288490187
          HierarchyParent     #LineViewHeader
          Caption             #@SYS335044
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #EnvironmentGroup
          ElementPosition     #1610612733
          HierarchyParent     #Environment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Excise_IN
          AutoDeclaration     #Yes
          ElementPosition     #687194763
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5005
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Exim_IN
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS61737
          DataSource          #EximPurchLine_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Fields
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #TabLineFixedAsset
          DataSource          #STF_PurchOrder_AssetTmp
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FiscalInformation
          ElementPosition     #1193046470
          HierarchyParent     #TabHeaderFiscalInformation_BR
          Caption             #@GLS56
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FiscalInformation_BR
          ElementPosition     #1431655764
          HierarchyParent     #TabLineFiscalInformation_BR
          DataSource          #PurchLine
          DataGroup           #FiscalInformation_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FiscalInformationGroup_BR
          Visible             #No
          CountryRegionCodes  #BR
          ElementPosition     #1503238548
          HierarchyParent     #TabLineFixedAsset
          Caption             #@GLS56
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FixedAssets
          AutoDeclaration     #Yes
          ElementPosition     #429496728
          HierarchyParent     #TabLineFixedAsset
          FrameType           #None
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTrade
          ElementPosition     #429496729
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLine
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTrade_RU
          ElementPosition     #858993458
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLine_W
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTradeCategory
          ElementPosition     #1288490187
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLineForeignTradeCategory
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignTradeForSubContracts
          ElementPosition     #1993133258
          HierarchyParent     #TabLineProduct
          Caption             #@SYS27650
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #FSHConcession
          ElementPosition     #1431655764
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #RetailConcession
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #g1099Fields
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #TabLineTax1099
          DataSource          #PurchLine
          DataGroup           #g1099Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralLeft
          ElementPosition     #858993458
          HierarchyParent     #TabLineGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralMid
          ElementPosition     #1288490187
          HierarchyParent     #TabLineGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralReference
          ElementPosition     #1073741822
          HierarchyParent     #GeneralMid
          Caption             #@SYS21697
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GeneralRight
          ElementPosition     #1717986916
          HierarchyParent     #TabLineGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridGroup
          ElementPosition     #1431655764
          HierarchyParent     #TabPageGrid
          Style               #BorderlessGridContainer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridGroup1
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #858993458
          HierarchyParent     #RBOItemPackage
          FrameType           #None
          DataSource          #RetailPackagePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Group
          ElementPosition     #715827882
          HierarchyParent     #Account
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupAddressLeft
          ElementPosition     #858993458
          HierarchyParent     #HeaderAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupaddressMid
          ElementPosition     #1288490187
          HierarchyParent     #HeaderAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDistributionTemplateHeader
          ElementPosition     #1073741822
          HierarchyParent     #TabFinancialDimensionsHeader
          FrameType           #None
          DataSource          #PurchTable
          LeftMargin          #10
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDistributionTemplateLine
          ElementPosition     #1073741822
          HierarchyParent     #TabFinancialDimensionsLine
          FrameType           #None
          DataSource          #PurchLine
          LeftMargin          #10
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupEmail
          ElementPosition     #1610612733
          HierarchyParent     #ContactInfo
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupFinancialDimensionHeader
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          ElementPosition     #1610612733
          HierarchyParent     #TabFinancialDimensionsHeader
          FrameType           #None
          DataSource          #PurchTable
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupFinancialDimensionLine
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          ElementPosition     #1610612733
          HierarchyParent     #TabFinancialDimensionsLine
          FrameType           #None
          DataSource          #PurchLine
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupForeignTrade_MY
          Visible             #No
          ElementPosition     #1825361098
          HierarchyParent     #GroupGeneralRight
          FrameType           #None
          DataSource          #PurchTable_W
          DataGroup           #ForeignTrade_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupGeneralLeft
          ElementPosition     #858993458
          HierarchyParent     #TabHeaderGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupGeneralMid
          ElementPosition     #1288490187
          HierarchyParent     #TabHeaderGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupGeneralRight
          ElementPosition     #1717986916
          HierarchyParent     #TabHeaderGeneral
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupLeft
          ElementPosition     #858993458
          HierarchyParent     #TabLineProject
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupLineDeliveryAddressRef
          ElementPosition     #1288490187
          HierarchyParent     #TabLineAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupLoads
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #TabLoad
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupMid
          ElementPosition     #1288490187
          HierarchyParent     #TabLineProject
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupNotificationToTheCentralBank
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #GroupSetupRight
          DataSource          #PurchTable
          DataGroup           #NotificationToTheCentralBank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupRight
          ElementPosition     #1717986916
          HierarchyParent     #TabLineProject
          FrameType           #None
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupSetupLeft
          ElementPosition     #858993458
          HierarchyParent     #TabHeaderSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupSetupMid
          ElementPosition     #1288490187
          HierarchyParent     #TabHeaderSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupSetupRight
          ElementPosition     #1717986916
          HierarchyParent     #TabHeaderSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupURL
          ElementPosition     #1073741822
          HierarchyParent     #ContactInfo
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupWithholdingTax
          ElementPosition     #601295417
          HierarchyParent     #TabTaxInformation_IN
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #grpAssetQualifier
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #TabLineFixedAsset
          FrameType           #None
          Caption             #@SYS136021
          Columnspace         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GSTHSTTaxType_CA
          ElementPosition     #1610612733
          HierarchyParent     #SalesTaxLine
          FrameType           #None
          DataSource          #PurchLine
          DataGroup           #GSTHSTTaxType_CA
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GSTInvoice_MY
          ElementPosition     #2040109463
          HierarchyParent     #GroupGeneralRight
          DataSource          #PurchTable_W
          DataGroup           #GSTInvoice_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderAddress
          Width               #Column width
          ElementPosition     #1610612734
          HierarchyParent     #TabHeaderAddress
          FrameType           #None
          Caption             #@SYS9362
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderAddressDisplayForSubcontracts
          ElementPosition     #1879048190
          HierarchyParent     #HeaderAddress
          Caption             #@SYS36203
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderAttention
          ElementPosition     #1717986916
          HierarchyParent     #HeaderAddress
          DataSource          #PurchTable
          DataGroup           #Attention
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderDlvAddressFiscalInformation_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          ElementPosition     #1932735281
          HierarchyParent     #HeaderAddress
          Caption             #@GLS368
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderForeignTrade
          ElementPosition     #1431655764
          HierarchyParent     #TabHeaderForeignTrade
          FrameType           #None
          DataSource          #PurchTable
          Columns             #Auto
          DataGroup           #ForeignTrade
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderInfo
          Width               #Column width
          ElementPosition     #1073741822
          HierarchyParent     #TabPageDetails
          FrameType           #None
          Style               #DetailTitleContainer
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderInterCompany
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1533916890
          HierarchyParent     #GroupSetupRight
          FrameType           #None
          Caption             #@SYS74106
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #HeaderInvoiceAddress_TH
          CountryRegionCodes  #TH
          ElementPosition     #2040109463
          HierarchyParent     #HeaderAddress
          Caption             #@SYS54098
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ICMSCreditInformation_BR
          CountryRegionCodes  #BR
          ElementPosition     #1717986912
          HierarchyParent     #TabLineFixedAsset
          Caption             #@SYP4882383
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #IndiaSalesTax
          AutoDeclaration     #Yes
          ElementPosition     #515396072
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS5878
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #IndiaVAT
          AutoDeclaration     #Yes
          ElementPosition     #472446400
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5004
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InterestAndFine_BR
          ElementPosition     #1503238551
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable_BR
          DataGroup           #InterestAndFine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Intrastat
          ElementPosition     #1789569705
          HierarchyParent     #TabHeaderForeignTrade
          FrameType           #None
          DataSource          #PurchTable_Intrastat
          DataGroup           #Intrastat
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Intrastat1
          ElementPosition     #1073741822
          HierarchyParent     #TabLineForeignTrade
          FrameType           #None
          DataSource          #PurchLine_Intrastat
          DataGroup           #Intrastat
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InventoryDimensionsGrid
          AutoDeclaration     #Yes
          ElementPosition     #904203640
          HierarchyParent     #LineSpec
          BackgroundColor     #Window background
          DataSource          #InventDim
          DataGroup           #InventoryDimensions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InventProfile_RU
          ElementPosition     #1859754391
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable_RU
          DataGroup           #InventProfile_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InvoiceMatching
          AutoDeclaration     #Yes
          ElementPosition     #585677358
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #InvoiceMatching
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ItemOrderCreation
          ElementPosition     #1789569705
          HierarchyParent     #RetailHeader
          DataSource          #PurchTable
          DataGroup           #ItemOrderCreation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ItemReference
          AllowEdit           #No
          ElementPosition     #1838782871
          HierarchyParent     #TabLineProduct
          DataSource          #PurchLine
          DataGroup           #ItemReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Line1099Fields
          ElementPosition     #2130706430
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineAddress
          Width               #Column width
          ElementPosition     #1546188222
          HierarchyParent     #TabLineAddress
          FrameType           #None
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineAddressDisplayForSubcontracts
          ElementPosition     #1460288877
          HierarchyParent     #TabLineAddress
          Caption             #@SYS36203
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineDeliveryAddress
          ElementPosition     #858993458
          HierarchyParent     #TabLineAddress
          Caption             #@SYS7924
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineDeliveryAddressForSubcontracts
          ElementPosition     #1374389532
          HierarchyParent     #TabLineAddress
          Caption             #@SYS88743
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineDlvAddressFiscalInformation_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          ElementPosition     #1431655764
          HierarchyParent     #LineAddress
          Caption             #@GLS368
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineIntercompany
          ElementPosition     #1789569704
          HierarchyParent     #GeneralMid
          DataSource          #PurchLine
          DataGroup           #Intercompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineInventory
          ElementPosition     #390451572
          HierarchyParent     #TabLineSetup
          Caption             #@SYS981
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineInventoryForSubcontracts
          ElementPosition     #2145386494
          HierarchyParent     #TabLineSetup
          Caption             #@SYS981
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LinePosting_RU
          ElementPosition     #1879048190
          HierarchyParent     #TabLineDelivery
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LineSalesTax
          ElementPosition     #1073741822
          HierarchyParent     #SalesTaxLine
          DataSource          #PurchLine
          DataGroup           #SalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Markup_RU
          ElementPosition     #2041482145
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine_W
          DataGroup           #Markup_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #MCRDropShip
          ElementPosition     #2013265918
          HierarchyParent     #TabLineDelivery
          DataSource          #PurchLine
          DataGroup           #MCRDropShip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Measurement
          ElementPosition     #1717986916
          HierarchyParent     #TabLineForeignTrade
          Caption             #@SYS34825
          DataSource          #PurchLineForeignTradeCategory
          DataGroup           #Measurement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OrderLine
          ElementPosition     #1431655764
          HierarchyParent     #GeneralLeft
          Caption             #@SYS22920
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Payment
          ElementPosition     #1073741822
          HierarchyParent     #PaymentExt
          DataSource          #PurchTable
          DataGroup           #Payment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Payment_RU
          ElementPosition     #1610612734
          HierarchyParent     #PaymentExt
          FrameType           #None
          DataSource          #PurchTable_W
          DataGroup           #Payment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentExt
          ElementPosition     #1431655762
          HierarchyParent     #TabHeaderPriceCalc
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PhysDims
          ElementPosition     #1073741822
          HierarchyParent     #TabLoad
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PISCOFINSCreditInformation_BR
          CountryRegionCodes  #BR
          ElementPosition     #1932735276
          HierarchyParent     #TabLineFixedAsset
          Caption             #@SYP4882384
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PlannedOrderLine
          AllowEdit           #No
          ElementPosition     #1431655764
          HierarchyParent     #PlannedOrderReferenceLine
          FrameType           #None
          DataSource          #PurchLine
          DataGroup           #PlannedOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PlannedOrderReferenceLine
          ElementPosition     #1563636529
          HierarchyParent     #TabLineProduct
          Caption             #@SYS24657
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Posting
          ElementPosition     #1610612733
          HierarchyParent     #GroupSetupLeft
          DataSource          #PurchTable
          DataGroup           #Posting
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PostingLine
          ElementPosition     #1464193395
          HierarchyParent     #TabLineSetup
          Caption             #@SYS5943
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Potency
          ElementPosition     #1879048189
          HierarchyParent     #TabLinePriceDisc
          DataSource          #PDSAdvancedPriceInfo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Price
          ElementPosition     #1610612734
          HierarchyParent     #TabLinePriceDisc
          Caption             #@SYS12983
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Price_RU
          ElementPosition     #1145324610
          HierarchyParent     #TabHeaderPriceCalc
          DataSource          #PurchTable_RU
          DataGroup           #Price_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProductDimensions
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ProductLeft
          Caption             #@SYS133228
          DataSource          #InventDim
          DataGroup           #ProductDimensions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProductLeft
          ElementPosition     #858993458
          HierarchyParent     #TabLineProduct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProductMid
          ElementPosition     #1288490187
          HierarchyParent     #TabLineProduct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectCostPrice
          ConfigurationKey    #ProjBasic
          ElementPosition     #1073741822
          HierarchyParent     #GroupRight
          DataSource          #PurchLine
          DataGroup           #ProjectCostPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectIdentification
          ConfigurationKey    #ProjBasic
          ElementPosition     #1431655764
          HierarchyParent     #GroupLeft
          DataSource          #PurchLine
          DataGroup           #ProjectIdentification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjectSalesPrice
          ConfigurationKey    #ProjBasic
          ElementPosition     #1073741822
          HierarchyParent     #GroupMid
          DataSource          #PurchLine
          DataGroup           #ProjectSalesPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Project-salestax
          ConfigurationKey    #ProjBasicTimeMaterial
          ElementPosition     #1610612733
          HierarchyParent     #GroupMid
          DataSource          #PurchLine
          DataGroup           #ProjectSalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ProjTransaction
          ElementPosition     #1610612733
          HierarchyParent     #GroupRight
          DataSource          #PurchLine
          DataGroup           #ProjTransaction
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchLine_AttentionInfo
          ElementPosition     #1717986916
          HierarchyParent     #TabLineAddress
          Caption             #@SYS107382
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchLine_DeliveryPostalAddressGrp
          ElementPosition     #1610612734
          HierarchyParent     #LineDeliveryAddress
          Style               #MarginlessContainer
          Columns             #3
          Columnspace         #4
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchReq
          ElementPosition     #1789569705
          HierarchyParent     #GeneralLeft
          DataSource          #PurchLine
          DataGroup           #PurchReq
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchRFQReplyLine
          ElementPosition     #954437176
          HierarchyParent     #GeneralLeft
          DataSource          #PurchRFQReplyLinePurchLine
          DataGroup           #PurchRFQReplyLineRFQ
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurchTable_DeliveryPostalAddressGrp
          ElementPosition     #1610612734
          HierarchyParent     #GroupAddressLeft
          Style               #MarginlessContainer
          Columns             #3
          Columnspace         #4
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #QtyUnitLine
          ElementPosition     #988972731
          HierarchyParent     #LineSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Reasons
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #GroupGeneralRight
          Caption             #@SYS111245
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ReductionEntry_JP
          AutoDeclaration     #Yes
          CountryRegionCodes  #JP
          ConfigurationKey    #Asset
          ElementPosition     #1073741820
          HierarchyParent     #TabLineFixedAsset
          FrameType           #None
          Caption             #@SYS4004969
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Reference
          ElementPosition     #1717986916
          HierarchyParent     #GroupGeneralRight
          Caption             #@SYS15217
          DataSource          #PurchTable
          DataGroup           #ExternalReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #References
          ElementPosition     #613566756
          HierarchyParent     #GroupSetupRight
          Caption             #@SYS14018
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RetailHeader
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1861152492
          HierarchyParent     #LineViewHeader
          Caption             #@RET3066
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ReturnedItem
          ElementPosition     #780903144
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #ReturnedItem
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RFIDTagging
          ElementPosition     #1610612733
          HierarchyParent     #TabLinePicking
          DataSource          #PurchLine
          DataGroup           #RFIDTagging
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SalesTax
          ElementPosition     #1073741822
          HierarchyParent     #GroupSetupLeft
          DataSource          #PurchTable
          DataGroup           #SalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SalesTaxLine
          ElementPosition     #976128930
          HierarchyParent     #TabLineSetup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ServiceRef
          ElementPosition     #1632087567
          HierarchyParent     #TabLineAddress
          Caption             #@PSA10204
          DataSource          #PurchLine
          DataGroup           #DeliveryRef
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ServiceTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #944892801
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS63865
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #status
          ElementPosition     #1610612733
          HierarchyParent     #GroupGeneralMid
          Caption             #@SYS36398
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #statusLine
          ElementPosition     #1288490187
          HierarchyParent     #GeneralRight
          Caption             #@SYS36398
          DataSource          #PurchLine
          DataGroup           #Status
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #STF_Fields
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #STF_MandatoryFields
          ElementPosition     #1073741822
          HierarchyParent     #STF_Fields
          Caption             #@DOT166
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #STF_OptionalFields
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #STF_Fields
          Caption             #@DOT167
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #STF_Presupuestos
          ElementPosition     #1431655764
          HierarchyParent     #STF_Presupuesto
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #StorageDimensions
          ElementPosition     #858993458
          HierarchyParent     #GroupGeneralRight
          Caption             #@SYS108783
          DataSource          #PurchTable
          DataGroup           #Inventory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #StorageDimensionsLine
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #ProductMid
          Caption             #@SYS108783
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TAMRebate1
          ElementPosition     #1849222027
          HierarchyParent     #TabLinePriceDisc
          DataSource          #PurchLine
          DataGroup           #TAMRebate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Tax1099G1Fields
          AutoDeclaration     #Yes
          ElementPosition     #1312351117
          HierarchyParent     #TabLineTax1099
          Caption             #@SPS1936
          DataSource          #Tax1099BoxDetail
          DataGroup           #Tax1099G1Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Tax1099GFields
          AutoDeclaration     #Yes
          ElementPosition     #1550960411
          HierarchyParent     #TabLineTax1099
          Caption             #@SPS1093
          DataSource          #Tax1099BoxDetail
          DataGroup           #Tax1099GFields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Tax1099SFields
          AutoDeclaration     #Yes
          ElementPosition     #1849222028
          HierarchyParent     #TabLineTax1099
          DataSource          #Tax1099BoxDetail
          DataGroup           #Tax1099SFields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TMSTransportation
          ElementPosition     #1879048189
          HierarchyParent     #TabHeaderDelivery
          Caption             #@TRX1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TMSTransportationHeader
          ElementPosition     #2004318069
          HierarchyParent     #LineViewHeader
          Caption             #@TRX1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TrackingDimesions
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #ProductLeft
          Caption             #@SYS317445
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Transport
          ElementPosition     #1610612733
          HierarchyParent     #TabHeaderDelivery
          DataSource          #PurchTable
          DataGroup           #Transport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TreeGroup
          AutoDeclaration     #Yes
          Visible             #No
          Width               #Column width
          Height              #Column height
          ElementPosition     #1288490187
          HierarchyParent     #RBOItemPackage
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VATTaxAgent_RU
          AutoDeclaration     #Yes
          ElementPosition     #2001521866
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable_RU
          DataGroup           #VATTaxAgent_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VendInvoiceDeclaration
          ElementPosition     #920350134
          HierarchyParent     #GroupSetupRight
          DataSource          #PurchTable
          DataGroup           #VendInvoiceDeclaration
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Vendor
          ElementPosition     #1610612733
          HierarchyParent     #GroupGeneralLeft
          Caption             #@SYS8079
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VendorHeader
          ElementPosition     #1717986916
          HierarchyParent     #LineViewHeader
          Caption             #@SYS128916
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #GroupWithholdingTax
          DataSource          #TaxInformation_IN
          DataGroup           #WithholdingTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #1503238551
          HierarchyParent     #TabHeaderSetup
          DataSource          #PurchTable_W
          DataGroup           #WithholdingTax_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax_IN1
          AutoDeclaration     #Yes
          ElementPosition     #1342177277
          HierarchyParent     #SalesTaxLine
          DataSource          #PurchLine_IN
          DataGroup           #WithholdingTax_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdTax
          CountryRegionCodes  #TH,SA,GB,IE,BR
          ElementPosition     #1220161162
          HierarchyParent     #TabLineSetup
          DataSource          #PurchLine
          DataGroup           #WithholdingTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonHeaderTradeAgreements
          AutoDeclaration     #Yes
          HelpText            #@SYS69472
          ElementPosition     #715827882
          HierarchyParent     #GeneralVendor
          Text                #@SYS13768
          ButtonDisplay       #Text & Image above
          NormalImage         #12430
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonLineInventory
          AutoDeclaration     #Yes
          HelpText            #@SYS69645
          ElementPosition     #1227133512
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS981
          ButtonDisplay       #Text & Image left
          NormalImage         #10932
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonLineInventorySMB
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYS69645
          ElementPosition     #1380525201
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS981
          ButtonDisplay       #Text & Image left
          NormalImage         #10932
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #CreateActivity
          AutoDeclaration     #Yes
          HelpText            #@SYS26027
          ElementPosition     #1073741823
          HierarchyParent     #GeneralVendor
          Text                #@SYS38378
          ButtonDisplay       #Text & Image left
          NormalImage         #10197
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #GeneralVendorCases
          HelpText            #@SYS131506
          ElementPosition     #1431655764
          HierarchyParent     #GeneralVendor
          Text                #@SYS191442
          ButtonDisplay       #Text & Image left
          NormalImage         #11229
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripFinancials
          HelpText            #@SYS316591
          ElementPosition     #920350134
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS80043
          ButtonDisplay       #Text & Image left
          NormalImage         #10694
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    super();
            #
            #    purchTableForm.enableLineCreditInvoiceButton(purchLine, buttonCustVendCreditInvoicingLines);
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAPWP)))
            #    {
            #        if (purchLine.IsPwp)
            #        {
            #            buttonSubledgerdistribution.enabled(false);
            #        }
            #        else
            #        {
            #            buttonSubledgerdistribution.enabled(true);
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripFinancialsSMB
          Visible             #No
          HelpText            #@SYS316591
          ElementPosition     #1073741823
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS80043
          ButtonDisplay       #Text & Image left
          NormalImage         #10694
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    super();
            #
            #    purchTableForm.enableLineCreditInvoiceButton(purchLine, buttonCustVendCreditInvoicingLines);
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAPWP)))
            #    {
            #        if (purchLine.IsPwp)
            #        {
            #            buttonSubledgerdistribution.enabled(false);
            #        }
            #        else
            #        {
            #            buttonSubledgerdistribution.enabled(true);
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripProduct
          HelpText            #@SYS317849
          ElementPosition     #1533916890
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS317847
          ButtonDisplay       #Text & Image left
          NormalImage         #12422
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripPurchLine
          HelpText            #@SYS328718
          ElementPosition     #511305630
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS22957
          ButtonDisplay       #Text & Image left
          NormalImage         #11046
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (TaxParameters::isCustomsEnable_IN())
            #    {
            #        purchTableForm.enableEximInquiry_IN(purchLine.PurchQty,
            #                                            purchTable_W.CustomsImportOrder_IN,
            #                                            eximAA_IN,
            #                                            eximDFIA_IN,
            #                                            eximDEPB_IN,
            #                                            eximEPCG_IN);
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripPurchLineSMB
          Visible             #No
          HelpText            #@SYS328718
          ElementPosition     #766958445
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS22957
          ButtonDisplay       #Text & Image left
          NormalImage         #11046
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (TaxParameters::isCustomsEnable_IN())
            #    {
            #        purchTableForm.enableEximInquiry_IN(purchLine.PurchQty,
            #                                            purchTable_W.CustomsImportOrder_IN,
            #                                            eximAA_IN,
            #                                            eximDFIA_IN,
            #                                            eximDEPB_IN,
            #                                            eximEPCG_IN);
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripUpdate
          HelpText            #@SYS28285
          ElementPosition     #1840700268
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS58728
          ButtonDisplay       #Text & Image left
          NormalImage         #12545
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #LineStripUpdateSMB
          Visible             #No
          HelpText            #@SYS28285
          ElementPosition     #1991994805
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS58728
          ButtonDisplay       #Text & Image left
          NormalImage         #12545
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ManageBudgetMenuButton
          HelpText            #@SYS310258
          ElementPosition     #1431655764
          HierarchyParent     #ManageBudget
          Text                #@SYS80981
          ButtonDisplay       #Text & Image above
          NormalImage         #10915
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #mbTemplatesButton
          AutoDeclaration     #Yes
          HelpText            #@SYS345469
          ElementPosition     #954437176
          HierarchyParent     #PurchOrderAttachments
          Text                #@SYS345468
          NormalImage         #12723
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #AdministrationGroup_Requester
          ElementPosition     #1879048185
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          ReferenceField      #Requester
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #AdministrationGroup_WorkerPurchPlacer
          ElementPosition     #805306365
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          ReferenceField      #WorkerPurchPlacer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #AssetTable_Department
          ElementPosition     #1610612730
          HierarchyParent     #STF_OptionalFields
          DataSource          #STF_PurchOrder_AssetTmp
          ReferenceField      #Department
          Label               #@SYS179634
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Customs_IN_CustomsTariffCodeTable_IN
          ElementPosition     #1610612733
          HierarchyParent     #Customs_IN
          DataSource          #PurchLine_IN
          ReferenceField      #CustomsTariffCodeTable_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #EMSFlow_UnitOfMeasure
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          ReferenceField      #UnitOfMeasure
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Excise_IN_ExciseTariffCodes_IN
          ElementPosition     #1331873693
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          ReferenceField      #ExciseTariffCodes_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Exim_EximIncentiveSchemeGroup
          ElementPosition     #715827882
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          ReferenceField      #EximIncentiveSchemeGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Exim_EximPorts
          ElementPosition     #1073741823
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          ReferenceField      #EximPorts
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Exim_EximProductGroupTable
          ElementPosition     #1431655764
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          ReferenceField      #EximProductGroupTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #FiscalInformation_BR1_CFOPTable_BR
          ElementPosition     #613566756
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          ReferenceField      #CFOPTable_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #g1099Fields_Tax1099Fields
          ElementPosition     #2013265918
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          ReferenceField      #Tax1099Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Line1099Fields_Tax1099Fields
          ElementPosition     #1789569705
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          ReferenceField      #Tax1099Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Purch_ProcurementCategory
          ElementPosition     #715827882
          HierarchyParent     #OrderLine
          DataSource          #PurchLine
          ReferenceField      #ProcurementCategory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchCommitmentLineLookup_PSN
          AutoDeclaration     #Yes
          HelpText            #@SPS2047
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #946588185
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          ReferenceField      #PurchCommitmentLine_PSN
          Label               #@SPS1834
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchCommitmentLineLookup2_PSN
          AutoDeclaration     #Yes
          HelpText            #@SPS2047
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1431655764
          HierarchyParent     #Commitment_PSN
          DataSource          #PurchLine
          ReferenceField      #PurchCommitmentLine_PSN
          Label               #@SPS1834
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_BudgetReservationLine_PSN
          HelpText            #@SYP4990116
          ElementPosition     #1073741822
          HierarchyParent     #BudgetReservation
          DataSource          #PurchLine
          ReferenceField      #BudgetReservationLine_PSN
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    BudgetReservation_PSN::showBudgetReservationLookup(purchLine, this.formRun(), this);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_CFOPTable_BR
          ElementPosition     #715827882
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          ReferenceField      #CFOPTable_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_CompanyLocation_IN
          HelpText            #@GLS222760
          ElementPosition     #858993458
          HierarchyParent     #CompanyInformation
          DataSource          #PurchLine_IN
          ReferenceField      #CompanyLocation_IN
          Label               #@SYS33556
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_DeliveryPostalAddress
          ElementPosition     #858993458
          HierarchyParent     #PurchLine_DeliveryPostalAddressGrp
          DataSource          #PurchLine
          ReferenceField      #DeliveryPostalAddress
          ReplacementFieldGroup #LocationReference
          Label               #@SYS7924
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_IN_TaxWithholdCountryRegionToRemittance
          ElementPosition     #1840700268
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          ReferenceField      #TaxWithholdCountryRegionToRemittance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_IN_TaxWithholdNatureOfRemittance
          ElementPosition     #1227133512
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          ReferenceField      #TaxWithholdNatureOfRemittance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_ProcurementCategory
          ElementPosition     #791178185
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          ReferenceField      #ProcurementCategory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_Requester
          ElementPosition     #1610612733
          HierarchyParent     #PurchLine_AttentionInfo
          DataSource          #PurchLine
          ReferenceField      #Requester
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchLine_SalesTaxFormTypes_IN
          ElementPosition     #1610612734
          HierarchyParent     #IndiaSalesTax
          DataSource          #PurchLine_IN
          ReferenceField      #SalesTaxFormTypes_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchTable_DeliveryPostalAddress
          ElementPosition     #858993458
          HierarchyParent     #PurchTable_DeliveryPostalAddressGrp
          DataSource          #PurchTable
          ReferenceField      #DeliveryPostalAddress
          ReplacementFieldGroup #LocationReference
          Label               #@SYS7924
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchTable_SalesPurchOperationType_BR
          ElementPosition     #715827882
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          ReferenceField      #SalesPurchOperationType_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchTable_W_InvoicePostalAddress_TH
          ElementPosition     #1073741822
          HierarchyParent     #HeaderInvoiceAddress_TH
          DataSource          #PurchTable_W
          ReferenceField      #InvoicePostalAddress_TH
          ReplacementFieldGroup #LocationReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #ServiceTax_IN_ServiceCodeTable_IN
          ElementPosition     #1073741823
          HierarchyParent     #ServiceTax_IN
          DataSource          #PurchLine_IN
          ReferenceField      #ServiceCodeTable_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ECCNumber
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #878516035
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ECCNumber
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_IECRegistrationNumberTable
          ElementPosition     #1073741822
          HierarchyParent     #Customs_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #IECRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ManECCRegistrationNumberTable
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #1054219242
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ManECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_SalesTaxRegistrationNumber
          HelpText            #@GLS5917
          ElementPosition     #1073741822
          HierarchyParent     #IndiaSalesTax
          DataSource          #TaxInformation_IN
          ReferenceField      #SalesTaxRegistrationNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_STCRegistrationNumberTable
          ElementPosition     #715827882
          HierarchyParent     #ServiceTax_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #STCRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_TraderECCRegistrationNumberTable
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #1229922449
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #TraderECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_TaxInformation_IN
          ElementPosition     #1717986916
          HierarchyParent     #CompanyInformation
          DataSource          #PurchLine_IN
          ReferenceField      #TaxInformation_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VAT_TIN
          ElementPosition     #286331152
          HierarchyParent     #IndiaVAT
          DataSource          #TaxInformation_IN
          ReferenceField      #TIN
          ReplacementFieldGroup #Identification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #DetailsTab
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #TabPageDetails
          ShowTabs            #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #HeaderDetailsTab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #HeaderView
          Style               #FastTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #LineDetailsTab
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1431655764
          HierarchyParent     #LineViewLineDetails
          Style               #IndexTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #LineViewTab
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #LineView
          Style               #FastTabs
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #MainTab
          Width               #Column width
          Height              #Column height
          ElementPosition     #715827882
          ShowTabs            #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #tabChanged
            #public void tabChanged(int _fromTab, int _toTab)
            #{
            #    super(_fromTab, _toTab);
            #    element.lock();
            #
            #    // Buttons to show in Grid View
            #    editDetailsButton.visible(tabPageGrid.isActivePage());
            #    purchOrderList.visible(tabPageGrid.isActivePage());
            #
            #    // Buttons to show in Details View
            #    editPurchOrder.visible(!tabPageGrid.isActivePage());
            #    showGroup.visible(!tabPageGrid.isActivePage());
            #
            #    element.unLock();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Environment
          AutoDeclaration     #Yes
          Visible             #No
          NeededPermission    #Manual
          ConfigurationKey    #EMS
          SecurityKey         #EMSJournals
          ElementPosition     #1994091957
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS137477
          DataSource          #EMSPurchOrderFlowRelation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #FSHSum
          Height              #Column height
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1930178752
          HierarchyParent     #LineDetailsTab
          Caption             #@RET4160650
          DataSource          #RetailSumLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #HeaderView
          ElementPosition     #1610612733
          HierarchyParent     #DetailsTab
          BackgroundColor     #Dyn Background blue
          LeftMargin          #0
          RightMargin         #0
          Style               #DetailsFormDetails
          PanelStyle          #DetailsHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineView
          ElementPosition     #1073741822
          HierarchyParent     #DetailsTab
          BackgroundColor     #Dyn Background blue
          LeftMargin          #0
          RightMargin         #0
          Style               #DetailsFormDetails
          PanelStyle          #DetailsLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineViewHeader
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #LineViewTab
          Caption             #@SYS16574
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          FastTabExpanded     #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineViewLineDetails
          Width               #Column width
          Height              #Column height
          ElementPosition     #1717986916
          HierarchyParent     #LineViewTab
          Caption             #@SYS23823
          DataSource          #PurchLine
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
          FastTabExpanded     #No
          Scrollbars          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #LineViewLines
          Height              #Column height
          ElementPosition     #1288490187
          HierarchyParent     #LineViewTab
          Caption             #@SYS9664
          FastTabExpanded     #Always
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #RBOItemPackage
          AutoDeclaration     #Yes
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1917396112
          HierarchyParent     #LineDetailsTab
          Caption             #@RET4999
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #/// <summary>
            #/// Retail Item Package - Page Activated
            #/// </summary>
            #public void pageActivated()
            #{
            #    ;
            #    if (treeView.value())
            #        element.fillPackageTree();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #STF_Presupuesto
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1486719441
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #Presupuestos
          DataSource          #PurchTable
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    dimensionDefaultingControllerHeader.pageActivated();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabFinancialDimensionsHeader
          AutoDeclaration     #Yes
          ElementPosition     #1789569700
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS101181
          DataSource          #PurchTable
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    dimensionDefaultingControllerHeader.pageActivated();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabFinancialDimensionsLine
          AutoDeclaration     #Yes
          ElementPosition     #1981309312
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS101181
          DataSource          #PurchLine
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    dimensionDefaultingControllerLine.pageActivated();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderAddress
          AutoDeclaration     #Yes
          ElementPosition     #894784850
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS9362
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderDelivery
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS4508
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderDimension
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1879048185
          HierarchyParent     #HeaderDetailsTab
          Caption             #@SYS14926
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderFiscalInformation_BR
          CountryRegionCodes  #BR
          ElementPosition     #2058005158
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@GLS56
          DataSource          #PurchTable
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderForeignTrade
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS27650
          Columns             #Auto
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderGeneral
          AutoDeclaration     #Yes
          ElementPosition     #357913940
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2952
          DataSource          #PurchTable
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          FastTabExpanded     #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderPriceCalc
          AutoDeclaration     #Yes
          ElementPosition     #1252698790
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS328717
          DataSource          #PurchTable
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabHeaderSetup
          AutoDeclaration     #Yes
          ElementPosition     #626349395
          HierarchyParent     #HeaderDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2186
          DataSource          #PurchTable
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineAddress
          AutoDeclaration     #Yes
          ConfigurationKey    #TradeMultiShipTo
          ElementPosition     #613566756
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS9362
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineDelivery
          ElementPosition     #882002211
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS4508
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineFiscalInformation_BR
          CountryRegionCodes  #BR
          ElementPosition     #2070656729
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@GLS56
          DataSource          #PurchLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineFixedAsset
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1955744032
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS12578
          DataSource          #PurchLine
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #
            #    super();
            #    element.setupAsset(purchLine);
            #
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineForeignTrade
          ElementPosition     #1942961392
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS27650
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineGeneral
          AutoDeclaration     #Yes
          ElementPosition     #81808900
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2952
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLinePicking
          AutoDeclaration     #Yes
          ElementPosition     #1035393900
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS132701
          DataSource          #PurchLine
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLinePriceDisc
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS328717
          DataSource          #PurchLine
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineProduct
          ElementPosition     #728610522
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS103105
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineProject
          AutoDeclaration     #Yes
          ElementPosition     #1380525201
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS4534
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineSetup
          AutoDeclaration     #Yes
          ElementPosition     #460175067
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS2186
          DataSource          #PurchLine
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLineTax1099
          AutoDeclaration     #Yes
          CountryRegionCodes  #US
          ElementPosition     #1968526672
          HierarchyParent     #LineDetailsTab
          BackgroundColor     #Window background
          Caption             #@SYS118159
          DataSource          #PurchLine
          Columns             #Auto
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabLoad
          AutoDeclaration     #Yes
          ConfigurationKey    #WHSandTMS
          ElementPosition     #2046754813
          HierarchyParent     #LineDetailsTab
          Caption             #@WAX312
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    whsLoadLine_ds.executeQuery();
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabPageDetails
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #MainTab
          Style               #DetailsFormDetails
          PanelStyle          #Details
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabPageGrid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #MainTab
          ViewEditMode        #Edit
          Style               #DetailsFormGrid
          PanelStyle          #Grid
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabTaxInformation_IN
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #2109070187
          HierarchyParent     #LineDetailsTab
          Caption             #@SYS33652
          DataSource          #PurchLine_IN
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Zakat_SA
          AutoDeclaration     #Yes
          CountryRegionCodes  #SA
          ElementPosition     #1968526670
          HierarchyParent     #HeaderDetailsTab
          Caption             #@SYS321586
          DataSource          #PurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #BudgetControl
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS137083
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #858993458
          HierarchyParent     #ManageBudgetMenuButton
          Text                #@SYS317355
          ButtonDisplay       #Text & Image left
          NormalImage         #12313
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (purchTable)
            #    {
            #        // <PubSect>
            #        if (PublicSectorUtils::isBudgetReservationEnabled())
            #        {
            #            // Perform document balance check against a referenced general budget reservation document if any.
            #            PurchTable::checkBudgetReservationBalance_PSN(purchTable.PurchId, purchTable.SourceDocumentHeader);
            #        }
            #        // </PubSect>
            #
            #        // Submit to source document processor for an on-demand GL budget check
            #        SourceDocumentProcessorFacade::submitOnDemandSourceDocumentImpl(
            #            purchTable,
            #            false,
            #            SourceDocumentHeader::find(purchTable.SourceDocumentHeader).AccountingStatus,
            #            null,
            #            curUserId());
            #
            #        purchTable_ds.updateBudgetCheckResultDisplay();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #BudgetControlLine
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS137084
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #757935402
          HierarchyParent     #LineStripFinancials
          Text                #@SYS317355
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.budgetControlLine();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyCustInvoiceJournal
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS85665
          ElementPosition     #1789569705
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS15721
          ButtonDisplay       #Text & Image left
          NormalImage         #10612
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    TradeInterCompany::construct(purchTable).formRun(formStr(CustInvoiceJournal),element);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyCustPackingSlipJournal
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS85660
          ElementPosition     #1431655764
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS23155
          ButtonDisplay       #Text & Image left
          NormalImage         #10667
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    TradeInterCompany::construct(purchTable).formRun(formStr(CustPackingSlipJournal),element);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyInventOnHandReserve
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS21870
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1768515938
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS7120
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    PurchTableForm::interCompanyInventOnHandReserve(purchLine);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanyInventTrans
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS28328
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1642193371
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS1084
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    PurchTableForm::openIterCompanyInventTransForm(purchLine);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanySalesFormLetter_Pickinglist
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS94424
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1227133512
          HierarchyParent     #ReceiveProcess
          Text                #@SYS114678
          ButtonDisplay       #Text & Image left
          NormalImage         #10602
          ImageLocation       #EmbeddedResource
          Big                 #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    if (!purchTable.RecId && !purchTable.InterCompanySalesId)
            #    {
            #        throw(error("@SYS28047"));
            #    }
            #
            #    TradeInterCompany::construct(purchTable).menuFunction(classStr(SalesFormLetter_PickingList),MenuItemType::Action,element);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonInterCompanySalesTable
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS75330
          ElementPosition     #715827882
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS93291
          ButtonDisplay       #Text & Image above
          NormalImage         #10604
          ImageLocation       #EmbeddedResource
          Big                 #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    if (purchTable.PurchaseType == PurchaseType::ReturnItem)
            #    {
            #        TradeInterCompany::construct(purchTable).formRun(formStr(ReturnTable),element);
            #    }
            #    else
            #    {
            #        TradeInterCompany::construct(purchTable).formRun(formStr(SalesTable),element);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #CreateLink
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS306899
          ConfigurationKey    #TradeBlanketOrder
          ElementPosition     #1687308579
          HierarchyParent     #LineStripUpdate
          Text                #@SYS132301
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    element.createAgreementLink();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #EndDiscAction
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS68934
          ConfigurationKey    #PriceDisc
          ElementPosition     #1610612733
          HierarchyParent     #PurchaseCalculate
          Text                #@SYS6465
          ButtonDisplay       #Text & Image left
          NormalImage         #10831
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void  clicked()
            #{
            #    super();
            #
            #    element.endDiscount();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #MultiLineDiscAction
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS68933
          ConfigurationKey    #PriceDisc
          ElementPosition     #1073741822
          HierarchyParent     #PurchaseCalculate
          Text                #@SYS11440
          ButtonDisplay       #Text & Image left
          NormalImage         #10647
          ImageLocation       #EmbeddedResource
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    super();
            #
            #    element.multiLineDiscount();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PBAExecute
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS40755
          ElementPosition     #325957337
          HierarchyParent     #LineStripProduct
          Text                #@SYS40223
          ShowShortCut        #No
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.pbaConfigureLine();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PrintMgmt
          NeededPermission    #Manual
          HelpText            #@SYS68918
          ConfigurationKey    #LogisticsBasic
          SecurityKey         #VendMisc
          ElementPosition     #1073741822
          HierarchyParent     #GeneralSetup
          Text                #@SYS54502
          ButtonDisplay       #Text & Image above
          NormalImage         #10698
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (purchTable_ds.cursor() == null)
            #    {
            #        return;
            #    }
            #
            #    super();
            #
            #    element.PrintManagement();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PrintMgmtSMB
          NeededPermission    #Manual
          HelpText            #@SYS68918
          ConfigurationKey    #LogisticsBasic
          SecurityKey         #VendMisc
          ElementPosition     #1073741822
          HierarchyParent     #GeneralSetupSMB
          Text                #@SYS54502
          ButtonDisplay       #Text & Image above
          NormalImage         #10698
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (purchTable_ds.cursor() == null)
            #    {
            #        return;
            #    }
            #
            #    super();
            #
            #    element.PrintManagement();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #RemoveLink
          AutoDeclaration     #Yes
          NeededPermission    #Create
          HelpText            #@SYS306901
          ConfigurationKey    #TradeBlanketOrder
          ElementPosition     #1994091957
          HierarchyParent     #LineStripUpdate
          Text                #@SYS67038
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    element.removeAgreementLink();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #AdministrationGroup_ChangeRequestRequired
          ElementPosition     #1610612730
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #ChangeRequestRequired
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Excise_IN_CENVATCreditAvailed_IN
          ElementPosition     #2045532401
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #CENVATCreditAvailed_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Excise_IN_Consignment_IN
          ElementPosition     #1841629913
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #Consignment_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #EximPurchLine_IN_ApplyDEPB
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #Exim_IN
          DataSource          #EximPurchLine_IN
          DataField           #ApplyDEPB
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #FixedAssets_CreateFixedAsset
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #536870910
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #CreateFixedAsset
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #//STF_MEGA_INFOR            Dev: Roberto Zamora
            #public void clicked()
            #{
            #    super();
            #
            #    //element.STF_checkNewFixedAsset();
            #    //element.STF_checkForAssetId();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ForeignTradeForSubContracts_StatTriangul
          ElementPosition     #1879048190
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #StatTriangularDeal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ForeignTradeForSubContracts_StatTriangul1
          Visible             #No
          ElementPosition     #1946157054
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #StatTriangularDeal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ICMSReceivableLongTerm_BR
          HelpText            #@GLS676
          ElementPosition     #1073741822
          HierarchyParent     #ICMSCreditInformation_BR
          Label               #@GLS321
          DataSource          #PurchLine
          DataMethod          #ICMSReceivableLongTerm_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #InclTax
          ElementPosition     #1431655764
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #InclTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #MCRDropShip_MCRDropShipment
          ElementPosition     #858993458
          HierarchyParent     #MCRDropShip
          DataSource          #PurchLine
          DataField           #MCRDropShipment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PISCOFINSReceivableLongTerm_BR
          HelpText            #@GLS62986
          ElementPosition     #715827882
          HierarchyParent     #PISCOFINSCreditInformation_BR
          Label               #@SYP4882389
          DataSource          #PurchLine
          DataMethod          #PISCOFINSReceivableLongTerm_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchLine_DSA_IN
          ElementPosition     #1943581157
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #DSA_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchLine_IN_SoftwareDeclReceived_IN
          ElementPosition     #920350134
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          DataField           #SoftwareDeclReceived_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchLine_IsPwp
          AutoDeclaration     #Yes
          Visible             #No
          ConfigurationKey    #PSAPwp
          ElementPosition     #2147473406
          HierarchyParent     #LineSpec
          BackgroundColor     #Window background
          DataSource          #PurchLine
          DataField           #IsPwp
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
            #    {
            #        if (purchLine.IsPwp)
            #        {
            #            buttonSourceDocumentDistributionHeader.enabled(false);
            #        }
            #        else
            #        {
            #            buttonSourceDocumentDistributionHeader.enabled(true);
            #        }
            #    }
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_AgreementIsLinked
          ElementPosition     #1840700268
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #PurchTable
          DataMethod          #AgreementIsLinked
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_CustomsImportOrder_IN
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Group
          DataSource          #PurchTable_W
          DataField           #CustomsImportOrder_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_MCRDropShipment
          ElementPosition     #2070787801
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #PurchTable
          DataField           #MCRDropShipment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_MCRDropShipment_Status
          AllowEdit           #No
          ElementPosition     #1923787428
          HierarchyParent     #status
          DataSource          #PurchTable
          DataField           #MCRDropShipment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_OneTimeVendor
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Account
          DataSource          #PurchTable
          DataField           #OneTimeVendor
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_ServiceCodeOnDlvAddress_BR
          ElementPosition     #1789569705
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          DataField           #ServiceCodeOnDlvAddress_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PurchTable_VendFinalUser_BR
          ElementPosition     #1431655764
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          DataField           #VendFinalUser_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #RAssetPurchTrans_Posted
          ElementPosition     #715827880
          HierarchyParent     #GridAsset
          BackgroundColor     #Window background
          DataSource          #RAssetPurchTrans
          DataField           #Posted
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #SalesTax_UnitedVATInvoice_LT
          HelpText            #@GLS220218
          ElementPosition     #1610612734
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #UnitedVATInvoice_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #ServiceTax_IN_IsRecoverableServiceTax_IN
          ElementPosition     #1789569705
          HierarchyParent     #ServiceTax_IN
          DataSource          #PurchLine_IN
          DataField           #IsRecoverableServiceTax_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #statusLine_Blocked
          ElementPosition     #1342177275
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #Blocked
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #statusLine_Complete
          ElementPosition     #1610612730
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #Complete
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #statusLine_IsFinalized
          ElementPosition     #536870910
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #IsFinalized
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #STF_CFDIValidated
          AllowEdit           #No
          ElementPosition     #2147481598
          HierarchyParent     #LineSpec
          BackgroundColor     #Window background
          Label               #CFDI Válido
          DataSource          #PurchLine
          DataField           #STF_ValidCFDI
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #TreeView
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #ChooseGroup
          Label               #@RET4404
          LabelAlignment      #Right
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #/// <summary>
            #/// Tree View - Clicked
            #/// </summary>
            #public void clicked()
            #{
            #    super();
            #
            #    if (this.value())
            #    {
            #        gridGroup1.visible(false);
            #        treeGroup.visible(true);
            #        element.fillPackageTree();
            #    }
            #    else
            #    {
            #        treeGroup.visible(false);
            #        gridGroup1.visible(true);
            #    }
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DeliveryLine_DeliveryType
          ElementPosition     #1073741820
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #DeliveryType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DeliveryLine_LineDeliveryType
          ElementPosition     #1342177275
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #LineDeliveryType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #DeliveryLineForSubcontracts_DeliveryType
          ElementPosition     #1610612734
          HierarchyParent     #DeliveryLineForSubcontracts
          DataSource          #PurchLine
          DataField           #DeliveryType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Excise_IN_DirectSettlement_IN
          ElementPosition     #1739678669
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataField           #DirectSettlement_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Excise_IN_ExciseType_IN
          AutoDeclaration     #Yes
          ElementPosition     #585677356
          HierarchyParent     #Excise_IN
          Label               #@GLS5244
          DataSource          #PurchLine_IN
          DataField           #ExciseType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseManufacture_IN
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1535776181
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataMethod          #exciseManufacture_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine_IN_DS.enableExciseFields_IN();
            #
            #    purchLine_IN.modifiedField(fieldNum(PurchLine_IN, ExciseRecordType_IN));
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseNone_IN
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1433824937
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataMethod          #exciseNone_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #enter
            #public void enter()
            #{
            #    if (ExciseRecordTypeTable_IN::existForceBatchValidation(ExciseRecordType_IN::RG23D))
            #    {
            #        this.delete(enum2str(ExciseNone_IN::RG23D));
            #    }
            #
            #    super();
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine_IN_DS.enableExciseFields_IN();
            #
            #    purchLine_IN.modifiedField(fieldNum(PurchLine_IN, ExciseRecordType_IN));
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseTraders_IN
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1637727425
          HierarchyParent     #Excise_IN
          DataSource          #PurchLine_IN
          DataMethod          #exciseTraders_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine_IN_DS.enableExciseFields_IN();
            #
            #    purchLine_IN.modifiedField(fieldNum(PurchLine_IN, ExciseRecordType_IN));
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #FiscalInformation_BR1_M_taxationOrigin_BR
          AllowEdit           #No
          ElementPosition     #920350134
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #taxationOrigin_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #FixedAssets_AssetTransTypePurch
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1610612730
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetTransTypePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #HeaderForeignTrade_ListCode
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #ListCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #MCRDropShip_MCRDropShipStatus
          ElementPosition     #1288490187
          HierarchyParent     #MCRDropShip
          DataSource          #PurchLine
          DataField           #MCRDropShipStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PISCOFINSFixedAssetCreditAppropMethod_BR
          ElementPosition     #1968526675
          HierarchyParent     #PISCOFINSCreditInformation_BR
          DataSource          #PurchLine
          DataMethod          #PISCOFINSFixedAssetCreditAppropMethod_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PISCOFINSFixedAssetCreditGroup_BR
          ElementPosition     #1431655764
          HierarchyParent     #PISCOFINSCreditInformation_BR
          DataSource          #PurchLine
          DataMethod          #PISCOFINSFixedAssetCreditGroup_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PISCOFINSFixedAssetCreditPurpose_BR
          ElementPosition     #1789569705
          HierarchyParent     #PISCOFINSCreditInformation_BR
          DataSource          #PurchLine
          DataMethod          #PISCOFINSFixedAssetCreditPurpose_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchLine_OperationType_MX
          ElementPosition     #1808407280
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #OperationType_MX
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchLine_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1921432735
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchLine_VATGoodsType_IN
          ElementPosition     #906715316
          HierarchyParent     #IndiaVAT
          DataSource          #PurchLine_IN
          DataField           #VATGoodsType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchStatus
          Left                #Right edge
          Skip                #Yes
          ElementPosition     #1610612734
          HierarchyParent     #HeaderInfo
          ShowLabel           #No
          DataSource          #PurchTable
          DataField           #PurchStatus
          ViewEditMode        #View
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_BR_PresenceType
          ElementPosition     #1968526675
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          DataField           #PresenceType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_PurchaseType
          ElementPosition     #1431655764
          HierarchyParent     #BaseInfo
          DataSource          #PurchTable
          DataField           #PurchaseType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_PurchaseTypeGrid
          AutoDeclaration     #Yes
          ElementPosition     #766958445
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #PurchaseType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_PurchStatusGrid
          ElementPosition     #1073741823
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #PurchStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1994091957
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_State
          ElementPosition     #920350134
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DocumentState
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PurchTable_W_ExciseVendorType_IN
          ElementPosition     #1968526675
          HierarchyParent     #Vendor
          DataSource          #PurchTable_W
          DataField           #ExciseVendorType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ServiceTax_IN_GTAServiceCategory_IN
          AutoDeclaration     #Yes
          ElementPosition     #1550960411
          HierarchyParent     #ServiceTax_IN
          DataSource          #PurchLine_IN
          DataField           #GTAServiceCategory_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #status_DocumentState
          ElementPosition     #1073741820
          HierarchyParent     #status
          DataSource          #PurchTable
          DataField           #DocumentState
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #status_PurchStatus
          ElementPosition     #536870910
          HierarchyParent     #status
          DataSource          #PurchTable
          DataField           #PurchStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #status_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1879048185
          HierarchyParent     #status
          DataSource          #PurchTable
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #statusLine_PurchStatus
          ElementPosition     #805306365
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #PurchStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #statusLine_qualityOrderStatusDisplay
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1879048185
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataMethod          #qualityOrderStatusDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #statusLine_WorkflowState
          ElementPosition     #1073741820
          HierarchyParent     #statusLine
          DataSource          #PurchLine
          DataField           #WorkflowState
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Attachments
          ElementPosition     #1431655764
          HierarchyParent     #PurchOrderAttachments
          Text                #@SYS316708
          ButtonDisplay       #Text & Image above
          NormalImage         #10442
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          Command             #2853
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeletePurchOrder
          ElementPosition     #1476395004
          HierarchyParent     #PurchOrderMaintain
          Text                #@SYS14425
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          MultiSelect         #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteRAsset
          NeededPermission    #Delete
          HelpText            #@SYS331950
          ElementPosition     #1610612734
          HierarchyParent     #RAssetButtonGroup
          Text                #@SYS311855
          ButtonDisplay       #Text & Image left
          NormalImage         #11438
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          NeedsRecord         #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #EditPurchOrder
          AutoDeclaration     #Yes
          NeededPermission    #Update
          ElementPosition     #536870910
          HierarchyParent     #PurchOrderMaintain
          Text                #@SYS317438
          ButtonDisplay       #Text & Image above
          NormalImage         #10040
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          Command             #4471
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #EnvironmentDeleteButton
          ElementPosition     #1610612733
          HierarchyParent     #EnvironmentButtonGroup
          Text                #@SYS26394
          ButtonDisplay       #Text & Image left
          NormalImage         #11438
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #EnvironmentNewButton
          ElementPosition     #1073741822
          HierarchyParent     #EnvironmentButtonGroup
          Text                #@SYS60080
          ButtonDisplay       #Text & Image left
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #HeaderViewButton
          ElementPosition     #1073741822
          HierarchyParent     #ShowGroup
          NormalImage         #12133
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          Primary             #Yes
          Command             #1320
          ToggleButton        #Radio
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    // Since the client doesn't reactivate the controls that were previously hidden we must force update to default dimensions
            #    dimensionDefaultingControllerHeader.activated(true);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineAttachmentsStrip
          ElementPosition     #1241513979
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS114630
          ShowShortCut        #No
          NeedsRecord         #Yes
          Command             #2853
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineStripDelete
          AutoDeclaration     #Yes
          HelpText            #@SYS328874
          ElementPosition     #1717986916
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          Text                #@SYS135131
          ButtonDisplay       #Text & Image left
          NormalImage         #11400
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          MultiSelect         #Yes
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineStripNew
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          Text                #@SYS319116
          ButtonDisplay       #Text & Image left
          NormalImage         #10009
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #LineViewButton
          ElementPosition     #1610612733
          HierarchyParent     #ShowGroup
          NormalImage         #12134
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          Primary             #Yes
          Command             #1321
          ToggleButton        #Radio
          ToggleValue         #On
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #NewPurchOrder
          HelpText            #@SYS26198
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderNew
          Text                #@SYS25545
          ButtonDisplay       #Text & Image above
          NormalImage         #10874
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          Big                 #Yes
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #newRAsset
          NeededPermission    #Create
          HelpText            #@GLS220512
          ElementPosition     #1073741822
          HierarchyParent     #RAssetButtonGroup
          Text                #@SYS2318
          ButtonDisplay       #Text & Image left
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #Refresh
          HelpText            #@SYS315818
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderList
          ButtonDisplay       #Text & Image left
          NormalImage         #11437
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          KeyTip              #@SYS315818
          Command             #2875
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #SendToExcel
          DisplayTarget       #Client
          ElementPosition     #1610612734
          HierarchyParent     #PurchOrderList
          ButtonDisplay       #Text & Image left
          NormalImage         #10156
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          Big                 #Yes
          KeyTip              #@SYS315819
          NeedsRecord         #Yes
          Command             #4436
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #SumLineDelete
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup
          Text                #@SYS135131
          ButtonDisplay       #Text & Image left
          NormalImage         #11400
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          MultiSelect         #Yes
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #SumLineNew
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup
          Text                #@SYS319116
          ButtonDisplay       #Text & Image left
          NormalImage         #10009
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          SaveRecord          #No
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #AssetTable_GuaranteeDate
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #STF_OptionalFields
          DataSource          #STF_PurchOrder_AssetTmp
          DataField           #GuaranteeDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #ConfirmedDlv
          ElementPosition     #1610612733
          HierarchyParent     #DeliveryDateLine
          DataSource          #PurchLine
          DataField           #ConfirmedDlv
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Delivery_ConfirmedDlvEarliest
          ElementPosition     #1073741823
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #ConfirmedDlvEarliest
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Delivery_DeliveryDate
          ElementPosition     #715827882
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #DeliveryDate
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DeliveryDate
          ElementPosition     #1073741822
          HierarchyParent     #DeliveryDateLine
          DataSource          #PurchLine
          DataField           #DeliveryDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DeliveryLineForSubcontracts_ConfirmedDlv
          ElementPosition     #1073741823
          HierarchyParent     #DeliveryLineForSubcontracts
          DataSource          #PurchLine
          DataField           #ConfirmedDlv
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DepreciationStartDate
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #DepreciationStartDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Group1_PriceAgreementDate_RU
          ElementPosition     #1431655764
          HierarchyParent     #Price_RU
          DataSource          #PurchTable_RU
          DataField           #PriceAgreementDate_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #HeaderDelivery_ConfirmedDlvEarliest
          ElementPosition     #1610612733
          HierarchyParent     #DeliveryHeader
          DataSource          #PurchTable
          DataField           #ConfirmedDlvEarliest
          FastTabSummary      #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #HeaderDelivery_DeliveryDate
          ElementPosition     #1073741822
          HierarchyParent     #DeliveryHeader
          DataSource          #PurchTable
          DataField           #DeliveryDate
          FastTabSummary      #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LoadSchedShipDate
          ElementPosition     #1136903103
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadSchedShipDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Payment_FixedDueDate
          ElementPosition     #644245092
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #FixedDueDate
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #enter
            #public void enter()
            #{
            #    super();
            #
            #    priorDueDate = this.dateValue();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Posting_AccountingDate
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #1789569705
          HierarchyParent     #Posting
          DataSource          #PurchTable
          DataField           #AccountingDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PurchLine_PriceAgreementDate_RU
          ElementPosition     #2013265917
          HierarchyParent     #Price
          DataSource          #PurchLine_W
          DataField           #PriceAgreementDate_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PurchLine_W_RefInvoiceDate_MY
          ElementPosition     #2147482280
          HierarchyParent     #LineSpec
          DataSource          #PurchLine_W
          DataField           #RefInvoiceDate_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PurchTable_DeliveryDateGrid
          ElementPosition     #1380525201
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DeliveryDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INT64EDIT
        PROPERTIES
          Name                #PurchLine_LineNumber
          ElementPosition     #452101820
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #LineNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #ICMSCreditInstallments_BR
          ElementPosition     #1610612733
          HierarchyParent     #ICMSCreditInformation_BR
          DataSource          #PurchLine
          DataMethod          #ICMSCreditInstallments_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #PISCOFINSFixedAssetCreditInstallments_BR
          ElementPosition     #1073741823
          HierarchyParent     #PISCOFINSCreditInformation_BR
          DataSource          #PurchLine
          DataMethod          #PISCOFINSFixedAssetCreditInstallments_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #Tax1099GFields_Tax1099TaxYear
          ElementPosition     #1073741822
          HierarchyParent     #Tax1099GFields
          LimitText           #4
          DataSource          #Tax1099BoxDetail
          DataField           #Tax1099TaxYear
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AdvanceInvoiceCreate_CZ
          HelpText            #@GLS220282
          ElementPosition     #1879048190
          HierarchyParent     #InvoiceProcess
          Text                #@GLS107927
          ButtonDisplay       #Text & Image above
          Primary             #Yes
          DataSource          #PurchTable
          MenuItemName        #CzVendAdvanceInvoiceCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AgreementLine
          AutoDeclaration     #Yes
          ElementPosition     #1840700268
          HierarchyParent     #LineStripUpdate
          Text                #@SYS26568
          DataSource          #PurchLine
          MenuItemName        #PurchAgreementLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AllocateMarkup
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #PurchOrderMiscCharges
          Text                #@SYS313571
          ButtonDisplay       #Text & Image left
          NormalImage         #10440
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MarkupAllocation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BankLGRequestForm
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ManageBankDocument
          ButtonDisplay       #Text & Image above
          NormalImage         #12519
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #BankLGRequestForm
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BudgetCheckResultsInquiryHeader
          ElementPosition     #1288490187
          HierarchyParent     #ManageBudgetMenuButton
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemName        #BudgetCheckResults
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BudgetCheckResultsInquiryLine
          AutoDeclaration     #Yes
          ElementPosition     #884257969
          HierarchyParent     #LineStripFinancials
          Text                #@SYS128629
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #BudgetCheckResults
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BudgetReservationSelector_PSN
          ElementPosition     #1610612734
          HierarchyParent     #BudgetReservation
          Border              #None
          ColorScheme         #RGB
          BackStyle           #Transparent
          BackgroundColor     #255 255 255
          ForegroundColor     #255 255 255
          Style               #Link
          MenuItemName        #BudgetResLineSelector_PSN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <PubSect>
            #void clicked()
            #{
            #    BudgetResLineSelectorContract_PSN   budgetResLineSelectorContract;
            #    BudgetReservationLineRecId_PSN      budgetReservationLineRecId;
            #
            #    budgetResLineSelectorContract = BudgetResLineSelectorContract_PSN::newFromParameters(
            #        BudgetReservationRelievingDocument_PSN::PurchaseOrder,
            #        purchTable.AccountingDate);
            #
            #    budgetResLineSelectorContract.parmDoShowEditableSelectorForm(PurchTableForm.canBudgetReservationLineBeEdited_PSN(purchLine_ds));
            #
            #    BudgetResLineSelectorForm_PSN::showBudgetResLineSelector(
            #        budgetResLineSelectorContract,
            #        purchLine,
            #        element);
            #
            #    budgetReservationLineRecId = budgetResLineSelectorContract.getSingleBudgetReservationLineRecId();
            #
            #    if (budgetReservationLineRecId)
            #    {
            #        purchLine.BudgetReservationLine_PSN = budgetReservationLineRecId;
            #
            #        if (purchLine.validateField(fieldNum(PurchLine, BudgetReservationLine_PSN)))
            #        {
            #            purchLine.modifiedField(fieldNum(PurchLine, BudgetReservationLine_PSN));
            #
            #            purchLine_ds.refresh();
            #
            #            purchTableForm.setAllowEditProjectFields(purchLine, purchLine_ds);
            #            purchLine_ds.updateDesignForProject();
            #            element.enableProjSalesPrice();
            #        }
            #        else
            #        {
            #            purchLine.BudgetReservationLine_PSN = purchLine.orig().BudgetReservationLine_PSN;
            #        }
            #    }
            #}
            #// </PubSect>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonAccountingDistributionButtonView
          HelpText            #@SYS333722
          ElementPosition     #1073741823
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS323891
          ButtonDisplay       #Text & Image left
          NormalImage         #12439
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #AccountingDistributionsDocumentView
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonConfirm
          AutoDeclaration     #Yes
          ElementPosition     #1521134249
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Confirm
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    PurchTable      purchTableSelection;
            #    Common          firstDatasourceCursor;
            #    boolean         tax1099SFieldsOK = true;
            #    int             originalPosition;
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            #    {
            #        originalPosition = purchTable_DS.getPosition();
            #        element.lockWindowUpdate(true);
            #        firstDatasourceCursor = purchTable_ds.getFirst(true);
            #
            #        for (purchTableSelection = (firstDatasourceCursor ? firstDatasourceCursor : purchTable_ds.cursor()) ; purchTableSelection && tax1099SFieldsOK == true ; purchTableSelection = purchTable_ds.getNext())
            #        {
            #            tax1099SFieldsOK = Tax1099BoxDetail::checkTax1099Fields(purchTableSelection.PurchId);
            #        }
            #
            #        purchTable_DS.setPosition(originalPosition);
            #        element.lockWindowUpdate(false);
            #
            #        if(tax1099SFieldsOK)
            #        {
            #            super();
            #        }
            #
            #        purchTable_ds.updateBudgetCheckResultDisplay();
            #    }
            #    else
            #    {
            #        try
            #        {
            #            super();
            #
            #            purchTable_ds.updateBudgetCheckResultDisplay();
            #
            #            purchTableForm.parmIsHeaderVersioned(true);
            #        }
            #        catch
            #        {
            #            purchTable_ds.updateBudgetCheckResultDisplay();
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonConfirmationRequest
          AutoDeclaration     #Yes
          ElementPosition     #477218588
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PurchOrder_ConfRequest
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonCreateBankLCImport
          AutoDeclaration     #Yes
          HelpText            #@SYS316146
          ConfigurationKey    #BankDocument
          ElementPosition     #1073741822
          HierarchyParent     #ManageBankDocument
          ButtonDisplay       #Text & Image above
          NormalImage         #12518
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #BankLCImport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonCreateBudgetTransfer
          AutoDeclaration     #Yes
          HelpText            #@SYS306914
          ElementPosition     #631612835
          HierarchyParent     #LineStripFinancials
          Text                #@SYS306913
          NeedsRecord         #Yes
          MenuItemName        #BudgetCreateTransfer
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    element.budgetCreateTransfer();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonCustVendCreditInvoicingHeader
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #InvoiceIntroduce
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #CustVendCreditInvoicing
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonCustVendCreditInvoicingLines
          AutoDeclaration     #Yes
          ElementPosition     #1642193371
          HierarchyParent     #LineStripFinancials
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #CustVendCreditInvoicing
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonDeliverySchedule
          AutoDeclaration     #Yes
          ElementPosition     #268435455
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchLine
          MenuItemName        #PurchDeliverySchedule
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (PurchTableForm::openDeliveryScheduleForm(this, purchLine).closedOk())
            #    {
            #        purchLine_ds.research(true);
            #        purchTable_ds.reread();
            #        purchTable_ds.refresh();
            #    }
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonFinalizePurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchTableFinalize
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonHeaderFiscalDocumentText_BR
          AutoDeclaration     #Yes
          AllowEdit           #No
          CountryRegionCodes  #BR
          HelpText            #@GLS63737
          ElementPosition     #1610612734
          HierarchyParent     #PurchOrderAttachments
          NormalImage         #10099
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #FiscalDocumentText_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonInventPackingSlipExtJour
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #ReceiveJournals
          NormalImage         #12830
          ImageLocation       #EmbeddedResource
          MenuItemName        #PLInventPackingSlipExtJour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalBillOfEntry_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #CustomsJournal
          ButtonDisplay       #Text & Image above
          NormalImage         #10739
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #CustomsBillOfEntryJournal_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalConfirmationReq
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #PurchaseJournals
          Text                #@SYS4004797
          ButtonDisplay       #Text & Image above
          NormalImage         #10725
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #VendConfirmationRequestJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalFacture_RU
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #InvoiceJournals
          ButtonDisplay       #Text & Image above
          NormalImage         #10733
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #FactureJournalVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalFacture_RU_SMB
          AutoDeclaration     #Yes
          ElementPosition     #429496729
          HierarchyParent     #InvoiceJournalsSMB
          ButtonDisplay       #Text & Image above
          NormalImage         #10733
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #FactureJournalVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalInvoice
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #InvoiceJournals
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10612
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalInvoice4Paym_RU
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseJournals
          ButtonDisplay       #Text & Image above
          NormalImage         #10498
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendInvoice4PaymJournal_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalInvoiceSMB
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #InvoiceJournalsSMB
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10612
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalPackingSlip
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ReceiveJournals
          ButtonDisplay       #Text & Image left
          NormalImage         #10667
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          DataSource          #PurchTable
          MenuItemName        #VendPackingSlipJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalPendingInvoice
          AutoDeclaration     #Yes
          HelpText            #@SYS112154
          ElementPosition     #1610612733
          HierarchyParent     #InvoiceJournals
          Text                #@SYS114694
          ButtonDisplay       #Text & Image above
          NormalImage         #10675
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendUnpostedInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalPurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseJournals
          Text                #@SYS310758
          ButtonDisplay       #Text & Image above
          NormalImage         #10725
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendPurchOrderJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonJournalReceiptsList
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ReceiveJournals
          Text                #@SYS114691
          ButtonDisplay       #Text & Image left
          NormalImage         #10739
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          DataSource          #PurchTable
          MenuItemName        #VendReceiptsJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineExpandBOM
          AutoDeclaration     #Yes
          ElementPosition     #894784850
          HierarchyParent     #LineStripPurchLine
          MenuItemType        #Action
          MenuItemName        #PurchLineExplodeBOM
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineFiscalDocumentText_BR
          AutoDeclaration     #Yes
          AllowEdit           #No
          CountryRegionCodes  #BR
          HelpText            #@GLS63738
          ElementPosition     #1319807653
          HierarchyParent     #LineStripPurchLine
          ButtonDisplay       #Text & Image left
          NormalImage         #10099
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          NeedsRecord         #Yes
          MenuItemName        #FiscalDocumentText_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineLot
          AutoDeclaration     #Yes
          ElementPosition     #1136903103
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventLot
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineOnHand
          AutoDeclaration     #Yes
          ElementPosition     #1010580536
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventOnhand
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineOnHandSMB
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #ButtonLineInventorySMB
          DataSource          #PurchLine
          MenuItemName        #InventOnhand
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonLineQuickQuote
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          Text                #@SYS54992
          ButtonDisplay       #Text & Image left
          NormalImage         #12489
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #PurchQuickQuote
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineTransact
          AutoDeclaration     #Yes
          ElementPosition     #1263225670
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonLineTransactSMB
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #ButtonLineInventorySMB
          DataSource          #PurchLine
          MenuItemName        #InventTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonOriginalSalesTable
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #IntercompanyTracing
          Text                #@SYS93292
          ButtonDisplay       #Text & Image above
          NormalImage         #10664
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #SalesTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    TradeInterCompany::construct(purchTable).referenceForm();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPaymentSchedule
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #InvoiceBill
          ButtonDisplay       #Text & Image left
          NormalImage         #10673
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #VendPaymSchedule
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    CustVendPaymSched   custVendPaymSched;
            #
            #    element.automaticTotalDiscount();
            #
            #    if (purchTable.PaymentSched && !VendPaymSched::exist(purchTable.TableId,purchTable.RecId))
            #    {
            #        custVendPaymSched = CustVendPaymSched::construct(SysModule::Vend,purchTable);
            #        custVendPaymSched.copyPaymSched(PaymSched::find(purchTable.PaymentSched));
            #        purchTable.createPaymentSched();
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaFacture_RU
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #InvoiceProcess
          Text                #@GLS116069
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_Facture_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaInvoice
          AutoDeclaration     #Yes
          ElementPosition     #1476395006
          HierarchyParent     #InvoiceProcess
          Text                #@SYS4701
          ButtonDisplay       #Text & Image above
          NormalImage         #10703
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaInvoice4Paym_RU
          AutoDeclaration     #Yes
          ElementPosition     #1252698793
          HierarchyParent     #PurchaseGenerate
          Text                #@GLS116067
          ButtonDisplay       #Text & Image left
          NormalImage         #12380
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_Invoice4Paym_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaPackingSlip
          AutoDeclaration     #Yes
          ElementPosition     #1840700268
          HierarchyParent     #ReceiveProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10704
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_PackingSlip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaPurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #PurchaseGenerate
          Text                #@SYS114652
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_PurchaseOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonProformaReceiptsList
          AutoDeclaration     #Yes
          ElementPosition     #1533916890
          HierarchyParent     #ReceiveProcess
          Text                #@SYS53077
          ButtonDisplay       #Text & Image above
          NormalImage         #10707
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Proforma_ReceiptsList
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchAgreement
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image left
          MenuItemName        #PurchAgreement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchCancel
          AutoDeclaration     #Yes
          ElementPosition     #1879048188
          HierarchyParent     #PurchOrderMaintain
          ButtonDisplay       #Text & Image left
          NormalImage         #10017
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchCancel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchTableCompare
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ManageHistory
          ButtonDisplay       #Text & Image left
          MenuItemName        #PurchTableCompare
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonPurchTableVersion
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ManageHistory
          ButtonDisplay       #Text & Image left
          MenuItemName        #PurchTableVersion
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonRemovePurchPrepayTable
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #PurchasePrepay
          ButtonDisplay       #Text & Image left
          Big                 #Yes
          MenuItemType        #Action
          MenuItemName        #PurchPrepayRemove
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonRequestChange
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #PurchOrderMaintain
          Big                 #Yes
          AutoRefreshData     #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #purchRequestChange
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonSourceDocumentDistributionHeader
          AutoDeclaration     #Yes
          HelpText            #@SYS136029
          ElementPosition     #715827882
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS304290
          ButtonDisplay       #Text & Image left
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #AccountingDistPurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonSubledgerdistribution
          AutoDeclaration     #Yes
          HelpText            #@SYS136029
          ElementPosition     #378967701
          HierarchyParent     #LineStripFinancials
          DataSource          #PurchLine
          MenuItemName        #AccountingDistPurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    // Ensure there is a record existing with an amount to distribute
            #    if (!purchLine.SourceDocumentLine)
            #    {
            #        info("@SYS311174");
            #    }
            #    else
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonSubLedgerJournalLines
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS135346
          ButtonDisplay       #Text & Image left
          NormalImage         #12429
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #SubledgerJournalAccEntry_PurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    buttonSubLedgerJournalLines.dataSource(purchTable_ds.id());
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateBillOfEntry_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #CustomsGenerate
          ButtonDisplay       #Text & Image above
          NormalImage         #10738
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_BillOfEntry_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateFacture_RU
          AutoDeclaration     #Yes
          ElementPosition     #1207959550
          HierarchyParent     #InvoiceProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Facture_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoice
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #InvoiceProcess
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10610
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoice4Paym_RU
          AutoDeclaration     #Yes
          ElementPosition     #894784852
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image left
          NormalImage         #12519
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Invoice4Paym_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoiceRegistration_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #CustomsMaintain
          ButtonDisplay       #Text & Image above
          NormalImage         #10610
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #CustomsInvoiceRegistrate_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateInvoiceSMB
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #InvoiceProcessSMB
          Text                #@SYS114667
          ButtonDisplay       #Text & Image above
          NormalImage         #10610
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_Invoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdatePackingSlip
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #ReceiveProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10665
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PackingSlip
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    AssetTable              assetTableLocal;
            #    PurchLine               purchLineLocal;
            #    STF_InforTransactions   oInforTrans;
            #    ;
            #    super();
            #    //BEGIN             STF_MEGA_INFOR                Dev: Roberto Zamora
            #    //select STF_FixedAsset from inventTable where inventTable.ItemId == this.STF_ItemId;
            #/*    while select AssetId from assetTableLocal join purchLineLocal
            #    where assetTableLocal.PurchLineRecId == purchLineLocal.RecId && purchLineLocal.PurchId == PurchTable.PurchId
            #    {
            #        oInforTrans = STF_InforTransactions::construct(assetTableLocal.AssetId, STF_InforTransFA::Input);
            #        oInforTrans.parmFromTrans(STF_FromTransInfor::PurchOrder);
            #        oInforTrans.parmPurchLine(purchLineLocal.LineNumber);
            #        oInforTrans.parmPurchId(purchLineLocal.PurchId);
            #        oInforTrans.run();
            #    }*/
            #    //END               STF_MEGA_INFOR                Dev: Roberto Zamora
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdatePrepayInvoice
          AutoDeclaration     #Yes
          ElementPosition     #2013265918
          HierarchyParent     #InvoiceProcess
          ButtonDisplay       #Text & Image below
          NormalImage         #12310
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PrepayInvoice_Action
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdatePurchaseOrder
          AutoDeclaration     #Yes
          ElementPosition     #686001720
          HierarchyParent     #PurchaseGenerate
          Text                #@SYS4006395
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_PurchaseOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    purchTable_ds.updateBudgetCheckResultDisplay();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonUpdateReceiptsList
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #ReceiveProcess
          ButtonDisplay       #Text & Image above
          NormalImage         #10738
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchFormLetter_ReceiptsList
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonWithholdTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #2143289342
          HierarchyParent     #LineOverviewActionButtonGroup
          Text                #@SYS33817
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #TaxWithholdTmpWorkTrans_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    if (!tmpPurchTableTaxWithholdTransForm || (tmpPurchTableTaxWithholdTransForm && tmpPurchTableTaxWithholdTransForm.closed()))
            #    {
            #        tmpPurchTableTaxWithholdTransForm = PurchTotals::showWithholdTaxLine_IN(purchTable,purchLine);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CaseButton
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #GeneralVendorCases
          ButtonDisplay       #Text & Image left
          NormalImage         #12198
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #CaseDetail
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CFMPaymentRequestCreate
          AutoDeclaration     #Yes
          ElementPosition     #2028178999
          HierarchyParent     #PurchaseGenerate
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #CFMPaymentRequestCreate_PO
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CFMPaymentRequestView
          AutoDeclaration     #Yes
          ElementPosition     #1968526675
          HierarchyParent     #PurchaseJournals
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #CFMPaymentRequestGrid_PO
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CFMPlannedPaymentTable
          ElementPosition     #1879048190
          HierarchyParent     #InvoiceBill
          ButtonDisplay       #Text & Image left
          NormalImage         #10593
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          DataSource          #PurchTable
          MenuItemName        #CFMPlannedPaymentTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ContactPerson
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #GeneralVendor
          ButtonDisplay       #Text & Image left
          NormalImage         #11118
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #ContactPerson
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Cov
          ElementPosition     #1610612734
          HierarchyParent     #InvoiceBill
          ButtonDisplay       #Text & Image left
          NormalImage         #10474
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #LedgerCoverage
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.automaticTotalDiscount();
            #
            #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            #    {
            #        if (purchTable.checkMarkupTrans())
            #        {
            #            super();
            #        }
            #    }
            #    else
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Create
          ElementPosition     #920350134
          HierarchyParent     #CreateActivity
          Text                #@SYS114625
          NormalImage         #10430
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmactivitiesactionNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CreateCase
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #GeneralVendorCases
          ButtonDisplay       #Text & Image left
          DataSource          #PurchTable
          MenuItemName        #CaseDetailNewPurchase
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CreateTask
          ElementPosition     #1840700268
          HierarchyParent     #CreateActivity
          Text                #@SYS114680
          NormalImage         #10431
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmActivitiesTaskNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustomsImportAssessableValue_IN
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #LineStripPurchLine
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #CustomsImportAssessableValue_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DirPartyPostalAddressNewHeader
          AutoDeclaration     #Yes
          HelpText            #@SYS342027
          ElementPosition     #1717986916
          HierarchyParent     #PurchTable_DeliveryPostalAddressGrp
          Text                #@SYS111834
          ButtonDisplay       #Image only
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          MenuItemName        #CompanyDirPartyPostalAddressNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DirPartyPostalAddressNewLine
          AutoDeclaration     #Yes
          HelpText            #@SYS342027
          ElementPosition     #1717986916
          HierarchyParent     #PurchLine_DeliveryPostalAddressGrp
          Text                #@SYS111834
          ButtonDisplay       #Image only
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          MenuItemName        #CompanyDirPartyPostalAddressNew
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <GIN>
            #void clicked()
            #{
            #    super();
            #
            #    if ((TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters()) && purchLine.DeliveryPostalAddress != purchLine.orig().DeliveryPostalAddress)
            #    {
            #        purchLine_IN.CompanyLocation_IN = LogisticsPostalAddress::getLocation(purchLine.DeliveryPostalAddress);
            #        purchLine_IN.TaxInformation_IN = TaxInformation_IN::findDefaultbyLocation(purchLine_IN.CompanyLocation_IN).RecId;
            #        purchLine_IN_ds.refresh();
            #    }
            #}
            #// </GIN>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DocuActionTemplateUndefined
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1431655764
          HierarchyParent     #mbTemplatesButton
          NeedsRecord         #Yes
          MenuItemName        #DocuActionTemplateUndefined
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EditDetailsButton
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYS340465
          ElementPosition     #805306365
          HierarchyParent     #PurchOrderMaintain
          Text                #@SYS317438
          ButtonDisplay       #Text & Image above
          NormalImage         #10040
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          OpenMode            #Edit
          CopyCallerQuery     #Yes
          MenuItemName        #PurchTable_Action
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EncumbranceSummary
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ManageView
          ButtonDisplay       #Text & Image left
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #AccountingDistributionOrderSummary
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ExciseManufacturerImporterInvDetails_IN
          AutoDeclaration     #Yes
          ElementPosition     #2013265918
          HierarchyParent     #PurchOrderAttachments
          ButtonDisplay       #Text & Image above
          NormalImage         #12239
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #ExciseManufactureImporterInvoiceLine_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ExciseRegisterBalance_IN
          ElementPosition     #1521134245
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS5618
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #ExciseRegisterBalance_In
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximAA_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS61753
          ElementPosition     #1789569700
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61755
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          MenuItemName        #EximImportDetailsAA_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximDEPB_IN
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61906
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #EximPurchLine_IN
          MenuItemName        #EximDEPBEntitlementDetails_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximDFIA_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS61754
          ElementPosition     #1968526670
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61756
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          MenuItemName        #EximImportDetailsDFIA_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #EximEPCG_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS62208
          ElementPosition     #2058005155
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS62209
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          MenuItemName        #EximEPCGImportTrans_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FactureEditLinesVend_Proforma_RU
          AutoDeclaration     #Yes
          HelpText            #@GLS104543
          ElementPosition     #1744830462
          HierarchyParent     #InvoiceProcess
          Text                #@GLS116069
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #FactureEditLinesVend_Proforma_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FactureEditLinesVend_RU
          AutoDeclaration     #Yes
          HelpText            #@GLS104543
          ElementPosition     #1342177278
          HierarchyParent     #InvoiceProcess
          Text                #@GLS104802
          ButtonDisplay       #Text & Image above
          NormalImage         #10731
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #FactureEditLinesVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #GenerateLabelChangeJournals
          ElementPosition     #1073741822
          HierarchyParent     #LabelChangeJournal
          NormalImage         #12269
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #RetailLabelChangeJournalGenerate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #HeaderInquiry_CostControlCommittedCost
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1610612730
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image left
          NormalImage         #11032
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #costcontrolCommittedCost
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #HeaderTaxForms_IN
          ElementPosition     #1879048190
          HierarchyParent     #PurchOrderAttachments
          ButtonDisplay       #Text & Image above
          NormalImage         #10837
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #TransitDocumentsalesTaxForm_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #IncentiveSchemeGroup_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS61731
          ElementPosition     #1700091215
          HierarchyParent     #LineStripPurchLine
          Text                #@GLS61496
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #EximPurchLine_IN
          MenuItemName        #EximIncentiveSchemeGroupsForm_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimParmFixedAction
          ElementPosition     #1946157048
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS5951
          SaveRecord          #No
          MenuItemName        #InventDimParmFixed
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimParmFixedActionSMB
          ElementPosition     #1503238548
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS5951
          SaveRecord          #No
          MenuItemName        #InventDimParmFixed
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimTracking
          AutoDeclaration     #Yes
          ElementPosition     #2021161072
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS5951
          DataSource          #PurchLine
          MenuItemName        #InventDimTracking
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventMarking
          AutoDeclaration     #Yes
          ElementPosition     #757935402
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #inventmarking
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    purchTableForm.setAllowEditAssetFields(purchTable, purchLine, purchLine_ds);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventNonConformanceTableLine
          AutoDeclaration     #Yes
          ElementPosition     #976128930
          HierarchyParent     #LineStripProduct
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #InventNonConformanceTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventNonConformanceTableTableHeader
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ReceiveQualityManagement
          ButtonDisplay       #Text & Image above
          NormalImage         #11134
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #InventNonConformanceTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventOnhandInterCompany
          AutoDeclaration     #Yes
          ElementPosition     #1515870804
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventOnhandInterCompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventQualityOrderTableLine
          AutoDeclaration     #Yes
          ElementPosition     #1171354716
          HierarchyParent     #LineStripProduct
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #InventQualityOrderTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventQualityOrderTableTableHeader
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ReceiveQualityManagement
          ButtonDisplay       #Text & Image above
          NormalImage         #11135
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #InventQualityOrderTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventReserve
          AutoDeclaration     #Yes
          ElementPosition     #631612835
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #InventReserve
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventTransPick
          AutoDeclaration     #Yes
          ElementPosition     #1380525201
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemName        #InventTransPick
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerTransact
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseAccounting
          Text                #@SYS115715
          NormalImage         #10859
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #LedgerTransVoucher1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineAmounts_PSN
          ElementPosition     #1610612734
          HierarchyParent     #ManageView
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #TradeAmountsSummary_PSN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    SourceDocumentProcessorCaller processorCaller = null;
            #
            #    if (purchTable.RecId > 0 && purchTable.DocumentState < VersioningDocumentState::Confirmed && !AccountingDistribution::existEventAndSourceDocumentLine(AccountingEvent::findBySourceDocumentHeader(purchTable.SourceDocumentHeader).RecId, purchTable.SourceDocumentLine))
            #    {
            #        purchTable.checkFullyDistributedAndQualified(processorCaller);
            #    }
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineFinalize
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #LineStripUpdate
          MenuItemType        #Action
          MenuItemName        #PurchLineFinalize
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineFinalizeSMB
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #LineStripUpdateSMB
          MenuItemType        #Action
          MenuItemName        #PurchLineFinalize
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineInquiry_CostControlCommittedCost
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1894838507
          HierarchyParent     #LineStripFinancials
          SaveRecord          #No
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #costcontrolCommittedCost
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineQuantity
          ElementPosition     #1073741820
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTableLineQuantity
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineTaxForms_IN
          ElementPosition     #1280660816
          HierarchyParent     #LineStripPurchLine
          MultiSelect         #No
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #TransitDocumentSalesTaxForm_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineTaxTransSource
          AutoDeclaration     #Yes
          ElementPosition     #1452709520
          HierarchyParent     #LineStripFinancials
          DataSource          #PurchLine
          MenuItemName        #TaxTransSourcePurchOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    element.lineTaxTransSource();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LineTaxTransSourceSMB
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #LineStripFinancialsSMB
          DataSource          #PurchLine
          MenuItemName        #TaxTransSourcePurchOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    element.lineTaxTransSource();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LogisticsLocationSelectHeader
          AutoDeclaration     #Yes
          NeededPermission    #Update
          HelpText            #@SYS342026
          ElementPosition     #1288490187
          HierarchyParent     #PurchTable_DeliveryPostalAddressGrp
          ButtonDisplay       #Image only
          MenuItemName        #LogisticsLocationSelect
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LogisticsLocationSelectLine
          AutoDeclaration     #Yes
          HelpText            #@SYS342026
          ElementPosition     #1288490187
          HierarchyParent     #PurchLine_DeliveryPostalAddressGrp
          ButtonDisplay       #Image only
          MenuItemName        #LogisticsLocationSelect
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <GIN>
            #void clicked()
            #{
            #    super();
            #
            #    if ((TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters()) && purchLine.DeliveryPostalAddress != purchLine.orig().DeliveryPostalAddress)
            #    {
            #        purchLine_IN.CompanyLocation_IN = LogisticsPostalAddress::getLocation(purchLine.DeliveryPostalAddress);
            #        purchLine_IN.TaxInformation_IN = TaxInformation_IN::findDefaultbyLocation(purchLine_IN.CompanyLocation_IN).RecId;
            #        purchLine_IN_ds.refresh();
            #    }
            #}
            #// </GIN>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTrans_HeadingPurchTable
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderMiscCharges
          Text                #@SYS313570
          ButtonDisplay       #Text & Image left
          NormalImage         #10639
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #MarkupTrans_HeadingPurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTrans_LinePurchTable
          AutoDeclaration     #Yes
          ElementPosition     #1136903103
          HierarchyParent     #LineStripFinancials
          Text                #@SYS313570
          DataSource          #PurchLine
          MenuItemName        #MarkupTrans_LinePurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <PubSect>
            #void clicked()
            #{
            #    Args args;
            #    PurchLine purchLineLocal;
            #
            #    if (purchTableForm.editLineAllowedIfBudgetResReferenced(purchLine))
            #    {
            #        super();
            #    }
            #    else
            #    {
            #        purchLineLocal = PurchLine::find(purchLine.PurchID);
            #        args = new Args();
            #
            #        args.caller(element);
            #        args.record(purchLineLocal);
            #        args.openMode(OpenMode::View);
            #        new MenuFunction(menuitemDisplayStr(MarkupTrans_LinePurchTable), MenuItemType::Display).run(args);
            #    }
            #}
            #// </PubSect>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTrans_LinePurchTableSMB
          AutoDeclaration     #Yes
          ElementPosition     #805306366
          HierarchyParent     #LineStripFinancialsSMB
          Text                #@SYS313570
          DataSource          #PurchLine
          MenuItemName        #MarkupTrans_LinePurchTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonDeliverMenuItemButton
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #MCRReceiveDeliver
          Text                #@MCR12185
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_PackingSlip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonProformaDeliver
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #MCRReceiveDeliver
          Text                #@MCR35779
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_ProformaPackingSlip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonProformaRelease
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #MCRPurchaseRelease
          Text                #@MCR35591
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_Proforma_PurchOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRButtonReleaseMenuItemButton
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #MCRPurchaseRelease
          Text                #@MCR10650
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #MCRPurchOrderProcess_PurchaseOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    // js-moved from confirm button
            #    purchTable_ds.updateBudgetCheckResultDisplay();
            #
            #    purchTable_ds.reread();
            #    purchTable_ds.refresh();
            #    purchTable_ds.reReadLines();
            #    purchTable_ds.active();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MCRPriceHistory
          AutoDeclaration     #Yes
          ElementPosition     #1487579812
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchLine
          MenuItemName        #MCRPriceHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MenuItemButton
          ElementPosition     #1431655764
          HierarchyParent     #ButtonGroupWHS
          ButtonDisplay       #Text & Image above
          NormalImage         #3488
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #whsloadplanningworkbench
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #OfbuttonJournalPendingInvoiceSMB
          AutoDeclaration     #Yes
          HelpText            #@SYS112154
          ElementPosition     #1288490187
          HierarchyParent     #InvoiceJournalsSMB
          Text                #@SYS114694
          ButtonDisplay       #Text & Image above
          NormalImage         #10675
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #VendUnpostedInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #OrderReferences
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTableReferences
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsApprovedVendorListByVend
          ElementPosition     #2013265915
          HierarchyParent     #GeneralRelatedInfo
          Text                #@PRO2880
          ShowShortCut        #No
          DataSource          #PurchTable
          MenuItemName        #PdsInventInquiryApprovedVendorListByVend
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    VendTable       vendTable;
            #    Args            args = new Args();
            #    MenuFunction    menuFunction = new MenuFunction(
            #        menuitemDisplayStr(PdsInventInquiryApprovedVendorListByVend),
            #        MenuItemType::Display);
            #
            #    vendTable = purchTable.vendTable_OrderAccount();
            #    if (vendTable)
            #    {
            #        args.caller(this);
            #        args.record(vendTable);
            #        menuFunction.run(args);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsMRCDocumentLog
          AutoDeclaration     #Yes
          ElementPosition     #2054114788
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image left
          MenuItemName        #PdsMRCVendorHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsMRCDocuments
          AutoDeclaration     #Yes
          ElementPosition     #2043130216
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image left
          MenuItemName        #pdsMRCDocument
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsResetShelfDates
          AutoDeclaration     #Yes
          ElementPosition     #821096685
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchLine
          MenuItemName        #PdsResetShelfDates
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsResetVendBatchInfo
          AutoDeclaration     #Yes
          ElementPosition     #1002159032
          HierarchyParent     #LineStripUpdate
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #pdsresetvendorBatchInfo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PlannedOrder
          ElementPosition     #1342177275
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image left
          NormalImage         #10687
          ImageLocation       #EmbeddedResource
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #ReqTransPoPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PmfMultiDimProcessInventory
          AutoDeclaration     #Yes
          ElementPosition     #1305333192
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #PmfMultiDimProcessInventory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PmfPackOnHand
          AutoDeclaration     #Yes
          ElementPosition     #1347440714
          HierarchyParent     #ButtonLineInventory
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchLine
          MenuItemName        #PmfPackOnHand
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Postings
          ElementPosition     #805306365
          HierarchyParent     #GeneralRelatedInfo
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTablePostings
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PrepayPurchTableHeading
          AutoDeclaration     #Yes
          Enabled             #No
          HelpText            #@SYS330181
          ElementPosition     #1073741822
          HierarchyParent     #PurchasePrepay
          NormalImage         #12310
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTableHeadingPrepay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscAdmTable_PurchCreate
          ElementPosition     #1879048185
          HierarchyParent     #ButtonHeaderTradeAgreements
          Text                #@SYS319115
          MenuItemName        #PriceDiscAdmTable_PurchCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PriceDiscTable_Purch
          ElementPosition     #536870910
          HierarchyParent     #ButtonHeaderTradeAgreements
          MenuItemName        #PriceDiscTable_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ProjBudgetDisplay
          ElementPosition     #2021161076
          HierarchyParent     #LineStripFinancials
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #ProjBudgetDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ProjBudgetDisplay1
          ElementPosition     #1717986916
          HierarchyParent     #ManageBudgetMenuButton
          NormalImage         #10001
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #ProjBudgetDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyAllHeader
          ElementPosition     #1073741822
          HierarchyParent     #PurchOrderCopy
          Text                #@SYS317844
          ButtonDisplay       #Text & Image left
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchCopyAllHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyAllLines
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS317844
          DataSource          #PurchTable
          MenuItemName        #PurchCopyAllLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyAllLinesSMB
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS317844
          DataSource          #PurchTable
          MenuItemName        #PurchCopyAllLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyJournalHeader
          ElementPosition     #1610612733
          HierarchyParent     #PurchOrderCopy
          Text                #@SYS317845
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchCopyJournalHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyJournalLines
          AutoDeclaration     #Yes
          ElementPosition     #626349395
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS317845
          DataSource          #PurchTable
          MenuItemName        #PurchCopyJournalLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCopyJournalLinesSMB
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS317845
          DataSource          #PurchTable
          MenuItemName        #PurchCopyJournalLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCreateFromSalesorderPurchase
          ElementPosition     #1610612733
          HierarchyParent     #PurchOrderNew
          Text                #@SYS114686
          ButtonDisplay       #Text & Image left
          NormalImage         #10454
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #PurchCreateFromSalesorderPurchase
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCreditNoteHeader
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseCreate
          Text                #@SYS8125
          ButtonDisplay       #Text & Image above
          NormalImage         #10534
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchCreditNoteHeader
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCreditNoteLines
          AutoDeclaration     #Yes
          ElementPosition     #357913940
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS8125
          DataSource          #PurchTable
          MenuItemName        #PurchCreditNoteLines
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchEndDisc
          ElementPosition     #1610612730
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_EndDiscPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchJournalAutoSummary_Purch
          ElementPosition     #1610612733
          HierarchyParent     #GeneralSetup
          Text                #@SYS114681
          ButtonDisplay       #Text & Image above
          NormalImage         #10819
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchJournalAutoSummary_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchJournalAutoSummary_PurchSMB
          ElementPosition     #1610612733
          HierarchyParent     #GeneralSetupSMB
          Text                #@SYS114681
          ButtonDisplay       #Text & Image above
          NormalImage         #10819
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchJournalAutoSummary_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineCopy
          AutoDeclaration     #Yes
          ElementPosition     #676059664
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS35635
          SaveRecord          #No
          DataSource          #PurchLine
          MenuItemName        #PurchLineCopy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineCopySMB
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS35635
          SaveRecord          #No
          DataSource          #PurchLine
          MenuItemName        #PurchLineCopy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineDisc
          ElementPosition     #1073741820
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_LineDiscPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchLineSplit_PL
          ElementPosition     #775480202
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchLine
          MenuItemType        #Action
          MenuItemName        #PlPurchLineSplit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchMultiLineDisc
          ElementPosition     #1342177275
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_MultiLineDiscPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchPrice
          ElementPosition     #805306365
          HierarchyParent     #ButtonHeaderTradeAgreements
          DataSource          #PurchTable
          MenuItemName        #PriceDiscTable_PricePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchUpdateRemain
          AutoDeclaration     #Yes
          ElementPosition     #766958445
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemName        #PurchUpdateRemain
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchUpdateRemainSMB
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #LineStripUpdateSMB
          DataSource          #PurchLine
          MenuItemName        #PurchUpdateRemain
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchVoidFiscalDocument_BR
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #PurchaseCreate
          ButtonDisplay       #Text & Image above
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchVoidFiscalDocument_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RecordEvent
          ElementPosition     #1533916890
          HierarchyParent     #CreateActivity
          Text                #@SYS114679
          NormalImage         #10432
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmactivitieseventNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Register
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemType        #Action
          MenuItemName        #TradeOrderLineRegister
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RenumberLineNumber
          AutoDeclaration     #Yes
          ElementPosition     #460175067
          HierarchyParent     #LineStripUpdate
          DataSource          #PurchLine
          MenuItemType        #Action
          MenuItemName        #TradeLineRenumbering
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #    purchLine_ds.research(true);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ReqMultiLevelPegging
          ElementPosition     #1952257860
          HierarchyParent     #LineStripProduct
          NeedsRecord         #Yes
          DataSource          #PurchLine
          MenuItemName        #ReqMultiLevelPegging
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ReqTransExplosion
          AutoDeclaration     #Yes
          ElementPosition     #1757032074
          HierarchyParent     #LineStripProduct
          DataSource          #PurchLine
          MenuItemName        #ReqTransexplosion
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ReqTransNet
          AutoDeclaration     #Yes
          ElementPosition     #1561806288
          HierarchyParent     #LineStripProduct
          MenuItemName        #ReqTransNet
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailAddItemMenuItem
          AutoDeclaration     #Yes
          ConfigurationKey    #Retail
          ElementPosition     #1503238551
          HierarchyParent     #LineOverviewCoreActionButtonGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #11373
          ImageLocation       #EmbeddedResource
          DataSource          #PurchTable
          MenuItemName        #RetailAddItems
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailBuyersPush
          HelpText            #@RET800
          ElementPosition     #1431655764
          HierarchyParent     #Functions
          Text                #@RET992
          NormalImage         #12796
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #RetailBuyersPush
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailBuyersPushPerPackage
          ElementPosition     #1789569705
          HierarchyParent     #Functions
          NormalImage         #12796
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #RetailBuyersPushPerPackage
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailBuyersPushSMB
          HelpText            #@RET800
          ElementPosition     #1431655764
          HierarchyParent     #FunctionsSMB
          Text                #@RET992
          NormalImage         #12796
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #RetailBuyersPush
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailConcessionFeesOverview
          ElementPosition     #1431655764
          HierarchyParent     #Inquiries
          NormalImage         #10772
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #RetailConcessionFeesOverview
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailLabelChangeJournalTable
          ElementPosition     #1610612733
          HierarchyParent     #LabelChangeJournal
          Text                #@SYS30351
          NormalImage         #10729
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #RetailLabelChangeJournalTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPackagePurchQuick
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #2117657481
          HierarchyParent     #LineStripPurchLine
          DataSource          #PurchTable
          MenuItemName        #RetailPackagePurchQuick
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPackagePurchQuickSMB
          HelpText            #@RET4401
          ConfigurationKey    #RetailHeadquarters
          ElementPosition     #1932735279
          HierarchyParent     #LineStripPurchLineSMB
          DataSource          #PurchTable
          MenuItemName        #RetailPackagePurchQuick
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPrintItemLabel
          HelpText            #@RET3836
          ElementPosition     #1610612733
          HierarchyParent     #ProductLabels
          Text                #@RET3836
          NormalImage         #1083
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          DataSource          #PurchLine
          MenuItemName        #RetailCreateMultipleItemsLabel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPrintItemLabelSMB
          HelpText            #@RET3836
          ElementPosition     #1610612733
          HierarchyParent     #ProductLabelsSMB
          Text                #@RET3836
          NormalImage         #1083
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          DataSource          #PurchLine
          MenuItemName        #RetailCreateMultipleItemsLabel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPrintShelfLabel
          HelpText            #@RET3837
          ElementPosition     #1073741822
          HierarchyParent     #ProductLabels
          Text                #@RET3837
          NormalImage         #1083
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          DataSource          #PurchLine
          MenuItemName        #RetailCreateMultipleShelfsLabel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #RetailPrintShelfLabelSMB
          HelpText            #@RET3837
          ElementPosition     #1073741822
          HierarchyParent     #ProductLabelsSMB
          Text                #@RET3837
          NormalImage         #1083
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          MultiSelect         #Yes
          DataSource          #PurchLine
          MenuItemName        #RetailCreateMultipleShelfsLabel
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ScheduleAppointment
          ElementPosition     #1227133512
          HierarchyParent     #CreateActivity
          Text                #@SYS114626
          NormalImage         #10433
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #smmActivitiesAppointmentNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ServicingViewActivities
          AllowEdit           #No
          ElementPosition     #613566756
          HierarchyParent     #CreateActivity
          Text                #@SYS114624
          NormalImage         #10434
          ImageLocation       #EmbeddedResource
          ShowShortCut        #No
          Primary             #Yes
          MenuItemName        #ActivitiesMain
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #STF_AddInvoiceUUI
          ElementPosition     #1431655764
          HierarchyParent     #STF_ElectronicAccounting
          Text                #@INZ135
          MenuItemType        #Action
          MenuItemName        #STF_SATVerifyCFDIServiceAgent_References
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if(EcoResProduct::findByDisplayProductNumber(purchLine.itemId).ProductType == EcoResProductType::Service)
            #    {
            #        super();
            #
            #        purchLine_ds.reread();
            #    }
            #    else
            #    {
            #        info("Solo es posible agregar facturas a productos de tipo servicio");
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SuppItemCalc_Purch
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #LineStripPurchLine
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #SuppItemCalc_Purch
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.automaticTotalDiscount();
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SuppItemTable_Purch
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #GeneralMaintain
          Text                #@SYS58282
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #SuppItemTable_Purch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysSendMail
          ElementPosition     #1610612733
          HierarchyParent     #GroupEmail
          ButtonDisplay       #Image only
          NormalImage         #2631
          ImageLocation       #EmbeddedResource
          Border              #Flat
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #SysSendMail
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SysUrlLookup
          ElementPosition     #1610612733
          HierarchyParent     #GroupURL
          ButtonDisplay       #Image only
          NormalImage         #2632
          ImageLocation       #EmbeddedResource
          Border              #Flat
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #SysUrlLookup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxRegisterBalance_IN
          CountryRegionCodes  #IN
          ElementPosition     #1565873487
          HierarchyParent     #LineStripPurchLine
          MenuItemName        #TaxRegisterbalance_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxTransSource
          ElementPosition     #1431655764
          HierarchyParent     #PurchaseTax
          ButtonDisplay       #Text & Image above
          NormalImage         #10827
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #TaxTransSourcePurchOrder
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    element.automaticTotalDiscount();
            #
            #    if (!tmpPurchTableTaxTransForm || (tmpPurchTableTaxTransForm && tmpPurchTableTaxTransForm.closed()))
            #    {
            #        tmpPurchTableTaxTransForm = PurchTotals::showTax(menuitemDisplayStr(TaxTmpWorkPurchOrder), purchTable, element);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench
          ElementPosition     #1610612730
          HierarchyParent     #ButtonGroupTMS
          ButtonDisplay       #Text & Image above
          NormalImage         #11092
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          MenuItemName        #tmsraterouteWorkbench
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_Rate
          AutoDeclaration     #Yes
          HelpText            #@TRX609
          ElementPosition     #536870910
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX509
          ButtonDisplay       #Text & Image above
          NormalImage         #12203
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #TMSRateRouteWorkbench_rate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_RateRoute
          AutoDeclaration     #Yes
          HelpText            #@TRX612
          ElementPosition     #1342177275
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX531
          ButtonDisplay       #Text & Image above
          NormalImage         #10796
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsraterouteworkbench_rateroute
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_RateShop
          AutoDeclaration     #Yes
          HelpText            #@TRX610
          ElementPosition     #805306365
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX510
          ButtonDisplay       #Text & Image above
          NormalImage         #12138
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsraterouteworkbench_rateshop
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRateRouteWorkbench_Route
          AutoDeclaration     #Yes
          HelpText            #@TRX611
          ElementPosition     #1073741820
          HierarchyParent     #ButtonGroupTMS
          Text                #@TRX519
          ButtonDisplay       #Text & Image above
          NormalImage         #12132
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsraterouteworkbench_route
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSRouteWorkbench
          ElementPosition     #1879048185
          HierarchyParent     #ButtonGroupTMS
          ButtonDisplay       #Text & Image above
          NormalImage         #12304
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemName        #tmsrouteworkbench
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TMSSendPurchaseOrderElectronically
          ElementPosition     #1431655764
          HierarchyParent     #Post
          ButtonDisplay       #Text & Image below
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #TMSSendPurchaseOrderElectronically
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Totals
          ElementPosition     #1431655764
          HierarchyParent     #PurchOrderView
          ButtonDisplay       #Text & Image above
          NormalImage         #10832
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #PurchTotals
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void  clicked()
            #{
            #    PartList partList;
            #    FormRun formPart;
            #    int counter;
            #
            #    element.automaticTotalDiscount();
            #
            #    if (purchTable.checkMarkupTrans())
            #    {
            #        super();
            #    }
            #    // Refresh the Totals Fact Box
            #    partList = new PartList(element);
            #    for (counter = 1; counter <= partList.partCount(); counter++)
            #    {
            #        if (partList.getPartById(counter) && partList.getPartById(counter).name() == formStr(PurchTotalsSummaryPart))
            #        {
            #            formPart = partList.getPartById(counter);
            #            purchTable_ds.active();
            #            break;
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TradeBLWIChangeCode
          ElementPosition     #1431655764
          HierarchyParent     #InvoiceChange
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          DataSource          #PurchTable
          MenuItemType        #Action
          MenuItemName        #TradeBLWIChangePurchTable
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (! purchTable.RecId)
            #    {
            #        purchTable.write();
            #    }
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TransportationDocument
          ElementPosition     #1431655764
          HierarchyParent     #ReceiveDelivery
          ButtonDisplay       #Text & Image above
          Big                 #Yes
          Primary             #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #TransportationDocument
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendOpenTrans
          ElementPosition     #1431655764
          HierarchyParent     #InvoiceSettle
          Text                #@SYS3500
          ButtonDisplay       #Text & Image above
          NormalImage         #10793
          ImageLocation       #EmbeddedResource
          Big                 #Yes
          NeedsRecord         #Yes
          DataSource          #PurchTable
          MenuItemName        #VendOpenTrans
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (TaxWithholdParameters_IN::checkTaxParameters())
            #    {
            #        TaxWithholdUncommitted_IN::deleteForDocumentHeader(purchTable.TableId, purchTable.RecId);
            #    }
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #WHSWorkTable
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #LineOverviewWHS
          ButtonDisplay       #Text & Image left
          NormalImage         #3462
          ImageLocation       #EmbeddedResource
          DataSource          #PurchLine
          MenuItemName        #whsworktable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #WMSOrderAllowCreate
          AutoDeclaration     #Yes
          ElementPosition     #378967701
          HierarchyParent     #ButtonLineInventory
          DataSource          #PurchLine
          MenuItemName        #WMSOrderAllowCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #DeliveryLine_OverDeliveryPct
          ElementPosition     #536870910
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #OverDeliveryPct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #DeliveryLine_UnderDeliveryPct
          ElementPosition     #805306365
          HierarchyParent     #DeliveryLine
          DataSource          #PurchLine
          DataField           #UnderDeliveryPct
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Flow_Amount
          AutoDeclaration     #Yes
          ElementPosition     #1789569700
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #TransactionCurrencyAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Flow_SubstanceEntryQty
          AutoDeclaration     #Yes
          ElementPosition     #894784850
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #SubstanceEntryQty
          MinNoOfDecimals     #2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FSHSumLines_LinePercent
          ElementPosition     #1879048188
          HierarchyParent     #Grid1
          ShowZero            #No
          DataSource          #RetailSumLines
          DataField           #LinePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FSHSumLines_PurchPrice
          ElementPosition     #1610612730
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #FSHSumLines_PurchQty
          ElementPosition     #1073741820
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #PurchQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #g1099Fields_Tax1099Amount
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099Amount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #g1099Fields_Tax1099StateAmount
          ElementPosition     #1879048190
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099StateAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #HeaderDiscMarkup_DiscPercent
          ElementPosition     #1431655764
          HierarchyParent     #DiscountsHeader
          DataSource          #PurchTable
          DataField           #DiscPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ItemVolume
          ConfigurationKey    #WHSandTMS
          ElementPosition     #1610612733
          HierarchyParent     #PhysDims
          DataSource          #PurchLine
          DataMethod          #whsItemUnitVolume
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ItemWeight
          ConfigurationKey    #WHSandTMS
          ElementPosition     #1073741822
          HierarchyParent     #PhysDims
          DataSource          #PurchLine
          DataMethod          #whsItemGrossWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Line1099Fields_Tax1099Amount
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099Amount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Line1099Fields_Tax1099StateAmount
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099StateAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LineDisc
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #715827882
          HierarchyParent     #Disc
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LineDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LineInventoryForSubcontracts_RemainInven
          ElementPosition     #2080374782
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #RemainInventFinancial
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LinePercent
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1073741823
          HierarchyParent     #Disc
          ShowZero            #No
          Label               #@SYS333047
          DataSource          #PurchLine
          DataField           #LinePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadGrossWeight
          ElementPosition     #1894838505
          HierarchyParent     #GridLoads
          Label               #@SYS53799
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadGrossWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadNetWeight
          ElementPosition     #2021161072
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadNetWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadVolume
          ElementPosition     #631612835
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadVolume
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LoadWeight
          ElementPosition     #505290268
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadWeight
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #MultiLnDisc
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1431655764
          HierarchyParent     #Disc
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #MultiLnDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #MultiLnPercent
          AutoDeclaration     #Yes
          Width               #Column width
          ElementPosition     #1789569705
          HierarchyParent     #Disc
          ShowZero            #No
          Label               #@SYS22555
          DataSource          #PurchLine
          DataField           #MultiLnPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PDSAdvancedPriceInfo_CalculatedLineAmount
          ElementPosition     #1638869097
          HierarchyParent     #LineSpec
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedLineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PDSAdvancedPriceInfo_CalculatedUnitPrice
          ElementPosition     #1299792732
          HierarchyParent     #LineSpec
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedUnitPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Potency_CalculatedLineAmount
          ElementPosition     #1717986916
          HierarchyParent     #Potency
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedLineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Potency_CalculatedUnitPrice
          ElementPosition     #1288490187
          HierarchyParent     #Potency
          DataSource          #PDSAdvancedPriceInfo
          DataField           #CalculatedUnitPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ProjectCostPrice_LineAmount
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #ProjectCostPrice
          DataSource          #PurchLine
          DataField           #LineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ProjectCostPrice_PurchPrice
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #ProjectCostPrice
          DataSource          #PurchLine
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ProjectCostPrice_PurchQty
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #ProjectCostPrice
          DataSource          #PurchLine
          DataField           #PurchQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PSAPwpPercent
          AutoDeclaration     #Yes
          Visible             #No
          AllowEdit           #No
          ConfigurationKey    #PSAPwp
          ElementPosition     #2147479550
          HierarchyParent     #LineSpec
          Label               #@PSA11212
          DataSource          #PurchLine
          DataMethod          #psaPwpPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_AssessableValue_IN
          ElementPosition     #2146684926
          HierarchyParent     #LineSpec
          DataSource          #PurchLine_IN
          DataField           #AssessableValue_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_CustomsMaxRetailPrice_IN
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #Price
          DataSource          #PurchLine_IN
          DataField           #CustomsMaxRetailPrice_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_IN_AssessableValueAccountingCurrency
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2147071998
          HierarchyParent     #LineSpec
          DataSource          #PurchLine_IN
          DataField           #AssessableValueAccountingCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_InventInvoiceNow
          Visible             #No
          ElementPosition     #1923787432
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #InventInvoiceNow
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_LineAmountGrid
          AutoDeclaration     #Yes
          ElementPosition     #1582356370
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LineAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_LineDiscGrid
          AutoDeclaration     #Yes
          ElementPosition     #1356305460
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LineDisc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_LinePercentGrid
          AutoDeclaration     #Yes
          ElementPosition     #1469330915
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #LinePercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_MaximumRetailPrice_IN
          AutoDeclaration     #Yes
          ElementPosition     #1744830461
          HierarchyParent     #Price
          DataSource          #PurchLine_IN
          DataField           #MaximumRetailPrice_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_NonRecoverablePercent_IN
          ElementPosition     #1527099480
          HierarchyParent     #IndiaVAT
          DataSource          #PurchLine_IN
          DataField           #NonRecoverablePercent_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PdsCWInventReceivedNow
          ElementPosition     #2147459070
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #PdsCWInventReceivedNow
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PdsCWQty
          ElementPosition     #1073741822
          HierarchyParent     #QtyUnitLine
          DataSource          #PurchLine
          DataField           #PdsCWQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PriceUnit
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Price
          DataSource          #PurchLine
          DataField           #PriceUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchDeviationQty_RU
          ElementPosition     #2090571558
          HierarchyParent     #LineSpec
          DataSource          #PurchLine_W
          DataField           #DeviationQty_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchMarkup
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Price
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchMarkup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchPriceGrid
          AutoDeclaration     #Yes
          ElementPosition     #1243280005
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchQtyGrid
          AutoDeclaration     #Yes
          ElementPosition     #1017229095
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_PurchReceivedNow
          ElementPosition     #2034458190
          HierarchyParent     #LineSpec
          ShowZero            #No
          DataSource          #PurchLine
          DataField           #PurchReceivedNow
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_Remainder
          Visible             #No
          ElementPosition     #1767200083
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #Remainder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #PurchLine_TaxWithholdBaseCur_TH
          ElementPosition     #1695381825
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #TaxWithholdBaseCur_TH
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #RBOPackagePurch_Qty
          ElementPosition     #1073741823
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataField           #Qty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #RBOPackagePurch_QtyReceived
          ElementPosition     #1431655764
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataField           #QtyReceived
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #RealEdit
          ElementPosition     #1610612734
          HierarchyParent     #LineInventoryForSubcontracts
          DataSource          #PurchLine
          DataField           #QtyOrdered
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #ReductionEntryAmount
          AutoDeclaration     #Yes
          CountryRegionCodes  #JP
          HelpText            #@SYS4006148
          ConfigurationKey    #Asset
          ElementPosition     #1610612733
          HierarchyParent     #ReductionEntry_JP
          DataSource          #PurchLine
          DataMethod          #reductionEntryAmount_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #STF_AmmountInvoice
          AllowEdit           #No
          ElementPosition     #2147482280
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #STF_AmmountInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #PurchLine_LedgerDimension
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PostingLine
          DataSource          #PurchLine
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    ledgerDefaultAccountControllerLine.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    ledgerDefaultAccountControllerLine.loadAutoCompleteData(_e);
            #    super(_e);
            #}
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #    ledgerDefaultAccountControllerLine.loadSegments();
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #    ledgerDefaultAccountControllerLine.segmentValueChanged(_e);
            #}
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = ledgerDefaultAccountControllerLine.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LinePurchLineSplit
          CountryRegionCodes  #PL
          ElementPosition     #725769933
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS4000283
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsAccountingSeparator
          ElementPosition     #252645134
          HierarchyParent     #LineStripFinancials
          Text                #@SYS314071
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsBudgetSeparator
          ElementPosition     #505290268
          HierarchyParent     #LineStripFinancials
          Text                #@SYS80981
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsChargesSeparator
          ElementPosition     #1010580536
          HierarchyParent     #LineStripFinancials
          Text                #@SYS114608
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsChargesSeparatorSMB
          ElementPosition     #536870910
          HierarchyParent     #LineStripFinancialsSMB
          Text                #@SYS114608
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsTaxSeparator
          ElementPosition     #1263225670
          HierarchyParent     #LineStripFinancials
          Text                #@SYS28668
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripFinancialsTaxSeparatorSMB
          ElementPosition     #1073741822
          HierarchyParent     #LineStripFinancialsSMB
          Text                #@SYS28668
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripGeneralRelatedInfoSeparator
          ElementPosition     #1768515938
          HierarchyParent     #LineStripFinancials
          Text                #@SYS111665
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryInterCompanySeparator
          ConfigurationKey    #TradeInterCompany
          ElementPosition     #1389548237
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS316397
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryMaintainSeparator
          ElementPosition     #505290268
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS316594
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryNewSeparator
          ElementPosition     #252645134
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS5480
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryRegulatorySeparator
          ElementPosition     #2032145644
          HierarchyParent     #ButtonLineInventory
          Text                #@PDS1378
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryTraceSeparator
          ElementPosition     #1894838505
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS26038
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryViewSeparator
          ElementPosition     #884257969
          HierarchyParent     #ButtonLineInventory
          Text                #@SYS53654
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripInventoryViewSeparatorSMB
          ElementPosition     #858993458
          HierarchyParent     #ButtonLineInventorySMB
          Text                #@SYS53654
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripProductProductModelSeparator
          ElementPosition     #306783376
          HierarchyParent     #LineStripProduct
          Text                #@SYS316395
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripProductQualitySeparator
          AutoDeclaration     #Yes
          ElementPosition     #345131298
          HierarchyParent     #LineStripProduct
          Text                #@SYS113616
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripProductRequirementsSeparator
          ElementPosition     #1468006396
          HierarchyParent     #LineStripProduct
          Text                #@SYS118437
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineAttachmentsSeparator
          ElementPosition     #1163220305
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS316600
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineBOMSeparator
          ElementPosition     #805306365
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS69965
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineCalculateSeparator
          ElementPosition     #984263335
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS117
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineCopySeparator
          ElementPosition     #447392425
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS80350
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineCopySeparatorSMB
          ElementPosition     #429496728
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS80350
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineDisplaySeparator
          CountryRegionCodes  #IN
          ElementPosition     #1923787427
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS53465
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripPurchLineNewSeparator
          ElementPosition     #178956970
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS5480
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripRetailPackagePurchQuick
          ElementPosition     #2087831318
          HierarchyParent     #LineStripPurchLine
          Text                #@RET3014
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripRetailPackagePurchQuickSMB
          ElementPosition     #1717986912
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@RET3014
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateAgreementSeparator
          ConfigurationKey    #TradeBlanketOrder
          ElementPosition     #1533916890
          HierarchyParent     #LineStripUpdate
          Text                #@SYS190134
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateLineNumberSeparator
          ElementPosition     #306783378
          HierarchyParent     #LineStripUpdate
          Text                #@SYS40505
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateProcessSeparator
          ElementPosition     #1073741823
          HierarchyParent     #LineStripUpdate
          Text                #@SYS122441
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateUpdateSeparator
          ElementPosition     #613566756
          HierarchyParent     #LineStripUpdate
          Text                #@SYS71207
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #LineStripUpdateUpdateSeparatorSMB
          ElementPosition     #715827882
          HierarchyParent     #LineStripUpdateSMB
          Text                #@SYS71207
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #ViewStrip
          CountryRegionCodes  #IN
          ElementPosition     #1386916516
          HierarchyParent     #LineStripPurchLine
          Text                #@SYS316707
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #ViewStripSMB
          CountryRegionCodes  #IN
          ElementPosition     #1288490184
          HierarchyParent     #LineStripPurchLineSMB
          Text                #@SYS316707
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #txtAssetQualifier
          ElementPosition     #858993458
          HierarchyParent     #grpAssetQualifier
          Text                #@SYS136020
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STATICTEXT
        PROPERTIES
          Name                #txtAssetQualifierQuestion
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #grpAssetQualifier
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AdministrationGroup_ItemBuyerGroupId
          ElementPosition     #536870910
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #ItemBuyerGroupId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AdministrationGroup_LanguageId
          ElementPosition     #1342177275
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #LanguageId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AdministrationGroup_PurchPoolId
          ElementPosition     #1073741820
          HierarchyParent     #AdministrationGroup
          DataSource          #PurchTable
          DataField           #PurchPoolId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AssetTable_Location
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #STF_MandatoryFields
          Label               #@DOT150
          DataSource          #STF_PurchOrder_AssetTmp
          DataField           #Location
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AssetTable_Make
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #STF_OptionalFields
          Label               #@DOT165
          DataSource          #STF_PurchOrder_AssetTmp
          DataField           #Make
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AssetTable_Model
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #STF_OptionalFields
          Label               #@SYS9923
          DataSource          #STF_PurchOrder_AssetTmp
          DataField           #Model
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AssetTable_ModelYear
          AutoDeclaration     #Yes
          ElementPosition     #805306365
          HierarchyParent     #STF_OptionalFields
          Label               #@SYS111134
          DataSource          #STF_PurchOrder_AssetTmp
          DataField           #ModelYear
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AssetTable_Notes
          AutoDeclaration     #Yes
          ElementPosition     #1342177275
          HierarchyParent     #STF_OptionalFields
          Label               #@SYS50739
          DataSource          #STF_PurchOrder_AssetTmp
          DataField           #Notes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Carrier
          ElementPosition     #884257969
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadCarrierCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CarrierService
          ElementPosition     #1010580536
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadCarrierServiceCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CompanyAddress
          HelpText            #@SYS840
          ElementPosition     #1288490187
          HierarchyParent     #CompanyInformation
          Label               #@SYS36203
          DataSource          #PurchLine_IN
          DataMethod          #displayAddress_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ContactInfo_Email
          ElementPosition     #1073741822
          HierarchyParent     #GroupEmail
          DataSource          #PurchTable
          DataField           #Email
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ContactInfo_URL
          ElementPosition     #1073741822
          HierarchyParent     #GroupURL
          DataSource          #PurchTable
          DataField           #URL
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Currency_CurrencyCode
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Currency
          DataSource          #PurchTable
          DataField           #CurrencyCode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_ConsigneeAccount_RU
          ElementPosition     #1610612733
          HierarchyParent     #Delivery_RU
          DataSource          #PurchTable_RU
          DataField           #ConsigneeAccount_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_ConsignorAccount_RU
          ElementPosition     #1073741822
          HierarchyParent     #Delivery_RU
          DataSource          #PurchTable_RU
          DataField           #ConsignorAccount_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_DlvMode
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #DlvMode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Delivery_DlvTerm
          ElementPosition     #1789569705
          HierarchyParent     #Delivery
          DataSource          #PurchTable
          DataField           #DlvTerm
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DistributionTemplateHeader
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #GroupDistributionTemplateHeader
          Label               #@sys30829
          DataSource          #PurchTable
          DataMethod          #templateName
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AccountingDistributionTemplate::lookupTemplateName(distributionTemplateHeader);
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean                 ret;
            #    AccountingDistributionTemplate    distributionTemplate;
            #
            #    if (this.text())
            #    {
            #        distributionTemplate = AccountingDistributionTemplate::findByName(this.text());
            #
            #        if (distributionTemplate)
            #        {
            #            ret = super();
            #        }
            #        else
            #        {
            #            ret = checkFailed(strFmt("@SYS302773", this.text()));
            #            this.text('');
            #        }
            #    }
            #    else
            #    {
            #        ret = super();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DistributionTemplateLine
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #GroupDistributionTemplateLine
          Label               #@sys30829
          DataSource          #PurchLine
          DataMethod          #templateName
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AccountingDistributionTemplate::lookupTemplateName(distributionTemplateLine);
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean                 ret;
            #    AccountingDistributionTemplate    distributionTemplate;
            #
            #    if (this.text())
            #    {
            #        distributionTemplate = AccountingDistributionTemplate::findByName(this.text());
            #
            #        if (distributionTemplate)
            #        {
            #            ret = super();
            #        }
            #        else
            #        {
            #            ret = checkFailed(strFmt("@SYS302773", this.text()));
            #            this.text('');
            #        }
            #    }
            #    else
            #    {
            #        ret = super();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editAssetQualifier
          AutoDeclaration     #Yes
          Width               #100
          AlignControl        #No
          ElementPosition     #1717986916
          HierarchyParent     #grpAssetQualifier
          DisplayHeight       #1
          ShowLabel           #No
          DataSource          #PurchLine
          DataMethod          #editAssetQualifier
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AssetRuleTmpAssetQualifierLookup::lookupAssetQualifier(this, assetQualifierList);
            #}
            #
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    purchLine.AssetGroup        = AssetRuleTmpAssetQualifierLookup::getAssetGroupFromQualifier(selectedAssetQualifier, assetQualifierList);
            #    purchLine.DefaultDimension  = purchLine.copyDimension(purchLine.DefaultDimension);
            #    purchLine.CreateFixedAsset  = NoYes::Yes;
            #    purchLine_ds.refresh();
            #
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editContactPersonName
          ElementPosition     #1431655764
          HierarchyParent     #Vendor
          LookupButton        #Always
          DataSource          #PurchTable
          DataMethod          #editContactPersonName
          PresenceDataSource  #PurchTable
          PresenceDataField   #ContactPersonId
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    purchTable_ContactPersonId.jumpRef();
            #}
          ENDSOURCE
          SOURCE #lookup
            #void lookup()
            #{
            #    ContactPerson::lookupVendContactPerson(purchTable_ContactPersonId,
            #                                           purchTable.OrderAccount,
            #                                           this,
            #                                           purchTable.ContactPersonId);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editReasonCode
          ElementPosition     #1073741822
          HierarchyParent     #Reasons
          Label               #@SYS114840
          DataSource          #PurchTable
          DataMethod          #editReasonCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #/// <summary>
            #/// Adds the 'Go to Main Table Form' option to the context menu for reason code field.
            #/// </summary>
            #public void jumpRef()
            #{
            #    //Pass the account type of Vendor, so that the relevant form shows.
            #    ReasonTable::jumpRef(ReasonCodeAccountTypeAll::Vend, this.valueStr());
            #}
          ENDSOURCE
          SOURCE #lookup
            #/// <summary>
            #/// Constructs a lookup for the reason code field.
            #/// </summary>
            #/// <remarks>
            #/// The lookup shows the appropriate reason codes (if any) given the offset and main account selections.
            #/// </remarks>
            #public void lookup()
            #{
            #    //Calls the lookup method passing Vendor as both main and offset account types; boolean values of true
            #    //and false are passed for them respectively, since the offset account is not present in this journal.
            #    ReasonFormTable::reasonCodeLookup(this, LedgerJournalACType::Vend, LedgerJournalACType::Vend, true, false);
            #}
          ENDSOURCE
          SOURCE #modified
            #// <GMY>
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    // Update the cache for the ReasonComment value, which is changed during the call to super.
            #    purchTable_DS.cacheCalculateMethod(tableMethodStr(PurchTable,editReasonComment));
            #
            #    element.redraw();
            #
            #    return ret;
            #}
            #// </GMY>
          ENDSOURCE
          SOURCE #validate
            #/// <summary>
            #/// Validate existence of vendor type reason code in ReasonTable.
            #/// </summary>
            #/// <returns>
            #/// A boolean indicating whether the reason code was valid for vendor type reason or not.
            #/// </returns>
            #public boolean validate()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    ret = ReasonTable::validateReasonCode(this.text(), LedgerJournalACType::Vend, true, LedgerJournalACType::Vend);
            #
            #    if (ret &&
            #        BrazilParameters::isEnabled() &&
            #        purchTable_BR.InvoiceRefRecId_BR &&
            #        !strLRTrim(this.text()))
            #    {
            #        ret = checkFailed(strFmt("@SYS26332", fieldPName(ReasonTable, Reason)));
            #    }
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editReasonComment
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Reasons
          DataSource          #PurchTable
          DataMethod          #editReasonComment
        ENDPROPERTIES
        
        METHODS
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (BrazilParameters::isEnabled() && purchTable_BR.InvoiceRefRecId_BR)
            #    {
            #        if (strLen(strLRTrim(this.text())) < 15)
            #        {
            #            ret = checkFailed("@SYS4002144");
            #        }
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #EMSFlow_TransactionCurrency
          AutoDeclaration     #Yes
          ElementPosition     #1968526670
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #TransactionCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalEstablishment
          ElementPosition     #477218588
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataMethod          #FiscalEstablishment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalInformation_BR1_M_exceptionCode_BR
          AllowEdit           #No
          ElementPosition     #1533916890
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #exceptionCode_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalInformation_BR1_M_taxFiscalClassification_BR
          AllowEdit           #No
          ElementPosition     #1227133512
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #taxFiscalClassification_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FiscalInformation_BR1_TaxServiceCode_BR
          ElementPosition     #1840700268
          HierarchyParent     #FiscalInformation_BR
          DataSource          #PurchLine
          DataField           #TaxServiceCode_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FixedAssets_AssetBookId
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1342177275
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetBookId
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (fixedAssets_AssetId.valueStr())
            #    {
            #        AssetBook::lookupAssetBook(this, fixedAssets_AssetId.valueStr(), curext());
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FixedAssets_AssetGroup
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #805306365
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FixedAssets_AssetId
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1073741820
          HierarchyParent     #FixedAssets
          DataSource          #PurchLine
          DataField           #AssetId
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    AssetTable::lookupInvoiceAsset(this, curext());
            #}
          ENDSOURCE
          SOURCE #modified
            #//STF_InterfaceInfor    dev:Hruiz
            #public boolean modified()
            #{
            #    AssetTable  STF_AssetTable;
            #    AssetId     assetId;
            #    boolean ret;
            #
            #    ret = super();
            #
            #    /*assetId=this.text();
            #
            #    select * from STF_AssetTable
            #    where STF_AssetTable.AssetId==assetId;
            #
            #    info(STF_AssetTable.AssetId+ STF_AssetTable.Location);
            #    AssetTable_Location.text(STF_AssetTable.Location);
            #    AssetTable_Model.text(STF_AssetTable.Model);
            #    AssetTable_GuaranteeDate.dateValue(STF_AssetTable.GuaranteeDate);
            #    AssetTable_Notes.text(STF_AssetTable.Notes);
            #    //AssetTable_Department.value(STF_AssetTable.Department);
            #    AssetTable_Make.text(STF_AssetTable.Make);*/
            #
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Flow_DestinationProcessId
          AutoDeclaration     #Yes
          ElementPosition     #1252698790
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #DestinationProcessId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Flow_SourceProcessId
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #SourceProcessId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Flow_SubstanceId
          AutoDeclaration     #Yes
          ElementPosition     #715827880
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #SubstanceId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FlowId
          AllowEdit           #No
          ElementPosition     #357913940
          HierarchyParent     #Flow
          DataSource          #EMSPurchOrderFlowRelation
          DataField           #FlowId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTrade_CountryRegionName_RU
          ElementPosition     #1610612733
          HierarchyParent     #ForeignTrade_RU
          DataSource          #PurchLine_W
          DataField           #CountryRegionName_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTrade_InvoiceGTDId_RU
          ElementPosition     #1073741822
          HierarchyParent     #ForeignTrade_RU
          DataSource          #PurchLine_W
          DataField           #InvoiceGTDId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTradeForSubContracts_CountyOrigDe
          ElementPosition     #2013265918
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #CountyOrigDest
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTradeForSubContracts_StatProcId
          ElementPosition     #1610612734
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #StatProcId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ForeignTradeForSubContracts_TransactionC
          ElementPosition     #1073741823
          HierarchyParent     #ForeignTradeForSubContracts
          DataSource          #PurchLine
          DataField           #TransactionCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FSHSumLines_InventLocationId
          AutoDeclaration     #Yes
          ElementPosition     #805306365
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #InventLocationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FSHSumLines_ItemId
          ElementPosition     #536870910
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #ItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #FSHSumLines_PurchUnit
          ElementPosition     #1342177275
          HierarchyParent     #Grid1
          DataSource          #RetailSumLines
          DataField           #PurchUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #g1099Fields_Tax1099State
          ElementPosition     #1610612734
          HierarchyParent     #g1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099State
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #GSTInvoice_MY_M_editInvoiceType_MY
          AutoDeclaration     #Yes
          AllowEdit           #No
          HelpText            #@SYP4860685
          ElementPosition     #1073741822
          HierarchyParent     #GSTInvoice_MY
          DataSource          #PurchTable_W
          DataMethod          #editInvoiceType_MY
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #// <GMY>
            #public void lookup()
            #{
            #    TaxGSTDocInvoiceType_MY::construct(tableNum(PurchTable_W)).lookup(this);
            #}
            #// </GMY>
          ENDSOURCE
          SOURCE #modified
            #// <GMY>
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (ret)
            #    {
            #        element.updateDesignForGSTApprovalNumber_MY();
            #        purchTable_W_ds.refresh();
            #    }
            #
            #    return ret;
            #}
            #// </GMY>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderDeliveryAddress_DeliveryName
          ElementPosition     #1073741822
          HierarchyParent     #GroupAddressLeft
          MultiLine           #Yes
          DataSource          #PurchTable
          DataField           #DeliveryName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_Port
          ElementPosition     #1073741820
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #Port
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_StatProcId
          ElementPosition     #1342177275
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #StatProcId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_TransactionCode
          ElementPosition     #536870910
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #TransactionCode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderForeignTrade_Transport
          ElementPosition     #805306365
          HierarchyParent     #HeaderForeignTrade
          DataSource          #PurchTable
          DataField           #Transport
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderPurchTable_ContactPersonId
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #VendorHeader
          DataSource          #PurchTable
          DataField           #ContactPersonId
          PresenceIndicatorAllowed    #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderTitle
          AutoDeclaration     #Yes
          Width               #Column width
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #HeaderInfo
          Text                #Purchase order
          ViewEditMode        #View
          Style               #TitleField
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderViewDeliveryCNPJCPFNUM_BR
          ElementPosition     #1073741822
          HierarchyParent     #HeaderDlvAddressFiscalInformation_BR
          DataSource          #PurchTable
          DataMethod          #deliveryCNPJCPFNUM_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #HeaderViewDeliveryIENum_BR
          ElementPosition     #1610612733
          HierarchyParent     #HeaderDlvAddressFiscalInformation_BR
          DataSource          #PurchTable
          DataMethod          #deliveryIENum_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #interCompanyAllowIndirectCreationOrig
          AutoDeclaration     #Yes
          AllowEdit           #No
          AlignControl        #No
          ElementPosition     #1610612733
          HierarchyParent     #HeaderInterCompany
          MultiLine           #Yes
          ShowLabel           #No
          DataSource          #PurchTable
          DataMethod          #interCompanyAllowIndirectCreationOrig
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #interCompanyOriginDisplay
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #HeaderInterCompany
          DataSource          #PurchTable
          DataMethod          #interCompanyOriginDisplay
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventDim_WHSInventStatusId
          ElementPosition     #1968526675
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #InventStatusId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventDim_WHSLicensePlateId
          ElementPosition     #1610612734
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #LicensePlateId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Inventory_InventLocationId
          ElementPosition     #1610612733
          HierarchyParent     #StorageDimensions
          DataSource          #PurchTable
          DataField           #InventLocationId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Inventory_InventSiteId
          ElementPosition     #1073741822
          HierarchyParent     #StorageDimensions
          DataSource          #PurchTable
          DataField           #InventSiteId
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_inventBatchId
          ElementPosition     #536870910
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #inventBatchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventGtdId_RU
          ElementPosition     #1879048185
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #InventGtdId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventLocationId
          ElementPosition     #1073741823
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #InventLocationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventOwnerId_RU
          ElementPosition     #1610612730
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #InventOwnerId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventProfileId_RU
          ElementPosition     #1073741820
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #InventProfileId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_inventSerialId
          AutoDeclaration     #Yes
          ElementPosition     #805306365
          HierarchyParent     #TrackingDimesions
          DataSource          #InventDim
          DataField           #inventSerialId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_InventSiteId
          ElementPosition     #715827882
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #InventSiteId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_wMSLocationId
          ElementPosition     #1431655764
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #wMSLocationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InventoryDimensions_wMSPalletId
          ElementPosition     #1789569705
          HierarchyParent     #StorageDimensionsLine
          DataSource          #InventDim
          DataField           #wMSPalletId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #InvoicePostalAddress_Address
          ElementPosition     #1610612733
          HierarchyParent     #HeaderInvoiceAddress_TH
          DataSource          #InvoicePostalAddress
          DataField           #Address
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ispresupdescription
          ElementPosition     #741393163
          HierarchyParent     #STF_Presupuestos
          Label               #Descripción de la clave presupuestal
          DataSource          #PurchTable
          DataMethod          #ispresupdescription
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ispropietario
          ElementPosition     #1073741823
          HierarchyParent     #STF_Presupuestos
          Label               #Nombre del responsable
          DataSource          #PurchTable
          DataMethod          #ispropietario
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ItemName
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #678152730
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataMethod          #ItemName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Line1099Fields_Tax1099State
          ElementPosition     #1073741823
          HierarchyParent     #Line1099Fields
          DataSource          #PurchLine
          DataField           #Tax1099State
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineDeliveryAddress_Name
          ElementPosition     #1073741822
          HierarchyParent     #LineDeliveryAddress
          MultiLine           #Yes
          DataSource          #PurchLine
          DataField           #DeliveryName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineInventory_InventTransId
          ElementPosition     #1431655764
          HierarchyParent     #LineInventory
          DataSource          #PurchLine
          DataField           #InventTransId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineSalesTax_TaxGroup
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #LineSalesTax
          DataSource          #PurchLine
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineSalesTax_TaxItemGroup
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #LineSalesTax
          DataSource          #PurchLine
          DataField           #TaxItemGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineViewAddressDeliveryCNPJCPFNUM_BR
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #LineDlvAddressFiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #deliveryCNPJCPFNUM_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LineViewAddressDeliveryIENum_BR
          AllowEdit           #No
          ElementPosition     #1610612733
          HierarchyParent     #LineDlvAddressFiscalInformation_BR
          DataSource          #PurchLine
          DataMethod          #deliveryIENum_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadAccountNum
          ElementPosition     #1642193371
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadAccountNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadCarNumber
          ElementPosition     #1515870804
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadCarNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadOrderNum
          ElementPosition     #1768515938
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadOrderNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Loads
          AutoDeclaration     #Yes
          ElementPosition     #2147462654
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataMethod          #whsGetLoads
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadTractorNumber
          ElementPosition     #1263225670
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadTractorNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadTrailerNumber
          ElementPosition     #1389548237
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadTrailerNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LoadTypeId
          ElementPosition     #378967701
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #displayLoadTypeId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LogisticsPostalAddressHeader_Address
          ElementPosition     #1431655764
          HierarchyParent     #GroupaddressMid
          DataSource          #LogisticsPostalAddressHeader
          DataField           #Address
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LogisticsPostalAddressLine_Address
          ElementPosition     #1431655764
          HierarchyParent     #GroupLineDeliveryAddressRef
          DataSource          #LogisticsPostalAddressLine
          DataField           #Address
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #MCRDropShip_MCRDropShipComment
          ElementPosition     #1717986916
          HierarchyParent     #MCRDropShip
          DataSource          #PurchLine
          DataField           #MCRDropShipComment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #packageName
          AllowEdit           #No
          Width               #Column width
          Height              #Column height
          ElementPosition     #1789569705
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataMethod          #packageName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_Payment
          ElementPosition     #429496728
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #Payment
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_PaymentSched
          ElementPosition     #1288490184
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #PaymentSched
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Payment_PaymMode
          ElementPosition     #858993456
          HierarchyParent     #Payment
          DataSource          #PurchTable
          DataField           #PaymMode
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ProjectIdentification_ActivityNumber
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #ProjectIdentification
          DataSource          #PurchLine
          DataField           #ActivityNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ProjectIdentification_ProjId
          ElementPosition     #613566756
          HierarchyParent     #ProjectIdentification
          DataSource          #PurchLine
          DataField           #ProjId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #    RecId   projRecId, smmActivityParentLink;
            #    str     currentActivityNumber;
            #
            #    ret = super();
            #
            #    if (isConfigurationkeyEnabled(configurationKeyNum(PSAPwp)))
            #    {
            #        if (ProjTable::setFieldPwpThresholdPercent(ProjTable::find(purchLine.ProjId)))
            #        {
            #            purchLine_IsPwp.visible(true);
            #            psaPwpPercent.visible(true);
            #        }
            #        else
            #        {
            #            purchLine_IsPwp.visible(false);
            #            psaPwpPercent.visible(false);
            #        }
            #    }
            #
            #    currentActivityNumber = projectIdentification_ActivityNumber.text();
            #    if (currentActivityNumber != '')
            #    {
            #        //validate activity is associated to Project
            #        projRecId = ProjTable::find(purchLine.ProjId).RecId;
            #        smmActivityParentLink = smmActivityParentLinkTable::find(currentActivityNumber, smmActivityParentType::Project, projRecId).RecId;
            #
            #        // Clear activity number if it's no longer a valid
            #        // combination with the new project ID
            #        if (smmActivityParentLink == 0)
            #        {
            #            purchLine.ActivityNumber = '';
            #            projectIdentification_ActivityNumber.update();
            #        }
            #    }
            #
            #    return ret;
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ProjectIdentification_ProjLinePropertyId
          ElementPosition     #1840700268
          HierarchyParent     #ProjectIdentification
          DataSource          #PurchLine
          DataField           #ProjLinePropertyId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    if (isConfigurationkeyEnabled(configurationKeyNum(Project3)))
            #    {
            #        element.setIsPwpField();
            #    }
            #
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ExternalItemId
          Width               #Column width
          ElementPosition     #1431655764
          HierarchyParent     #GeneralReference
          DataSource          #PurchLine
          DataField           #ExternalItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_IN_TaxWithholdAcknowledgementNumber
          ElementPosition     #1533916890
          HierarchyParent     #GroupWithholdingTax
          DataSource          #PurchLine_IN
          DataField           #TaxWithholdAcknowledgementNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ItemId
          AutoDeclaration     #Yes
          ElementPosition     #565127275
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #ItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ItemName
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1431655764
          HierarchyParent     #OrderLine
          DataSource          #PurchLine
          DataMethod          #ItemName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_Name
          Width               #Column width
          ElementPosition     #1789569705
          HierarchyParent     #OrderLine
          MultiLine           #Yes
          DataSource          #PurchLine
          DataField           #Name
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PDSCalculationId
          ElementPosition     #858993458
          HierarchyParent     #Potency
          DataSource          #PurchLine
          DataField           #PDSCalculationId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PdsCWUnitId
          ElementPosition     #1610612734
          HierarchyParent     #QtyUnitLine
          DataSource          #PurchLine
          DataMethod          #pdsCWUnitId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PostingProfile_RU
          ElementPosition     #1789569705
          HierarchyParent     #PostingLine
          DataSource          #PurchLine_W
          DataField           #PostingProfile_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PSARetainScheduleId
          AutoDeclaration     #Yes
          ElementPosition     #2147466238
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #PSARetainScheduleId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_PurchUnitGrid
          AutoDeclaration     #Yes
          ElementPosition     #1130254550
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #PurchUnit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ReqAttention
          ElementPosition     #1073741822
          HierarchyParent     #PurchLine_AttentionInfo
          DataSource          #PurchLine
          DataField           #ReqAttention
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_ServiceAddress
          ElementPosition     #1431655764
          HierarchyParent     #LineAddressDisplayForSubcontracts
          DataSource          #PurchLine
          DataField           #ServiceAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_VariantId
          ElementPosition     #847690912
          HierarchyParent     #LineSpec
          LabelAlignment      #Right
          DataSource          #PurchLine
          DataField           #VariantId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchLine_W_RefInvoiceId_MY
          ElementPosition     #2147480915
          HierarchyParent     #LineSpec
          DataSource          #PurchLine_W
          DataField           #RefInvoiceId_MY
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    element.performVendInvoiceJourLookup_MY(
            #        this,
            #        purchTable.OrderAccount);
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (ret)
            #    {
            #        if(this.text())
            #        {
            #            element.updateSourceRefControlsAfterLookup_MY();
            #        }
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchReq_M_getPurchReqItemName
          AllowEdit           #No
          ElementPosition     #1789569705
          HierarchyParent     #PurchReq
          Label               #@SYS4003944
          DataSource          #PurchLine
          DataMethod          #getPurchReqItemName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchReq_PurchReqId
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchReq
          DataSource          #PurchLine
          DataField           #PurchReqId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchRFQReplyLine_PurchRFQReplyRFQId
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #PurchRFQReplyLine
          DataSource          #PurchRFQReplyLinePurchLine
          DataField           #PurchRFQReplyRFQId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_CFPSId_BR
          ElementPosition     #1073741823
          HierarchyParent     #FiscalInformation
          DataSource          #PurchTable_BR
          DataField           #CFPSId_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ContactPersonId
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1789569705
          HierarchyParent     #Vendor
          DataSource          #PurchTable
          DataField           #ContactPersonId
          PresenceIndicatorAllowed    #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ContractNum_SA
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Zakat_SA
          DataSource          #PurchTable
          DataField           #ContractNum_SA
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_CurrencyCodeGrid
          ElementPosition     #1227133512
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_DlvModeGrid
          ElementPosition     #1533916890
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DlvMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_DlvTermGrid
          ElementPosition     #1687308579
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #DlvTerm
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_InvoiceAccount
          ElementPosition     #1073741823
          HierarchyParent     #Vendor
          DataSource          #PurchTable
          DataField           #InvoiceAccount
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_InvoiceAccountGrid
          ElementPosition     #613566756
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #InvoiceAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ISBudgetKeyId
          AutoDeclaration     #Yes
          ElementPosition     #409044504
          HierarchyParent     #STF_Presupuestos
          DataSource          #PurchTable
          DataField           #ISBudgetKeyId
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    /// BEGIN STF_MEGA_Presupuestos DEV: Eugenio Canales
            #    Query query = new Query();
            #    QueryBuildDataSource queryBuildDataSource;
            #    QueryBuildRange queryBuildRange;
            #    IsBudgetKeyId clave;
            #
            #    SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(STF_BudgetKeyIdUnion), this);
            #
            #    clave = this.text();
            #    clave = subStr(clave, 0, 2);
            #
            #    sysTableLookup.addLookupField(fieldNum(STF_BudgetKeyIdUnion, BudgetKeyId));
            #    sysTableLookup.addLookupField(fieldNum(STF_BudgetKeyIdUnion, Description));
            #
            #    queryBuildDataSource = query.addDataSource(tableNum(STF_BudgetKeyIdUnion));
            #
            #    queryBuildRange = queryBuildDataSource.addRange(fieldNum(STF_BudgetKeyIdUnion, BudgetKeyId));
            #    queryBuildRange.value(strFmt("%1*", clave));
            #
            #    sysTableLookup.parmQuery(query);
            #
            #    sysTableLookup.performFormLookup();
            #
            #    //super();
            #    /// END STF_MEGA_Presupuestos DEV: Eugenio Canales
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ItemBuyerGroupId
          AutoDeclaration     #Yes
          ElementPosition     #1457221045
          HierarchyParent     #STF_Presupuestos
          DataSource          #PurchTable
          DataField           #ItemBuyerGroupId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_OrderAccount
          ElementPosition     #1610612733
          HierarchyParent     #Account
          DataSource          #PurchTable
          DataField           #OrderAccount
          FastTabSummary      #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_OrderAccountAdv
          AutoDeclaration     #Yes
          ElementPosition     #460175067
          HierarchyParent     #Grid
          DataSource          #PurchTable
          DataField           #OrderAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ProjId
          ElementPosition     #1431655764
          HierarchyParent     #References
          DataSource          #PurchTable
          DataField           #ProjId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchId
          ElementPosition     #715827882
          HierarchyParent     #BaseInfo
          LookupButton        #Never
          DataSource          #PurchTable
          DataField           #PurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchIdAdvanced
          AutoDeclaration     #Yes
          ElementPosition     #306783378
          HierarchyParent     #Grid
          LookupButton        #Never
          DataSource          #PurchTable
          DataField           #PurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_PurchName
          ElementPosition     #1073741823
          HierarchyParent     #BaseInfo
          DataSource          #PurchTable
          DataField           #PurchName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_ServiceAddress1
          ElementPosition     #1073741823
          HierarchyParent     #HeaderAddressDisplayForSubcontracts
          DataSource          #PurchTable
          DataField           #ServiceAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PurchTable_TaxGroup
          ElementPosition     #715827882
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #RAssetPurchTrans_assetId
          ElementPosition     #477218586
          HierarchyParent     #GridAsset
          DataSource          #RAssetPurchTrans
          DataField           #AssetId
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    ;
            #    RAssetTable::lookupAccountNum(this, curext(), RAssetTransType::Acquisition);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #RBOPackagePurch_PackageId
          ElementPosition     #715827882
          HierarchyParent     #PackageGrid
          DataSource          #RetailPackagePurch
          DataField           #PackageId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ReductionEntryDocumentId
          AllowEdit           #No
          CountryRegionCodes  #JP
          HelpText            #@SYS4006142
          ConfigurationKey    #Asset
          ElementPosition     #1073741822
          HierarchyParent     #ReductionEntry_JP
          DataSource          #PurchLine
          DataMethod          #reductionEntryDocumentId_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Route
          ElementPosition     #757935402
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataMethod          #tmsDisplayRoute
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #SalesTax_EnterpriseNumber
          ElementPosition     #1789569705
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #EnterpriseNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #SalesTax_TaxPeriodPaymentCode_PL
          ElementPosition     #477218588
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #TaxPeriodPaymentCode_PL
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode
          ElementPosition     #1312351117
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode1
          Visible             #No
          ElementPosition     #1431655764
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode11
          Visible             #No
          ElementPosition     #1193046470
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #status_DocumentStatus
          ElementPosition     #805306365
          HierarchyParent     #status
          DataSource          #PurchTable
          DataMethod          #displayDocumentStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #STF_CFDI_UUID
          AllowEdit           #No
          ElementPosition     #2147482962
          HierarchyParent     #LineSpec
          Label               #@INZ72
          DataSource          #PurchLine
          DataField           #STF_UUID
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #STF_VATNum
          AllowEdit           #No
          ElementPosition     #2147480574
          HierarchyParent     #LineSpec
          DataSource          #PurchLine
          DataField           #STF_VATNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #StringEdit
          ElementPosition     #1802352345
          HierarchyParent     #STF_Presupuestos
          Label               #Descripción de conjunto de compradores
          DataSource          #PurchTable
          DataMethod          #isbuyergroupdescription
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_CarrierCode
          AutoDeclaration     #Yes
          ElementPosition     #613566756
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #CarrierCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_CarrierGroupCode
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #CarrierGroupCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    if (tmsPurchTable.RecId == 0)
            #    {
            #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
            #    }
            #
            #    ret = super();
            #
            #    element.enableTMSFields();
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_CarrierServiceCode
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #CarrierServiceCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    TMSCarrierService::lookupCarrierServiceCode(this, tmsPurchTable.CarrierCode);
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_ModeCode
          AutoDeclaration     #Yes
          ElementPosition     #1533916890
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #ModeCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TMSPurchTable_TransportationTemplateId
          AutoDeclaration     #Yes
          ElementPosition     #1840700268
          HierarchyParent     #TMSTransportation
          DataSource          #TMSPurchTable
          DataField           #TransportationTemplateId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    if (tmsPurchTable.RecId == 0)
            #    {
            #        tmsPurchTable.initFromPurchTable(purchTable.PurchId);
            #    }
            #
            #    ret = super();
            #
            #    element.enableTMSFields();
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VATNum
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #SalesTax
          DataSource          #PurchTable
          DataField           #VATNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #WHSLoadLine_LoadId
          ElementPosition     #252645134
          HierarchyParent     #GridLoads
          DataSource          #WHSLoadLine
          DataField           #LoadId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TREE
        PROPERTIES
          Name                #PackageTree
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #TreeGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #CreatedDateTime
          AllowEdit           #No
          Skip                #Yes
          HelpText            #@SYS69444
          ElementPosition     #1431655764
          HierarchyParent     #DateAndTimeLine
          DataSource          #PurchLine
          DataField           #createdDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #Flow_FromDateTime
          AutoDeclaration     #Yes
          ElementPosition     #1431655760
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #FromDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #Flow_ToDateTime
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #Flow
          DataSource          #EMSFlow
          DataField           #ToDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #PurchTable_CreatedDateTime
          AllowEdit           #No
          Skip                #Yes
          HelpText            #@SYS69424
          ElementPosition     #1431655764
          HierarchyParent     #DateAndTime
          DataSource          #PurchTable
          DataField           #createdDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #lineDeliveryType
          AutoDeclaration     #Yes
          AllowEdit           #No
          Width               #16
          Height              #16
          AlignControl        #No
          ElementPosition     #226050910
          HierarchyParent     #LineSpec
          Imagemode           #Size to fit
          Label               #@sys1201
          DataSource          #PurchLine
          DataMethod          #lineDeliveryTypeImage
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #public str toolTip()
            #{
            #    DictEnum    dictEnum = new DictEnum(enumNum(LineDeliveryType));
            #
            #    return dictEnum.label() + ': ' + dictEnum.value2Name(purchLine.LineDeliveryType);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #PurchLineBudgetCheckResult
          AutoDeclaration     #Yes
          PreviewPartRef      #BudgetCheckResultPreview
          HelpText            #@SYS128633
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #339076365
          HierarchyParent     #LineSpec
          Label               #@SYS342081
          DataSource          #PurchLine
          DataMethod          #displayBudgetCheckResult
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #PurchTableBudgetCheckResult
          AutoDeclaration     #Yes
          PreviewPartRef      #BudgetCheckResultPreview
          HelpText            #@SYS304309
          ConfigurationKey    #LedgerAdv2BudgetCtrl
          ElementPosition     #1476395002
          HierarchyParent     #status
          Label               #@SYS304310
          DataSource          #PurchTable
          DataMethod          #displayBudgetCheckResult
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
        CONTROL #Environment
          PROPERTIES
            Control             #Environment
            EffectiveAccess     #Update
          ENDPROPERTIES
          
        ENDCONTROL
        
      CONTROL #GroupFinancialDimensionHeader
        PROPERTIES
          Control             #GroupFinancialDimensionHeader
          EffectiveAccess     #Update
        ENDPROPERTIES
        
      ENDCONTROL
      
    CONTROL #GroupFinancialDimensionLine
      PROPERTIES
        Control             #GroupFinancialDimensionLine
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
  TABLE #BudgetSource
    PROPERTIES
      Table               #BudgetSource
      EffectiveAccess     #Read
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDTABLE
  
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Read
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #Environment
      PROPERTIES
        Control             #Environment
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
  CONTROL #GroupFinancialDimensionHeader
    PROPERTIES
      Control             #GroupFinancialDimensionHeader
      EffectiveAccess     #Update
    ENDPROPERTIES
    
  ENDCONTROL
  
CONTROL #GroupFinancialDimensionLine
  PROPERTIES
    Control             #GroupFinancialDimensionLine
    EffectiveAccess     #Update
  ENDPROPERTIES
  
ENDCONTROL

ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #Environment
      PROPERTIES
        Control             #Environment
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
  CONTROL #GroupFinancialDimensionHeader
    PROPERTIES
      Control             #GroupFinancialDimensionHeader
      EffectiveAccess     #Update
    ENDPROPERTIES
    
  ENDCONTROL
  
CONTROL #GroupFinancialDimensionLine
  PROPERTIES
    Control             #GroupFinancialDimensionLine
    EffectiveAccess     #Update
  ENDPROPERTIES
  
ENDCONTROL

ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #PurchCreateOrder
  PROPERTIES
    Form                #PurchCreateOrder
    AccessLevel         #Delete
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #Environment
      PROPERTIES
        Control             #Environment
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
  CONTROL #GroupFinancialDimensionHeader
    PROPERTIES
      Control             #GroupFinancialDimensionHeader
      EffectiveAccess     #Update
    ENDPROPERTIES
    
  ENDCONTROL
  
CONTROL #GroupFinancialDimensionLine
  PROPERTIES
    Control             #GroupFinancialDimensionLine
    EffectiveAccess     #Update
  ENDPROPERTIES
  
ENDCONTROL

ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #AgreementLinePrompt
    PROPERTIES
      Form                #AgreementLinePrompt
      AccessLevel         #Delete
      SystemManaged       #No
      ManagedBy           #CodeAnalysis
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ASSOCIATEDFORM #ConfigChooseFromRoute
  PROPERTIES
    Form                #ConfigChooseFromRoute
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #EcoResCategorySingleLookup
  PROPERTIES
    Form                #EcoResCategorySingleLookup
    AccessLevel         #Read
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ASSOCIATEDFORM #PurchCreateOrder
  PROPERTIES
    Form                #PurchCreateOrder
    AccessLevel         #Delete
    SystemManaged       #No
    ManagedBy           #Manual
  ENDPROPERTIES
  
ENDASSOCIATEDFORM

ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #STF_ElectronicInvoiceReferences
  PROPERTIES
    Name                #STF_ElectronicInvoiceReferences
    Origin              #{DDADE278-0387-4F67-9C9F-FCF564B7CC4E}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #//Project: STF_ElectronicAccounting   Developer: Arly Rubio C.  Date: July/22/2014
      #public class FormRun extends ObjectRun
      #{
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    STF_SATVerifyCFDIServiceAgent_References    cls_ServiceAgentReference;
      #    VendInvoiceJour                 vendInvoiceJour;
      #    ;
      #
      #    If(tablenum(VendInvoiceJour) == element.args().dataset())
      #    {
      #        cls_ServiceAgentReference = new STF_SATVerifyCFDIServiceAgent_References();
      #
      #        vendInvoiceJour = element.args().record();
      #        cls_ServiceAgentReference.CalculateVoucherInvoice(vendInvoiceJour.RecId);
      #    }
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #refreshData
      #void refreshData()
      #{
      #    ;
      #
      #    STF_ElectronicInvoiceReferences_ds.executeQuery();
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #STF_ElectronicInvoiceReferences
          Table               #STF_ElectronicInvoiceReferences
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD VATNum
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    STF_ElectronicInvoiceReferences::lookupVATNum(_formControl);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@FSA13
      TopMargin           #0
      BottomMargin        #0
      LeftMargin          #0
      RightMargin         #0
    ENDPROPERTIES
    
    CONTAINER
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridGrp
          DataSource          #STF_ElectronicInvoiceReferences
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Buttons
          ElementPosition     #1431655764
          HierarchyParent     #Overview
          FrameType           #None
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
          Columns             #8
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
              #0
              #0
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1789569705
          HierarchyParent     #Overview
          FrameType           #None
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Overview
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741823
          FrameType           #None
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          TopMargin           #10
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #Separator1
          Width               #1
          HelpText            #@SYS23213
          ElementPosition     #1431655764
          HierarchyParent     #Buttons
          Text                #@SYS23213
          Border              #None
          ColorScheme         #RGB
          BackgroundColor     #190 210 241
          ForegroundColor     #190 210 241
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #STF_ElectronicInvoiceReferences_ValidCFDI
          AllowEdit           #No
          ElementPosition     #1789569705
          HierarchyParent     #Grid
          BackgroundColor     #Window background
          DataSource          #STF_ElectronicInvoiceReferences
          DataField           #ValidCFDI
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteRecord
          ElementPosition     #1073741823
          HierarchyParent     #Buttons
          Text                #@SYS14425
          ButtonDisplay       #Text & Image left
          NormalImage         #1020
          ImageLocation       #EmbeddedResource
          Border              #None
          SaveRecord          #No
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #NewRecord
          ElementPosition     #715827882
          HierarchyParent     #Buttons
          Text                #@SYS5480
          ButtonDisplay       #Text & Image left
          NormalImage         #1085
          ImageLocation       #EmbeddedResource
          Border              #None
          ShowShortCut        #No
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LoadXMLFile
          ElementPosition     #1789569705
          HierarchyParent     #Buttons
          ButtonDisplay       #Text & Image left
          NormalImage         #795
          ImageLocation       #EmbeddedResource
          Border              #None
          MultiSelect         #No
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          MenuItemType        #Action
          MenuItemName        #STF_SATVerifyCFDIServiceAgent_References
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    STF_ElectronicInvoiceReferences_ds.write();
            #
            #    super();
            #
            #    STF_ElectronicInvoiceReferences_ds.reread();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #STF_ElectronicInvoiceReferences_InvoiceAmount
          ElementPosition     #1073741823
          HierarchyParent     #Grid
          DataSource          #STF_ElectronicInvoiceReferences
          DataField           #InvoiceAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #STF_ElectronicInvoiceReferences_UUID
          AllowEdit           #No
          ElementPosition     #1431655764
          HierarchyParent     #Grid
          DataSource          #STF_ElectronicInvoiceReferences
          DataField           #UUID
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #STF_ElectronicInvoiceReferences_VATNum
          ElementPosition     #715827882
          HierarchyParent     #Grid
          DataSource          #STF_ElectronicInvoiceReferences
          DataField           #VATNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #STF_EditBankAccountTrans
  PROPERTIES
    Name                #STF_EditBankAccountTrans
    Origin              #{A91EA44A-C441-43E0-AF7A-43544F11C68E}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #//Project: STF_ElectronicAccounting   Developer: Arly Rubio C.  Date: July/22/2014
      #public class FormRun extends ObjectRun
      #{
      #    LedgerJournalTrans  ledgerJournalTrans;
      #    boolean             isCustTrans;
      #    boolean             isVendTrans;
      #    Object              callerForm;
      #}
    ENDSOURCE
    SOURCE #closed
      #public boolean closed()
      #{
      #    FormRun formRun;
      #    boolean ret;
      #
      #    ttsbegin;
      #    ledgerJournalTrans.selectForUpdate();
      #    ledgerJournalTrans.BankTransType = BankAccountTrans_BankTransType.text();
      #    ledgerJournalTrans.CustVendBankAccountId = BankAccountTrans_STF_CustVendBankAccountId.text();
      #    ledgerJournalTrans.PaymReference = BankAccountTrans_Voucher.text();
      #    ledgerJournalTrans.update();
      #    ttscommit;
      #    formRun = element.args().caller();
      #    if(formRun)
      #    {
      #        formRun.dataSource().refresh();
      #        formRun.dataSource().reread();
      #        formRun.dataSource().research();
      #    }
      #    ret = super();
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #init
      #public void init()
      #{
      #    ;
      #
      #    isCustTrans = false;
      #    isVendTrans = false;
      #
      #    super();
      #
      #    if (!element.args() || !element.args().caller())
      #        throw error("@FSA221");
      #
      #    ledgerJournalTrans = element.args().record();
      #
      #    if (SysDictClass::is(element.args().caller(), classnum(FormRun)))
      #    {
      #        callerForm = element.args().caller();
      #
      #        if (callerForm.name() == formstr(LedgerJournalTransVendPaym))
      #            isVendTrans = true;
      #
      #        if (callerForm.name() == formstr(LedgerJournalTransCustPaym))
      #            isCustTrans = true;
      #    }
      #}
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #BankAccountTrans
          Table               #BankAccountTrans
          AllowCreate         #No
          AllowDelete         #No
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD TransDate
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Voucher
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD LedgerTransType
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountId
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountCur
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountMST
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CurrencyCode
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountStatement
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountStatementDate
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymentMode
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DepositNum
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Reconciled
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Included
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountCorrect
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Manual
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Txt
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Cancel
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankTransCurrencyCode
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankTransAmountCur
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxGroup
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxItemGroup
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AcknowledgementDate
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD STF_CustVendBankAccountId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    STF_SATVerifyCFDIServiceAgent_References::lookupCustVendBankAccount(_formControl, ledgerJournalTrans, isCustTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    ;
          #
          #    this.query().dataSourceTable(tableNum(BankAccountTrans)).clearRanges();
          #
          #    if (ledgerJournalTrans.RecId)
          #    {
          #        this.query().dataSourceTable(tableNum(BankAccountTrans)).addRange(fieldNum(BankAccountTrans, Voucher)).value(queryValue(ledgerJournalTrans.Voucher));
          #        this.query().dataSourceTable(tableNum(BankAccountTrans)).addRange(fieldNum(BankAccountTrans, TransDate)).value(queryValue(ledgerJournalTrans.TransDate));
          #    }
          #
          #
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@FSA13
      TopMargin           #0
      BottomMargin        #0
      LeftMargin          #0
      RightMargin         #0
    ENDPROPERTIES
    
    CONTAINER
      CONTROL GRID
        PROPERTIES
          Name                #Grid
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #GridGrp
          DataSource          #BankAccountTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Buttons
          ElementPosition     #1073741822
          HierarchyParent     #Overview
          FrameType           #None
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
          Columns             #8
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
              #0
              #0
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GridGrp
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #Overview
          FrameType           #None
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          TopMargin           #0
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Overview
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741823
          FrameType           #None
          ColorScheme         #RGB
          BackgroundColor     #255 255 255
          TopMargin           #10
          BottomMargin        #0
          LeftMargin          #0
          RightMargin         #0
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #BankAccountTrans_TransDate
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #Grid
          DataSource          #BankAccountTrans
          DataField           #TransDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankAccountTrans_BankTransType
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #Grid
          DataSource          #BankAccountTrans
          DataField           #BankTransType
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    FormRun formRun;
            #    boolean ret;
            #
            #    ret = super();
            #    ttsbegin;
            #    ledgerJournalTrans.selectForUpdate();
            #    if(BankAccountTrans_BankTransType.text())
            #        ledgerJournalTrans.BankTransType = BankAccountTrans_BankTransType.text();
            #    if(BankAccountTrans_STF_CustVendBankAccountId.text())
            #        ledgerJournalTrans.CustVendBankAccountId = BankAccountTrans_STF_CustVendBankAccountId.text();
            #    if(BankAccountTrans_Voucher.text())
            #        ledgerJournalTrans.PaymReference = BankAccountTrans_Voucher.text();
            #    ledgerJournalTrans.update();
            #    ttscommit;
            #    formRun = element.args().caller();
            #    if(formRun)
            #    {
            #        formRun.dataSource().refresh();
            #        formRun.dataSource().reread();
            #        formRun.dataSource().research();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankAccountTrans_STF_CustVendBankAccountId
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #Grid
          DataSource          #BankAccountTrans
          DataField           #STF_CustVendBankAccountId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    FormRun formRun;
            #    boolean ret;
            #
            #    ret = super();
            #    ttsbegin;
            #    ledgerJournalTrans.selectForUpdate();
            #    if(BankAccountTrans_BankTransType.text())
            #        ledgerJournalTrans.BankTransType = BankAccountTrans_BankTransType.text();
            #    if(BankAccountTrans_STF_CustVendBankAccountId.text())
            #        ledgerJournalTrans.CustVendBankAccountId = BankAccountTrans_STF_CustVendBankAccountId.text();
            #    if(BankAccountTrans_Voucher.text())
            #        ledgerJournalTrans.PaymReference = BankAccountTrans_Voucher.text();
            #    ledgerJournalTrans.update();
            #    ttscommit;
            #    formRun = element.args().caller();
            #    if(formRun)
            #    {
            #        formRun.dataSource().refresh();
            #        formRun.dataSource().reread();
            #        formRun.dataSource().research();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankAccountTrans_Voucher
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #Grid
          DataSource          #BankAccountTrans
          DataField           #Voucher
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    FormRun formRun;
            #    boolean ret;
            #
            #    ret = super();
            #    ttsbegin;
            #    ledgerJournalTrans.selectForUpdate();
            #    if(BankAccountTrans_BankTransType.text())
            #        ledgerJournalTrans.BankTransType = BankAccountTrans_BankTransType.text();
            #    if(BankAccountTrans_STF_CustVendBankAccountId.text())
            #        ledgerJournalTrans.CustVendBankAccountId = BankAccountTrans_STF_CustVendBankAccountId.text();
            #    if(BankAccountTrans_Voucher.text())
            #        ledgerJournalTrans.PaymReference = BankAccountTrans_Voucher.text();
            #    ledgerJournalTrans.update();
            #    ttscommit;
            #    formRun = element.args().caller();
            #    if(formRun)
            #    {
            #        formRun.dataSource().refresh();
            #        formRun.dataSource().reread();
            #        formRun.dataSource().research();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #LedgerJournalTransVendPaym
  PROPERTIES
    Name                #LedgerJournalTransVendPaym
    Origin              #{A28D04E2-BB5B-459F-939E-9718118A8E5A}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #class FormRun extends ObjectRun
      #{
      #    #isoCountryRegionCodes
      #    LedgerJournalTable                  ledgerJournalTable;
      #    QueryBuildRange                     ledgerJournalTransRange;
      #    LedgerJournalEngine                 ledgerJournalEngine;
      #    LedgerJournalCheckPostResults       postingResults_Client;
      #    LogisticsLocationRecId              postalAddressLocation;
      #    LedgerJournalFormTrans_Payment      journalFormTrans;
      #
      #    DebCredProposal                     debCredProposal;
      #    DebCredProposal                     debCredProposalOld;
      #
      #    LedgerJournalId                     journalNum;
      #
      #    ImageListAppl_LedgerJournal         imageListAppl;
      #
      #    Map                                 childForms;
      #
      #    Map                                 remitteeCurrencyMap;
      #
      #    LedgerJournalTransEntityManager     ledgerJournalTransEntityManager; // Used to manage entity-related tasks like in-memory rollbacks for aborted transactions.
      #
      #    DimensionDynamicAccountController   dimAccountController;
      #    DimensionDynamicAccountController   dimOffsetAccountController;
      #    DimensionDynamicAccountController   dimPaymentFeeAccountController;
      #    RecId                               currentMainAccountId;
      #    RecId                               currentOffsetMainAccountId;
      #    RecId                               currentPaymentFeeMainAccountId;
      #    LedgerJournalACType                 priorOffsetAccountType;
      #
      #    // <GCN>
      #    LedgerChineseVoucherEnabled_CN      chineseVoucher_CN;
      #    #ISOCountryRegionCodes
      #    // </GCN>
      #    // <GEECZ>
      #    boolean                             countryRegion_CZ;
      #    // </GEECZ>
      #    // <GEEU>
      #    boolean                             countryRegion_EasternEurope;
      #    // </GEEU>
      #    // <GEERU>
      #    boolean                             countryRegion_RU;
      #    // </GEERU>
      #    boolean                             postDatedCheckEnabled;
      #
      #    BankLCImportLineNumController       bankLCImportLineNumController;
      #    //<GIN>
      #    TaxParameters   taxParametersLoc;
      #    //</GIN>
      #    // <GTH>
      #    boolean                             taxWithholdEnabledTH;
      #    // </GTH>
      #
      #    //BEGIN DEV:BL  STF_CrossPayment
      #    container vendOpenTrans;
      #    SpecTrans specTrans;
      #    real      newExcRate;
      #    //END DEV:BL  STF_CrossPayment
      #}
    ENDSOURCE
    SOURCE #accountNumModifiedPost
      #/// <summary>
      #/// Updates the form when the account number field is modified.
      #/// </summary>
      #public void accountNumModifiedPost()
      #{
      #    changecompany(ledgerJournalTrans.Company)
      #    {
      #        debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
      #        element.setDebCredProposal(false);
      #
      #        if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
      #        {
      #            ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
      #            element.enableDepreciationStartDate();
      #        }
      #        // <GEECZ>
      #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
      #        {
      #            LedgerJournalTransSymbol.initFromLedgerJournalTransVend(ledgerJournalTrans);
      #            LedgerJournalTrans_DS.refresh();
      #            LedgerJournalTransSymbol_DS.forceWrite(true);
      #        }
      #        // </GEECZ>
      #
      #        // <GJP>
      #        //update the payment fee
      #        this.updatePaymentFee_JP();
      #        // </GJP>
      #    }
      #}
    ENDSOURCE
    SOURCE #activate
      #/// <summary>
      #/// Handles the event that fires when focus is given to the form.
      #/// </summary>
      #/// <param name="_active">
      #/// true if active; otherwise, false.
      #/// </param>
      #public void activate(boolean _active)
      #{
      #    ;
      #
      #    super(_active);
      #
      #    journalFormTrans.manageEditingModeForApprovedWFApproval();
      #
      #    //<GIN>
      #    if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
      #    {
      #        element.setVisible_IN();
      #    }
      #    //</GIN>
      #}
    ENDSOURCE
    SOURCE #addChildForm
      #public void addChildForm(FormRun _childForm)
      #{
      #    ;
      #    childForms.insert(_childForm.hWnd(), _childForm);
      #}
      #
    ENDSOURCE
    SOURCE #bookRefresh
      #void bookRefresh(boolean _isClosing = false)
      #{
      #    FormRun callerForm = element.args().caller();
      #
      #    if (callerForm)
      #    {
      #        callerForm.bookRefresh();
      #    }
      #
      #    if (!_isClosing)
      #    {
      #        ledgerJournalTrans_ds.reread();
      #    }
      #}
    ENDSOURCE
    SOURCE #canClose
      #public boolean canClose()
      #{
      #    boolean         canClose;
      #    FormRun         formRun;
      #    MapEnumerator   childFormEnumerator;
      #    ;
      #
      #    try
      #    {
      #        // Signal that the close event is beginning.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().beginFormCloseEvent();
      #
      #        canClose = super();
      #
      #        childFormEnumerator = childForms.getEnumerator();
      #
      #        while (childFormEnumerator.moveNext())
      #        {
      #            formRun = childFormEnumerator.currentValue();
      #            if (!formRun.closed())
      #            {
      #                canClose = checkFailed(strFmt("@SYS89025", formRun.design().caption()));
      #
      #            }
      #        }
      #
      #        // Signal that the close event is finished.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
      #    }
      #    catch (Exception::UpdateConflict)
      #    {
      #        // This exception should not be handled by the generic handling logic below.
      #
      #        // Signal that the close event is finished.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
      #
      #        // Chain the exception forward.
      #        throw Exception::UpdateConflict;
      #    }
      #    catch
      #    {
      #        // Signal that the close event is finished.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
      #
      #        // Chain the exception forward.
      #        throw Exception::Error;
      #    }
      #
      #    return canClose;
      #}
    ENDSOURCE
    SOURCE #close
      #void close()
      #{
      #    ledgerJournalEngine.close();
      #    ledgerJournalEngine.formMethodClosePre();
      #    journalFormTrans.formClosePre();
      #    element.bookRefresh(true);
      #
      #    super();
      #}
    ENDSOURCE
    SOURCE #configureLineStatusButton_BR
      #// <GBR>
      #void configureLineStatusButton_BR()
      #{
      #    boolean                 canClose;
      #    boolean                 canReopen;
      #
      #    canClose  = ledgerJournalTrans.canCloseTaxWithholdEditStatus_BR();
      #    canReopen = ledgerJournalTrans.canReopenTaxWithholdEditStatus_BR();
      #
      #    TaxWithholdLineStatusMenuButton.enabled(canClose || canReopen);
      #    TaxWithholdClosePaymlLine_BR.enabled(canClose);
      #    TaxWithholdReopenPaymlLine_BR.enabled(canReopen);
      #}
      #// </GBR>
    ENDSOURCE
    SOURCE #editBankAgreementExt_RU
      #// BP Deviation documented
      #edit PurchAgreementId editBankAgreementExt_RU(boolean _set, PurchAgreementId _value)
      #{
      #    PurchAgreementId ret;
      #    boolean          hasTransferLog = bankCurrencyTransferLog_RU.RecId != 0;
      #
      #    if (_set && ! hasTransferLog)
      #    {
      #        ledgerJournalTrans.BankAgreementExt_RU = AgreementHeaderExt_RU::findByAgreementId(_value).RecId;
      #    }
      #    else
      #    {
      #        if (hasTransferLog)
      #        {
      #            ret = AgreementHeaderExt_RU::find(bankCurrencyTransferLog_RU.AgreementHeaderExt).AgreementId;
      #        }
      #        else
      #        {
      #            ret = AgreementHeaderExt_RU::find(ledgerJournalTrans.BankAgreementExt_RU).AgreementId;
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #editBankCommAccountId_RU
      #// BP Deviation documented
      #edit CompanyBankAccountId editBankCommAccountId_RU(boolean _set, CompanyBankAccountId _value)
      #{
      #    CompanyBankAccountId   ret;
      #    boolean                hasTransferLog = bankCurrencyTransferLog_RU.RecId != 0;
      #
      #    if (_set && ! hasTransferLog)
      #    {
      #        ledgerJournalTrans.BankCommAccountId_RU = _value;
      #    }
      #    else
      #    {
      #        if (hasTransferLog)
      #        {
      #            ret = bankCurrencyTransferLog_RU.CommissionBankId;
      #        }
      #        else
      #        {
      #            ret = ledgerJournalTrans.BankCommAccountId_RU;
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #editBankCurrencyDealCourse_RU
      #// BP Deviation documented
      #edit BankCurrencyDealCourse_RU editBankCurrencyDealCourse_RU(boolean _set, BankCurrencyDealCourse_RU _value)
      #{
      #    BankCurrencyDealCourse_RU   ret;
      #    boolean                     hasTransferLog = bankCurrencyTransferLog_RU.RecId != 0;
      #
      #
      #    if (_set && ! hasTransferLog)
      #    {
      #        ledgerJournalTrans.BankCurrencyDealCourse_RU = _value;
      #    }
      #    else
      #    {
      #        if (hasTransferLog)
      #        {
      #            ret = bankCurrencyTransferLog_RU.BankCurrencyDealCourse;
      #        }
      #        else
      #        {
      #            ret = ledgerJournalTrans.BankCurrencyDealCourse_RU;
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #editBankRespWorkerId_RU
      #// BP Deviation documented
      #edit HcmPersonnelNumberId_RU editBankRespWorkerId_RU(boolean _set, HcmPersonnelNumberId_RU _value)
      #{
      #    HcmPersonnelNumberId_RU ret;
      #    boolean                 hasTransferLog = bankCurrencyTransferLog_RU.RecId != 0;
      #
      #    if (_set && ! hasTransferLog)
      #    {
      #        ledgerJournalTrans.BankRespWorkerId_RU = HcmWorker::findByPersonnelNumber(_value).RecId;
      #    }
      #    else
      #    {
      #        if (hasTransferLog)
      #        {
      #            ret = HcmWorker::find(bankCurrencyTransferLog_RU.ResponsibleWorker).PersonnelNumber;
      #        }
      #        else
      #        {
      #            ret = HcmWorker::find(ledgerJournalTrans.BankRespWorkerId_RU).PersonnelNumber;
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #editBankSpecAccountId_RU
      #// BP Deviation documented
      #edit CompanyBankAccountId editBankSpecAccountId_RU(boolean _set, CompanyBankAccountId _value)
      #{
      #    CompanyBankAccountId   ret;
      #    boolean                hasTransferLog = bankCurrencyTransferLog_RU.RecId != 0;
      #
      #    if (_set && ! hasTransferLog)
      #    {
      #
      #        ledgerJournalTrans.BankSpecAccountId_RU = _value;
      #        if (_value && !ledgerJournalTrans.validateSpecBankAccountId_RU())
      #            ledgerJournalTrans.BankSpecAccountId_RU = '';
      #    }
      #    else
      #    {
      #        if (hasTransferLog)
      #        {
      #            ret = bankCurrencyTransferLog_RU.BankSpecAccountId;
      #        }
      #        else
      #        {
      #            ret = ledgerJournalTrans.BankSpecAccountId_RU;
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #editBankTransferCurrency_RU
      #// BP Deviation documented
      #edit CurrencyCode editBankTransferCurrency_RU(boolean _set, CurrencyCode _value)
      #{
      #    CurrencyCode    ret;
      #    boolean         hasTransferLog = bankCurrencyTransferLog_RU.RecId != 0;
      #
      #    if (_set && ! hasTransferLog)
      #    {
      #        ret = ledgerJournalTrans.TransferCurrency_RU;
      #
      #        ledgerJournalTrans.TransferCurrency_RU = _value;
      #        if (! ledgerJournalTrans.validateField(fieldNum(LedgerJournalTrans, TransferCurrency_RU)))
      #        {
      #            ledgerJournalTrans.TransferCurrency_RU = ret;
      #        }
      #    }
      #    else
      #    {
      #        if (hasTransferLog)
      #        {
      #            ret = bankCurrencyTransferLog_RU.TransferCurrency;
      #        }
      #        else
      #        {
      #            ret = ledgerJournalTrans.TransferCurrency_RU;
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #editBankVendAccountId_RU
      #// BP Deviation documented
      #edit VendAccount editBankVendAccountId_RU(boolean _set, VendAccount _value)
      #{
      #    VendAccount   ret;
      #    boolean       hasTransferLog = bankCurrencyTransferLog_RU.RecId != 0;
      #
      #    if (_set && ! hasTransferLog)
      #    {
      #        ledgerJournalTrans.BankVendAccountId_RU = _value;
      #    }
      #    else
      #    {
      #        if (hasTransferLog)
      #        {
      #            ret = bankCurrencyTransferLog_RU.VendDealAccount;
      #        }
      #        else
      #        {
      #            ret = ledgerJournalTrans.BankVendAccountId_RU;
      #        }
      #    }
      #
      #    return ret;
      #}
    ENDSOURCE
    SOURCE #enableButtonsActive
      #/// <summary>
      #/// Enables and disables various buttons.
      #/// </summary>
      #public void enableButtonsActive()
      #{
      #    boolean enabled, paymentStatusEnabled;
      #    ;
      #
      #    enabled = journalFormTrans.isJournalEnabled();
      #
      #    ledgerJournalPrintOutInvoice_Vend.enabled(enabled && ledgerJournalTrans.Prepayment);
      #
      #    if (journalFormTrans.parmIsActiveWFApprovalDocument())
      #    {
      #        buttonPaymProposal.enabled(enabled && journalFormTrans.parmIsUIElementWFApprovalEnabled());
      #        paymentStatusEnabled = enabled && journalFormTrans.parmIsPayStatusButtonAvailForWFApproval();
      #    }
      #    else
      #    {
      #        buttonPaymProposal.enabled(enabled);
      #        enabled = enabled && ledgerJournalEngine.approved();
      #        paymentStatusEnabled = enabled;
      #    }
      #
      #    buttonPaymReconciliation.enabled(paymentStatusEnabled);
      #
      #    // <GEERU>
      #    enabled = enabled && !ledgerJournalTrans.BankChequeNum
      #              && ! ledgerJournalTrans.BankCurrencyTransferLog_RU;
      #    // </GEERU>
      #
      #    paymReconciliationNone.enabled(enabled);
      #    paymReconciliationConfirm.enabled(enabled);
      #    paymReconciliationRecieved.enabled(enabled);
      #    paymReconciliationSent.enabled(enabled);
      #
      #    if (postDatedCheckEnabled)
      #    {
      #        printIssueReceipt.enabled(CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans));
      #    }
      #
      #
      #    // <GEEU>
      #    element.enableButtonsActive_CZ();
      #    // </GEEU>
      #    // <GEERU>
      #    element.enableButtonsActive_RU();
      #    // </GEERU>
      #    // <GEECZ>
      #    if (countryRegion_CZ)
      #    {
      #        element.enableButtonsActive_CZ();
      #    }
      #    // </GEECZ>
      #    // <GEEU>
      #    if (countryRegion_EasternEurope || countryRegion_RU)
      #    {
      #        ledgerJournalPreview.enabled(ledgerJournalEngine.posted());
      #        ledgerJournalVoucherPreview.enabled(ledgerJournalEngine.posted());
      #    }
      #    // </GEEU>
      #}
      #
    ENDSOURCE
    SOURCE #enableButtonsActive_CZ
      #void enableButtonsActive_CZ()
      #{
      #    boolean taxDocumentCreate = ledgerJournalEngine.taxDocumentCreateButton_CZ(ledgerJournalTrans);
      #
      #    czTaxDocumentCreate_Vend.enabled(taxDocumentCreate);
      #
      #    if (taxDocumentCreate && ! buttonFunctions.enabled())
      #    {
      #        buttonFunctions.enabled(true);
      #
      #        // disable all active buttons under 'buttonFunctions'
      #        buttonCreatePayment.enabled(false);
      #    }
      #    advanceInvoiceLink_CZ.enabled(ledgerJournalTrans.Prepayment);
      #}
    ENDSOURCE
    SOURCE #enableButtonsActive_RU
      #// <GEERU>
      #void enableButtonsActive_RU()
      #{
      #    boolean         paymentJourExists;
      #    BankTransType   bankTransType;
      #
      #    if (!countryRegion_RU)
      #        return;
      #
      #    bankTransType = BankTransType::find(ledgerJournalTrans.BankTransType);
      #
      #    paymentJourExists = ledgerJournalTrans.existBankPaymentOrderJour_RU();
      #
      #    deleteVendOutPayment.enabled(! ledgerJournalEngine.posted() &&
      #                                    (paymentJourExists || BankCurrencyTransferLog_RU::existByLedgerTrans(ledgerJournalTrans)));
      #
      #    custVendOutPaymReport_RU.enabled(ledgerJournalTrans.BankChequeNum != '' && paymentJourExists);
      #    printPurchaseCurrencyOrder_RU.enabled(ledgerJournalTrans.BankCurrencyTransferLog_RU != 0 &&
      #                                            (!bankTransType                                                            ||
      #                                            bankTransType.BankAdvancedTransType_RU == BankAdvancedTransType_RU::None ||
      #                                            bankTransType.BankAdvancedTransType_RU == BankAdvancedTransType_RU::CurrBuy));
      #
      #    printSellCurrencyOrder_RU.enabled(ledgerJournalTrans.BankCurrencyTransferLog_RU != 0 &&
      #                                        bankTransType.BankAdvancedTransType_RU        == BankAdvancedTransType_RU::CurrSell);
      #
      #    taxCode.visible(ledgerJournalTrans.vatTaxAgentVendAccount_RU != '' &&
      #                    ledgerJournalTrans.AccountType               == LedgerJournalACType::Vend);
      #    vatTaxAgentCreatePayment_RU.enabled(ledgerJournalTrans.Prepayment &&
      #                                        VendTable::find(ledgerJournalTrans.parmAccount()).vatTaxAgent_RU);
      #    vatInPaymentButton.enabled(! VendTable::find(ledgerJournalTrans.parmAccount()).vatTaxAgent_RU ||
      #                                ! ledgerJournalTrans.Prepayment);
      #
      #    commissionTrade_RU.visible(ledgerJournalTrans.Prepayment);
      #}
      #// </GEERU>
    ENDSOURCE
    SOURCE #enableDepreciationStartDate
      #//
      #// This method enables or disables the depreciation start date control.
      #//
      #
      #void enableDepreciationStartDate()
      #{
      #    AssetBook assetBook;
      #    ;
      #
      #    assetBook = AssetBook::find(ledgerJournalTrans.getAssetId(), ledgerJournalTrans_Asset.BookId);
      #
      #    if (assetBook &&
      #        (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::Acquisition || ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::AcquisitionAdj) &&
      #        !assetBook.depreciationStarted() &&
      #        assetBook.DepreciationConvention == AssetDepreciationConvention::None)
      #    {
      #        depreciationStartDate.enabled(true);
      #    }
      #    else
      #    {
      #        depreciationStartDate.enabled(false);
      #    }
      #}
      #
      #
    ENDSOURCE
    SOURCE #enablePostDatedChecksTab
      #public void enablePostDatedChecksTab()
      #{
      #    if(postDatedCheckEnabled)
      #    {
      #        vendPDCRegister_ds.allowEdit(true);
      #        pdc.visible(true);
      #    }
      #    else
      #    {
      #        vendPDCRegister_ds.allowEdit(false);
      #        pdc.visible(false);
      #        printIssueReceipt.visible(false);
      #    }
      #
      #}
    ENDSOURCE
    SOURCE #enableReplacementFields
      #public void enableReplacementFields()
      #{
      #    if(vendPDCRegister.IsReplacementCheck)
      #    {
      #        replacement_Comments.allowEdit(true);
      #        replacement_OriginalCheck.allowEdit(true);
      #    }
      #    else
      #    {
      #        replacement_Comments.allowEdit(false);
      #        replacement_OriginalCheck.allowEdit(false);
      #    }
      #
      #}
      #
    ENDSOURCE
    SOURCE #enableUpdatePLA_IN
      #//<GIN>
      #void enableUpdatePLA_IN()
      #{
      #    ChallanInformation_IN   challanInformation;
      #
      #    select challanInformation
      #        where challanInformation.SourceRecID == ledgerJournalTrans.RecId;
      #    if(challanInformation)
      #    {
      #        if(challanInformation.TaxType == TaxTypeComponent_IN::Excise)
      #        {
      #            updatePLA.enabled(true);
      #        }
      #        else
      #        {
      #            updatePLA.enabled(false);
      #        }
      #    }
      #    else
      #    {
      #        updatePLA.enabled(false);
      #    }
      #}
      #//</GIN>
      #
    ENDSOURCE
    SOURCE #firstField
      #void firstField(int flags=1)
      #{
      #    ;
      #    overviewGrid.setFocus();
      #}
    ENDSOURCE
    SOURCE #getShowTax
      #public Tax getShowTax()
      #{
      #    ;
      #    return ledgerJournalEngine.getShowTax(ledgerJournalTrans);
      #}
    ENDSOURCE
    SOURCE #getShowWithholdTax_IN
      #// <GIN>
      #public TaxWithholdJournal_IN getShowWithholdTax_IN()
      #{
      #    return ledgerJournalEngine.getShowWithholdTax_IN(ledgerJournalTrans);
      #}
      #// </GIN>
      #
    ENDSOURCE
    SOURCE #init
      #/// <summary>
      #/// Performs the basic initialization of the form.
      #/// </summary>
      #public void init()
      #{
      #    // <GCN>
      #    boolean         allow;
      #    // </GCN>
      #    // <GCN>
      #    chineseVoucher_CN = LedgerParameters::isChineseVoucher_CN();
      #    // </GCN>
      #    // <GEECZ>
      #    countryRegion_CZ = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]);
      #    // </GEECZ>
      #    // <GEEU>
      #    countryRegion_EasternEurope = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL]);
      #    // </GEEU>
      #    // <GEERU>
      #    countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
      #    // </GEERU>
      #
      #    // <GTH>
      #    taxWithholdEnabledTH = TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled();
      #    // </GTH>
      #
      #    childForms = new Map(Types::Integer, Types::Class);
      #
      #    remitteeCurrencyMap = new Map(Types::Container, Types::Integer);
      #
      #    journalFormTrans = new LedgerJournalFormTrans_Payment(element);
      #
      #    super();
      #    FormSecurity::setFormDataSourceMaxAccessRight(this);
      #
      #    dimAccountController = DimensionDynamicAccountController::construct(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType));
      #    dimOffsetAccountController = DimensionDynamicAccountController::construct(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType));
      #    dimPaymentFeeAccountController = DimensionDynamicAccountController::construct(custVendPaymJournalFee_ds, fieldStr(CustVendPaymJournalFee, LedgerDimension), fieldStr(CustVendPaymJournalFee, LedgerJournalACType));
      #
      #    dimAccountController.parmDimensionAutocompleteFilter(
      #        new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
      #    dimOffsetAccountController.parmDimensionAutocompleteFilter(
      #        new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
      #
      #    dimAccountController.parmDimensionAccountStorageUsage(DimensionAccountStorageUsage::Transactional);
      #    dimOffsetAccountController.parmDimensionAccountStorageUsage(DimensionAccountStorageUsage::Transactional);
      #    dimPaymentFeeAccountController.parmDimensionAccountStorageUsage(DimensionAccountStorageUsage::Transactional);
      #
      #    dimAccountController.parmPostingType(LedgerPostingType::LedgerJournal);
      #    dimOffsetAccountController.parmPostingType(LedgerPostingType::LedgerJournal);
      #    dimPaymentFeeAccountController.parmPostingType(LedgerPostingType::LedgerJournal);
      #    //begin STF_InterfaceExpenses
      #    this.STF_UpdateDesign();
      #    //end STF_InterfaceExpenses
      #
      #    dimAccountController.parmValidateBlockedForManualEntry(true);
      #    dimOffsetAccountController.parmValidateBlockedForManualEntry(true);
      #    dimPaymentFeeAccountController.parmValidateBlockedForManualEntry(true);
      #
      #    // <GEERU><GEEU>
      #    if (RCashParameters::isCashModuleEnabled())
      #    {
      #        // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
      #        ledgerJournalTransEntityManager = new LedgerJournalTransEntityManager(ledgerJournalTrans_DS,
      #                                                                              ledgerJournalTrans_Asset_DS,
      #                                                                              null,
      #                                                                              null,
      #                                                                              null, null, ledgerJournalTrans_RCash_DS);
      #    }
      #    else
      #    {
      #    // </GEERU></GEEU>
      #        // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
      #        ledgerJournalTransEntityManager = new LedgerJournalTransEntityManager(ledgerJournalTrans_DS, ledgerJournalTrans_Asset_DS, null);
      #    // <GEERU><GEEU>
      #    }
      #    // </GEERU></GEEU>
      #
      #    journalFormTrans.parmCtrlVoucherGrid(ledgerJournalTrans_Voucher);
      #    journalFormTrans.parmCtrlVoucherTab(ledgerJournalTrans_Voucher1);
      #    journalFormTrans.parmCtrlTransDateGrid(ledgerJournalTrans_TransDate);
      #    journalFormTrans.parmCtrlTransDateTab(ledgerJournalTrans_TransDate1);
      #    journalFormTrans.parmCtrlExchRate(fieldExchRate);
      #    journalFormTrans.parmCtrlExchRateSecond(fieldExchrateSecond);
      #    journalFormTrans.parmCtrlTriangulation(fieldTriangulation);
      #    journalFormTrans.parmCtrlSettlementButton(buttonSettlement);
      #    journalFormTrans.parmCtrlCourseButton(buttonCourse);
      #    journalFormTrans.parmCtrlReportAsReadyButton(buttonReportAsReady);
      #    journalFormTrans.parmCtrlApproveButton(buttonApprove);
      #    journalFormTrans.parmCtrlRejectButton(buttonReject);
      #    journalFormTrans.parmCtrlPostJournalMenu(buttonPostJournal);
      #    journalFormTrans.parmCtrlCheckJournalMenu(buttonCheckJournal);
      #    journalFormTrans.parmCtrlVoucherTransButton(buttonVoucherTrans);
      #    journalFormTrans.parmCtrlDeleteTransactionsButton(buttonDeleteTransactions);
      #    journalFormTrans.parmCtrlBalanceControButton(buttonBalanceControl);
      #    journalFormTrans.parmctrlRecipientName(ledgerJournalTrans_BankNegInstRecipientName);
      #    journalFormTrans.parmCtrlBankChequeReuseButton(bankChequeReuse);
      #    // <GEERU>
      #    journalFormTrans.parmCtrlOrderPaymentTab_RU(orderPayment_RU);
      #    journalFormTrans.parmCtrlCurrencyConvert_RU(currencyConvert_RU);
      #    // </GEERU>
      #    journalFormTrans.parmCtrlFunctionMenuButton(buttonFunctions);
      #    journalFormTrans.parmCtrlJournalTextsButton(ledgerJournalTransTxt);
      #    journalFormTrans.parmCtrlCreatePaymentButton(buttonCreatePayment);
      #    journalFormTrans.parmCtrlSalesTaxMenu(taxTransSource);
      #    journalFormTrans.parmCtrlPaymentReconciliationButton(buttonPaymReconciliation);
      #    journalFormTrans.parmCtrlPaymentProposalButton(buttonPaymProposal);
      #    journalFormTrans.parmCtrlChangePaymentMethodButton(ledgerJournalTransChangePaymMode);
      #    journalFormTrans.parmCtrlOffsetAccountTypeGrid(ledgerJournalTrans_OffsetAccountType);
      #    journalFormTrans.parmCtrlOffsetAccountTypeTab(ledgerJournalTrans_OffsetAccountType1);
      #    journalFormTrans.parmCtrlOffsetAccountGrid(ledgerJournalTrans_OffsetAccount);
      #    journalFormTrans.parmCtrlOffsetAccountTab(ledgerJournalTrans_OffsetAccount1);
      #    journalFormTrans.parmCtrlAccountDimensionButton(accountDimension);
      #    journalFormTrans.parmCtrlOffsetAccountDimensionButton(offsetAccountDimension);
      #    journalFormTrans.parmCtrlPaymFeeAccountDimensionButton(paymentFeeAccountDimension);
      #    //<GIN>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
      #    {
      #        taxParametersLoc = TaxParameters::find();
      #        if (taxParametersLoc.vat_in)
      #        {
      #            journalFormTrans.parmCtrlDefermentSchedule_IN(defermentSchedule_IN);
      #        }
      #        if (taxParametersLoc.vat_in ||
      #            taxParametersLoc.Excise_IN)
      #        {
      #            journalFormTrans.parmCtrlChallanInformationButton_IN(challanInformation_IN);
      #        }
      #        element.setVisible_IN();
      #        element.setTaxWithholdVisible_IN();
      #        journalFormTrans.parmCtrlExciseManufacture_IN(exciseManufacture_IN);
      #        journalFormTrans.parmCtrlExciseNone_IN(exciseNone_IN);
      #        journalFormTrans.parmCtrlExciseTraders_IN(exciseTraders_IN);
      #        journalFormTrans.parmCtrlECCNumber(TaxInformation_IN_ECCNumber);
      #        journalFormTrans.parmCtrlManECCRegistrationNumberTable(TaxInformation_IN_ManECCRegistrationNumberTable);
      #        journalFormTrans.parmCtrlTraderECCRegistrationNumberTable(TaxInformation_IN_TraderECCRegistrationNumberTable);
      #    }
      #    //</GIN>
      #
      #    journalFormTrans.formInitPost();
      #
      #    this.initLedger();
      #
      #    imageListAppl = new ImageListAppl_LedgerJournal();
      #    errorExist.imageList(imageListAppl.imageList());
      #
      #    // Disable the company accounts field on the general tab and on the grid in the overview tab if Intercompany transactions are disabled
      #    if (!isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
      #    {
      #        ledgerJournalTrans_Company.allowEdit(false);
      #        ledgerJournalTrans_CompanyAccount.allowEdit(false);
      #    }
      #
      #    // <GCN>
      #    if (chineseVoucher_CN)
      #    {
      #        allow = ledgerJournalTable.ledgerJournalName().NewVoucher == NewVoucher::Manually
      #            && ledgerJournalTable.VoucherAllocatedAtPosting == NoYes::No;
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).enabled(allow);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher)).enabled(false);
      #    }
      #    else
      #    {
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).visible(false);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerVoucherType_CN)).visible(false);
      #    }
      #    // </GCN>
      #    // Post dated checks
      #    postDatedCheckEnabled = BankParameters::find().EnablePDC;
      #    element.enablePostDatedChecksTab();
      #    if (BankLCImportFeatureChecker::checkBankLCImportEnabled())
      #    {
      #        bankLCImportGroup.visible(true);
      #        bankLCImportLineNumController = BankLCImportLineNumController::construct();
      #    }
      #    else
      #    {
      #        bankLCImportGroup.visible(false);
      #    }
      #
      #    // <GTH>
      #    if (TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled())
      #    {
      #        this.updateDesignForAverageVAT();
      #    }
      #    // </GTH>
      #}
    ENDSOURCE
    SOURCE #initLedger
      #void initLedger()
      #{
      #    ;
      #
      #    if (element.args().dataset() == tableNum(LedgerJournalTable))
      #    {
      #        ledgerJournalTable  = element.args().record();
      #        journalNum          = ledgerJournalTable.JournalNum;
      #    }
      #}
    ENDSOURCE
    SOURCE #journalForm
      #JournalForm journalForm()
      #{
      #    return journalFormTrans;
      #}
    ENDSOURCE
    SOURCE #ledgerJournalEngine
      #LedgerJournalEngine ledgerJournalEngine()
      #{
      #    return ledgerJournalEngine;
      #}
    ENDSOURCE
    SOURCE #ledgerJournalTable
      #LedgerJournalTable ledgerJournalTable()
      #{
      #    return ledgerJournalTable;
      #}
    ENDSOURCE
    SOURCE #parmPostalAddressLocation
      #public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = ledgerJournalTrans.RemittanceLocation)
      #{
      #    if (!prmisDefault(_postalAddressLocation))
      #    {
      #        postalAddressLocation = _postalAddressLocation;
      #    }
      #
      #    return postalAddressLocation;
      #}
    ENDSOURCE
    SOURCE #refreshLedgerJournalTrans_IN
      #// <GIN>
      #public void refreshLedgerJournalTrans_IN()
      #{
      #    ledgerJournalTrans_ds.reread();
      #    ledgerJournalTrans_ds.refresh();
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #refreshProposal
      #void refreshProposal()
      #{
      #    ledgerJournalTrans_DS.research();
      #}
    ENDSOURCE
    SOURCE #setDebCredProposal
      #void setDebCredProposal(boolean _init)
      #{
      #    if (_init)
      #    {
      #        debCredProposal = DebCredProposal::None;
      #    }
      #
      #    if (debCredProposal != debCredProposalOld)
      #    {
      #        switch(debCredProposal)
      #        {
      #            case DebCredProposal::Credit  :
      #                ledgerJournalTrans_AmountCurDebit.skip(true);
      #                amountCurDebit.skip(true);
      #                break;
      #
      #            case DebCredProposal::Debit   :
      #                ledgerJournalTrans_AmountCurCredit.skip(true);
      #                amountCurCredit.skip(true);
      #                break;
      #
      #            case DebCredProposal::None    :
      #                ledgerJournalTrans_AmountCurCredit.skip(false);
      #                amountCurCredit.skip(false);
      #                ledgerJournalTrans_AmountCurDebit.skip(false);
      #                amountCurDebit.skip(false);
      #                break;
      #        }
      #        debCredProposalOld = debCredProposal;
      #    }
      #}
    ENDSOURCE
    SOURCE #setLookupButton_BR
      #// <GBR>
      #void setLookupButton_BR()
      #{
      #    if (VendPaymModeTable::find(ledgerJournalTrans.PaymMode).ClassId != classnum(VendOutPaym_CNAB_BR))
      #    {
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,DocumentType)).allowEdit(false);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,BankFolder)).allowEdit(false);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,Instruction_1)).allowEdit(false);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,Instruction_2)).allowEdit(false);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,TypedLine)).allowEdit(false);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,BarCodeInfo)).allowEdit(false);
      #    }
      #    else if (ledgerJournalTrans.RecId)
      #    {
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,DocumentType)).allowEdit(true);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,BankFolder)).allowEdit(true);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,Instruction_1)).allowEdit(true);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,Instruction_2)).allowEdit(true);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,TypedLine)).allowEdit(true);
      #        vendEPRemitInfo_BR_ds.object(fieldnum(VendEPRemitInfo_BR,BarCodeInfo)).allowEdit(true);
      #    }
      #}
      #// </GBR>
    ENDSOURCE
    SOURCE #setPaymentByLetterOfCredit
      #public void setPaymentByLetterOfCredit()
      #{
      #    if (ledgerJournalTrans.getLedgerJournalTransBankLC().BankLCLine)
      #    {
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymMode)).allowEdit(false);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymSpec)).allowEdit(false);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Prepayment)).allowEdit(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #setRemitteeCurrency
      #void setRemitteeCurrency()
      #{
      #    boolean enableField = false;
      #    ;
      #
      #    if (ledgerJournalTrans.PaymMode && ledgerJournalTrans.PaymSpec)
      #    {
      #        if (remitteeCurrencyMap.exists([ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec]))
      #        {
      #            enableField = remitteeCurrencyMap.lookup([ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec]);
      #        }
      #        else
      #        {
      #            if (VendOutPaymRecord_DEDTAZV_CVal::counterValuePayment(ledgerJournalTrans.PaymMode,
      #                                                                    ledgerJournalTrans.PaymSpec))
      #            {
      #                remitteeCurrencyMap.insert([ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec], true);
      #                enableField = true;
      #            }
      #            else
      #            {
      #                remitteeCurrencyMap.insert([ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec], false);
      #                enableField = false;
      #            }
      #        }
      #    }
      #    if (enableField)
      #    {
      #        ledgerJournalTrans_RemitteeCurrency.enabled(true);
      #    }
      #    else
      #    {
      #        ledgerJournalTrans_RemitteeCurrency.enabled(false);
      #        ledgerJournalTrans.RemitteeCurrency = '';
      #    }
      #}
      #
      #
      #
    ENDSOURCE
    SOURCE #setTaxWithholdEnabled_IN
      #//<GIN>
      #void setTaxWithholdEnabled_IN()
      #{
      #    ;
      #
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tdsGroup_IN)).enabled((!ledgerJournalTrans.tcsGroup_IN && !ledgerJournalTrans.TaxWithholdGroup));
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tcsGroup_IN)).enabled((!ledgerJournalTrans.tdsGroup_IN && !ledgerJournalTrans.TaxWithholdGroup));
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxWithholdGroup)).enabled((!ledgerJournalTrans.tdsGroup_IN && !ledgerJournalTrans.tcsGroup_IN));
      #    buttonWithholdTax_IN.enabled(ledgerJournalTrans.tdsGroup_IN || ledgerJournalTrans.tcsGroup_IN);
      #    if (ledgerJournalTable.Posted)
      #    {
      #        taxWitholdChallan_IN.enabled(true);
      #    }
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, SoftwareDeclReceived_IN)).enabled((ledgerJournalTrans.TDSGroup_IN != ''));
      #}
      #//</GIN>
    ENDSOURCE
    SOURCE #setTaxWithholdVisible_IN
      #//<GIN>
      #void setTaxWithholdVisible_IN()
      #{
      #    TaxWithholdParameters_IN    taxWithholdParameters;
      #    ;
      #
      #    taxWithholdParameters = TaxWithholdParameters_IN::find();
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tdsGroup_IN)).visible(taxWithholdParameters.tdsPayment);
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tcsGroup_IN)).visible(taxWithholdParameters.tcsPayment);
      #    taxWithhold_IN.visible(taxWithholdParameters.tdsPayment || taxWithholdParameters.tcsPayment);
      #    withholdingTax.visible(taxWithholdParameters.tdsPayment || taxWithholdParameters.tcsPayment);
      #}
      #//</GIN>
    ENDSOURCE
    SOURCE #setVisible_IN
      #//<GIN>
      #private void setVisible_IN()
      #{
      #    boolean             isTaxParametersMarked   = TaxParameters::checkTaxParameters_IN();
      #
      #    tabTaxInformation_IN.visible(isTaxParametersMarked || TaxWithholdParameters_IN::checkTaxParameters());
      #    challanInformation_IN.visible(isTaxParametersMarked);
      #    updatePLA.visible(taxParametersLoc.Excise_IN);
      #    plaVoucher_IN.visible(taxParametersLoc.Excise_IN);
      #    ledgerJournalTrans_AssessableValue_IN.visible(isTaxParametersMarked);
      #    ledgerJournalTrans_MaximumRetailPrice_IN.visible(isTaxParametersMarked);
      #    tabTaxInformation_IN.visible(isTaxParametersMarked);
      #    companyInfo.visible(isTaxParametersMarked);
      #    defermentSchedule_IN.visible(taxParametersLoc.vat_in);
      #    vat.visible(taxParametersLoc.vat_in);
      #    salesTax_IN.visible(taxParametersLoc.SalesTax_IN);
      #    excise_IN.visible(taxParametersLoc.Excise_IN);
      #    customs_IN.visible(taxParametersLoc.Customs_IN);
      #    serviceTax_IN.visible(taxParametersLoc.ServiceTax_IN);
      #
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, ConsignmentNoteNum_IN)).visible(taxParametersLoc.ServiceTax_IN);
      #
      #}
      #//</GIN>
    ENDSOURCE
    SOURCE #STF_crossPayment
      #public void STF_crossPayment(container vot,LedgerJournalTrans _ledgerTrans)
      #{   //BEGIN DEV:BL  STF_CrossPayment
      #    LedgerJournalTable              ledgerTable;
      #    STF_ledgerTrans                 stf_ledger,ledgerTrans;
      #    VendTransOpen                   vendTO;
      #    VendTrans                       vendT;
      #    int                             i,crossCurrency,j,lenght,allow,allow1,x,z,v,u;
      #    int64                           recVOT,difLos,y;
      #    Ledger                          ledger; //cambiaria
      #    LedgerGainLossAccount           ledgerGainLossAccount; //cambiaria
      #    LedgerDimensionDefaultAccount   ledgerLoss, ledgerGain, accountJournal, accountInvoice, ivaPendAcred, ivaGasTasaGral; //cambiaria
      #    VendLedgerAccounts              vendLedgerAccounts; // cuenta mx-dll
      #    VendTable                       vendTable; // cuenta mx-dll
      #    TaxTable                        taxTable,taxTable1;//iva cuenta
      #    TaxLedgerAccountGroup           taxAccountGroup,taxAccountGroup1;//iva cuenta
      #    GeneralJournalAccountEntry      accountEntry;//iva monto
      #    GeneralJournalEntry             journalEntry;//iva monto
      #    //AxLedgerJournalTrans            trans;
      #    AmountCur                       amountInvoice,journalAmount,ivaOrg,ivaExcRate,total,proJou,proIva;
      #    AmountCurDebCred                amountOri;
      #    container                       name,value,name1,value1,nameU,valueU,nameA,nA,valueA,vA,nameI,nI,valueI,vI,ivaAmount,cc,amountTotal,invoiceAmount,invoice;
      #    DefaultDimensionView            dimensionView;
      #    ExchangeRate                    exchangeRate;
      #    real                            todayExchRate,invoiceExchRate,ivaToday,amountDifLos,ivaDifLos,iva,percent;
      #    str                             n,ccu,cci;
      #    TaxCode                         TaxivaPendAcred, TAxivaGasTasaGral;
      #    TaxWithholdTrans                taxWithHoldTrans;
      #    ;
      #    if(_ledgerTrans.STF_crossPayment)
      #        delete_from ledgerTrans where ledgerTrans.RefRecId == _ledgerTrans.RecId && ledgerTrans.JournalNum == _ledgerTrans.JournalNum;
      #
      #     if(_ledgerTrans.CurrencyCode == 'MXN')
      #          _ledgerTrans.PostingProfile = 'GEN';
      #     else if(_ledgerTrans.CurrencyCode == 'USD')
      #          _ledgerTrans.PostingProfile = 'GEN_USD';
      #
      #
      #    //invoice information
      #    for (i=1; i <= conlen(vot); i++) //vendTrans: currencyCde, voucher, AccountNum, postingProfle
      #    {
      #        recVOT = conPeek(vot,i);
      #        select AmountCur from vendTO where vendTO.RecId == recVOT;
      #
      #        select CurrencyCode,AccountNum,Voucher,TransDate,PostingProfile from vendT order by RecId desc where vendT.RecId == vendTO.RefRecId;
      #        select TaxWithholdAmount,InvoiceTaxWithholdAmount from taxWithHoldTrans where taxWithHoldTrans.JournalNum == _ledgerTrans.JournalNum && taxWithHoldTrans.VoucherInvoice == vendT.Voucher
      #        && taxWithHoldTrans.VendAccount == vendT.AccountNum && taxWithHoldTrans.PaymCompany == curext();
      #        if(_ledgerTrans.CurrencyCode != vendT.CurrencyCode && vendT.CurrencyCode != "")
      #        {
      #
      #            if(vendTO.AmountCur != vendTO.STF_AmountCur)
      #            {
      #                percent = (vendTO.STF_AmountCur * 100) / vendTO.AmountCur;
      #                amountTotal += abs(vendTO.STF_AmountCur) - abs(taxWithHoldTrans.InvoiceTaxWithholdAmount);
      #                amountOri += abs(vendTO.STF_AmountCur) - abs(taxWithHoldTrans.InvoiceTaxWithholdAmount);
      #                invoiceAmount += abs(vendTO.STF_AmountMST) - abs(taxWithHoldTrans.TaxWithholdAmount);
      #            }
      #            else
      #            {
      #                amountTotal += abs(vendTO.AmountCur) - abs(taxWithHoldTrans.InvoiceTaxWithholdAmount);
      #                amountOri += abs(vendTO.AmountCur) - abs(taxWithHoldTrans.InvoiceTaxWithholdAmount);
      #                invoiceAmount += abs(vendTO.AmountMST) - abs(taxWithHoldTrans.TaxWithholdAmount);
      #            }
      #            invoice += recVOT;
      #
      #            while select RecId from journalEntry where journalEntry.SubledgerVoucher == vendT.Voucher
      #            {
      #                while select accountEntry where accountEntry.GeneralJournalEntry == journalEntry.RecId && accountEntry.TransactionCurrencyCode == vendT.CurrencyCode
      #                {
      #                        if(accountEntry.PostingType == LedgerPostingType::Tax)
      #                        {
      #                            ivaAmount += recVOT;
      #                            if(vendTO.AmountCur != vendTO.STF_AmountCur)
      #                                ivaAmount += accountEntry.TransactionCurrencyAmount * (percent / 100);
      #                            else
      #                                ivaAmount += accountEntry.TransactionCurrencyAmount;
      #                            nameI += "RecId";
      #                            valueI += recVOT;
      #                            while select dimensionView where dimensionView.DefaultDimension == DimensionStorage::getDefaultDimensionFromLedgerDimension(accountEntry.LedgerDimension)
      #                            {
      #                                nameI += dimensionView.Name;
      #                                valueI += dimensionView.DisplayValue;
      #                            }
      #                        }
      #                        else if(accountEntry.PostingType == LedgerPostingType::VendBalance)
      #                        {
      #                            nameA += "RecId";
      #                            valueA += recVOT;
      #                            while select dimensionView where dimensionView.DefaultDimension == DimensionStorage::getDefaultDimensionFromLedgerDimension(accountEntry.LedgerDimension)
      #                            {
      #                                nameA += dimensionView.Name;
      #                                valueA += dimensionView.DisplayValue;
      #                            }
      #                        }
      #                        else
      #                        {
      #                            nameU += "RecId";// + strFmt("%1",recVOT); u++;
      #                            valueU += recVOT; //z=1;
      #                            while select dimensionView where dimensionView.DefaultDimension == DimensionStorage::getDefaultDimensionFromLedgerDimension(accountEntry.LedgerDimension)
      #                            {
      #                               nameU +=  dimensionView.Name;
      #                               valueU += dimensionView.DisplayValue;
      #                            }
      #                        }
      #                }
      #           }
      #           crossCurrency++;
      #           journalEntry.clear(); accountEntry.clear();vendTO.clear();
      #        }
      #    }
      #    name = ["CentroCostos","UEN","Proveedores"];
      #    value = ["00.001","01.01.00",vendT.AccountNum];
      #
      #    ////////////////////////////////////////////////
      #    if(crossCurrency > 0) // si es pago cruzado
      #    {
      #        if(!_ledgerTrans.OffsetLedgerDimension)
      #        {
      #            _ledgerTrans.AmountCurCredit = 0;
      #            _ledgerTrans.AmountCurDebit = 0;
      #            throw error(strFmt("Se debe elegir una cuenta de contrapartida para el proveedor %1",vendT.AccountNum));
      #        }
      #        _ledgerTrans.STF_crossPayment = true;
      #        select DefaultExchangeRateType from ledger where ledger.Name == curext();
      #        exchangeRate = ExchangeRate::findByDate(ledger.DefaultExchangeRateType,_ledgerTrans.TransDate);
      #        todayExchRate = exchangeRate.ExchangeRate / 100; exchangeRate.clear();
      #        exchangeRate = ExchangeRate::findByDate(ledger.DefaultExchangeRateType,vendT.TransDate);
      #        invoiceExchRate = exchangeRate.ExchangeRate / 100;
      #
      #       if(_ledgerTrans.STF_difExchRate) //new exchange rate
      #        {
      #            todayExchRate = _ledgerTrans.STF_newExchRate;
      #        }
      #
      #        if(_ledgerTrans.CurrencyCode == 'USD')
      #                _ledgerTrans.ExchRate = decRound((todayExchRate * 100),2);
      #        else
      #        {
      #            if(_ledgerTrans.AmountCurCredit)
      #                {_ledgerTrans.AmountCurCredit = decRound((abs(amountOri * todayExchRate)),2);_ledgerTrans.ExchRate = 100;}
      #            else if(_ledgerTrans.AmountCurDebit)
      #                {_ledgerTrans.AmountCurDebit = decRound((abs(amountOri * todayExchRate)),2);_ledgerTrans.ExchRate = 100;}
      #        }
      #
      #        //cuentas de pérdida y utilidad cambiaria
      #        while select ledgerGainLossAccount where ledgerGainLossAccount.Ledger == ledger.RecId
      #        {
      #            if(ledgerGainLossAccount.AccountType == CurrencyGainLossAccountType::RealizedGain)
      #                ledgerGain = ledgerGainLossAccount.LedgerDimension; //utilidad
      #            else if(ledgerGainLossAccount.AccountType == CurrencyGainLossAccountType::RealizedLoss)
      #                ledgerLoss = ledgerGainLossAccount.LedgerDimension; //pérdida
      #        }
      #
      #        //cuentas cargo y abono
      #        select VendGroup from vendTable where vendTable.AccountNum == vendT.AccountNum;
      #        while select vendLedgerAccounts
      #        {   //Invoice Account
      #            if(vendLedgerAccounts.Num == vendT.AccountNum && vendLedgerAccounts.AccountCode == TableGroupAll::Table && vendLedgerAccounts.PostingProfile == vendT.PostingProfile)
      #                accountInvoice = vendLedgerAccounts.SummaryLedgerDimension;
      #            else if(vendLedgerAccounts.Num == vendTable.VendGroup && vendLedgerAccounts.AccountCode == TableGroupAll::GroupId && vendLedgerAccounts.PostingProfile == vendT.PostingProfile)
      #               accountInvoice = vendLedgerAccounts.SummaryLedgerDimension;
      #            else if(vendLedgerAccounts.AccountCode == TableGroupAll::All)
      #                accountInvoice = vendLedgerAccounts.SummaryLedgerDimension;
      #
      #            //journal acoount
      #            if(vendLedgerAccounts.Num == vendT.AccountNum && vendLedgerAccounts.AccountCode == TableGroupAll::Table && vendLedgerAccounts.PostingProfile == _ledgerTrans.PostingProfile)
      #                accountJournal = vendLedgerAccounts.SummaryLedgerDimension;
      #            else if(vendLedgerAccounts.Num == vendTable.VendGroup && vendLedgerAccounts.AccountCode == TableGroupAll::GroupId && vendLedgerAccounts.PostingProfile == _ledgerTrans.PostingProfile)
      #               accountJournal = vendLedgerAccounts.SummaryLedgerDimension;
      #            else if(vendLedgerAccounts.AccountCode == TableGroupAll::All)
      #                accountJournal = vendLedgerAccounts.SummaryLedgerDimension;
      #
      #        }
      #        //cuentas de iva
      #        if(_ledgerTrans.TaxGroup)
      #        {
      #            select TaxAccountGroup,PaymentTaxCode from taxTable where taxTable.TaxCode == _ledgerTrans.TaxGroup;
      #            select TaxAccountGroup from taxTable1 where taxTable1.TaxCode == taxTable.PaymentTaxCode;
      #            if(taxTable)
      #            {
      #                select TaxIncomingLedgerDimension from taxAccountGroup where taxAccountGroup.TaxAccountGroup == taxTable.TaxAccountGroup;
      #                select TaxIncomingLedgerDimension from taxAccountGroup1 where taxAccountGroup1.TaxAccountGroup == taxTable1.TaxAccountGroup;
      #                if(taxAccountGroup)
      #                {
      #                   TaxivaPendAcred = taxTable.TaxCode;
      #                   TAxivaGasTasaGral = taxTable1.TaxCode;
      #                   ivaPendAcred = taxAccountGroup.TaxIncomingLedgerDimension; //IVA PENDIENTE DE ACREDITAR abono
      #                   ivaGasTasaGral = taxAccountGroup1.TaxIncomingLedgerDimension; //IVA gastos tasa general cargo
      #                }
      #            }
      #         }
      #
      #          j=1; x=1; lenght = conLen(valueA) + 1; z=1; u=1;
      #          for(i=1;i<=crossCurrency;i++)
      #          {
      #              journalAmount = any2real(conPeek(amountTotal,i)) * todayExchRate;
      #
      #              if(_ledgerTrans.CurrencyCode == "USD")
      #                    journalAmount = any2real(conPeek(amountTotal,i))/todayExchRate;
      #
      #              amountInvoice = any2real(conPeek(amountTotal,i));
      #
      #              if(conPeek(nameA,j) == "RecId" && conPeek(invoice,i) == conPeek(valueA,j))
      #              {
      #                  j++;
      #                  for(j = j; j <= lenght; j++)
      #                  {
      #                     if(j != lenght && conPeek(nameA,j) != "RecId" )
      #                     {
      #                         nA += conPeek(nameA,j);
      #                         vA += conPeek(valueA,j);
      #                     }
      #                      else break;
      #                  }
      #              }
      #
      #              //Generar prov.
      #              stf_ledger.RefRecId = _ledgerTrans.RecId;
      #              stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #              stf_ledger.Debit = abs(decRound(amountInvoice,2));
      #              stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(accountInvoice).MainAccountId,nA,vA);
      #              stf_ledger.CurrencyCode = vendT.CurrencyCode;
      #              stf_ledger.PostingProfile = vendT.PostingProfile;
      #              stf_ledger.Txt = "Liquidación provisión";
      #              if(vendT.CurrencyCode == 'USD')
      #                    stf_ledger.ExchRate = invoiceExchRate * 100; //invoice
      #              stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #              stf_ledger.insert();
      #
      #             //liquidación provisión
      #              stf_ledger.clear();
      #              stf_ledger.RefRecId = _ledgerTrans.RecId;
      #              stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #              stf_ledger.Credit = abs(decRound(journalAmount,2));
      #              stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(accountJournal).MainAccountId,nA,vA);
      #              stf_ledger.CurrencyCode = _ledgerTrans.CurrencyCode;
      #              stf_ledger.PostingProfile = _ledgerTrans.PostingProfile;
      #              stf_ledger.Txt = "Provisión Generada";
      #              if(_ledgerTrans.CurrencyCode == 'USD')
      #                    stf_ledger.ExchRate = todayExchRate * 100; //invoice
      #              stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #              stf_ledger.insert();
      #
      #              if(vendT.CurrencyCode == 'USD') //_ledgerTrans.CurrencyCode =! MXN
      #                 amountInvoice = decRound((any2real(conPeek(amountTotal,i)) * invoiceExchRate),2);
      #              else
      #                 journalAmount =  decRound((journalAmount * todayExchRate),2);
      #
      #              if((abs(journalAmount) - abs(amountInvoice)) > 0)//utilidad
      #              {
      #                 stf_ledger.clear();
      #                 stf_ledger.RefRecId = _ledgerTrans.RecId;
      #                 stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #                 stf_ledger.Debit = abs(decRound(journalAmount - amountInvoice,2));
      #                 stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(ledgerLoss).MainAccountId,name,value);
      #                 stf_ledger.CurrencyCode = 'MXN';
      #                 stf_ledger.PostingProfile = 'GEN';
      #                 stf_ledger.Txt = "Ajuste cambiario pérdida";
      #                 stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #                 stf_ledger.insert();
      #
      #              }
      #              else if((abs(journalAmount) - abs(amountInvoice)) < 0)//pérdida
      #              {
      #                 stf_ledger.clear();
      #                 stf_ledger.RefRecId = _ledgerTrans.RecId;
      #                 stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #                 stf_ledger.Credit = abs(decRound(journalAmount - amountInvoice,2));
      #                 stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(ledgerGain).MainAccountId,name,value);
      #                 stf_ledger.CurrencyCode = 'MXN';
      #                 stf_ledger.PostingProfile = 'GEN';
      #                 stf_ledger.Txt = "Ajuste cambiario utilidad";
      #                 stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #                 stf_ledger.insert();
      #              }
      #
      #              if(conLen(nameI) > 0)
      #              {
      #                if(z != conLen(valueI)+1){
      #                 while(conPeek(nameI,z) == "RecId" && conPeek(invoice,i) == conPeek(valueI,z))
      #                  { z++;v+=2;
      #                      for(z = z; z <= conLen(valueI)+1; z++)
      #                      {
      #                         if(z != conLen(valueI)+1 && conPeek(nameI,z) != "RecId" )
      #                         {
      #                             nI += conPeek(nameI,z);
      #                             vI += conPeek(valueI,z);
      #                         }
      #                         else break;
      #                      }
      #
      #                      if(conPeek(nameU,u) == "RecId" && conPeek(invoice,i) == conPeek(valueU,u))
      #                      {
      #                          u++;
      #                          for(u = u; u <= conLen(valueU)+1; u++)
      #                          {
      #                             if(u != conLen(valueU)+1 && conPeek(nameU,u) != "RecId" )
      #                             {
      #                                 name1 += conPeek(nameU,u);
      #                                 value1 += conPeek(valueU,u);
      #                             }
      #                              else break;
      #                          }
      #                      }
      #
      #                      allow = conFind(name1,"UEN");
      #                      if(!allow)
      #                      {
      #                         name1 = name;
      #                         value1 = value;
      #                         allow = 0;
      #                      }
      #                      allow = conFind(name1,"Proveedores");
      #                      if(!allow)
      #                      {
      #                         name1 += "Proveedores";
      #                         value1 += vendT.AccountNum;
      #                      }
      #
      #                      ivaToday = any2real(conPeek(ivaAmount,v)) * todayExchRate;
      #
      #                      if(_ledgerTrans.CurrencyCode == "USD")
      #                            ivaToday = any2real(conPeek(ivaAmount,v))/todayExchRate;
      #
      #                      ivaExcRate = any2real(conPeek(ivaAmount,v));
      #
      #                      //IVA PENDIENTE DE ACREDITAR abono
      #                      stf_ledger.clear();
      #                      stf_ledger.RefRecId = _ledgerTrans.RecId;
      #                      stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #                      stf_ledger.Credit = decRound(ivaExcRate,2);
      #                      stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(ivaPendAcred).MainAccountId,nI,vI);
      #                      stf_ledger.CurrencyCode = vendT.CurrencyCode;
      #                      stf_ledger.PostingProfile = vendT.PostingProfile;
      #                      stf_ledger.Txt = "Liquidación IVA pend. acreditar";
      #                      if(vendT.CurrencyCode == 'USD')
      #                            stf_ledger.ExchRate = invoiceExchRate * 100; //invoice
      #                      stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #                      stf_ledger.TaxCode = TaxivaPendAcred;
      #                      stf_ledger.insert();
      #
      #                      //IVA gastos tasa general cargo
      #                      stf_ledger.clear();
      #                      stf_ledger.RefRecId = _ledgerTrans.RecId;
      #                      stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #                      stf_ledger.Debit = decRound(ivaToday,2);
      #                      stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(ivaGasTasaGral).MainAccountId,nI,vI);
      #                      stf_ledger.CurrencyCode = _ledgerTrans.CurrencyCode;
      #                      stf_ledger.PostingProfile = _ledgerTrans.PostingProfile;
      #                      stf_ledger.Txt = "Liquidación IVA tasa gral";
      #                      if(_ledgerTrans.CurrencyCode == 'USD')
      #                            stf_ledger.ExchRate = todayExchRate * 100; //invoice
      #                      stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #                      stf_ledger.TaxCode = TAxivaGasTasaGral;
      #                      stf_ledger.insert();
      #
      #                      nI=conNull(); vI=conNull();
      #
      #                     if(vendT.CurrencyCode == 'USD') //_ledgerTrans.CurrencyCode =! MXN
      #                        ivaExcRate = decRound((any2real(conPeek(ivaAmount,v)) * invoiceExchRate),2);
      #                     else
      #                        ivaToday = decRound((ivaToday * todayExchRate),2);
      #
      #                     if((abs(ivaToday) - abs(ivaExcRate)) > 0)//utilidad
      #                     {
      #                         stf_ledger.clear();
      #                         stf_ledger.RefRecId = _ledgerTrans.RecId;
      #                         stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #                         stf_ledger.Debit = abs(decRound((ivaToday - ivaExcRate),2))*-1;
      #                         stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(ledgerLoss).MainAccountId,name1,value1);
      #                         stf_ledger.CurrencyCode = 'MXN';
      #                         stf_ledger.PostingProfile = 'GEN';
      #                         stf_ledger.Txt = "Ajuste cambiario iva pérdida";
      #                         stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #                         stf_ledger.insert();
      #                     }
      #                     else if((abs(ivaToday) - abs(ivaExcRate)) < 0)//pérdida
      #                     {
      #                        stf_ledger.clear();
      #                        stf_ledger.RefRecId = _ledgerTrans.RecId;
      #                        stf_ledger.JournalNum = _ledgerTrans.JournalNum;
      #                        stf_ledger.Credit = abs(decRound((ivaToday - ivaExcRate),2))*-1;
      #                        stf_ledger.LedgerDimension = DimensionAttributeValueCombination::STF_GetLedgerDimension(Dimensionstorage::getMainAccountFromLedgerDimension(ledgerGain).MainAccountId,name1,value1);
      #                        stf_ledger.CurrencyCode = 'MXN';
      #                        stf_ledger.PostingProfile = 'GEN';
      #                        stf_ledger.Txt = "Ajuste cambiario iva utilidad";
      #                        stf_ledger.AccountType = LedgerJournalACType::Ledger;
      #                        stf_ledger.insert();
      #                     }
      #                     name1=conNull(); value1=conNull(); allow=0;
      #                     if(z == conLen(valueI)+1)
      #                           break;
      #                  }
      #                }
      #              }///////////////////////////////////////////////////////////
      #
      #            nA = conNull(); vA = conNull();
      #          }
      #        newExcRate = _ledgerTrans.STF_newExchRate;
      #        LedgerJournalTrans_ds.refresh();
      #    }
      #    else
      #        _ledgerTrans.STF_crossPayment = false;
      #
      #    LedgerJournalTrans_ds.executeQuery();
      #    //LedgerJournalTrans_ds.reread();
      #    LedgerJournalTrans_ds.research();
      #    LedgerJournalTrans_ds.refresh();
      #
      #    //END DEV:BL  STF_CrossPayment
      #}
    ENDSOURCE
    SOURCE #STF_UpdateDesign
      #//Project: STF_InterfaceExpenses
      #void STF_UpdateDesign()
      #{
      #
      #    LedgerJournalTable                              ledgerJournalTableLocal,ledgerJournalTableLocal2;
      #    //STF_TravelExpenseAdvancesTableRelation          vrelation;
      #    //STF_TravelExpenseVouchersTableRelation          vrelation2;
      #    STF_TravelExpenseAdvancesTable                  vAdvances;
      #    ;
      #
      #
      #    //BEGIN STF_InterfaceExpenses
      #     if (element.args().caller() && element.args().dataset() == tableNum(LedgerJournalTable))
      #    {
      #        ledgerJournalTableLocal2 = element.args().record();
      #
      #        STF_NotificationToExpensesBtn.enabled(ledgerJournalTableLocal2.Posted);
      #
      #       // STF_NotificationToExpensesBtn.enabled(false);
      #    /*
      #        select count(recid) from vrelation where vrelation.JournalRefRecId == ledgerJournalTableLocal2.RecId;
      #        select count(recid) from vrelation2 where vrelation2.JournalRefRecId == ledgerJournalTableLocal2.RecId;
      #
      #         vAdvances = STF_TravelExpenseAdvancesTable::find( vrelation.RefRecId );
      #
      #        if( vrelation.RecId > 0 || vrelation2.RecId >0 && vAdvances.ProfitProfile != "GEN")
      #        {
      #            STF_NotificationToExpensesBtn.visible(True);
      #        }
      #        else
      #        {
      #            STF_NotificationToExpensesBtn.visible(false);
      #        }
      #
      #        vrelation.clear();
      #        While select vrelation
      #        join vAdvances
      #        where vrelation.JournalRefRecId == ledgerJournalTableLocal2.RecId && vAdvances.RecId == vrelation.RefRecId && !vAdvances.Notified && vAdvances.ProfitProfile !="GEN"
      #        {
      #            STF_NotificationToExpensesBtn.enabled(true);
      #        }
      #    */
      #
      #    }
      #    //END STF_InterfaceExpenses
      #
      #}
    ENDSOURCE
    SOURCE #taxWithholdAutority_IN
      #// <GIN>
      #void taxWithholdAutority_IN(boolean _checkStatus = false)
      #{
      #    if (ledgerJournalTrans.checkSettledVendorAutority_IN(_checkStatus))
      #    {
      #        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, tdsGroup_IN)).enabled(false);
      #        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, tcsGroup_IN)).enabled(false);
      #        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, TaxWithholdGroup)).enabled(false);
      #    }
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #updateDesignForAverageVAT
      #/// <summary>
      #///     Changes the labels when Average VAT feature is active.
      #/// </summary>
      #// <GTH>
      #private void updateDesignForAverageVAT()
      #{
      #    // Tax invoice number
      #    documentNum.label("@SYS4082540");
      #    groupDocument_DocumentNum.label("@SYS4082540");
      #    // Enter the identification number of the tax invoice received from the vendor.
      #    documentNum.helpText("@SYS4082955");
      #    groupDocument_DocumentNum.helpText("@SYS4082955");
      #    // Tax invoice date
      #    documentDate.label("@SYS4082542");
      #    groupDocument_DocumentDate.label("@SYS4082542");
      #    // Select the date of the vendorâ€™s tax invoice.
      #    documentDate.helpText("@SYS4082958");
      #    groupDocument_DocumentDate.helpText("@SYS4082958");
      #
      #    LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, TaxInvoiceReceiptDate)).visible(true);
      #    LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, RealVendName)).visible(true);
      #}
      #// </GTH>
    ENDSOURCE
    SOURCE #updatePaymentFee_JP
      #/// <summary>
      #/// Updates the payment fee.
      #/// </summary>
      #public void updatePaymentFee_JP()
      #{
      #    if (VendPaymFeeUtil_JP::isVendorPaymFeeEnabled())
      #    {
      #        ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
      #        ledgerJournalTrans_ds.refresh();
      #    }
      #}
    ENDSOURCE
    SOURCE #updateTaxWithholdControls
      #/// <summary>
      #/// Updates the status of controls that for Thailand Withholding Tax feature.
      #/// </summary>
      #// <GTH>
      #public void updateTaxWithholdControls()
      #{
      #    if (ledgerJournalTrans.hasRelatedTaxWithholdTrans())
      #    {
      #        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpType)).allowEdit(false);
      #    }
      #    else
      #    {
      #        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpType)).allowEdit(true);
      #    }
      #
      #    if (LedgerJournalTransExtensionTH.PaymentGrossUpType == TaxWithholdPaymentGrossUpType::Other)
      #    {
      #        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpOtherDetail)).enabled(true);
      #    }
      #    else
      #    {
      #        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpOtherDetail)).enabled(false);
      #    }
      #}
      #// </GTH>
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTrans
          Table               #LedgerJournalTrans
          Index               #NumVoucherIdx
          CounterField        #LineNum
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD AccountType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.accountTypeModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
                #    element.enableDepreciationStartDate();
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        journalFormTrans.enableAgreementFields_RU();
                #        element.enableButtonsActive_RU();
                #        ledgerJournalTrans.TaxCode = '';
                #    }
                #    // </GEERU>
                #
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #
                #    if (ledgerJournalTrans.AccountType != LedgerJournalACType::Vend)
                #    {
                #        ledgerJournalTrans.RemittanceLocation = 0;
                #    }
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Company
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    dimAccountController.parmDataAreaId(ledgerJournalTrans.Company);
                #    ledgerJournalTrans_ds.refresh();
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    //<GIN>
                #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                #    {
                #        ledgerJournalEngine.companyModified_IN(ledgerJournalTrans, LedgerJournalTransTaxExtensionIN);
                #        taxInformation_IN_ds.executeQuery();
                #    }
                #    //</GIN>
                #}
              ENDSOURCE
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    if (ledgerJournalTrans.parmLedgerDimension())
                #    {
                #        // Clear AccountNum if already set, not clearing can cause validation errors due to new company
                #        ledgerJournalTrans.parmLedgerDimension(0);
                #        element.accountNumModifiedPost();
                #    }
                #
                #    ret = super();
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountCurDebit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalTrans_ds.modifiedAmount();
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CurrencyCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    ledgerJournalEngine.currencyLookup(_formControl,ledgerJournalTrans);
                #}
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #    ;
                #    ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                #    super();
                #    journalFormTrans.enableFieldsActive();
                #
                #    if (SpecTrans::getSpecTransCount(ledgerJournalTrans.company(), ledgerJournalTrans.TableId, ledgerJournalTrans.RecId) > 0)
                #    {
                #        ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                #    }
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{;
                #    TaxGroupHeading::taxGroupLookup(_formControl, ledgerJournalTrans.Company);
                #}
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    ledgerjournaltrans_ds.refresh();
                #
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingProfile
            PROPERTIES
              Mandatory           #Yes
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    LedgerJournalEngine::lookupPostingProfileForAccountType(_formControl, _filterStr, ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Voucher
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.formMethodDataSourceVoucherModified();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountCurCredit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalTrans_ds.modifiedAmount();
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymentStatus
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{;
                #    TaxTable::taxTableLookup(_formControl, ledgerJournalTrans.Company);
                #}
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    ledgerjournaltrans_ds.refresh();
                #
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymSpec
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #
                #    element.setRemitteeCurrency();
                #    // <GBR>
                #    if (BrazilParameters::isEnabled())
                #    {
                #        ledgerJournalTransPayment_BR.setPaymentSetting_BR(ledgerJournalTrans.AccountType, ledgerJournalTrans.RecId, LedgerJournalTrans.PaymSpec, ledgerJournalTrans.PaymMode);
                #        LedgerJournalTransPayment_BR_ds.reread();
                #        LedgerJournalTransPayment_BR_ds.refresh();
                #    }
                #    // </GBR>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymMode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
                #    {
                #        // A custom lookup is required for ledger accounts because different tables are
                #        // accessed depending on the calling form. in all other supported cases the table
                #        // relation provides the necessary link.
                #        VendPaymModeTable::lookupPaymMethod(_formControl, _filterStr, ledgerJournalTrans.Company);
                #    }
                #    else
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #    boolean allowPostDatedChecks;
                #    // <GEERU>
                #    Object               obj           = ledgerJournalEngine;
                #    BankTransactionType  bankTransType = ledgerJournalTrans.BankTransType;
                #    // </GEERU>
                #
                #    super();
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        journalFormTrans.enableOrderPaymentFields_RU();
                #        obj.updatePaymentOrderBudgetTrans_RU(ledgerJournalTrans);
                #    }
                #    // </GEERU>
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        if (ledgerJournalTrans.BankTransType != bankTransType)
                #        {
                #            ledgerJournalEngine.bankTransTypeModified_RU(ledgerJournalTrans);
                #            journalFormTrans.enableCurrencyConvert_RU();
                #        }
                #    }
                #    // </GEERU>
                #    element.setRemitteeCurrency();
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    custVendNACHAIATInfoTable_US.enabled(
                #                    CustVendNACHAIATInfoTable_US::isValidCustVendNACHAIATInfoTable_US(ledgerJournalTrans));
                #
                #    // Enable/disable PDCs
                #    if(postDatedCheckEnabled)
                #    {
                #        allowPostDatedChecks = CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans);
                #        vendPDCRegister_ds.allowEdit(allowPostDatedChecks);
                #        printIssueReceipt.visible(allowPostDatedChecks);
                #        printIssueReceipt.enabled(allowPostDatedChecks);
                #    }
                #    // <GBR>
                #    if (BrazilParameters::isEnabled())
                #    {
                #        vendEPRemitInfo_BR_ds.reread();
                #        vendEPRemitInfo_BR_ds.refresh();
                #        ledgerJournalTransPayment_BR.setPaymentSetting_BR(ledgerJournalTrans.AccountType, ledgerJournalTrans.RecId, LedgerJournalTrans.PaymSpec, ledgerJournalTrans.PaymMode);
                #        LedgerJournalTransPayment_BR_ds.reread();
                #        LedgerJournalTransPayment_BR_ds.refresh();
                #        element.setLookupButton_BR();
                #    }
                #    // </GBR>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OffsetAccountType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    LedgerJournalACType offsetACType = this.getValue();
                #
                #//  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                #//  form-specific, and defaulting for asset was moved to the LedgerJournalEngine class and requires multiple table buffers and
                #//  thus cannot be called from the super()
                #//
                #    if (priorOffsetAccountType != offsetACType)
                #    {
                #        priorOffsetAccountType = offsetACType;
                #        ledgerJournalEngine.offsetAccountTypeModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
                #
                #        if (ledgerJournalTrans.modifiedFieldRemovesAccruals(fieldNum(LedgerJournalTrans, OffsetAccountType)))
                #        {
                #            ledgerJournalTrans.removeAccruals();
                #        }
                #    }
                #//  super();
                #
                #    element.enableDepreciationStartDate();
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        journalFormTrans.enableAgreementFields_RU();
                #    }
                #    // </GEERU>
                #
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankTransType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <GEERU>
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.bankTransTypeModified_RU(ledgerJournalTrans);
                #    journalFormTrans.enableCurrencyConvert_RU();
                #}
                #// </GEERU>
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OffsetCompany
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.offsetCompanyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    dimOffsetAccountController.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TransDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #    // <GCN>
                #    if (chineseVoucher_CN)
                #    {
                #        ledgerJournalEngine.transDateUpdate_CN(ledgerJournalTrans);
                #    }
                #    // </GCN>
                #    ledgerJournalEngine.transDateModified(ledgerJournalTrans);
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DocumentDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalEngine.documentDateModified(ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Payment
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalEngine.paymentModified(ledgerJournalTrans);
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CashDiscCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Triangulation
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #    ledgerJournalEngine.triangulationModified(ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxItemGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{;
                #    TaxItemGroupHeading::taxItemGrouplookup(_formControl, ledgerJournalTrans.Company);
                #}
                #
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    ledgerjournaltrans_ds.refresh();
                #
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD VATNumJournal
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    if (TaxVATNumTable::taxVATNumTableEnabled())
                #        TaxVATNumTable::jumpRefVATNum(ledgerJournalTrans, element);
                #    else
                #        super();
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    if (TaxVATNumTable::taxVATNumTableEnabled())
                #        TaxVATNumTable::lookupVATNum(_formControl,ledgerJournalTrans);
                #    else
                #        super(_formControl, _filterStr);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Prepayment
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ledgerJournalTrans.Prepayment &&
                #        VendParameters::find().TaxOnPrepayment &&
                #        !ledgerJournalTrans.ledgerJournalTable().LedgerJournalInclTax)
                #    {
                #        error ("@SYS98399");
                #        ret = false;
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.initVendPostingProfile(ledgerJournalTrans);
                #    element.enableButtonsActive();
                #
                #    ledgerJournalTrans_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankCentralBankPurposeCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.bankCentralBankPurposeCodeModified(ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CustVendBankAccountId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    // <GJP>
                #    if (VendPaymFeeUtil_JP::isVendorPaymFeeEnabled())
                #    {
                #        if (ret)
                #        {
                #            ret = Box::okCancel(
                #                "@SYS4003232",
                #                DialogButton::Cancel,
                #                "@SYS75654") == DialogButton::Ok;
                #        }
                #    }
                #
                #    // </GJP>
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    // <GJP>
                #    //update the payment fee
                #    element.updatePaymentFee_JP();
                #    // </GJP>
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    VendBankAccount::lookupBankAccount(_formControl,
                #                                            ledgerJournalTrans.parmAccount(),
                #                                            ledgerJournalTrans.Company,
                #                                            DateTimeUtil::newDateTime(ledgerJournalTrans.TransDate,0),
                #                                            ledgerJournalTrans.PaymMode);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    Args        args;
                #    FormRun     formRun;
                #    ;
                #    args = new Args(formStr(VendBankAccounts));
                #
                #    args.record(ledgerJournalTrans);
                #
                #    formRun = classfactory.formRunClass(args);
                #    formRun.init();
                #    formRun.run();
                #    formRun.detach();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankRemittanceType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankAccountId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #    ledgerJournalTrans_ds.refresh();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxWithholdGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean isValid;
                #    ;
                #
                #    // don't call super because it ignores the reference company
                #
                #    isValid = true;
                #
                #    if (isValid &&
                #        (ledgerJournalTrans.TaxWithholdGroup != '') &&
                #        (!TaxWithholdGroupHeading::existByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.TaxWithholdGroup)))
                #    {
                #        isValid = checkFailed(strFmt(
                #            "@SYS112224",
                #            ledgerJournalTrans.TaxWithholdGroup,
                #            fieldPName(LedgerJournalTrans, TaxWithholdGroup),
                #            tablePName(TaxWithholdGroupHeading)));
                #    }
                #
                #    return isValid;
                #}
                #
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    TaxWithholdGroupHeading::lookupTaxWithholdGroup(_formControl, _filterStr, ledgerJournalTrans.Company);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    super();
                #
                #    ledgerJournalTrans_ds.write();
                #    ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD LedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    // <GEERU>
                #    BankAdvancedTransType_RU bankAdvancedTransType;
                #    // </GEERU>
                #    super();
                #    element.accountNumModifiedPost();
                #    //This call needs to be made to update the RemittanceLocation reference group field which is modified in the ledgerJournalEngine.accountNumModified() method.
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    journalFormTrans.enableButtonsActive();
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    // <GIN>
                #    if (TaxWithholdParameters_IN::checkTaxParameters())
                #    {
                #        element.setTaxWithholdEnabled_IN();
                #        ledgerJournalTrans.SoftwareDeclReceived_IN = NoYes::No;
                #    }
                #    // </GIN>
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        bankAdvancedTransType = BankTransType::find(ledgerJournalTrans.BankTransType).BankAdvancedTransType_RU;
                #
                #        if (bankAdvancedTransType == BankAdvancedTransType_RU::None)
                #        {
                #            element.accountNumModifiedPost();
                #
                #            ledgerJournalEngine.initVendPostingProfile(ledgerJournalTrans);
                #        }
                #        journalFormTrans.enableOrderPaymentFields_RU();
                #    }
                #    // </GEERU>
                #
                #    // <GTH>
                #    if (TaxThaiGovCertificationFeatureChecker::isTaxBranchParamMarked())
                #    {
                #        // This is a workaround to fix a UI refresh problem. No business logic for this.
                #        // The branch controls in the same tab with account field can not be refreshed while account is changed.
                #        // A call to unpack of extension table can force a client buffer refresh.
                #        ledgerJournalTrans.ledgerJournalTransExtensionTH();
                #
                #        ledgerJournalTransExtensionTH_DS.refresh();
                #    }
                #    // </GTH>
                #}
              ENDSOURCE
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common common = dimAccountController.resolveReference();
                #
                #    return common;
                #}
                #
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    switch(ledgerJournalTrans.AccountType)
                #    {
                #        case LedgerJournalACType::Cust :
                #                CustTable::jumpRefCustomer(ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
                #                break;
                #        case LedgerJournalACType::Vend :
                #                VendTable::jumpRefVendor(ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
                #                break;
                #        default :
                #                dimAccountController.jumpRef();
                #    }
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD OffsetLedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    // <GEERU>
                #    BankAdvancedTransType_RU bankAdvancedTransType;
                #    // </GEERU>
                #    super();
                #
                #    ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
                #
                #    if(ledgerJournalTrans.AccountType != LedgerJournalACType::FixedAssets &&
                #       ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets)
                #    {
                #        // The primary account is not of type fixed assets and the offset account was changed
                #        // to a fixed asset account, so redefault the depreciation start date.
                #        ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #        element.enableDepreciationStartDate();
                #    }
                #
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                #    // <GIN>
                #    if (TaxWithholdParameters_IN::checkTaxParameters())
                #    {
                #        element.setTaxWithholdEnabled_IN();
                #    }
                #    // </GIN>
                #    // <GEERU>
                #    if(countryRegion_RU)
                #    {
                #        bankAdvancedTransType = BankTransType::find(ledgerJournalTrans.BankTransType).BankAdvancedTransType_RU;
                #
                #        if (bankAdvancedTransType == BankAdvancedTransType_RU::None)
                #        {
                #            ledgerJournalEngine.initVendPostingProfile(ledgerJournalTrans);
                #            ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);
                #            ledgerJournalEngine.initRCashPostingProfile_RU(ledgerJournalTrans);
                #            ledgerJournalEngine.initEmplPostingProfile_RU(ledgerJournalTrans);
                #        }
                #        ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    }
                #    // </GEERU>
                #    // <GJP>
                #    //update the payment fee
                #    element.updatePaymentFee_JP();
                #    // </GJP>
                #}
              ENDSOURCE
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common common = dimOffsetAccountController.resolveReference();
                #
                #    return common;
                #}
                #
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    switch(ledgerJournalTrans.OffsetAccountType)
                #    {
                #        case LedgerJournalACType::Cust :
                #                CustTable::jumpRefCustomer(ledgerJournalTrans.parmOffsetAccount(), ledgerJournalTrans.Company);
                #                break;
                #        case LedgerJournalACType::Vend :
                #                VendTable::jumpRefVendor(ledgerJournalTrans.parmOffsetAccount(), ledgerJournalTrans.Company);
                #                break;
                #        default :
                #                dimOffsetAccountController.jumpRef();
                #    }
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD RemittanceLocation
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookupReference
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = LogisticsLocation::lookupRemittanceLocation(_formReferenceControl, ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD Voucher_CN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #    // <GCN>
                #    if (ret
                #        && chineseVoucher_CN)
                #    {
                #        ret = ledgerJournalEngine.checkVoucher_CN(ledgerJournalTrans);
                #    }
                #    // </GCN>
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TDSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #//<GIN>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans.Company);
                #}
                #//</GIN>
              ENDSOURCE
              SOURCE #modified
                #//<GIN>
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
                #//</GIN>
              ENDSOURCE
              SOURCE #jumpRef
                #//<GIN>
                #public void jumpRef()
                #{
                #
                #    TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.tdsGroup_IN, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans);
                #}
                #//</GIN>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TCSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #//<GIN>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans.Company);
                #}
                #//</GIN>
              ENDSOURCE
              SOURCE #modified
                #//</GIN>
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
                #//</GIN>
              ENDSOURCE
              SOURCE #jumpRef
                #//<GIN>
                #public void jumpRef()
                #{
                #    TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.tcsGroup_IN, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans);
                #}
                #//</GIN>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD CompanyLocation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRefLocationAddressForm(ledgerJournalTrans.CompanyLocation_IN, this);
                #}
                #// </GIN>
                #
              ENDSOURCE
              SOURCE #lookupReference
                #// <GIN>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxInformation_IN::locationLookup(_formReferenceControl, CompanyInfo::findDataArea(ledgerJournalTrans.Company).RecId);
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #modified
                #// <GIN>
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalTrans_ds.refresh();
                #    ledgerJournalTransTaxExtensionIN.TaxInformation_IN = TaxInformation_IN::findDefaultbyLocation(ledgerJournalTrans.CompanyLocation_IN).RecId;
                #    ledgerJournalTransTaxExtensionIN_DS.object(fieldNum(ledgerJournalTransTaxExtensionIN, TaxInformation_IN)).modified();
                #
                #    journalFormTrans.enableDisableExciseRecordType_IN();
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD LedgerVoucherType_CN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    // <GCN>
                #    if (chineseVoucher_CN)
                #    {
                #        ledgerJournalEngine.voucherTypeUpdate_CN(ledgerJournalTrans);
                #    }
                #    // </GCN>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD CustomsTariffCodeTable_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #// <GIN>
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return CustomsTariffCodeTable_IN::resolveCustomsTariffCode(_formReferenceControl, ledgerJournalTrans.CustomsTariffDirection_IN);
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #lookupReference
                #// <GIN>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = CustomsTariffCodeTable_IN::lookupDirectionImportExport(_formReferenceControl, enum2str(ledgerJournalTrans.CustomsTariffDirection_IN), ledgerJournalTrans.Company);
                #
                #    return ret;
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD ExciseType_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    journalFormTrans.enableDisableExciseRecordType_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OffsetPostingProfile_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GEERU>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LedgerJournalEngine::lookupPostingProfileForAccTypeOffset_RU(_formControl, _filterStr, ledgerJournalTrans);
                #}
                #// </GEERU>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountAgreementId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans);
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ledgerJournalEngine.agreementLookup_RU(_formControl, ledgerJournalTrans, _filterStr);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OffsetAccountAgreementId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ledgerJournalEngine.agreementLookup_RU(_formControl,
                #        ledgerJournalTrans,
                #        _filterStr,
                #        AccountOffsetaccount::OffsetAccount);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #insertIntoLedgerJournalTransTaxExt_IN
          #// <GIN>
          #public void insertIntoLedgerJournalTransTaxExt_IN()
          #{
          #    ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = ledgerJournalTrans.RecId;
          #    if (ledgerJournalTransTaxExtensionIN_ds.validateWrite())
          #    {
          #        ledgerJournalTransTaxExtensionIN_ds.write();
          #    }
          #}
          #// </GIN>
        ENDSOURCE
        SOURCE #jumpRefBankLC
          #public void jumpRefBankLC()
          #{
          #    LedgerJournalTransBankLC ledgerJournalTransBankLC;
          #
          #    if (bankLCImportLineNumController)
          #    {
          #        ledgerJournalTransBankLC = ledgerJournalTrans.getLedgerJournalTransBankLC();
          #        if (ledgerJournalTransBankLC.BankLCLine)
          #        {
          #            bankLCImportLineNumController.parmBankLCRecId(ledgerJournalTransBankLC.getBankLCLine().BankLC);
          #        }
          #        bankLCImportLineNumController.jumpRef();
          #    }
          #}
        ENDSOURCE
        SOURCE #modifiedAmount
          #public void modifiedAmount()
          #{
          #    try
          #    {
          #        ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
          #    }
          #    catch
          #    {
          #        // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
          #        // of the transaction buffers must be handled as the kernel does not perform this automatically.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();
          #
          #        // Signal that the write event is finished with a failure by calling endEntityWriteEvent
          #        // and passing in 'true' for the failure parameter.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);
          #
          #        throw Exception::Error;
          #    }
          #}
        ENDSOURCE
        SOURCE #displayRemittanceAddress
          #/// <summary>
          #/// Gets the vendor remittance address associated with the vendor <c>RemittanceLocation</c> or <c>RemittanceAddress</c> record id field on the <c>LedgerJournalTrans</c> table.
          #/// </summary>
          #/// <returns>
          #/// The remittance address.
          #/// </returns>
          #/// <remarks>
          #/// The remittance address on the trans date is returned if the journal is posted.
          #/// The current date effective remittance address is returned for an unposted journal.
          #/// </remarks>
          #//BP Deviation Documented
          #public display RemittanceAddressing displayRemittanceAddress()
          #{
          #    if(!hasFieldAccess(tableNum(LogisticsPostalAddress), fieldNum(LogisticsPostalAddress, Address),AccessType::View))
          #    {
          #        error("@SYS57330");
          #    }
          #
          #    return ledgerJournalEngine.displayRemittanceAddress(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #leaveRecord
          #public boolean leaveRecord(boolean _forceUpdate = false)
          #{
          #    boolean ret;
          #    ;
          #
          #    ret = super(_forceUpdate);
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
          #    {
          #        // A write was requested on the sibling and the client did not write the entity. This happens
          #        // when focus is removed from a sibling data source (such as LedgerJournalTrans_Asset) as the
          #        // client only calls write on that specific sibling and not on the entire entity.
          #
          #        // Write the entire entity.
          #        ledgerJournalTrans_DS.write();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #validateDelete
          #public boolean validateDelete()
          #{
          #    boolean isValid = true;
          #
          #    if (!super())
          #    {
          #        // The LedgerJournalTrans' delete method requires an exception to be thrown
          #        // so that the transaction is aborted.
          #        throw Exception::Error;
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    // <GBR>
          #    TaxWithholdTrans taxWithholdTrans;
          #    // </GBR>
          #    boolean ret;
          #
          #    ret = super();
          #
          #    if (ret && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
          #    {
          #        ret = false;
          #    }
          #
          #    // <GCN>
          #    if (ret
          #        && chineseVoucher_CN
          #        && !ledgerJournalTable.VoucherAllocatedAtPosting
          #        && !ledgerJournalTrans.Voucher_CN)
          #    {
          #        // Voucher number must be filled in
          #        ret = checkFailed(strFmt("@SYS26332", "@SYS5732"));
          #    }
          #    // </GCN>
          #
          #    // <GBR>
          #    if (BrazilParameters::isEnabled()
          #        &&  ret
          #        &&  ledgerJournalTrans.orig().TransDate != ledgerJournalTrans.TransDate
          #        &&  ledgerJournalTrans.hasTaxWithholdingTransactions_BR())
          #    {
          #        if (dateStartMth(ledgerJournalTrans.orig().TransDate) == dateStartMth(ledgerJournalTrans.TransDate))
          #        {
          #            update_recordset taxWithholdTrans
          #                setting TransDate = ledgerJournalTrans.TransDate
          #                where taxWithholdTrans.LedgerJourTransRecId_BR == ledgerJournalTrans.RecId;
          #        }
          #        else
          #        {
          #            error("@GLS2086");
          #            ret = false;
          #        }
          #    }
          #    // </GBR>
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #reread
          #public void reread()
          #{
          #    if (ledgerJournalTrans.RecId != 0)
          #        super();
          #}
          #
        ENDSOURCE
        SOURCE #exchRateTxt
          #//BP Deviation Documented
          #display ExchRateSecondTxt exchRateTxt()
          #{
          #    return ledgerJournalEngine.exchRateTxt(ledgerJournalTrans);
          #}
          #
        ENDSOURCE
        SOURCE #initValue
          #void initValue()
          #{
          #    if (ledgerJournalEngine.numberSeqFormHandlerJournal())
          #    {
          #        ledgerJournalEngine.numberSeqFormHandlerJournal().formMethodDataSourceCreatePre();
          #    }
          #    super();
          #    ledgerJournalEngine.formMethodDataSourceCreatePost();
          #    ledgerJournalEngine.initValue(ledgerJournalTrans);
          #    if (ledgerJournalTable.BankAccountId)
          #    {
          #        ledgerJournalTrans.BankAccountId = ledgerJournalTable.BankAccountId;
          #
          #    }
          #}
        ENDSOURCE
        SOURCE #write
          #/// <summary>
          #/// Handles the write event for the entire <c>LedgerJournalTrans</c> entity.
          #/// </summary>
          #/// <remarks>
          #/// This method performs the write for the entire entity, which includes <c>LedgerJournalTrans</c> and <c>LedgerJournalTrans_Asset</c>.
          #/// </remarks>
          #public void write()
          #{
          #    boolean isNewRecord = !ledgerJournalTrans.RecId; // Flag that indicates whether or not this is a new record. Used for clean-up purposes later.
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
          #    {
          #        // The kernel calls leaveRecord during the delete event which will cause this method to
          #        // be called if the user had made changes. This causes issues and must be special cased
          #        // until the behavior is changed.
          #        return;
          #    }
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
          #    {
          #        // The entity is already being written. The extra call to write is unnecessary.
          #        return;
          #    }
          #
          #    try
          #    {
          #        ttsbegin;
          #
          #        // Signal the start of the write event.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityWriteEvent();
          #
          #        // Clear out any old snapshots for the write event.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();
          #
          #        ledgerJournalEngine.preWrite(ledgerJournalTrans);
          #        ledgerJournalEngine.preWriteUpdateDefaultDimension(ledgerJournalTrans, ledgerJournalTrans_Asset);
          #        ledgerJournalEngine.formMethodDataSourceWritePre();
          #
          #        // -----------------------------------------------------------------------------------
          #        // Validate and write the entire entity. This must be done because to maintain data integrity
          #        // as we require an "all or nothing" behavior.
          #        // -----------------------------------------------------------------------------------
          #
          #        // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
          #        // the case the transaction is aborted.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
          #
          #        // <GCN>
          #        if (LedgerParameters::isChineseVoucher_CN())
          #        {
          #            ledgerJournalTrans.write();
          #            ledgerJournalTrans.reread();
          #        }
          #        // </GCN>
          #
          #        super();
          #
          #        // -----------------------------------------------------------------------------------
          #        // Validate and write the sibling tables. This must be done because of the passive link
          #        // type, which requires that one manually manage writes.
          #        // -----------------------------------------------------------------------------------
          #        if (ledgerJournalTrans.isFixedAssetsTransaction())
          #        {
          #            // Synchronize, validate and write the fixed assets sibling record. This call will throw
          #            // an exception if validation fails. A snapshot of the current buffer is taken to support
          #            // in-memory rollback of the buffer in the case the transaction is aborted.
          #            ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Asset();
          #            ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteFixedAssetsSibling();
          #        }
          #        else
          #        {
          #            // If this is not a fixed assets transaction, and it had been, the super() call
          #            // above should have deleted the sibling record in the database. Because of this,
          #            // the RecId of the buffer needs to be cleared out so that it will be inserted if
          #            // it gets changed back to being a fixed assets transaction.
          #            ledgerJournalTrans_Asset.RecId = 0;
          #        }
          #
          #        // <GEERU>
          #        if (ledgerJournalTrans.isCashTransaction_RU())
          #        {
          #            ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_RCash();
          #            ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteCashSibling_RU();
          #        }
          #        else
          #        {
          #            ledgerJournalTrans_RCash.RecId = 0;
          #        }
          #        // </GEERU>
          #        // -----------------------------------------------------------------------------------
          #
          #        ledgerJournalEngine.write(ledgerJournalTrans);
          #
          #        if (BrazilParameters::isEnabled())
          #        {
          #            LedgerJournalTransPayment_BR.SysExtensionSerializerExtensionMap::insertAfterBaseTable(LedgerJournalTrans);
          #        }
          #
          #        element.bookRefresh();
          #
          #        // Signal that the write event is finished.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();
          #
          #        // <GBR>
          #        if (BrazilParameters::isEnabled())
          #        {
          #            ledgerJournalTransPayment_BR.RefRecId = ledgerJournalTrans.RecId;
          #            ledgerJournalTransPayment_BR.EPPaymentType_BR = ledgerJournalTrans.PaymSpec ? VendPaymModeSpec::findSpec(ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec).EPPaymentType_BR : '';
          #            ledgerJournalTransPayment_BR.EPPaymentWay_BR  = ledgerJournalTrans.PaymSpec ? VendPaymModeSpec::findSpec(ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec).EPPaymentWay_BR  : '';
          #
          #            LedgerJournalTransPayment_BR_ds.reread();
          #            LedgerJournalTransPayment_BR_ds.refresh();
          #        }
          #        // </GBR>
          #
          #        // <GTH>
          #        if (LedgerJournalTransExtensionTH_ds.isNeeded())
          #        {
          #            if (LedgerJournalTransExtensionTH.LedgerJournalTrans == 0)
          #            {
          #                LedgerJournalTransExtensionTH.LedgerJournalTrans = LedgerJournalTrans.RecId;
          #                if (LedgerJournalTransExtensionTH_ds.validateWrite())
          #                {
          #                    LedgerJournalTransExtensionTH_ds.write();
          #                }
          #            }
          #        }
          #        // </GTH>
          #
          #        ttscommit;
          #    }
          #    catch (Exception::UpdateConflict)
          #    {
          #        // This exception should not be handled by the generic handling logic below, as it assumes
          #        // that a rollback needs to be performed.
          #        // A rollback should not be performed for an update conflict, as the record will never
          #        // be capable of being saved.
          #
          #        // Signal that the write event is finished with a failure by calling endEntityWriteEvent
          #        // and passing in 'true' for the failure parameter.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);
          #
          #        // Chain the exception forward.
          #        throw Exception::UpdateConflict;
          #    }
          #    catch
          #    {
          #        // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
          #        // of the transaction buffers must be handled as the kernel does not perform this automatically.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();
          #
          #        // Signal that the write event is finished with a failure by calling endEntityWriteEvent
          #        // and passing in 'true' for the failure parameter.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);
          #
          #        throw Exception::Error;
          #    }
          #}
        ENDSOURCE
        SOURCE #linkActive
          #void linkActive()
          #{
          #    // Clear out posting results since newJournalActive() will create a new instance anyway, and calling
          #    // clearVoucher and other methods with the old posting results server object causes unnecessary
          #    // RPC calls
          #    ledgerJournalEngine.parmPostingResults_Server(null);
          #
          #    ledgerJournalEngine.clearVoucher();
          #
          #    ledgerJournalEngine.newJournalActive(ledgerJournalTable);
          #    ledgerJournalEngine.formMethodDataSourceLinkActivePre();
          #    journalFormTrans.datasourceLinkActivePre();
          #
          #    super();
          #
          #    if (ledgerJournalTable.JournalNum != journalNum)
          #    {
          #        // If the stored journalNum has become out of sync with the reference
          #        // to ledgerJournalTable, then we need to rerun initLedger. This
          #        // will occur when the user has switched journals on the parent form.
          #        element.initLedger();
          #    }
          #}
        ENDSOURCE
        SOURCE #init
          #void init()
          #{
          #    super();
          #
          #    ledgerJournalTransRange = this.query().dataSourceNo(1).addRange(fieldNum(LedgerJournalTrans, Invisible));
          #    ledgerJournalTransRange.value(strFmt('%1', 0));
          #
          #    ledgerJournalEngine = new LedgerJournalEngine_VendPayment(element);
          #    journalFormTrans.datasourceInitPost(ledgerJournalTrans);
          #
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        // Brazil is using WHT intersection by invoice line, field need to be invisible
          #        LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxWithholdGroup)).visible(false);
          #    }
          #    // </GBR>
          #
          #    this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, accountName));
          #    this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    LedgerJournalTrans ledgerJournalTrans_Orig;
          #    ;
          #
          #    try
          #    {
          #        ttsbegin;
          #
          #        // The kernel calls leaveRecord during the super call, which will cause write to be called
          #        // on the datasource if there are changes to the buffer. We don't want this to happen,
          #        // so special case around this until the behavior is changed.
          #
          #        // Signal that the entity delete event has started.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityDeleteEvent();
          #
          #        // Clear out any old snapshots for the write event.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();
          #
          #        ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans);
          #        ledgerJournalTrans_Orig = ledgerJournalTrans.data();
          #
          #        ledgerJournalEngine.preDelete(ledgerJournalTrans);
          #        ledgerJournalEngine.formMethodDataSourceDeletePre();
          #
          #        if (!ledgerJournalTrans_Asset_DS.validateDelete())
          #        {
          #            // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
          #            throw Exception::Error;
          #        }
          #
          #        // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
          #        // the case the transaction is aborted.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
          #        super();
          #        // -----------------------------------------------------------------------------------
          #
          #        ledgerJournalEngine.delete(ledgerJournalTrans_Orig);
          #
          #        if (ledgerJournalTrans)
          #            element.setDebCredProposal(true);
          #
          #        element.bookRefresh();
          #
          #        // Signal that the entity delete event has finished.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent();
          #
          #        ttscommit;
          #    }
          #    catch
          #    {
          #        // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
          #        // of the transaction buffers must be handled as the kernel does not perform this automatically.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedDelete();
          #
          #        // Signal that the entity delete event is finished with a failure by calling endEntityDeleteEvent
          #        // and passing in 'true' for the failure parameter.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent(true);
          #
          #        throw Exception::Error;
          #    }
          #
          #    buttonSettlement.enabled(false);
          #}
          #
        ENDSOURCE
        SOURCE #create
          #void create(boolean append = false)
          #{
          #
          #    // --------------------------------------------------------------------------------------
          #    // The client mistakingly calls create after a failed write. Add in a check to prevent the
          #    // extra, mistaken, call to create.
          #    // --------------------------------------------------------------------------------------
          #    if (!ledgerJournalTransEntityManager.getFormDataEventManager().isLastWriteAttemptFailed())
          #    {
          #        // The last write attempt was a success, so this is being called in the context of
          #        // record creation.
          #
          #        try
          #        {
          #            ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityCreateEvent();
          #
          #            journalFormTrans.datasourceCreatePre();
          #
          #            element.setDebCredProposal(true);
          #
          #            super(append);
          #
          #            // Signal that the create event is finished.
          #            ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
          #        }
          #        catch (Exception::UpdateConflict)
          #        {
          #            // This exception should not be handled by the generic handling logic below.
          #
          #            // Signal that the create event is finished.
          #            ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
          #
          #            // Chain the exception forward.
          #            throw Exception::UpdateConflict;
          #        }
          #        catch
          #        {
          #            // Signal that the create event is finished.
          #            ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
          #
          #            throw Exception::Error;
          #        }
          #    }
          #}
          #
        ENDSOURCE
        SOURCE #active
          #/// <summary>
          #/// Handles the event that is fired each time a record is read by the data source.
          #/// </summary>
          #/// <returns>
          #/// An integer return code.
          #/// </returns>
          #public int active()
          #{
          #    int ret;
          #    boolean allowPDC;
          #    boolean markedInvoice;
          #    UserGroupId approveGroupId = ledgerJournalTable.ledgerJournalName().ApproveGroupId;
          #
          #    ret = super();
          #
          #    if (ret)
          #    {
          #        ledgerJournalEngine.active(ledgerJournalTrans);
          #        priorOffsetAccountType = ledgerJournalTrans.OffsetAccountType;
          #
          #        ledgerJournalEngine.setChildDataSourceAccess(ledgerJournalTrans,custVendPaymJournalFee);
          #
          #        journalFormTrans.datasourceActivePost();
          #        custVendNACHAIATInfoTable_US.enabled(
          #                    CustVendNACHAIATInfoTable_US::isValidCustVendNACHAIATInfoTable_US(ledgerJournalTrans));
          #    }
          #
          #    journalFormTrans.setDelTransButtonEnabledForJournalLine(ledgerJournalTrans.PaymentStatus);
          #
          #    if (ledgerJournalTable.Approver)
          #    {
          #        if (!UserInfoHelp::userInUserGroup(curUserId(), approveGroupId))
          #        {
          #            buttonDeleteTransactions.enabled(false);
          #            vendPaymProposalCreate.enabled(false);
          #        }
          #    }
          #
          #    if (ledgerJournalTable.ledgerJournalName().ApproveActive)
          #    {
          #        if (!UserInfoHelp::userInUserGroup(curUserId(), approveGroupId))
          #        {
          #            buttonApprove.enabled(false);
          #            buttonReject.enabled(false);
          #        }
          #    }
          #
          #    if (ledgerJournalTable.BankAccountId)
          #    {
          #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, BankAccountId)).allowEdit(false);
          #    }
          #
          #    element.setRemitteeCurrency();
          #
          #    dimAccountController.parmDataAreaId(ledgerJournalTrans.Company);
          #    dimOffsetAccountController.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
          #
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE])
          #        && ledgerJournalTrans.LedgerDimension)
          #    {
          #        markedInvoice = (SpecTrans::getSpecTransCount(
          #                                        ledgerJournalTrans.company(),
          #                                        ledgerJournalTrans.TableId,
          #                                        ledgerJournalTrans.RecId) != 0);
          #
          #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,TaxWithholdGroup)).
          #            allowEdit(!markedInvoice);
          #    }
          #
          #    element.setPaymentByLetterOfCredit();
          #
          #    // Redraw the form so that changes are reflected back to the user.
          #    element.redraw();
          #
          #    vendChequeCopy.enabled(ledgerJournalTrans.canPrintNonNegotiableCheque());
          #    // <GIN>
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
          #    {
          #        if (TaxWithholdParameters_IN::checkTaxParameters())
          #        {
          #            element.setTaxWithholdEnabled_IN();
          #            element.taxWithholdAutority_IN();
          #
          #        }
          #        taxInformation_IN_ds.executeQuery();
          #        element.enableUpdatePLA_IN();
          #        journalFormTrans.enableDisableExciseRecordType_IN();
          #
          #        if (taxParametersLoc.vat_in
          #            && ledgerJournalEngine.posted()
          #            && ledgerJournalTrans.taxAmountJournal() > 0
          #            && ledgerJournalTrans.vatGoodsType_IN == VATGoodsType_IN::CapitalGoods
          #            && ((ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
          #                || (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)))
          #        {
          #            defermentSchedule_IN.enabled(true);
          #        }
          #        else
          #        {
          #            defermentSchedule_IN.enabled(false);
          #        }
          #    }
          #    // </GIN>
          #
          #    // Enable/disable PDCs
          #    if(postDatedCheckEnabled)
          #    {
          #        allowPDC = CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans);
          #        vendPDCRegister_ds.allowEdit(allowPDC);
          #        createPostDatedCheckInstallments.visible(allowPDC);
          #    }
          #    //BEGIN Active_method_modification  DEV: Fabian Orozco
          #    try{
          #
          #
          #        if(LedgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent){
          #
          #            STF_ExportFile.enabled(false);
          #        }
          #
          #        else if(LedgerJournalTrans.PaymentStatus == CustVendPaymStatus::None){
          #
          #            STF_ExportFile.enabled(true);
          #        }
          #    }
          #    catch{
          #     info("No funciona");
          #    }
          #    //END Active_method_modification DEV: Fabian Orozco
          #
          #    //BEGIN DEV:BL  STF_CrossPayment
          #    if(LedgerJournalTrans.STF_crossPayment && LedgerJournalTrans.AccountType == LedgerJournalACType::Vend)
          #        LedgerJournalTrans_STF_difExchRate.enabled(true);
          #    else
          #        LedgerJournalTrans_STF_difExchRate.enabled(false);
          #    //END DEV:BL  STF_CrossPayment
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #errorExist
          #//BP Deviation Documented
          #display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
          #{
          #    ImageRes res;
          #
          #    #resAppl;
          #
          #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
          #
          #    if (postingResults_Client.errorExists(_ledgerJournalTrans.Voucher))
          #    {
          #        res = imageListAppl.image(#ImageError);
          #    }
          #    else
          #    {
          #        res = -1;
          #    }
          #
          #    return res;
          #}
          #
        ENDSOURCE
        SOURCE #errorLog
          #//BP Deviation Documented
          #display LogTxt errorLog()
          #{
          #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
          #
          #    return postingResults_Client.errorLog(ledgerJournalTrans.Voucher);
          #}
          #
        ENDSOURCE
        SOURCE #postedDateTime
          #//BP Deviation Documented
          #display JournalPostedDateTime postedDateTime()
          #{
          #    return ledgerJournalEngine.postedDateTime();
          #}
          #
        ENDSOURCE
        SOURCE #approvedBy
          #//BP Deviation Documented
          #display ApprovedByPersonnelNumber approvedBy()
          #{
          #    return ledgerJournalEngine.approvedBy();
          #}
          #
        ENDSOURCE
        SOURCE #rejectedBy
          #//BP Deviation Documented
          #display UserId rejectedBy()
          #{
          #    return ledgerJournalEngine.rejectedBy();
          #}
          #
        ENDSOURCE
        SOURCE #reportedAsReadyBy
          #//BP Deviation Documented
          #display UserId reportedAsReadyBy()
          #{
          #    return ledgerJournalEngine.reportedAsReadyBy();
          #}
          #
        ENDSOURCE
        SOURCE #journalBalance
          #//BP Deviation Documented
          #display AmountMST journalBalance()
          #{
          #    return ledgerJournalEngine.journalDebit() - ledgerJournalEngine.journalCredit();
          #}
          #
        ENDSOURCE
        SOURCE #journalCredit
          #//BP Deviation Documented
          #display AmountMST journalCredit()
          #{
          #    return ledgerJournalEngine.journalCredit();
          #}
          #
        ENDSOURCE
        SOURCE #journalDebit
          #//BP Deviation Documented
          #display AmountMST journalDebit()
          #{
          #    return ledgerJournalEngine.journalDebit();
          #}
          #
        ENDSOURCE
        SOURCE #voucherTotal
          #//BP Deviation Documented
          #display AmountMST voucherTotal()
          #{
          #
          #    return ledgerJournalEngine.voucherDebit(ledgerJournalTrans) - ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
          #}
          #
        ENDSOURCE
        SOURCE #voucherCredit
          #//BP Deviation Documented
          #display AmountMST voucherCredit()
          #{
          #        return ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
          #}
          #
        ENDSOURCE
        SOURCE #voucherDebit
          #//BP Deviation Documented
          #display AmountMST voucherDebit()
          #{
          #
          #    return ledgerJournalEngine.voucherDebit(ledgerJournalTrans);
          #}
          #
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustVendPaymJournalFee
          Table               #CustVendPaymJournalFee
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD LedgerJournalACType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    super();
                #
                #    // Clear the account when the account type changes
                #    custVendPaymJournalFee.LedgerDimension = 0;
                #
                #    if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Ledger ||
                #        custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Vend)
                #    {
                #        vendPaymJournalFee_VendAccount.enabled(true);
                #    }
                #    else
                #    {
                #        // Disable the account lookup if the value is not Ledger or Vendor
                #        vendPaymJournalFee_VendAccount.enabled(false);
                #    }
                #    custVendPaymJournalFee_ds.rereadReferenceDataSources();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD LedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common common = dimPaymentFeeAccountController.resolveReference();
                #
                #    return common;
                #}
                #
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    dimPaymentFeeAccountController.jumpRef();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD IsPaymFeeCoveredByVendor_JP
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <GJP>
                #public void modified()
                #{
                #    super();
                #
                #    custVendPaymJournalFee_ds.object(fieldNum(CustVendPaymJournalFee, TaxDirection_JP)).allowEdit(CustVendPaymJournalFee.IsPaymFeeCoveredByVendor_JP);
                #}
                #// </GJP>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    // <GJP>
          #    #ISOCountryRegionCodes
          #    // </GJP>
          #    int ret;
          #
          #    ret = super();
          #    // <GJP>
          #    if (VendPaymFeeUtil_JP::isVendorPaymFeeEnabled())
          #    {
          #        this.object(fieldNum(CustVendPaymJournalFee, LedgerJournalACType)).allowEdit(!CustVendPaymJournalFee.IsPaymFeeCoveredByVendor_JP);
          #        this.object(fieldNum(CustVendPaymJournalFee, TaxDirection_JP)).allowEdit(CustVendPaymJournalFee.IsPaymFeeCoveredByVendor_JP);
          #    }
          #    // </GJP>
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
          #    ledgerJournalEngine.preWriteUpdateDefaultDimensionPaymFee(custVendPaymJournalFee);
          #    super();
          #    ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    ;
          #    ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
          #    super();
          #    ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    super();
          #
          #    custVendPaymJournalFee.Module = ModuleCustVend::Vend;
          #
          #    // <GJP>
          #    //Initialize the fee when it is covered by vendor
          #    custVendPaymJournalFee.initValueForVendorCovered_JP(ledgerJournalTrans);
          #    // </GJP>
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PaymentOrderBudgetTrans_RU
          Table               #PaymentOrderBudgetTrans_RU
          AllowCheck          #No
          AllowDelete         #No
          JoinSource          #LedgerJournalTrans
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD PeriodCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PeriodNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD year
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxPeriodDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransTaxPeriodDateModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #    Object  obj = ledgerJournalEngine;
          #    ;
          #
          #    if (obj.needWritePaymentOrderBudgetTrans_RU())
          #    {
          #        ret = super();
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    Object  obj = ledgerJournalEngine;
          #    ;
          #
          #    if (obj.needWritePaymentOrderBudgetTrans_RU())
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #RCashDestinationTrans
          Table               #RCashDestinationTrans
          CounterField        #AmountCur
          AllowCheck          #No
          JoinSource          #LedgerJournalTrans
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    if (! ledgerJournalTrans.RecId && ledgerJournalTrans_ds.validateWrite())
          #    {
          #        ledgerJournalTrans_ds.write();
          #    }
          #
          #    if (ledgerJournalTrans.RecId)
          #    {
          #        super(_append);
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTrans_Asset
          Table               #LedgerJournalTrans_Asset
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD BookId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    AssetBook::lookupOpenBookIdForAsset(_formControl,
                #                                        ledgerJournalTrans_Asset.AssetId,
                #                                        true,  // CurrentOperationsTax must be considered
                #                                        ledgerJournalTable.CurrentOperationsTax,
                #                                        ledgerJournalTrans_Asset.Company);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    ledgerJournalEngine.assetBookIdModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    super();
                #    if(ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                #    {
                #        ledgerJournalEngine.initFromAssetTable(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    }
                #
                #    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    element.enableDepreciationStartDate();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TransType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    ledgerJournalEngine.assetTransTypeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    super();
                #    element.enableDepreciationStartDate();
                #}
                #
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    ;
          #
          #    // --------------------------------------------------------------------------------------
          #    // The client mistakingly calls executeQuery after a failed write. Add in a check to
          #    // prevent the extra, mistaken, call to executeQuery.
          #    // --------------------------------------------------------------------------------------
          #    if (!ledgerJournalTransEntityManager.getFormDataEventManager().isLastWriteAttemptFailed())
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    ;
          #
          #    // --------------------------------------------------------------------------------------
          #    // The client mistakingly calls create after a failed write. Add in a check to prevent the
          #    // extra, mistaken, call to create.
          #    // --------------------------------------------------------------------------------------
          #    if (!ledgerJournalTransEntityManager.getFormDataEventManager().isLastWriteAttemptFailed())
          #    {
          #        // The last write attempt was a success, so this is being called in the context of
          #        // record creation.
          #
          #        super(_append);
          #        ledgerJournalEngine.formMethodDataSourceFixedAssetsCreate(ledgerJournalTrans, ledgerJournalTrans_Asset);
          #    }
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    ;
          #
          #    super();
          #
          #    ledgerJournalEngine.initValueAsset(ledgerJournalTrans_Asset);
          #    element.enableDepreciationStartDate();
          #}
          #
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    element.enableDepreciationStartDate();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #validateDelete
          #public boolean validateDelete()
          #{
          #    boolean isValid = true;
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
          #    {
          #        // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.
          #
          #        // Call LedgerJournalTrans_Asset.validateDelete directly as we don't want an extra delete
          #        // confirmation dialog to be shown.
          #        isValid = ledgerJournalTrans_Asset.validateDelete();
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
          #    {
          #        // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.
          #
          #        // Call LedgerJournalTrans_Asset.delete directly as super calls validateWrite, which will cause
          #        // an extra delete confirmation dialog to be shown.
          #        ledgerJournalTrans_Asset.delete();
          #    }
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    ;
          #
          #    ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
          #    {
          #        // Only perform the write if called from the LedgerJournalTrans datasource's write event.
          #        super();
          #    }
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean isValid = true;
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
          #    {
          #        // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
          #        isValid = super();
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #linkActive
          #public void linkActive()
          #{
          #    ;
          #
          #    super();
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
          #    {
          #        // The sibling write can no longer be handled so cancel the request.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TaxInformation_IN
          Table               #TaxInformation_IN
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #LedgerJournalTransTaxExtensionIN
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD SalesTaxRegistrationNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.SalesTaxRegistrationNumber).RegistrationNumber,
                #        TaxType_IN::SalesTax,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TIN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.TIN).RegistrationNumber,
                #        TaxType_IN::VAT,
                #        ledgerjournaltrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TAN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxWithholdRegNumbers_IN::jumpRef(
                #        TaxWithholdRegNumbers_IN::find(taxInformation_IN.TIN).RegistrationNumber,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ManECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.ManECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TraderECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.TraderECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD IECRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.IECRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Customs,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD STCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.STCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::ServiceTax,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ECCNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.ECCNumber).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #UpdatePLAEnquiry_IN
          Table               #UpdatePLAEnquiry_IN
          AllowCheck          #No
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendPDCRegister
          Table               #CustVendPDCRegister
          AllowCheck          #No
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD OriginalCheck
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    CustVendPDCRegister::lookupCheckNumber(_formControl);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD StopPayment
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    pdcGroup_ReasonForStop.enabled(vendPDCRegister.StopPayment);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #    vendPDCRegister.LedgerJournalTrans = ledgerJournalTrans.RecId;
          #    vendPDCRegister.AccountType = CustVendACType::Vend;
          #    super();
          #}
          #
        ENDSOURCE
        SOURCE #active
          # public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    element.enableReplacementFields();
          #    pdcGroup_ReasonForStop.enabled(vendPDCRegister.StopPayment);
          #
          #    return ret;
          #}
          #
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #BankCurrencyTransferLog_RU
          Table               #BankCurrencyTransferLog_RU
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #LedgerJournalTrans
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransTaxExtensionIN
          Table               #LedgerJournalTransTaxExtensionIN
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD TaxInformation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRef(ledgerJournalTransTaxExtensionIN.TaxInformation_IN, this);
                #}
              ENDSOURCE
              SOURCE #modified
                #// <GIN>
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                #    TaxInformation_IN_DS.linkActive();
                #    LedgerJournalTransTaxExtensionIN_DS.write();
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #lookupReference
                #// <GIN>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxInformation_IN::lookup(_formReferenceControl, ledgerJournalTrans.CompanyLocation_IN);
                #}
                #// </GIN>
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #isNeeded
          #// <GIN>
          #private boolean isNeeded()
          #{
          #    return TaxParameters::checkTaxParameters_IN();
          #}
          #// </GIN>
        ENDSOURCE
        SOURCE #init
          #// <GIN>
          #public void init()
          #{
          #    if (this.isNeeded())
          #    {
          #        this.linkType(FormLinkType::InnerJoin);
          #    }
          #    super();
          #}
          #// </GIN>
        ENDSOURCE
        SOURCE #initValue
          #// <GIN>
          #public void initValue()
          #{
          #    super();
          #    ledgerJournalTransTaxExtensionIN.TaxModelDocLineExtensionIN::init(ledgerJournalTrans);
          #}
          #// </GIN>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTrans_RCash
          Table               #LedgerJournalTrans_RCash
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransPayment_BR
          Table               #LedgerJournalTransPayment_BR
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #    if (BrazilParameters::isEnabled() && LedgerJournalTransPayment_BR.RefRecId)
          #    {
          #        // no-op because a record with an empty FK is not valid
          #        super();
          #    }
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    if (BrazilParameters::isEnabled())
          #    {
          #        ledgerJournalTransPayment_BR_ds.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransSymbol
          Table               #LedgerJournalTransSymbol
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
          #    {
          #        // Only enable the symbol datasource if the country context is correct
          #        LedgerJournalTransSymbol_DS.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #// <GEECZ>
          #public boolean validateWrite()
          #{
          #    boolean isValid;
          #
          #    if (!LedgerJournalTransSymbol.LedgerJournalTrans)
          #    {
          #        LedgerJournalTrans_DS.write();
          #        LedgerJournalTransSymbol.LedgerJournalTrans = LedgerJournalTrans.RecId;
          #    }
          #
          #    isValid = super();
          #
          #    return isValid;
          #}
          #// </GEECZ>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransPayment_LV
          Table               #LedgerJournalTransPayment_LV
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    boolean ret = super();
          #
          #    if (ret)
          #    {
          #        ret = ledgerJournalTransPayment_LV_ds.allowEdit(! ledgerJournalEngine.posted() &&
          #                                           ! (ledgerJournalTrans.PaymentStatus  == CustVendPaymStatus::Sent      ||
          #                                              ledgerJournalTrans.PaymentStatus  == CustVendPaymStatus::Confirmed ||
          #                                              (ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected)));
          #    }
          #    return ret;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendEPRemitInfo_BR
          Table               #VendEPRemitInfo_BR
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD Instruction_1
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPInstructions_BR::EPInstructionsLookup(_formControl,CustVendType_BR::Vendor, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Instruction_2
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPInstructions_BR::EPInstructionsLookup(_formControl,CustVendType_BR::Vendor, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DocumentType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPDocumentTypes_BR::EPDocumentTypeLookup(_formControl,CustVendType_BR::Vendor, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankFolder
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPBankFolders_BR::EPBankFoldersLookup(_formControl,CustVendType_BR::Vendor, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        VendEPRemitInfo_BR_ds.linkType(FormLinkType::Active);
          #    }
          #    // </GBR>
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransExtensionTH
          Table               #LedgerJournalTransExtensionTH
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD PaymentGrossUpType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #// <GTH>
                #public void modified()
                #{
                #    super();
                #
                #    element.updateTaxWithholdControls();
                #}
                #// </GTH>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #isNeeded
          #/// <summary>
          #/// Checks whether this data sources should be enable or not.
          #/// </summary>
          #/// <returns>
          #/// true if it should be eneabled; otherwise, return false.
          #/// </returns>
          #/// <remarks>
          #/// This data source is joined to its parent data source with join type <c>Passive</c>
          #/// by default. It means this data source is disabled by default.
          #/// If any related feature needs this data source, then add condition(s) here to
          #/// mark that it should be enabled.
          #/// </remarks>
          #// <GTH>
          #public boolean isNeeded()
          #{
          #    boolean ret;
          #
          #    ret = TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled()
          #        || TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled();
          #
          #    return ret;
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #active
          #// <GTH>
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    if (ret && taxWithholdEnabledTH)
          #    {
          #        element.updateTaxWithholdControls();
          #    }
          #
          #    return ret;
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #write
          #// <GTH>
          #public void write()
          #{
          #    if (LedgerJournalTransExtensionTH.LedgerJournalTrans)
          #    {
          #        super();
          #    }
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #validateWrite
          #// <GTH>
          #public boolean validateWrite()
          #{
          #    boolean ret= true;
          #
          #    if (LedgerJournalTransExtensionTH.LedgerJournalTrans)
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #init
          #// <GTH>
          #public void init()
          #{
          #    if (this.isNeeded())
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
          #// </GTH>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #ServiceCodeTable_IN
          Table               #ServiceCodeTable_IN
          JoinSource          #LedgerJournalTrans
          JoinRelation        #ServiceCodeTable_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDREFERENCEDATASOURCES
  
  JOINS
    CustVendPaymJournalFee LedgerJournalTrans
    PaymentOrderBudgetTrans_RU LedgerJournalTrans
    RCashDestinationTrans LedgerJournalTrans
    LedgerJournalTrans_Asset LedgerJournalTrans
    TaxInformation_IN LedgerJournalTransTaxExtensionIN
    UpdatePLAEnquiry_IN LedgerJournalTrans
    VendPDCRegister LedgerJournalTrans
    BankCurrencyTransferLog_RU LedgerJournalTrans
    LedgerJournalTransTaxExtensionIN LedgerJournalTrans
    LedgerJournalTrans_RCash LedgerJournalTrans
    LedgerJournalTransPayment_BR LedgerJournalTrans
    LedgerJournalTransSymbol LedgerJournalTrans
    LedgerJournalTransPayment_LV LedgerJournalTrans
    VendEPRemitInfo_BR LedgerJournalTrans
    LedgerJournalTransExtensionTH LedgerJournalTrans
    ServiceCodeTable_IN LedgerJournalTrans
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS3096
      Mode                #Edit
      DataSource          #LedgerJournalTrans
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #536870911
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane1
          ElementPosition     #1073741822
          HierarchyParent     #RemittanceTab
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane2
          ElementPosition     #1073741822
          HierarchyParent     #PaymentFee
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab1
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab2
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1610612734
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup1
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GAFInformation_MY
          ElementPosition     #1789569705
          HierarchyParent     #ActionPaneTab2
          DataSource          #CustVendPaymJournalFee
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #NewDeleteGroup
          ElementPosition     #1073741822
          HierarchyParent     #ActionPaneTab
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #NewDeleteGroup1
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab2
          DataSource          #CustVendPaymJournalFee
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #GridPaymFee
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #PaymentFee
          DataSource          #CustVendPaymJournalFee
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #overviewGrid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #OverView
          VisibleRows         #0
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Account
          ElementPosition     #805306365
          HierarchyParent     #General
          Caption             #@SYS2355
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AddRemitInfo
          ElementPosition     #626349394
          HierarchyParent     #Payment
          Caption             #@GLS1164
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Amount
          AllowEdit           #No
          ElementPosition     #1431655764
          HierarchyParent     #PDC
          Caption             #@SYS62867
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Balances
          AllowEdit           #No
          Enabled             #No
          ElementPosition     #1073741822
          FrameType           #None
          DataSource          #LedgerJournalTrans
          Columns             #4
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BankClientDocumentType_RU
          ElementPosition     #2130706430
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #BankClientDocumentType_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BankLCImportGroup
          AutoDeclaration     #Yes
          ConfigurationKey    #BankDocument
          ElementPosition     #1879048185
          HierarchyParent     #Payment
          Caption             #@SYS316286
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BTL91
          ElementPosition     #1431655764
          HierarchyParent     #NL_BTL91
          DataSource          #LedgerJournalTrans
          DataGroup           #BTL91
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BudgetClassification
          ElementPosition     #954437176
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #BudgetClassification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CommissionTrade_RU
          AutoDeclaration     #Yes
          ElementPosition     #1207959547
          HierarchyParent     #General
          DataSource          #LedgerJournalTrans
          DataGroup           #CommissionTrade_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CompanyInfo
          AutoDeclaration     #Yes
          ElementPosition     #477218588
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS81121
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CreditBalance
          Enabled             #No
          ElementPosition     #1717986916
          HierarchyParent     #Balances
          Caption             #@SYS24012
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Currency
          ElementPosition     #780903144
          HierarchyParent     #GroupHeader
          FrameType           #None
          FramePosition       #Inside
          Caption             #@SYS7572
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CurrencyAndDescription
          ElementPosition     #1610612731
          HierarchyParent     #General
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CurrencyConvert_RU
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ElementPosition     #2004877307
          HierarchyParent     #Payment
          Caption             #@SYS53047
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CurrentJournal
          AllowEdit           #No
          ElementPosition     #858993458
          HierarchyParent     #History
          Caption             #@SYS24582
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Customs_IN
          AutoDeclaration     #Yes
          ElementPosition     #1670265058
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5007
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DebitBalance
          Enabled             #No
          ElementPosition     #1288490187
          HierarchyParent     #Balances
          Caption             #@SYS24011
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Description
          AllowEdit           #No
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #CurrencyAndDescription
          Caption             #@SYS6303
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Document
          ElementPosition     #1342177275
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #Document
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Document_TH
          ElementPosition     #1687308579
          HierarchyParent     #Payment
          FrameType           #None
          DataSource          #LedgerJournalTransExtensionTH
          DataGroup           #TaxInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Excise_IN
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5005
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Exportpayments
          ElementPosition     #1717986916
          HierarchyParent     #History
          DataSource          #LedgerJournalTrans
          DataGroup           #ExportPayments
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignPayments_LT
          ElementPosition     #1476395002
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #ForeignPayments_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Group
          ElementPosition     #613566756
          HierarchyParent     #GrpPayment
          FrameType           #None
          Columns             #2
          Columnspace         #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDocument
          ElementPosition     #1366580502
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
          DataGroup           #Document
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDocument_TH
          ElementPosition     #1744830457
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTransExtensionTH
          DataGroup           #TaxInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupHeader
          Top                 #Bottom edge
          ElementPosition     #1610612733
          HierarchyParent     #OverView
          FrameType           #None
          DataSource          #LedgerJournalTrans
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpBank
          ElementPosition     #858993458
          HierarchyParent     #Bank
          DataSource          #LedgerJournalTrans
          DataGroup           #Bank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpCurrency
          ElementPosition     #1073741822
          HierarchyParent     #CurrencyAndDescription
          Caption             #@SYS12227
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpPayment
          ElementPosition     #1171354716
          HierarchyParent     #GroupHeader
          FrameType           #None
          FramePosition       #Inside
          Caption             #@SYS828
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpPayment1
          ElementPosition     #417566262
          HierarchyParent     #Payment
          Caption             #@SYS828
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Identification
          ElementPosition     #536870910
          HierarchyParent     #General
          Caption             #@SYS5711
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InterestAndFinePayment_BR
          CountryRegionCodes  #BR
          ElementPosition     #1879048188
          HierarchyParent     #General
          DataSource          #LedgerJournalTransPayment_BR
          DataGroup           #InterestAndFineAmounts
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Names
          ElementPosition     #976128930
          HierarchyParent     #GroupHeader
          FrameType           #None
          FramePosition       #Inside
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #NotificationToTheCentralBank
          ElementPosition     #1073741820
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #NotificationToTheCentralBank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OffsetAccountInfo
          ElementPosition     #1342177275
          HierarchyParent     #General
          Caption             #@SYS11162
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OriginPayment
          ElementPosition     #1193046470
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #OriginPayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymDocument
          ElementPosition     #1908874352
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #Document
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentOrder
          ElementPosition     #477218588
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #PaymentOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentOrder_LV
          ElementPosition     #1409286138
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTransPayment_LV
          DataGroup           #PaymentOrder_LV
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentType
          ElementPosition     #1431655764
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #PaymentType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymPeriod
          ElementPosition     #1670265058
          HierarchyParent     #OrderPayment_RU
          Caption             #@SYS40
          DataSource          #PaymentOrderBudgetTrans_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PDCBank
          ElementPosition     #1789569705
          HierarchyParent     #PDC
          DataSource          #VendPDCRegister
          DataGroup           #Bank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PDCGroup
          ElementPosition     #715827882
          HierarchyParent     #PDC
          DataSource          #VendPDCRegister
          DataGroup           #PDC
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PeriodCode
          ElementPosition     #1073741822
          HierarchyParent     #PaymPeriod
          FrameType           #None
          DataSource          #PaymentOrderBudgetTrans_RU
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          DataGroup           #PeriodCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PeriodDate
          ElementPosition     #1610612733
          HierarchyParent     #PaymPeriod
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #PeriodDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PostingProfile
          ElementPosition     #805306365
          HierarchyParent     #Payment
          Caption             #@SYS12919
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PrintPaymentOrder_RU
          ElementPosition     #1717986916
          HierarchyParent     #Bank
          DataSource          #LedgerJournalTrans
          DataGroup           #PrintPaymentOrder_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PurposeText_RU
          CountryRegionCodes  #RU
          Width               #Column width
          ElementPosition     #1952257860
          HierarchyParent     #GroupHeader
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Recipient
          ElementPosition     #2028178999
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #Recipient
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Remittance
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #RemittanceTab
          Caption             #@sys152838
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RemittanceBottom
          ElementPosition     #1610612733
          HierarchyParent     #Remittance
          FrameType           #None
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RemittanceTop
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #Remittance
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Replacement
          ElementPosition     #1073741823
          HierarchyParent     #PDC
          DataSource          #VendPDCRegister
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SalesTax
          ElementPosition     #1073741820
          HierarchyParent     #General
          DataSource          #LedgerJournalTrans
          DataGroup           #SalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SalesTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5536
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ServiceTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #1908874352
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS63865
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Status
          ElementPosition     #715827882
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #Status
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #STF_difExchRate
          AutoDeclaration     #Yes
          ElementPosition     #1879048189
          HierarchyParent     #CurrencyAndDescription
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Symbol
          ElementPosition     #1503238551
          HierarchyParent     #Bank
          Caption             #@GLS107997
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TaxAgentGroup
          ElementPosition     #1610612734
          HierarchyParent     #TaxWithholdTab
          DataSource          #LedgerJournalTransExtensionTH
          DataGroup           #TaxAgent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TaxWithholdGroup
          ElementPosition     #1757032074
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TaxWithholdPaymentGrossUpGroup
          ElementPosition     #1073741822
          HierarchyParent     #TaxWithholdTab
          DataSource          #LedgerJournalTransExtensionTH
          DataGroup           #PaymentGrossUp
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ThirdPartyBank
          ElementPosition     #1288490187
          HierarchyParent     #Bank
          DataSource          #LedgerJournalTrans
          DataGroup           #ThirdPartyBank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TotalBalance
          Enabled             #No
          ElementPosition     #858993458
          HierarchyParent     #Balances
          Caption             #@SYS5804
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Transfer
          AllowEdit           #No
          ElementPosition     #1288490187
          HierarchyParent     #History
          Caption             #@SYS13220
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VAT
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5004
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VATTaxAgent_RU
          ElementPosition     #1610612730
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #VATTaxAgent_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax
          AutoDeclaration     #Yes
          ElementPosition     #1193046470
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS7372
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonCheckJournal
          AutoDeclaration     #Yes
          HelpText            #@SYS23471
          ElementPosition     #429496728
          HierarchyParent     #ButtonGroup
          Text                #@SYS53323
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonCourse
          AutoDeclaration     #Yes
          HelpText            #@SYS24580
          ElementPosition     #715827880
          HierarchyParent     #ButtonGroup
          Text                #@SYS2453
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonFunctions
          AutoDeclaration     #Yes
          HelpText            #@SYS28778
          ElementPosition     #1145324608
          HierarchyParent     #ButtonGroup
          Text                #@SYS10340
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    //<GIN>
            #    if (TaxParameters::checkTaxParameters_IN())
            #    {
            #        element.enableUpdatePLA_IN();
            #    }
            #    //</GIN>
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonPaymProposal
          AutoDeclaration     #Yes
          HelpText            #@SYS78096
          ElementPosition     #1431655760
          HierarchyParent     #ButtonGroup
          Text                #@SYS66014
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonPaymReconciliation
          AutoDeclaration     #Yes
          HelpText            #@SYS67678
          ElementPosition     #1288490184
          HierarchyParent     #ButtonGroup
          Text                #@SYS22176
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    boolean             visible = false;
            #    boolean             enabled = false;
            #    LedgerJournalTrans  localLedgerJournalTrans;
            #    FormDataSource      formDS;
            #    FormButtonControl   ctrlBankChequeReuseButton = bankChequeReuse;
            #    ;
            #
            #    if (ctrlBankChequeReuseButton)
            #    {
            #        visible = BankParameters::find().AllowCheckReuse;
            #        ctrlBankChequeReuseButton.visible(visible);
            #
            #        if (visible)
            #        {
            #            formDS = ledgerJournalTrans.dataSource();
            #            if (formDS)
            #            {
            #                for (localLedgerJournalTrans = getFirstSelection(formDS);
            #                     localLedgerJournalTrans;
            #                     localLedgerJournalTrans = formDS.getNext())
            #                {
            #                    if (localLedgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent
            #                        && localLedgerJournalTrans.PaymReference)
            #                    {
            #                        enabled = true;
            #                        break;
            #                    }
            #                }
            #            }
            #        }
            #
            #        ctrlBankChequeReuseButton.enabled(enabled);
            #    }
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonPostJournal
          AutoDeclaration     #Yes
          HelpText            #@SYS5943
          ElementPosition     #286331152
          HierarchyParent     #ButtonGroup
          Text                #@SYS6098
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #FinancialDimension
          HelpText            #@SYS300590
          ElementPosition     #572662304
          HierarchyParent     #ButtonGroup
          Text                #@SYS138491
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    journalFormTrans.enableDimensionButtonsActive(custVendPaymJournalFee);
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #Inquiries
          HelpText            #@SYS84076
          ElementPosition     #1574821336
          HierarchyParent     #ButtonGroup
          Text                #@SYS3850
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #Print
          HelpText            #@SYS84077
          ElementPosition     #1717986912
          HierarchyParent     #ButtonGroup
          Text                #@SYS920
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #TaxWithhold_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS5864
          ElementPosition     #1002159032
          HierarchyParent     #ButtonGroup
          Text                #@SYS33817
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #TaxWithholdLineStatusMenuButton
          AutoDeclaration     #Yes
          HelpText            #@GLS2078
          ElementPosition     #2075900855
          HierarchyParent     #ButtonGroup
          Text                #@GLS2077
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Customs_IN_CustomsTariffCodeTable_IN
          ElementPosition     #1717986916
          HierarchyParent     #Customs_IN
          DataSource          #LedgerJournalTrans
          ReferenceField      #CustomsTariffCodeTable_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_CompanyLocation_IN
          HelpText            #@GLS222760
          ElementPosition     #984263336
          HierarchyParent     #CompanyInfo
          DataSource          #LedgerJournalTrans
          ReferenceField      #CompanyLocation_IN
          Label               #@SYS123914
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_ExciseTariffCodes_IN
          ElementPosition     #1073741820
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          ReferenceField      #ExciseTariffCodes_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_LedgerVoucherType_CN
          ElementPosition     #1744830462
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          ReferenceField      #LedgerVoucherType_CN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_RemittanceLocation
          ElementPosition     #1431655764
          HierarchyParent     #RemittanceTop
          DataSource          #LedgerJournalTrans
          ReferenceField      #RemittanceLocation
          ReplacementFieldGroup #Description
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_SalesTaxFormTypes_IN
          ElementPosition     #1610612733
          HierarchyParent     #SalesTax_IN
          DataSource          #LedgerJournalTrans
          ReferenceField      #SalesTaxFormTypes_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTransSymbol_BankConstantSymbol
          ElementPosition     #1073741822
          HierarchyParent     #Symbol
          DataSource          #LedgerJournalTransSymbol
          ReferenceField      #BankConstantSymbol
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTransTaxExtensionIN_TaxInformation_IN
          ElementPosition     #1879048189
          HierarchyParent     #CompanyInfo
          DataSource          #LedgerJournalTransTaxExtensionIN
          ReferenceField      #TaxInformation_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTransTaxExtensionIN_TaxWithholdCountryRegionToRemittance
          ElementPosition     #1879048185
          HierarchyParent     #WithholdingTax
          DataSource          #LedgerJournalTransTaxExtensionIN
          ReferenceField      #TaxWithholdCountryRegionToRemittance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTransTaxExtensionIN_TaxWithholdNatureOfRemittance
          ElementPosition     #1342177275
          HierarchyParent     #WithholdingTax
          DataSource          #LedgerJournalTransTaxExtensionIN
          ReferenceField      #TaxWithholdNatureOfRemittance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PDCGroup_WorkerCollectionAgent
          ElementPosition     #1717986914
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          ReferenceField      #WorkerCollectionAgent
          ReplacementFieldGroup #PersonnelNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PDCGroup_WorkerSalesPerson
          ElementPosition     #1932735280
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          ReferenceField      #WorkerSalesPerson
          ReplacementFieldGroup #PersonnelNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #SalesTax_SalesTaxRegistrationNumber
          ElementPosition     #1073741822
          HierarchyParent     #SalesTax_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #SalesTaxRegistrationNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ECCNumber
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #536870910
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ECCNumber
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_IECRegistrationNumberTable
          ElementPosition     #858993458
          HierarchyParent     #Customs_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #IECRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ManECCRegistrationNumberTable
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #715827880
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ManECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_STCRegistrationNumberTable
          ElementPosition     #858993458
          HierarchyParent     #ServiceTax_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #STCRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_TraderECCRegistrationNumberTable
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@GLS5156
          ElementPosition     #894784850
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #TraderECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VAT_TIN
          ElementPosition     #858993458
          HierarchyParent     #VAT
          DataSource          #TaxInformation_IN
          ReferenceField      #TIN
          ReplacementFieldGroup #Identification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #WithholdingTax_TAN
          ElementPosition     #1073741820
          HierarchyParent     #WithholdingTax
          DataSource          #TaxInformation_IN
          ReferenceField      #TAN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #AssetTab
          ElementPosition     #1227133512
          HierarchyParent     #Tab
          Caption             #@SYS12578
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Bank
          ElementPosition     #1073741823
          HierarchyParent     #Tab
          Caption             #@SYS22173
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #General
          ElementPosition     #460175067
          HierarchyParent     #Tab
          Caption             #@SYS2952
          DataSource          #LedgerJournalTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #History
          AllowEdit           #No
          ElementPosition     #1533916890
          HierarchyParent     #Tab
          Caption             #@SYS10575
          DataSource          #LedgerJournalTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #NL_BTL91
          CountryRegionCodes  #NL
          ElementPosition     #1687308579
          HierarchyParent     #Tab
          Caption             #@SYS75603
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #OrderPayment_RU
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ConfigurationKey    #Bank
          ElementPosition     #1380525201
          HierarchyParent     #Tab
          Caption             #@GLS102632
          DataSource          #PaymentOrderBudgetTrans_RU
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #OverView
          ElementPosition     #306783378
          HierarchyParent     #Tab
          Caption             #@SYS9039
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    //BEGIN DEV:BL  STF_CrossPayment
            #    SpecTrans      specTrans1;
            #    container      mark
            #    ;
            #    super();
            #
            #        if(LedgerJournalTrans_STF_difExchRate.checked() && LedgerJournalTrans.AccountType == LedgerJournalACType::Vend && LedgerJournalTrans.STF_crossPayment && newExcRate != LedgerJournalTrans.STF_newExchRate)
            #        {
            #            newExcRate = LedgerJournalTrans.STF_newExchRate;
            #            mark = specTrans1.STF_findMarkedVendPayment(LedgerJournalTrans.accountDisplay(),curext(),LedgerJournalTrans);
            #            element.STF_crossPayment(mark,LedgerJournalTrans);
            #
            #            LedgerJournalTrans_ds.refresh();
            #            LedgerJournalTrans_ds.research();
            #        }
            #        else if(!LedgerJournalTrans_STF_difExchRate.checked() && LedgerJournalTrans.AccountType == LedgerJournalACType::Vend && LedgerJournalTrans.STF_crossPayment && newExcRate != LedgerJournalTrans.STF_newExchRate)
            #        {
            #            newExcRate = LedgerJournalTrans.STF_newExchRate;
            #            mark = specTrans1.STF_findMarkedVendPayment(LedgerJournalTrans.accountDisplay(),curext(),LedgerJournalTrans);
            #            element.STF_crossPayment(mark,LedgerJournalTrans);
            #
            #            LedgerJournalTrans_ds.refresh();
            #            LedgerJournalTrans_ds.research();
            #        }
            #    //END DEV:BL  STF_CrossPayment
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Payment
          ElementPosition     #613566756
          HierarchyParent     #Tab
          Caption             #@SYS828
          DataSource          #LedgerJournalTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #PaymentFee
          ElementPosition     #766958445
          HierarchyParent     #Tab
          Caption             #@SYS57605
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #PDC
          AutoDeclaration     #Yes
          ElementPosition     #1994091957
          HierarchyParent     #Tab
          Caption             #@SYS322452
          DataSource          #VendPDCRegister
          Columns             #Auto
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #RemittanceTab
          ElementPosition     #920350134
          HierarchyParent     #Tab
          Caption             #@sys152838
        ENDPROPERTIES
        
        METHODS
          SOURCE #pageActivated
            #public void pageActivated()
            #{
            #    super();
            #
            #    // Need to enable\Disable the Manage Address button depending
            #    // on whether an account been selected and the account type is Vendor.
            #    if (ledgerJournalTrans.parmAccount() == '' || ledgerJournalTrans.AccountType != LedgerJournalACType::Vend)
            #    {
            #        remittance.allowEdit(false);
            #        remittance_ManageAddress.enabled(false);
            #        addAddress.enabled(false);
            #    }
            #    else
            #    {
            #        remittance.allowEdit(true);
            #        remittance_ManageAddress.enabled(true);
            #        addAddress.enabled(true);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabTaxInformation_IN
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #1840700268
          HierarchyParent     #Tab
          Caption             #@SYS33652
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TaxWithholdTab
          CountryRegionCodes  #TH
          ElementPosition     #2058005158
          HierarchyParent     #Tab
          Caption             #@SYS7372
          DataSource          #LedgerJournalTransExtensionTH
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #AsignaPedimentos
          AutoDeclaration     #Yes
          ElementPosition     #1342177278
          HierarchyParent     #buttonFunctions
          Text                #@SMM91
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    //super();
            #
            #    //new MenuFunction(menuItemDisplayStr(GS_AnticipoPedimentos), MenuItemType::Display).run();
            #
            #    Args args;
            #    FormRun formRun;
            #
            #    super();
            #
            #    args = new Args(formstr(GS_AnticipoPedimentos));
            #
            #    // To pass any string value
            #    //args.parm('Prueba');
            #    args.record(LedgerJournalTrans);
            #    formRun = classFactory.FormRunClass(args);
            #    formRun.init();
            #    formRun.run();
            #    formRun.wait();
            #    formRun.detach();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #BankChequeReuse
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          CountryRegionCodes  #CA,US
          HelpText            #@SYS93952
          SecurityKey         #BankMisc
          ElementPosition     #1908408316
          HierarchyParent     #buttonPaymReconciliation
          Text                #@SYS93951
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  ledgerJournalTransRecord;
            #    ;
            #    ledgerJournalTransRecord.reuseCheck(ledgerJournalTrans);
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #buttonApprove
          AutoDeclaration     #Yes
          HelpText            #@SYS22218
          ElementPosition     #1610612734
          HierarchyParent     #buttonCourse
          Text                #@SYS16449
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #    ledgerJournalEngine.markApproved();
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #buttonReject
          AutoDeclaration     #Yes
          HelpText            #@SYS22330
          ElementPosition     #1879048190
          HierarchyParent     #buttonCourse
          Text                #@SYS22331
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.markRejected();
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #buttonReportAsReady
          AutoDeclaration     #Yes
          HelpText            #@SYS22219
          ElementPosition     #1073741823
          HierarchyParent     #buttonCourse
          Text                #@SYS22220
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #    ledgerJournalEngine.markReportAsReady();
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #buttonSettlement
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS50881
          ElementPosition     #1073741822
          HierarchyParent     #buttonFunctions
          Text                #@SYS10163
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  localLedgerJournalTrans;
            #    ;
            #
            #    element.lock();
            #    localLedgerJournalTrans.data(ledgerJournalTrans);
            #
            #    // <GIN>
            #    if (TaxWithholdParameters_IN::checkTaxParameters())
            #    {
            #        TaxWithholdUncommitted_IN::deleteForInvoice(
            #            tableNum(LedgerJournalTable),
            #            localLedgerJournalTrans.ledgerJournalTable().RecId,
            #            localLedgerJournalTrans.Voucher,
            #            localLedgerJournalTrans.Invoice);
            #    }
            #    // </GIN>
            #
            #    super();
            #    ledgerJournalEngine.settleTrans(ledgerJournalTrans);
            #    ledgerJournalEngine.preWrite(ledgerJournalTrans);
            #    //BEGIN DEV:BL  STF_CrossPayment
            #    vendOpenTrans = specTrans.STF_findMarkedVendPayment(ledgerJournalTrans.accountDisplay(),curext(),ledgerJournalTrans);
            #    element.STF_crossPayment(vendOpenTrans,ledgerJournalTrans);
            #    //END DEV:BL  STF_CrossPayment
            #    ledgerJournalTrans.update();
            #    ledgerJournalTrans_ds.active();
            #    ledgerJournalTrans_ds.reread();
            #    ledgerJournalEngine.write(ledgerJournalTrans);
            #
            #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
            #
            #    ledgerJournalTrans_ds.executeQuery();
            #    //recalculate balances
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            #    ledgerJournalTrans_ds.findRecord(localLedgerJournalTrans);
            #    element.firstField();
            #    element.unLock();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #CopyOfAsignaPedimentos
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1342177277
          Text                #@SMM91
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    //super();
            #
            #    //new MenuFunction(menuItemDisplayStr(GS_AnticipoPedimentos), MenuItemType::Display).run();
            #
            #    Args args;
            #    FormRun formRun;
            #
            #    super();
            #
            #    args = new Args(formstr(GS_AnticipoPedimentos));
            #
            #    // To pass any string value
            #    //args.parm('Prueba');
            #    args.record(LedgerJournalTrans);
            #    formRun = classFactory.FormRunClass(args);
            #    formRun.init();
            #    formRun.run();
            #    formRun.wait();
            #    formRun.detach();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #DeleteVendOutPayment
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          HelpText            #@GLS102870
          ConfigurationKey    #Bank
          ElementPosition     #1879048190
          HierarchyParent     #buttonFunctions
          Text                #@GLS106733
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (Box::yesNo("@GLS103017",DialogButton::Yes) != DialogButton::Yes)
            #    {
            #        return;
            #    }
            #
            #    super();
            #
            #    if(ledgerJournalTrans.existBankPaymentOrderJour_RU())
            #    {
            #        BankPaymentOrderJour_RU::deletePayment_RU(ledgerJournalTrans);
            #    }
            #
            #    // Purchase of Funds in Hard Currency -->
            #    if (BankCurrencyTransferLog_RU::existByLedgerTrans(ledgerJournalTrans))
            #    {
            #        BankCurrencyTransferLog_RU::deletePurchaseCurOrder(ledgerJournalTrans);
            #    }
            #
            #    ledgerJournalTrans_ds.reread();
            #    ledgerJournalTrans_ds.active();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PrintIssueReceipt
          AutoDeclaration     #Yes
          HelpText            #@SYS322837
          ElementPosition     #2135739593
          HierarchyParent     #Print
          Text                #@SYS327039
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    Args args                   = new Args();
            #    CustVendPDCReceiptController controller;
            #    MenuFunction                menuFunc;
            #
            #    super();
            #
            #    controller = new CustVendPDCReceiptController();
            #
            #    controller.parmAccountName(ledgerJournalTrans.accountName());
            #    controller.parmAccountType(CustVendACType::Vend);
            #    controller.parmBankBranch(vendPDCRegister.BankBranch);
            #    controller.parmBankName(vendPDCRegister.BankName);
            #    controller.parmCheckAmount(ledgerJournalTrans.displayCustPaymAmount());
            #    controller.parmCheckNum(vendPDCRegister.CheckNumber);
            #    controller.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    controller.parmDateReceived(vendPDCRegister.DateReceived);
            #    controller.parmMaturityDate(vendPDCRegister.MaturityDate);
            #    args.parmObject(controller);
            #
            #    menuFunc = new MenuFunction(menuitemOutputStr(CustVendPDCReport),MenuItemType::Output);
            #    menuFunc.run(args);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #TaxWithholdClosePaymlLine_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          HelpText            #@GLS2080
          ElementPosition     #1073741822
          HierarchyParent     #TaxWithholdLineStatusMenuButton
          Text                #@GLS2079
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans.closeTaxWithholdEditStatus_BR();
            #    LedgerJournalTransPayment_BR.write();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #TaxWithholdReopenPaymlLine_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          HelpText            #@GLS2082
          ElementPosition     #1610612733
          HierarchyParent     #TaxWithholdLineStatusMenuButton
          Text                #@GLS2081
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans.reopenTaxWithholdEditStatus_BR();
            #    LedgerJournalTransPayment_BR.write();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #VATInPaymentButton
          AutoDeclaration     #Yes
          NeededPermission    #Update
          HelpText            #@GLS111817
          ElementPosition     #1610612733
          HierarchyParent     #PurposeText_RU
          Text                #@GLS111816
          ShowShortCut        #No
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    int                         beginSel, endSel;
            #    str                         newText;
            #
            #
            #    super();
            #
            #    [beginSel, endSel] = ledgerJournalTrans_BankCentralBankPurposeText.getSelection();
            #
            #    newText = ledgerJournalTrans.vatInPayment_RU();
            #
            #    if (beginSel)
            #    {
            #        newText = ' ' + newText;
            #    }
            #
            #    ledgerJournalTrans_BankCentralBankPurposeText.pasteText(newText);
            #
            #    ledgerJournalTrans_BankCentralBankPurposeText.setSelection(beginSel, beginSel + strLen(newText));
            #    ledgerJournalTrans_BankCentralBankPurposeText.setFocus();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #CustVendPaymJournalFee_IsPaymFeeCoveredByVendor_JP
          ElementPosition     #2139095038
          HierarchyParent     #GridPaymFee
          BackgroundColor     #Window background
          DataSource          #CustVendPaymJournalFee
          DataField           #IsPaymFeeCoveredByVendor_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #fieldTriangulation
          AutoDeclaration     #Yes
          ElementPosition     #1503238548
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataField           #Triangulation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #LedgerJournalTrans_Prepayment
          ElementPosition     #1431655764
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #Prepayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #LedgerJournalTrans_SoftwareDeclReceived_IN
          ElementPosition     #536870910
          HierarchyParent     #WithholdingTax
          DataSource          #LedgerJournalTrans
          DataField           #SoftwareDeclReceived_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #LedgerJournalTrans_STF_difExchRate
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #STF_difExchRate
          Label               #Utilizar tipo de cambio distinto
          DataSource          #LedgerJournalTrans
          DataField           #STF_difExchRate
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    //BEGIN DEV:BL  STF_CrossPayment
            #    super();
            #
            #    if(LedgerJournalTrans_STF_difExchRate.checked())
            #    {
            #        LedgerJournalTrans.STF_difExchRate = NoYes::Yes;
            #        LedgerJournalTrans_STF_newExchRate.enabled(true);
            #    }
            #    else
            #    {
            #        LedgerJournalTrans.STF_newExchRate = 0;
            #        LedgerJournalTrans_STF_newExchRate.enabled(false);
            #    }
            #
            #    //END DEV:BL  STF_CrossPayment
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PDCGroup_StopPayment
          ElementPosition     #429496728
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          DataField           #StopPayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Replacement_IsReplacementCheck
          ElementPosition     #858993458
          HierarchyParent     #Replacement
          DataSource          #VendPDCRegister
          DataField           #IsReplacementCheck
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    element.enableReplacementFields();
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Tax_TaxDirectionControl
          ElementPosition     #1879048188
          HierarchyParent     #SalesTax
          DataSource          #LedgerJournalTrans
          DataField           #TaxDirectionControl
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendEPRemitInfo_BR_TypedLine
          ElementPosition     #1670265058
          HierarchyParent     #AddRemitInfo
          DataSource          #VendEPRemitInfo_BR
          DataField           #TypedLine
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Customs_IN_CustomsTariffDirection_IN
          ElementPosition     #1288490187
          HierarchyParent     #Customs_IN
          DataSource          #LedgerJournalTrans
          DataField           #CustomsTariffDirection_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #CustVendPaymJournalFee_LedgerJournalACType
          ElementPosition     #2105540606
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #LedgerJournalACType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #CustVendPaymJournalFee_VendPaymFeeTaxDirection_JP
          ElementPosition     #2143289342
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #TaxDirection_JP
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Excise_IN_ExciseTypes_IN
          ElementPosition     #357913940
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataField           #ExciseType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseManufacture_IN
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #exciseManufacture_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseNone_IN
          AutoDeclaration     #Yes
          ElementPosition     #1342177275
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #exciseNone_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseTraders_IN
          AutoDeclaration     #Yes
          ElementPosition     #1879048185
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #exciseTraders_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_AccountType1
          ElementPosition     #585677358
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #AccountType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_AssetTransType
          ElementPosition     #858993458
          HierarchyParent     #AssetTab
          DataSource          #LedgerJournalTrans_Asset
          DataField           #TransType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_NatureOfAssessee_IN
          ElementPosition     #805306365
          HierarchyParent     #WithholdingTax
          DataSource          #LedgerJournalTrans
          DataField           #NatureOfAssessee_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccountType
          AutoDeclaration     #Yes
          ElementPosition     #2145910782
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAccountType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccountType1
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAccountType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_PaymentStatus
          ElementPosition     #2145386494
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #PaymentStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_SettleVoucher
          AllowEdit           #No
          ElementPosition     #1717986916
          HierarchyParent     #PostingProfile
          DataSource          #LedgerJournalTrans
          DataField           #SettleVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_SettleVoucher1
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #1533916890
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #SettleVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_TaxWithholdEditStatus_BR
          ElementPosition     #2146435070
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #TaxWithholdEditStatus_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_VATGoodsType_IN
          ElementPosition     #1288490187
          HierarchyParent     #VAT
          DataSource          #LedgerJournalTrans
          DataField           #VATGoodsType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PDCGroup_PDCStatus
          AllowEdit           #No
          ElementPosition     #1288490184
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          DataField           #PDCStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ServiceTax_IN_GTAServiceCategory_IN
          ElementPosition     #1717986916
          HierarchyParent     #ServiceTax_IN
          DataSource          #LedgerJournalTrans
          DataField           #GTAServiceCategory_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #AddButton
          ElementPosition     #1073741822
          HierarchyParent     #NewDeleteGroup1
          Text                #@sys60080
          ButtonDisplay       #Text & Image left
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteButton
          ElementPosition     #1610612734
          HierarchyParent     #NewDeleteGroup
          Text                #@sys14425
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #   /* LedgerJournalTrans ledgerTrans;
            #    ;*/
            #    super();
            #
            #   /* delete_from ledgerTrans where ledgerTrans.STF_RefRecId == LedgerJournalTrans.RecId;
            #    LedgerJournalTrans_ds.reread();
            #    LedgerJournalTrans_ds.research();
            #    LedgerJournalTrans_ds.refresh();*/
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #NewButton
          ElementPosition     #1073741822
          HierarchyParent     #NewDeleteGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #11045
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #RemoveButton
          ElementPosition     #1610612733
          HierarchyParent     #NewDeleteGroup1
          Text                #@sys26394
          ButtonDisplay       #Text & Image left
          NormalImage         #11438
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #STF_ExportExpenses
          AutoDeclaration     #Yes
          ElementPosition     #95443716
          HierarchyParent     #ButtonGroup
          Text                #Exportar Expenses
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  LJT;
            #    STF_LayoutTable      LT;
            #    ;
            #    super();
            #
            #    // [INI] [DPB001.1] [igcej] [19/09/2011] IS - AX2009 - Dispersion de Pagos.
            #    LJT.data(LedgerJournalTrans);
            #
            #
            #
            #    STF_EXBankPaymTransfer::TransferBNX01_V1(LedgerJournalTrans.JournalNum);
            #    ledgerJournalTrans_ds.findRecord(LJT);
            #    LedgerJournalTrans_ds.research();
            #
            #
            #    // [FIN] [DPB001.1]
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #STF_ExportFile
          AutoDeclaration     #Yes
          ElementPosition     #190887434
          HierarchyParent     #ButtonGroup
          Text                #Exportar Pago
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  LJT, LJT2;
            #
            #    ;
            #    super();
            #
            #    // [INI] [DPB001.1] [igcej] [19/09/2011] IS - AX2009 - Dispersion de Pagos.
            #    LJT.data(LedgerJournalTrans);
            #    STF_BankPaymTransfer::TransferBNX01_V1(LedgerJournalTrans.JournalNum);
            #    ledgerJournalTrans_ds.findRecord(LJT);
            #    LedgerJournalTrans_ds.research();
            #
            #   STF_ExportFile.enabled(false);
            #
            #   /** if(LJT2.PaymentStatus==CustVendPaymStatus::Sent){
            #        STF_ExportFile.enabled(false);
            #
            #    }*/
            #
            #
            #    // [FIN] [DPB001.1]
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DepreciationStartDate
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #AssetTab
          DataSource          #LedgerJournalTrans_Asset
          DataField           #DepreciationStartDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Document_DocDate
          ElementPosition     #1610612733
          HierarchyParent     #PaymDocument
          DataSource          #PaymentOrderBudgetTrans_RU
          DataField           #DocDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #Document_TaxInvoiceReceiptDate_TH
          HelpText            #@SYS4082927
          ElementPosition     #1073741822
          HierarchyParent     #Document_TH
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #TaxInvoiceReceiptDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DocumentDate
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Document
          DataSource          #LedgerJournalTrans
          DataField           #DocumentDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #GroupDocument_DocumentDate
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #GroupDocument
          DataSource          #LedgerJournalTrans
          DataField           #DocumentDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #GroupDocument_TaxInvoiceReceiptDate_TH
          HelpText            #@SYS4082927
          ElementPosition     #1073741822
          HierarchyParent     #GroupDocument_TH
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #TaxInvoiceReceiptDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TransDate
          AutoDeclaration     #Yes
          ElementPosition     #1610612734
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #TransDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TransDate1
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #Identification
          DataSource          #LedgerJournalTrans
          DataField           #TransDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TransferredOn
          AllowEdit           #No
          ElementPosition     #858993458
          HierarchyParent     #Transfer
          DataSource          #LedgerJournalTrans
          DataField           #TransferredOn
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PDCGroup_DateReceived
          ElementPosition     #1073741820
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          DataField           #DateReceived
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PDCGroup_MaturityDate
          ElementPosition     #858993456
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          DataField           #MaturityDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #BankLCLineNum
          ConfigurationKey    #BankDocument
          ElementPosition     #1610612733
          HierarchyParent     #BankLCImportGroup
          DataSource          #LedgerJournalTrans
          DataMethod          #displayBankLCLineNum
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    ledgerJournalTrans_ds.jumpRefBankLC();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AccountDimension
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #FinancialDimension
          MenuItemName        #LedgerJourTransDimLedgerJourTrnVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    ledgerJournalEngine.openAccountFinancialDimensionForm(ledgerJournalTrans, accountDimension.menuItemType(), accountDimension.menuItemName());
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AddAddress
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #ButtonGroup1
          Text                #@SYS111834
          ButtonDisplay       #Text & Image left
          DataSource          #LedgerJournalTrans
          MenuItemName        #CustDirPartyPostalAddressNew
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AdvanceInvoiceLink_CZ
          AutoDeclaration     #Yes
          ElementPosition     #2102744402
          HierarchyParent     #buttonFunctions
          MenuItemName        #CzVendAdvanceInvoiceLink
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AxdSendVendorPayment
          ElementPosition     #2004318064
          HierarchyParent     #ButtonGroup
          MenuItemType        #Action
          MenuItemName        #AxdSendVendorPayment
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    boolean     isActive;
            #
            #    if (ledgerJournalTrans)
            #    {
            #        if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank)
            #        {
            #            if (ledgerJournalTrans.parmOffsetLedgerDimension())
            #            {
            #                isActive = BankAccountTable::findByLedgerDimension(ledgerJournalTrans.parmOffsetLedgerDimension()).checkIsActiveForAllTransactions();
            #            }
            #        }
            #
            #        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Bank)
            #        {
            #            if (ledgerJournalTrans.parmLedgerDimension())
            #            {
            #                isActive = isActive && BankAccountTable::findByLedgerDimension(ledgerJournalTrans.parmLedgerDimension()).checkIsActiveForAllTransactions();
            #            }
            #        }
            #
            #        if (ledgerJournalTrans.BankAccountId)
            #        {
            #            isActive = isActive && BankAccountTable::find(ledgerJournalTrans.BankAccountId).checkIsActiveForAllTransactions();
            #        }
            #
            #        if (isActive)
            #        {
            #            super();
            #        }
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BankVendPaymProposalSpec
          ElementPosition     #1879048190
          HierarchyParent     #buttonPaymProposal
          MenuItemName        #BankVendPaymProposalSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #btnPaymFeeInquery
          ElementPosition     #1560281082
          HierarchyParent     #Inquiries
          MenuItemName        #PaymFeeInquery
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonBalanceControl
          AutoDeclaration     #Yes
          ElementPosition     #1040187388
          HierarchyParent     #Inquiries
          MenuItemName        #LedgerBalanceControlLdgrJourTrnVendPaym
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonCreatePayment
          AutoDeclaration     #Yes
          ElementPosition     #1677721598
          HierarchyParent     #buttonFunctions
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #VendSumForPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    boolean ret = true;
            #    #ISOCountryRegionCodes
            #
            #    ledgerJournalEngine.clearVoucher();
            #
            #    if(postDatedCheckEnabled)
            #    {
            #        vendPDCRegister_ds.write();
            #    }
            #
            #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]))
            #    {
            #        ret = CustVendPaymAbroad_NO::checkForeignVendPaym(ledgerJournalTable.JournalNum);
            #    }
            #
            #    ret = ret && CustVendNACHAIATInfoTable_US::checkValuesIATpaymRecords(ledgerJournalTable.JournalNum);
            #
            #
            #    if (ret)
            #    {
            #        super();
            #
            #        if (ledgerJournalTrans.parmLedgerDimension())
            #        {
            #            postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #            if (postingResults_Client.errorInJournal())
            #            {
            #                errorExist.visible(true);
            #            }
            #            else
            #            {
            #                CustVendPDCManager::updatePostDatedCheckNum(journalNum);
            #            }
            #            ledgerJournalTrans_ds.research();
            #            ledgerJournalTrans_ds.active();
            #        }
            #    }
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonDeleteTransactions
          AutoDeclaration     #Yes
          ElementPosition     #1744830462
          HierarchyParent     #buttonFunctions
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourDelTransLJTransVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #    super();
            #
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            #    ledgerJournalTrans_ds.research();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonVoucherTrans
          AutoDeclaration     #Yes
          ElementPosition     #520093694
          HierarchyParent     #Inquiries
          SaveRecord          #No
          DataSource          #LedgerJournalTrans
          MenuItemName        #LedgerTransVoucher1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonWithholdTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #TaxWithhold_IN
          Text                #@SYS33817
          DataSource          #LedgerJournalTrans
          MenuItemName        #TaxWithholdTmpWorkTrans_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <GIN>
            #void  clicked()
            #{
            #    if (!ledgerJournalTable.Posted)
            #    {
            #        TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            #    }
            #    else
            #    {
            #        TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), null, element);
            #    }
            #}
            #
            #// </GIN>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CashReport
          ElementPosition     #776632576
          HierarchyParent     #Print
          ShowShortCut        #No
          MenuItemType        #Output
          MenuItemName        #LedgerJournalCashReport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ChallanInformation_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS6139
          ElementPosition     #1811939326
          HierarchyParent     #buttonFunctions
          Text                #@GLS6139
          MenuItemName        #ChallanInformation_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CheckJournal
          ElementPosition     #1073741822
          HierarchyParent     #buttonCheckJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourChkLedgerJourTransVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CheckVoucher
          ElementPosition     #1610612733
          HierarchyParent     #buttonCheckJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourChk1LedgerJourTransVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CreatePostDatedCheckInstallments
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYS322837
          ElementPosition     #1879048190
          HierarchyParent     #buttonFunctions
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #VendPostDatedCheckInstallments
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendNACHAIATInfoTable_US
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Group
          ButtonDisplay       #Image only
          NormalImage         #12084
          ImageLocation       #EmbeddedResource
          DataSource          #LedgerJournalTrans
          MenuItemName        #CustVendNACHAIATInfoTable_US
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendOutPaymReport_RU
          AutoDeclaration     #Yes
          ElementPosition     #2140772758
          HierarchyParent     #Print
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #CustVendOutPaymReport_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymProposal
          ElementPosition     #1553265152
          HierarchyParent     #Print
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #CustVendPaymProposal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymReconciliationDelete
          ElementPosition     #2134900734
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconDeleteVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymReconciliationDeleted
          ElementPosition     #2143289342
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconDeletedVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymReconciliationSentDelete
          ElementPosition     #2139095038
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconSentDeleteVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CzAdvancePaymentProposal_Vend
          ElementPosition     #1342177278
          HierarchyParent     #buttonPaymProposal
          MenuItemType        #Action
          MenuItemName        #CzAdvancePaymentProposal_Vend
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CzTaxDocumentCreate_Vend
          AutoDeclaration     #Yes
          ConfigurationKey    #CzCustVendAdvanceInvoices
          ElementPosition     #2113929214
          HierarchyParent     #buttonFunctions
          Text                #@GLS108299
          MenuItemType        #Action
          MenuItemName        #CzTaxDocumentCreate_Vend
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #DefermentSchedule_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS5212
          ElementPosition     #1861152488
          HierarchyParent     #ButtonGroup
          Text                #@GLS5212
          MenuItemName        #DefermentScheduleTrans_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #GAFInformation
          ElementPosition     #930576244
          HierarchyParent     #ButtonGroup
          MenuItemName        #TaxGSTEditTaxInformation_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #GAFInformation_MYButton
          ElementPosition     #1431655764
          HierarchyParent     #GAFInformation_MY
          MenuItemName        #TaxGSTEditTaxInformation_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #JounalDetails
          ElementPosition     #388316288
          HierarchyParent     #Print
          Text                #@SYS24010
          ShowShortCut        #No
          MenuItemType        #Output
          MenuItemName        #LedgerJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalPostTransfer
          ElementPosition     #1610612733
          HierarchyParent     #buttonPostJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourPostTrLJTransVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ledgerJournalEngine.clearVoucher();
            #
            #    try
            #    {
            #        super();
            #    }
            #    catch
            #    {
            #        // Swallow the exception because we want finally semantics
            #        curext(); // suppress compiler warning for empty compound statements
            #    }
            #
            #    // finally
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalPreview
          AutoDeclaration     #Yes
          ElementPosition     #2136298833
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerJournalPreview
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalPrintOutInvoice_Vend
          AutoDeclaration     #Yes
          ElementPosition     #1164948864
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerJournalPrintOutInvoice_Vend
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalTransChangePaymMode
          AutoDeclaration     #Yes
          ElementPosition     #1879048190
          HierarchyParent     #buttonFunctions
          MenuItemType        #Action
          MenuItemName        #LedgerJournalTransChangePaymMode
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalTransTxt
          AutoDeclaration     #Yes
          ElementPosition     #1879048190
          HierarchyParent     #buttonFunctions
          MenuItemName        #LedgerJourTrTxtLedgerJourTrVend
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalVoucherPreview
          AutoDeclaration     #Yes
          ElementPosition     #2136858073
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerJournalVoucherPreview
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerTransPerJournal
          ElementPosition     #970790720
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerTransPerJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LvPaymentOrder
          ElementPosition     #194158144
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LvPaymentOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Movements
          ElementPosition     #582474432
          HierarchyParent     #Print
          ShowShortCut        #No
          MenuItemType        #Output
          MenuItemName        #LedgerJournalAccountMovement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #OffsetAccountDimension
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #FinancialDimension
          MenuItemName        #LedgerJourTrOffDimLedgerJourTrnVndPay
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    ledgerJournalEngine.openOffsetAccountFinancialDimensionForm(ledgerJournalTrans, offsetAccountDimension.menuItemType(), offsetAccountDimension.menuItemName());
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymentControl
          ElementPosition     #1300234235
          HierarchyParent     #Inquiries
          MenuItemName        #LedgerPaymControlLedgerJourTrVend
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymentFeeAccountDimension
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #FinancialDimension
          DataSource          #CustVendPaymJournalFee
          MenuItemName        #LedgerJourTransPyFeeDimLdgrJourTrnVndPy
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    ledgerJournalEngine.openPaymFeeAccountFinancialDimensionForm(custVendPaymJournalFee, paymentFeeAccountDimension.menuItemType(), paymentFeeAccountDimension.menuItemName());
            #
            #    custVendPaymJournalFee.write();
            #    custVendPaymJournalFee_ds.reread();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymentOrderCancel_LV
          ElementPosition     #291237216
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #PaymentOrderCancel_LV
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationConfirm
          AutoDeclaration     #Yes
          ElementPosition     #1719664635
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconConfirmVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationNone
          AutoDeclaration     #Yes
          ElementPosition     #687865854
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconNoneVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationRecieved
          AutoDeclaration     #Yes
          ElementPosition     #1375731708
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconReceivedVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationReject
          ElementPosition     #2097151998
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconRejectVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #
            #    // <GEERU>
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #
            #    if (! ledgerJournalTrans.BankCurrencyTransferLog_RU &&
            #        ! ledgerJournalTrans.existBankPaymentOrderJour_RU())
            #    {
            #    // </GEERU>
            #        paymReconciliationNone.enabled(true);
            #        paymReconciliationConfirm.enabled(true);
            #        paymReconciliationRecieved.enabled(true);
            #        paymReconciliationSent.enabled(true);
            #    // <GEERU>
            #    }
            #    // </GEERU>
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationSent
          AutoDeclaration     #Yes
          ElementPosition     #1031798781
          HierarchyParent     #buttonPaymReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconSentVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PLAVoucher_IN
          AutoDeclaration     #Yes
          ElementPosition     #1820327929
          HierarchyParent     #Inquiries
          Text                #@GLS6273
          SaveRecord          #No
          DataSource          #UpdatePLAEnquiry_IN
          MenuItemName        #LedgerTransVoucher1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PostJournal
          ElementPosition     #1073741822
          HierarchyParent     #buttonPostJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourPostLJTransVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    STF_ledgerTrans        ledgerTrans;
            #    LedgerJournalTrans     ledgerT;
            #    AxLedgerJournalTrans   trans;
            #
            #    //STF_CrossPayment dev::BLB
            #    while select ledgerTrans where LedgerJournalTrans.JournalNum == ledgerTrans.JournalNum
            #        && LedgerJournalTrans.STF_crossPayment == true
            #    {
            #        trans = new AxLedgerJournalTrans();
            #        trans.parmSTFRefRecId(ledgerTrans.RefRecId);
            #        trans.parmJournalNum(ledgerTrans.JournalNum);
            #        if(ledgerTrans.Debit)
            #            trans.parmAmountCurDebit(ledgerTrans.Debit);
            #        else
            #            trans.parmAmountCurCredit(ledgerTrans.Credit);
            #        trans.parmLedgerDimension(ledgerTrans.LedgerDimension);
            #        trans.parmCurrencyCode(ledgerTrans.CurrencyCode);
            #        trans.parmPostingProfile(ledgerTrans.PostingProfile);
            #        trans.parmTxt(ledgerTrans.Txt);
            #        trans.parmSTFCrossPayment(true);
            #        if(ledgerTrans.CurrencyCode == 'USD')
            #             trans.parmExchRate(ledgerTrans.ExchRate);
            #        trans.parmAccountType(ledgerTrans.AccountType);
            #        trans.parmTaxCode(ledgerTrans.TaxCode);
            #        trans.save();
            #    }
            #    //STF_CrossPayment dev::BLB
            #    ledgerJournalEngine.clearVoucher();
            #    if(postDatedCheckEnabled)
            #    {
            #        vendPDCRegister_ds.write();
            #    }
            #
            #    try
            #    {
            #        super();
            #    }
            #    catch
            #    {
            #        // Swallow the exception because we want finally semantics
            #        curext(); // suppress compiler warning for empty compound statements
            #    }
            #
            #    // finally
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #    else
            #    {
            #        CustVendPDCManager::postDatedCheckPost(journalNum);
            #        //STF_CrossPayment dev::BLB
            #        if(!LedgerJournalTable::find(LedgerJournalTrans.JournalNum).Posted)
            #            delete_from ledgerT where LedgerJournalTrans.JournalNum == ledgerT.JournalNum
            #            && ledgerT.STF_crossPayment == true && ledgerT.AccountType == LedgerJournalACType::Ledger;
            #       //STF_CrossPayment dev::BLB
            #    }
            #
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #    element.STF_UpdateDesign();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PrintPurchaseCurrencyOrder_RU
          AutoDeclaration     #Yes
          ElementPosition     #2141891240
          HierarchyParent     #Print
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #VendOutPaymCurrencyTransferWord_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PrintSellCurrencyOrder_RU
          AutoDeclaration     #Yes
          ElementPosition     #2144687442
          HierarchyParent     #Print
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #VendOutSellCurrencyTransferWord_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Remittance_ManageAddress
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #ButtonGroup1
          Text                #@SYS312927
          ButtonDisplay       #Text & Image left
          DataSource          #LedgerJournalTrans
          MenuItemName        #VendDirPartyPostalAddressAdvanced
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #STF_NotificationToExpensesBtn
          AutoDeclaration     #Yes
          ElementPosition     #143165574
          HierarchyParent     #ButtonGroup
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #STF_NotificationToExpenses
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #        element.STF_UpdateDesign();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxRegisterBalance_IN
          CountryRegionCodes  #IN
          ElementPosition     #346729128
          HierarchyParent     #Inquiries
          MenuItemName        #TaxRegisterBalance_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxTransSource
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #ButtonGroup
          MenuItemName        #TaxTransSourceLedgerJournalTrnVendPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    if (!ledgerJournalTable.Posted)
            #    {
            #        Tax::showTaxes(menuitemDisplayStr(TaxTmpWorkLedgerJournalTrnVendPaym), element.getShowTax(), ledgerJournalTrans, element);
            #    }
            #    else
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxWithholdSlip
          CountryRegionCodes  #GB
          ElementPosition     #129438762
          HierarchyParent     #Print
          Text                #@SYS4000250
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #TaxWithholdSlipReport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxWitholdChallan_IN
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #TaxWithhold_IN
          DataSource          #LedgerJournalTrans
          MenuItemName        #TaxWithholdChallan_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #UpdatePLA
          AutoDeclaration     #Yes
          HelpText            #@GLS6139
          ElementPosition     #2013265918
          HierarchyParent     #buttonFunctions
          Text                #@GLS6225
          MenuItemName        #UpdatePLA_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VATTaxAgentCreatePayment_RU
          AutoDeclaration     #Yes
          ElementPosition     #2080374782
          HierarchyParent     #buttonPaymProposal
          MenuItemType        #Action
          MenuItemName        #VATTaxAgentCreatePayment_RU
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    journalFormTrans.researchJournalLines();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendChequeCopy
          AutoDeclaration     #Yes
          ElementPosition     #1747423296
          HierarchyParent     #Print
          Text                #@SYS134219
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #VendChequeCopy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendPaymentFeeSummary_JP
          ElementPosition     #1690304505
          HierarchyParent     #Inquiries
          MenuItemName        #VendPaymentFeeSummary_JP
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    MenuFunction    menuFunction;
            #    Args            args;
            #
            #    menuFunction = new MenuFunction(menuitemDisplayStr(VendPaymentFeeSummary_JP), MenuItemType::Display);
            #
            #    // Check access rights
            #    if (!menuFunction || !menuFunction.checkAccessRights())
            #    {
            #        // Not enough access rights to menu item %1.
            #        throw error(strFmt("@SYS104222", menuFunction.name()));
            #    }
            #
            #    args = new args();
            #    args.record(ledgerJournalTable);
            #    menuFunction.run(args);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendPaymentJournal_NA
          ElementPosition     #1359107008
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #VendPaymentJournal_NA
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendPaymProposalCreate
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #buttonPaymProposal
          MenuItemType        #Action
          MenuItemName        #VendPaymProposalCreate
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    boolean allowEditSave;
            #    boolean allowCreateSave;
            #    boolean allowDeleteSave;
            #    ;
            #
            #    // clear unused vouchers prior to invoking creation process
            #    ledgerJournalEngine.clearVoucher();
            #
            #    allowEditSave   = ledgerJournalTrans_ds.allowEdit();
            #    allowCreateSave = ledgerJournalTrans_ds.allowCreate();
            #    allowDeleteSave = ledgerJournalTrans_ds.allowDelete();
            #
            #    ledgerJournalTrans_ds.allowEdit(false);
            #    ledgerJournalTrans_ds.allowCreate(false);
            #    ledgerJournalTrans_ds.allowDelete(false);
            #
            #    super();
            #
            #    ledgerJournalTrans_ds.allowEdit(allowEditSave);
            #    ledgerJournalTrans_ds.allowCreate(allowCreateSave);
            #    ledgerJournalTrans_ds.allowDelete(allowDeleteSave);
            #
            #    journalFormTrans.researchJournalLines();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendPaymProposalEdit
          ElementPosition     #1744830462
          HierarchyParent     #buttonPaymProposal
          MultiSelect         #Yes
          MenuItemName        #VendPaymProposalEdit
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #
            #    ledgerJournalEngine.lock();
            #
            #    CustVendPaymProposalEditForm::newLedgerJournalTrans(ledgerJournalTrans).run();
            #
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTrans.ledgerJournalTable(),true);
            #    ledgerJournalEngine.unlock();
            #    ledgerJournalTrans_ds.last();
            #    ledgerJournalTrans_ds.write();
            #    ledgerJournalTrans_ds.active();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendShowSpecifikation
          ElementPosition     #780140541
          HierarchyParent     #Inquiries
          DataSource          #LedgerJournalTrans
          MenuItemName        #VendShowSpecifikation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #WithholdingTaxSlip
          HelpText            #@SYS4082990
          ElementPosition     #1941581444
          HierarchyParent     #Print
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #TaxWithholdSlip_TH
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Amount_amountCur
          ElementPosition     #1610612733
          HierarchyParent     #Amount
          DataSource          #LedgerJournalTrans
          DataMethod          #amountCurPdc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #AmountCurCredit
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurCredit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #AmountCurDebit
          AutoDeclaration     #Yes
          ElementPosition     #429496728
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurDebit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #crossrate
          HelpText            #@SYS53165
          ElementPosition     #1073741822
          HierarchyParent     #Description
          Label               #@SYS53164
          DataSource          #LedgerJournalTrans
          DataMethod          #crossrate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #editBankCurrencyDealCourse_RU
          AutoDeclaration     #Yes
          ElementPosition     #1908874352
          HierarchyParent     #CurrencyConvert_RU
          DataMethod          #editBankCurrencyDealCourse_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #fieldExchRate
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS324259
          ElementPosition     #1717986912
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataMethod          #editExchRate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #fieldExchRateSecond
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS324259
          ElementPosition     #1932735276
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataMethod          #editExchRateSecond
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #JournalBalance
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #TotalBalance
          Label               #@SYS24010
          DataSource          #LedgerJournalTrans
          DataMethod          #JournalBalance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #JournalCredit
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #CreditBalance
          Label               #@SYS24010
          DataSource          #LedgerJournalTrans
          DataMethod          #JournalCredit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #JournalDebit
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #DebitBalance
          Label               #@SYS24010
          DataSource          #LedgerJournalTrans
          DataMethod          #JournalDebit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AmountCurCredit
          AutoDeclaration     #Yes
          ElementPosition     #2130706430
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurCredit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AmountCurDebit
          AutoDeclaration     #Yes
          ElementPosition     #2113929214
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurDebit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AssessableValue_IN
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataField           #AssessableValue_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_MaximumRetailPrice_IN
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataField           #MaximumRetailPrice_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_NonRecoverablePercent_IN
          ElementPosition     #1717986916
          HierarchyParent     #VAT
          DataSource          #LedgerJournalTrans
          DataField           #NonRecoverablePercent_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_STF_newExchRate
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #STF_difExchRate
          Label               #Nuevo tipo de cambio
          DataSource          #LedgerJournalTrans
          DataField           #STF_newExchRate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #SalesTax_TaxBase_W
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1968526674
          HierarchyParent     #SalesTax
          DataSource          #LedgerJournalTrans
          DataField           #TaxBase_W
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendPaymJournalFee_FeeValue
          ElementPosition     #1610612734
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #FeeValue
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VoucherCredit
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1610612733
          HierarchyParent     #CreditBalance
          Label               #@SYS11131
          DataSource          #LedgerJournalTrans
          DataMethod          #VoucherCredit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VoucherDebit
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1610612733
          HierarchyParent     #DebitBalance
          Label               #@SYS11131
          DataSource          #LedgerJournalTrans
          DataMethod          #VoucherDebit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VoucherTotal
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1610612733
          HierarchyParent     #TotalBalance
          Label               #@SYS11131
          DataSource          #LedgerJournalTrans
          DataMethod          #VoucherTotal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_AccountNum
          AutoDeclaration     #Yes
          ElementPosition     #2018858323
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimAccountController.parmControl(this);
            #    dimAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimAccountController.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            #    dimAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimAccountController.loadSegments();
            #
            #    currentMainAccountId = dimAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #}
            #
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    VendBankAccount         vendBankAccount;
            #    boolean ret;
            #
            #    ret = super();
            #   //BEGIN DEV:BLIZARRAGA
            #    select * from vendBankAccount order by ModifiedDateTime desc where vendBankAccount.VendAccount == this.valueStr();
            #    LedgerJournalTrans.STF_BankReference = VendBankAccount.STF_BankReference;
            #    LedgerJournalTrans.STF_BankReferenceNumeric = VendBankAccount.STF_BankReferenceNumeric;
            #    LedgerJournalTrans.CustVendBankAccountId = VendBankAccount.AccountID;
            #    LedgerJournalTrans_ds.refresh();
            #   //END DEV:BLIZARRAGA
            #
            #    return ret;
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.segmentValueChanged(_e);
            #    currentMainAccountId = ledgerJournalEngine.onPrimaryAccountSegmentChanged(dimAccountController, currentMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_AccountNum1
          AutoDeclaration     #Yes
          ElementPosition     #780903144
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimAccountController.parmControl(this);
            #    dimAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimAccountController.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            #    dimAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimAccountController.loadSegments();
            #
            #    currentMainAccountId = dimAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #}
            #
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum1, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.segmentValueChanged(_e);
            #    currentMainAccountId = ledgerJournalEngine.onPrimaryAccountSegmentChanged(dimAccountController, currentMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccount
          AutoDeclaration     #Yes
          ElementPosition     #2143289342
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          ReferenceField      #OffsetLedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimOffsetAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimOffsetAccountController.parmControl(this);
            #    dimOffsetAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimOffsetAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimOffsetAccountController.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            #    dimOffsetAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimOffsetAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimOffsetAccountController.loadSegments();
            #
            #    currentOffsetMainAccountId = dimOffsetAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #
            #    // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            #    if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            #    {
            #        dimOffsetAccountController.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
            #    }
            #}
            #
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    // Find the current segment index value
            #    int currentSegmentIndex = dimOffsetAccountController.parmControl().currentSegmentIndex();
            #
            #    if ((ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger &&
            #        dimOffsetAccountController.getDimensionAttributeByControlIndex(currentSegmentIndex) != DimensionAttribute::getMainAccountDimensionAttribute()) ||
            #        !ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.segmentValueChanged(_e);
            #    currentOffsetMainAccountId = ledgerJournalEngine.onOffsetAccountSegmentChanged(dimOffsetAccountController, currentOffsetMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimOffsetAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccount1
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          ReferenceField      #OffsetLedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimOffsetAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimOffsetAccountController.parmControl(this);
            #    dimOffsetAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimOffsetAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimOffsetAccountController.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            #    dimOffsetAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimOffsetAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimOffsetAccountController.loadSegments();
            #
            #    currentOffsetMainAccountId = dimOffsetAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #
            #    // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            #    if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            #    {
            #        dimOffsetAccountController.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
            #    }
            #}
            #
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    // Find the current segment index value
            #    int currentSegmentIndex = dimOffsetAccountController.parmControl().currentSegmentIndex();
            #
            #    if ((ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger &&
            #        dimOffsetAccountController.getDimensionAttributeByControlIndex(currentSegmentIndex) != DimensionAttribute::getMainAccountDimensionAttribute()) ||
            #        !ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount1, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.segmentValueChanged(_e);
            #    currentOffsetMainAccountId = ledgerJournalEngine.onOffsetAccountSegmentChanged(dimOffsetAccountController, currentOffsetMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimOffsetAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #VendPaymJournalFee_VendAccount
          AutoDeclaration     #Yes
          ElementPosition     #2130706430
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimPaymentFeeAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimPaymentFeeAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimPaymentFeeAccountController.parmControl(this);
            #    dimPaymentFeeAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimPaymentFeeAccountController.parmCurrency(custVendPaymJournalFee.FeeCurrency);
            #    dimPaymentFeeAccountController.parmDate(ledgerJournalTrans.TransDate);
            #
            #    dimPaymentFeeAccountController.loadSegments();
            #    currentPaymentFeeMainAccountId = dimPaymentFeeAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #}
            #
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    switch (custVendPaymJournalFee.LedgerJournalACType)
            #    {
            #        case LedgerJournalACType::Bank:
            #            BankAccountTable::lookupBankAccount(this);
            #            break;
            #        case LedgerJournalACType::Cust:
            #            CustTable::lookupCustomer(this);
            #            break;
            #        case LedgerJournalACType::FixedAssets:
            #            AssetTable::lookupAccountNum(this);
            #            break;
            #        case LedgerJournalACType::Project:
            #            ProjTable::lookupProjId(this, custVendPaymJournalFee);
            #            break;
            #        case LedgerJournalACType::Vend:
            #            VendTable::lookupVendor(this);
            #            break;
            #        default:
            #            super();
            #            break;
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimPaymentFeeAccountController.segmentValueChanged(_e);
            #    currentPaymentFeeMainAccountId = ledgerJournalEngine.onPrimaryAccountSegmentChanged(dimPaymentFeeAccountController, currentPaymentFeeMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimPaymentFeeAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #ChallanInformationSeperator
          ElementPosition     #1879048190
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #CzSeparator_TaxDocument
          ConfigurationKey    #CzCustVendAdvanceInvoices
          ElementPosition     #2080374782
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator
          ElementPosition     #1610612734
          HierarchyParent     #buttonPaymProposal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator1
          ElementPosition     #2013265918
          HierarchyParent     #buttonPaymProposal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator2
          ElementPosition     #1610612734
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator3
          ElementPosition     #1879048190
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator4
          AllowEdit           #No
          CountryRegionCodes  #NO
          ElementPosition     #2130706430
          HierarchyParent     #buttonPaymReconciliation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator4_RU
          CountryRegionCodes  #RU
          ConfigurationKey    #Bank
          ElementPosition     #2137417314
          HierarchyParent     #Print
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator5
          CountryRegionCodes  #IN
          ElementPosition     #2080374782
          HierarchyParent     #Inquiries
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #accountAgreementDocumentTitle_RU
          CountryRegionCodes  #RU
          ElementPosition     #2058005160
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataMethod          #accountAgreementDocumentTitle_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AccountName
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Names
          DataSource          #LedgerJournalTrans
          DataMethod          #AccountName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Amount_currencyCode
          ElementPosition     #1073741822
          HierarchyParent     #Amount
          DataSource          #LedgerJournalTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ApprovedBy1
          AllowEdit           #No
          HelpText            #@SYS25659
          ElementPosition     #920350134
          HierarchyParent     #CurrentJournal
          DataSource          #LedgerJournalTrans
          DataMethod          #ApprovedBy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankLCNumber
          ConfigurationKey    #BankDocument
          ElementPosition     #1073741822
          HierarchyParent     #BankLCImportGroup
          DataSource          #LedgerJournalTrans
          DataMethod          #displayBankLCNumber
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    ledgerJournalTrans_ds.jumpRefBankLC();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankTransType
          ElementPosition     #1288490187
          HierarchyParent     #GrpBank
          DataSource          #LedgerJournalTrans
          DataField           #BankTransType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CompanyAddress
          ElementPosition     #1476395005
          HierarchyParent     #CompanyInfo
          Label               #@SYS36203
          DataSource          #LedgerJournalTrans
          DataMethod          #displayAddress_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CurrencyCode
          ElementPosition     #1288490184
          HierarchyParent     #GrpCurrency
          DataSource          #LedgerJournalTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Document_DocNum
          ElementPosition     #1073741822
          HierarchyParent     #PaymDocument
          DataSource          #PaymentOrderBudgetTrans_RU
          DataField           #DocNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Document_RealVendName_TH
          HelpText            #@SYS4082937
          ElementPosition     #1610612733
          HierarchyParent     #Document_TH
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #RealVendName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DocumentNum
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Document
          DataSource          #LedgerJournalTrans
          DataField           #DocumentNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editBankAgreementExt_RU
          AutoDeclaration     #Yes
          ElementPosition     #1312351117
          HierarchyParent     #CurrencyConvert_RU
          DataMethod          #editBankAgreementExt_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editBankCommAccountId_RU
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #CurrencyConvert_RU
          Label               #@GLS102283
          DataMethod          #editBankCommAccountId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editBankRespWorkerId_RU
          AutoDeclaration     #Yes
          ElementPosition     #1789569705
          HierarchyParent     #CurrencyConvert_RU
          Label               #@GLS102281
          DataMethod          #editBankRespWorkerId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editBankSpecAccountId_RU
          AutoDeclaration     #Yes
          ElementPosition     #477218588
          HierarchyParent     #CurrencyConvert_RU
          Label               #@GLS107795
          DataMethod          #editBankSpecAccountId_RU
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #public void lookup()
            #{
            #    VendOutPaym_CurrencyTransfer_RU::lookupSpecAccount(this,
            #                                                       BankTransType::find(ledgerJournalTrans.BankTransType).BankAdvancedTransType_RU,
            #                                                       '',
            #                                                       ledgerJournalTrans.TransferCurrency_RU);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editBankTransferCurrency_RU
          AutoDeclaration     #Yes
          ElementPosition     #1670265058
          HierarchyParent     #CurrencyConvert_RU
          DataMethod          #editBankTransferCurrency_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editBankVendAccountId_RU
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #CurrencyConvert_RU
          DataMethod          #editBankVendAccountId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ErrorLog
          ElementPosition     #1840700268
          HierarchyParent     #CurrentJournal
          MultiLine           #Yes
          Label               #@SYS22915
          DataSource          #LedgerJournalTrans
          DataMethod          #ErrorLog
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #exchRateTxt
          ElementPosition     #1610612733
          HierarchyParent     #Description
          DisplayLength       #15
          DataSource          #LedgerJournalTrans
          DataMethod          #exchRateTxt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #GroupDocument_DocumentNum
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #GroupDocument
          DataSource          #LedgerJournalTrans
          DataField           #DocumentNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #GroupDocument_RealVendName_TH
          HelpText            #@SYS4082937
          ElementPosition     #1610612733
          HierarchyParent     #GroupDocument_TH
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #RealVendName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AccountAgreementId_RU
          ElementPosition     #1968526675
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #AccountAgreementId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AgreementCompany_RU
          ElementPosition     #1879048190
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #AgreementCompany_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AssetBookId
          ElementPosition     #1288490187
          HierarchyParent     #AssetTab
          DataSource          #LedgerJournalTrans_Asset
          DataField           #BookId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_BankCentralBankPurposeText
          AutoDeclaration     #Yes
          Left                #Auto (right)
          AlignControl        #No
          ElementPosition     #1073741822
          HierarchyParent     #PurposeText_RU
          MultiLine           #Yes
          LabelPosition       #Above
          DataSource          #LedgerJournalTrans
          DataField           #BankCentralBankPurposeText
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_BankChequeNum
          AutoDeclaration     #Yes
          ElementPosition     #1840700268
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #BankChequeNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_BankNegInstRecipientName
          AutoDeclaration     #Yes
          ElementPosition     #1908874352
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #BankNegInstRecipientName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Company
          AutoDeclaration     #Yes
          ElementPosition     #390451572
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #Company
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_CompanyAccount
          AutoDeclaration     #Yes
          HelpText            #@SYS114383
          ElementPosition     #1879048190
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #Company
          Mandatory           #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_ConsignmentNoteNum_IN
          ElementPosition     #1561806288
          HierarchyParent     #GroupHeader
          DataSource          #LedgerJournalTrans
          DataField           #ConsignmentNoteNum_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_CurrencyCode1
          ElementPosition     #1431655764
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #    container vend;
            #    VendTable vendTable;
            #    LedgerJournalTrans ledgerTrans;
            #    ;
            #     ret = super();
            #    //BEGIN DEV:BL  STF_CrossPayment
            #   select Currency from vendTable where LedgerJournalTrans.accountDisplay() == vendTable.AccountNum;
            #   if(LedgerJournalTrans.CurrencyCode != vendTable.Currency)
            #   {
            #      LedgerJournalTrans.STF_crossPayment = true;
            #      vend = specTrans.STF_findMarkedVendPayment(LedgerJournalTrans.accountDisplay(),curext(),LedgerJournalTrans);
            #      if(vend)
            #          element.STF_crossPayment(vend,LedgerJournalTrans);
            #   }
            #   else
            #   {
            #       delete_from ledgerTrans where ledgerTrans.STF_RefRecId == LedgerJournalTrans.RecId;
            #       if(LedgerJournalTrans.CurrencyCode == 'MXN')
            #          LedgerJournalTrans.PostingProfile = 'GEN';
            #       else if(LedgerJournalTrans.CurrencyCode == 'USD')
            #          LedgerJournalTrans.PostingProfile = 'GEN_USD';
            #
            #        LedgerJournalTrans.STF_crossPayment = false;
            #        LedgerJournalTrans_ds.refresh();
            #        LedgerJournalTrans_ds.reread();
            #        LedgerJournalTrans_ds.research();
            #        LedgerJournalTrans_ds.refresh();
            #   }
            #
            #    //END DEV:BL  STF_CrossPayment
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_CustVendBankAccountId
          AutoDeclaration     #Yes
          ElementPosition     #1990896296
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #CustVendBankAccountId
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_EPCompanyDocument_BR
          AllowEdit           #No
          ElementPosition     #477218588
          HierarchyParent     #AddRemitInfo
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #EPCompanyDocument_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_EPPaymentType_BR
          AllowEdit           #No
          ElementPosition     #795364313
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #EPPaymentType_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_EPPaymentWay_BR
          AllowEdit           #No
          ElementPosition     #874900744
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #EPPaymentWay_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccountAgreementId_RU
          ElementPosition     #1968526675
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAccountAgreementId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAgreementCompany_RU
          ElementPosition     #1879048190
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAgreementCompany_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetCompany
          ElementPosition     #429496728
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetCompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetPostingProfile_RU
          ElementPosition     #1288490187
          HierarchyParent     #PostingProfile
          DataSource          #LedgerJournalTrans
          DataField           #OffsetPostingProfile_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetTxt
          ElementPosition     #1369020823
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetTxt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymentNotes
          ElementPosition     #1193046470
          HierarchyParent     #GrpPayment1
          MultiLine           #Yes
          DataSource          #LedgerJournalTrans
          DataField           #PaymentNotes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymId
          AutoDeclaration     #Yes
          ElementPosition     #1227133512
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #PaymId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymId1
          ElementPosition     #954437176
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #PaymId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymMode
          Width               #54
          ElementPosition     #477218588
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #PaymMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymMode1
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Group
          DataSource          #LedgerJournalTrans
          DataField           #PaymMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymPurpose_LT
          ElementPosition     #2028178999
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #PaymPurpose_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymSpec
          ElementPosition     #715827882
          HierarchyParent     #GrpPayment1
          LookupButton        #Always
          DataSource          #LedgerJournalTrans
          DataField           #PaymSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymSpec1
          AutoDeclaration     #Yes
          ElementPosition     #920350134
          HierarchyParent     #GrpPayment
          LookupButton        #Always
          DataSource          #LedgerJournalTrans
          DataField           #PaymSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PostingProfile
          ElementPosition     #858993458
          HierarchyParent     #PostingProfile
          DataSource          #LedgerJournalTrans
          DataField           #PostingProfile
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_RemittanceAddress
          ElementPosition     #1431655764
          HierarchyParent     #RemittanceBottom
          DataSource          #LedgerJournalTrans
          DataMethod          #displayRemittanceAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_RemitteeCurrency
          AutoDeclaration     #Yes
          ElementPosition     #1670265058
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #RemitteeCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_STF_BankReference
          AutoDeclaration     #Yes
          ElementPosition     #2041227944
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #STF_BankReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_STF_BankReferenceNumeric
          AutoDeclaration     #Yes
          ElementPosition     #2063597566
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #STF_BankReferenceNumeric
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TaxWithholdAlternateVendorAcct_TH
          ElementPosition     #976128930
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #TaxWithholdAlternateVendorAcct_TH
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TaxWithholdGroup
          ElementPosition     #858993458
          HierarchyParent     #TaxWithholdGroup
          DataSource          #LedgerJournalTrans
          DataField           #TaxWithholdGroup
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #    VendTable vendor;
            #
            #    ret = super();
            #    //BEGIN DEV:BLB  STF_CrossPayment
            #    vendor = VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension);
            #    if(vendor.TaxWithholdCalculate == false && ledgerJournalTrans.TaxWithholdGroup  && ledgerJournalTrans.STF_crossPayment)
            #        throw warning(strFmt("El proveedor %1 no está configurado para retención de impuestos",vendor.AccountNum));
            #    //END DEV:BLB  STF_CrossPayment
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TransferredBy
          AllowEdit           #No
          ElementPosition     #1288490187
          HierarchyParent     #Transfer
          DataSource          #LedgerJournalTrans
          DataField           #TransferredBy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TransferredTo
          AllowEdit           #No
          ElementPosition     #1717986916
          HierarchyParent     #Transfer
          DataSource          #LedgerJournalTrans
          DataField           #TransferredTo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Txt
          ElementPosition     #2080374782
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #Txt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Txt1
          ElementPosition     #1427588560
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #Txt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher
          AutoDeclaration     #Yes
          ElementPosition     #390451572
          HierarchyParent     #GroupHeader
          DataSource          #LedgerJournalTrans
          DataField           #Voucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher_CN
          ElementPosition     #585677358
          HierarchyParent     #GroupHeader
          DataSource          #LedgerJournalTrans
          DataField           #Voucher_CN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher_CN1
          ElementPosition     #1288490187
          HierarchyParent     #Identification
          DataSource          #LedgerJournalTrans
          DataField           #Voucher_CN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher1
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #Identification
          DataSource          #LedgerJournalTrans
          DataField           #Voucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTransPayment_BR_BorderoSequenceNum_BR
          ElementPosition     #1994091957
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #BorderoSequenceNum_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTransSymbol_SpecificSymbol
          ElementPosition     #1610612733
          HierarchyParent     #Symbol
          DataSource          #LedgerJournalTransSymbol
          DataField           #SpecificSymbol
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTransTaxExtensionIN_TaxWithholdAcknowledgementNumber
          ElementPosition     #1610612730
          HierarchyParent     #WithholdingTax
          DataSource          #LedgerJournalTransTaxExtensionIN
          DataField           #TaxWithholdAcknowledgementNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #offsetAccountAgreementDocumentTitle_RU
          CountryRegionCodes  #RU
          ElementPosition     #2058005160
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataMethod          #offsetAccountAgreementDocumentTitle_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #OffsetAccountName
          AllowEdit           #No
          Skip                #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Names
          DataSource          #LedgerJournalTrans
          DataMethod          #OffsetAccountName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PaymentReference
          ElementPosition     #1717986916
          HierarchyParent     #GrpBank
          DataSource          #LedgerJournalTrans
          DataField           #PaymReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PDCGroup_CheckNumber
          ElementPosition     #1503238548
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          DataField           #CheckNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PDCGroup_ReasonForStop
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #PDCGroup
          DataSource          #VendPDCRegister
          DataField           #ReasonForStop
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #RejectedBy
          AllowEdit           #No
          HelpText            #@SYS25658
          ElementPosition     #1227133512
          HierarchyParent     #CurrentJournal
          Label               #@SYS22205
          DataSource          #LedgerJournalTrans
          DataMethod          #RejectedBy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Replacement_Comments
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #Replacement
          DataSource          #VendPDCRegister
          DataField           #Comments
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Replacement_OriginalCheck
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #Replacement
          DataSource          #VendPDCRegister
          DataField           #OriginalCheck
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ReportedAsReadyBy
          AllowEdit           #No
          HelpText            #@SYS25657
          ElementPosition     #613566756
          HierarchyParent     #CurrentJournal
          Label               #@SYS22056
          DataSource          #LedgerJournalTrans
          DataMethod          #ReportedAsReadyBy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode
          ElementPosition     #572662304
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceTax_IN_ServiceCodeTable_IN_ServiceCode
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #1288490187
          HierarchyParent     #ServiceTax_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #editServiceCode_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #// <GIN>
            #public void lookup()
            #{
            #    LedgerJournalTrans.lookupServiceCode_IN(this);
            #}
            #// </GIN>
          ENDSOURCE
          SOURCE #validate
            #// <GIN>
            #public boolean validate()
            #{
            #    boolean isValid = super();
            #
            #    if (isValid)
            #    {
            #        isValid = LedgerJournalTrans.checkServiceCode_IN(ServiceTax_IN_ServiceCodeTable_IN_ServiceCode.text());
            #    }
            #
            #    return isValid;
            #}
            #// </GIN>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxCode
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #751619274
          HierarchyParent     #SalesTax
          DataSource          #LedgerJournalTrans
          DataField           #TaxCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    //STF_ivaValidation DEV::BLB
            #    LedgerJournalTrans.STF_taxAmountJournal = LedgerJournalTrans.taxAmountJournal();
            #    //STF_ivaValidation DEV::BLB
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxGroup
          ElementPosition     #1127428911
          HierarchyParent     #SalesTax
          DataSource          #LedgerJournalTrans
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    //STF_ivaValidation DEV::BLB
            #    LedgerJournalTrans.STF_taxAmountJournal = LedgerJournalTrans.taxAmountJournal();
            #    //STF_ivaValidation DEV::BLB
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxItemGroup
          ElementPosition     #1503238548
          HierarchyParent     #SalesTax
          DataSource          #LedgerJournalTrans
          DataField           #TaxItemGroup
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    //STF_ivaValidation DEV::BLB
            #    LedgerJournalTrans.STF_taxAmountJournal = LedgerJournalTrans.taxAmountJournal();
            #    //STF_ivaValidation DEV::BLB
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdGroup_TCSGroup_IN
          ElementPosition     #1288490187
          HierarchyParent     #TaxWithholdGroup
          DataSource          #LedgerJournalTrans
          DataField           #TCSGroup_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxWithholdGroup_TDSGroup_IN
          ElementPosition     #1717986916
          HierarchyParent     #TaxWithholdGroup
          DataSource          #LedgerJournalTrans
          DataField           #TDSGroup_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendEPRemitInfo_BR_BankFolder
          ElementPosition     #1431655764
          HierarchyParent     #AddRemitInfo
          DataSource          #VendEPRemitInfo_BR
          DataField           #BankFolder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendEPRemitInfo_BR_BarCodeInfo
          ElementPosition     #1908874352
          HierarchyParent     #AddRemitInfo
          DataSource          #VendEPRemitInfo_BR
          DataField           #BarCodeInfo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendEPRemitInfo_BR_DocumentType
          ElementPosition     #715827882
          HierarchyParent     #AddRemitInfo
          DataSource          #VendEPRemitInfo_BR
          DataField           #DocumentType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendEPRemitInfo_BR_Instruction_1
          ElementPosition     #954437176
          HierarchyParent     #AddRemitInfo
          DataSource          #VendEPRemitInfo_BR
          DataField           #Instruction_1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendEPRemitInfo_BR_Instruction_2
          ElementPosition     #1193046470
          HierarchyParent     #AddRemitInfo
          DataSource          #VendEPRemitInfo_BR
          DataField           #Instruction_2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendPaymJournalFee_FeeCurrency
          ElementPosition     #1879048190
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #FeeCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendPaymJournalFee_FeeId
          ElementPosition     #1073741823
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #FeeId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendPaymJournalFee_TaxGroup
          ElementPosition     #2013265918
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendPaymJournalFee_TaxItemGroup
          ElementPosition     #2080374782
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #TaxItemGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #PostedDateTime
          AllowEdit           #No
          HelpText            #@SYS22450
          ElementPosition     #1533916890
          HierarchyParent     #CurrentJournal
          DataSource          #LedgerJournalTrans
          DataMethod          #PostedDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #ErrorExist
          AutoDeclaration     #Yes
          Visible             #No
          AllowEdit           #No
          Width               #14
          Height              #14
          AlignControl        #No
          ElementPosition     #1073741823
          HierarchyParent     #overviewGrid
          Imagemode           #Size to fit
          ShowLabel           #No
          DataSource          #LedgerJournalTrans
          DataMethod          #ErrorExist
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #VATINPAYMENTBUTTON
      PROPERTIES
        Control             #VATINPAYMENTBUTTON
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #VATINPAYMENTBUTTON
      PROPERTIES
        Control             #VATINPAYMENTBUTTON
        EffectiveAccess     #Create
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #VATINPAYMENTBUTTON
      PROPERTIES
        Control             #VATINPAYMENTBUTTON
        EffectiveAccess     #Delete
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #LedgerJournalTransCustPaym
  PROPERTIES
    Name                #LedgerJournalTransCustPaym
    Origin              #{51D6505D-7248-4AA9-B72E-CD0FE310A531}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #class FormRun extends ObjectRun
      #{
      #    #isoCountryRegionCodes
      #    QueryBuildRange                     ledgerJournalTransRange;
      #    LedgerJournalEngine_CustPayment     ledgerJournalEngine;
      #    LedgerJournalCheckPostResults       postingResults_Client;
      #
      #    LedgerJournalFormTrans_Payment      journalFormTrans;
      #
      #    LedgerJournalId                     journalNum;
      #    DebCredProposal                     debCredProposal;
      #    DebCredProposal                     debCredProposalOld;
      #    LedgerJournalTable                  ledgerJournalTable;
      #
      #    ImageListAppl_LedgerJournal         imageListAppl;
      #
      #    Map                                 childForms;
      #
      #    LedgerJournalTransEntityManager     ledgerJournalTransEntityManager; // Used to manage entity-related tasks like in-memory rollbacks for aborted transactions.
      #
      #    boolean                             previousIsEditCustPaymEnabled;
      #    boolean                             previousIsSettlementEnabled;
      #    utcdatetime                         lastEnteredReleaseDate;
      #    boolean                             norwayEnabled;
      #
      #    DimensionDynamicAccountController   dimAccountController;
      #    DimensionDynamicAccountController   dimOffsetAccountController;
      #    DimensionDynamicAccountController   dimPaymentFeeAccountController;
      #    RecId                               currentMainAccountId;
      #    RecId                               currentOffsetMainAccountId;
      #    RecId                               currentPaymentFeeMainAccountId;
      #    LedgerJournalACType                 priorOffsetAccountType;
      #    // <GCN>
      #    LedgerChineseVoucherEnabled_CN      chineseVoucher_CN;
      #    // </GCN>
      #    // <GEEU><GCN>
      #    #ISOCountryRegionCodes
      #    // </GCN></GEEU>
      #    // <GIN>
      #    boolean                             countryRegion_IN;
      #    // </GIN>
      #    // <GEERU>
      #    boolean                             countryRegion_RU;
      #    // </GEERU>
      #    boolean                             postDatedCheckEnabled;
      #
      #    BankLCExportLineNumController       bankLCExportLineNumController;
      #
      #    PCDataSourceEventNotify             ledgerJournalTransDSEventNotifier;
      #
      #    boolean                             mcrAllowPayment;
      #}
    ENDSOURCE
    SOURCE #accountNumModifiedPost
      #/// <summary>
      #/// Updates the form when the account number field is modified.
      #/// </summary>
      #public void accountNumModifiedPost()
      #{
      #    ;
      #
      #    changecompany(ledgerJournalTrans.Company)
      #    {
      #        debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
      #        element.setDebCredProposal(false);
      #        ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);
      #
      #        // Clear out the MarkedInvoice-related fields.
      #        ledgerJournalTrans.MarkedInvoice        = '';
      #        ledgerJournalTrans.MarkedInvoiceRecId   = 0;
      #        ledgerJournalTrans.MarkedInvoiceCompany = '';
      #
      #        if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
      #        {
      #            ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
      #            element.enableDepreciationStartDate();
      #        }
      #        // <GEECZ>
      #        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
      #        {
      #            ledgerJournalTransSymbol.initFromLedgerJournalTransCust(ledgerJournalTrans);
      #            ledgerJournalTrans_DS.refresh();
      #            ledgerJournalTransSymbol_DS.forceWrite(true);
      #        }
      #        // </GEECZ>
      #    }
      #}
      #
    ENDSOURCE
    SOURCE #activate
      #/// <summary>
      #/// Handles the event that fires when focus is given to the form.
      #/// </summary>
      #/// <param name="_active">
      #/// true if the form has focus; otherwise, false.
      #/// </param>
      #public void activate(boolean _active)
      #{
      #    ;
      #
      #    super(_active);
      #
      #    journalFormTrans.manageEditingModeForApprovedWFApproval();
      #}
      #
    ENDSOURCE
    SOURCE #addChildForm
      #public void addChildForm(FormRun _childForm)
      #{
      #    ;
      #    childForms.insert(_childForm.hWnd(), _childForm);
      #}
      #
    ENDSOURCE
    SOURCE #bookRefresh
      #void bookRefresh(boolean _isClosing = false)
      #{
      #    FormRun callerForm = element.args().caller();
      #
      #    if (callerForm)
      #    {
      #        callerForm.bookRefresh();
      #    }
      #
      #    if (!_isClosing)
      #    {
      #        ledgerJournalTrans_ds.reread();
      #    }
      #}
    ENDSOURCE
    SOURCE #canClose
      #public boolean canClose()
      #{
      #    boolean         canClose;
      #    FormRun         formRun;
      #    MapEnumerator   childFormEnumerator;
      #    ;
      #
      #    try
      #    {
      #        // Signal that the close event is beginning.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().beginFormCloseEvent();
      #
      #        canClose = super();
      #
      #        childFormEnumerator = childForms.getEnumerator();
      #
      #        while (childFormEnumerator.moveNext())
      #        {
      #            formRun = childFormEnumerator.currentValue();
      #            if (!formRun.closed())
      #            {
      #                canClose = checkFailed(strFmt("@SYS89025", formRun.design().caption()));
      #
      #            }
      #        }
      #
      #        // Signal that the close event is finished.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
      #    }
      #    catch (Exception::UpdateConflict)
      #    {
      #        // This exception should not be handled by the generic handling logic below.
      #
      #        // Signal that the close event is finished.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
      #
      #        // Chain the exception forward.
      #        throw Exception::UpdateConflict;
      #    }
      #    catch
      #    {
      #        // Signal that the close event is finished.
      #        ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
      #
      #        // Chain the exception forward.
      #        throw Exception::Error;
      #    }
      #
      #    return canClose;
      #}
    ENDSOURCE
    SOURCE #checkSEPAPaymentReject
      #boolean checkSEPAPaymentReject()
      #{
      #    LedgerJournalTrans ledgerJournalTransSEPA;
      #    CustPaymModeTable custPaymModeTable;
      #
      #    select firstonly RecId from ledgerJournalTransSEPA
      #        where ledgerJournalTransSEPA.JournalNum == ledgerJournalTrans.JournalNum
      #        exists join TableId from custPaymModeTable
      #            where custPaymModeTable.IsSEPA
      #               && custPaymModeTable.PaymMode == ledgerJournalTransSEPA.PaymMode;
      #
      #    if (ledgerJournalTransSEPA)
      #    {
      #        for (ledgerJournalTransSEPA = ledgerJournalTrans_ds.getFirst(true) ? ledgerJournalTrans_ds.getFirst(true) : ledgerJournalTrans_ds.cursor();
      #             ledgerJournalTransSEPA;
      #             ledgerJournalTransSEPA = ledgerJournalTrans_ds.getNext())
      #        {
      #            if ((ledgerJournalTransSEPA.PaymentStatus == CustVendPaymStatus::Sent ||
      #                ledgerJournalTransSEPA.PaymentStatus  == CustVendPaymStatus::Confirmed ||
      #                ledgerJournalTransSEPA.PaymentStatus  == CustVendPaymStatus::Recieved) &&
      #                CustPaymModeTable::find(ledgerJournalTransSEPA.PaymMode).IsSEPA)
      #            {
      #                if (Box::yesNo("@SYS4004033", DialogButton::Yes, "@SYS4004034") == DialogButton::Yes)
      #                {
      #                    return true;
      #                }
      #                else
      #                {
      #                    return false;
      #                }
      #            }
      #        }
      #    }
      #
      #    return true;
      #}
    ENDSOURCE
    SOURCE #close
      #void close()
      #{
      #    ledgerJournalEngine.close();
      #    ledgerJournalEngine.formMethodClosePre();
      #    journalFormTrans.formClosePre();
      #    element.bookRefresh(true);
      #
      #    if (ledgerJournalTransDSEventNotifier)
      #    {
      #        ledgerJournalTrans_DS.removeNotifyHandler(ledgerJournalTransDSEventNotifier);
      #    }
      #    super();
      #
      #    TaxWithhold::clearCache();
      #}
    ENDSOURCE
    SOURCE #configureLineStatusButton_BR
      #// <GBR>
      #void configureLineStatusButton_BR()
      #{
      #    boolean                 canClose;
      #    boolean                 canReopen;
      #
      #    canClose  = ledgerJournalTrans.canCloseTaxWithholdEditStatus_BR();
      #    canReopen = ledgerJournalTrans.canReopenTaxWithholdEditStatus_BR();
      #
      #    taxWithholdLineStatusMenuButton.enabled(canClose || canReopen);
      #    taxWithholdClosePaymlLine_BR.enabled(canClose);
      #    taxWithholdReopenPaymlLine_BR.enabled(canReopen);
      #}
      #// </GBR>
    ENDSOURCE
    SOURCE #disableSettlement
      #/// <summary>
      #/// Disables the settlement related controls.
      #/// </summary>
      #/// <remarks>
      #/// Whether the controls were enable at the time of this call is stored for later use.
      #/// </remarks>
      #public void disableSettlement()
      #{
      #    ;
      #
      #    previousIsSettlementEnabled = buttonSettlement.enabled();
      #    buttonSettlement.enabled(false);
      #
      #    previousIsEditCustPaymEnabled = custPaymEditingButton.enabled();
      #    custPaymEditingButton.enabled(false);
      #}
      #
    ENDSOURCE
    SOURCE #enableButtonDepositSlip
      #void enableButtonDepositSlip()
      #{
      #    // We do not allow creating a deposit slip after the journal has been posted and it has been reconciled.
      #    if (ledgerJournalTrans.ledgerJournalTable().Posted)
      #    {
      #        if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank)
      #        {
      #            buttonDepositSlip.enabled(!BankAccountTrans::findIsReconciled(ledgerJournalTrans.Voucher,
      #                ledgerJournalTrans.TransDate,
      #                ledgerJournalTrans.CurrencyCode,
      #                ledgerJournalTrans.parmOffsetAccount(),
      #                - ledgerJournalTrans.amount()));
      #        }
      #        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Bank)
      #        {
      #            buttonDepositSlip.enabled(!BankAccountTrans::findIsReconciled(ledgerJournalTrans.Voucher,
      #                ledgerJournalTrans.TransDate,
      #                ledgerJournalTrans.CurrencyCode,
      #                ledgerJournalTrans.parmAccount(),
      #                ledgerJournalTrans.amount()));
      #        }
      #
      #        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust &&
      #            ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank)
      #        {
      #            buttonDepositSlip.enabled(!BankAccountTrans::findByVoucher(ledgerJournalTrans.Voucher,ledgerJournalTrans.TransDate).Reconciled);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #enableButtonsActive
      #/// <summary>
      #/// Enables and disables certain controls that are managed at the form level.
      #/// </summary>
      #public void enableButtonsActive()
      #{
      #    boolean enabled;
      #    boolean paymentStatusEnabled;
      #
      #    enabled = journalFormTrans.isJournalEnabled();
      #
      #    ledgerJournalPrintOutInvoice_Cust.enabled(enabled && ledgerJournalTrans.Prepayment);
      #
      #    if (journalFormTrans.parmIsActiveWFApprovalDocument())
      #    {
      #        buttonPaymentProposal.enabled(enabled && journalFormTrans.parmIsUIElementWFApprovalEnabled());
      #        paymentStatusEnabled = enabled && journalFormTrans.parmIsPayStatusButtonAvailForWFApproval();
      #    }
      #    else
      #    {
      #        buttonPaymentProposal.enabled(enabled);
      #        enabled = enabled && ledgerJournalEngine.approved();
      #        paymentStatusEnabled = enabled;
      #    }
      #
      #    buttonPaymentReconciliation.enabled(paymentStatusEnabled);
      #
      #    enabled = enabled && !ledgerJournalTrans.BankChequeNum;
      #
      #    // <GEERU>
      #    if (countryRegion_RU)
      #    {
      #        enabled = enabled && !ledgerJournalTrans.BankCurrencyTransferLog_RU;
      #    }
      #    // </GEERU>
      #
      #    paymReconciliationNone.enabled(enabled);
      #    paymReconciliationConfirm.enabled(enabled);
      #    paymReconciliationRecieved.enabled(enabled);
      #    paymReconciliationSent.enabled(enabled);
      #    // <GEERU>
      #    if (countryRegion_RU)
      #    {
      #        element.enableButtonsActive_RU();
      #    }
      #    // </GEERU>
      #    // <GEEU>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ,#isoHU,#isoPL]))
      #    {
      #        element.enableButtonsActive_CZ();
      #    }
      #    // </GEEU>
      #    // <GEEU>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL, #isoRU]))
      #    {
      #        ledgerJournalPreview.enabled(ledgerJournalEngine.posted());
      #        ledgerJournalVoucherPreview.enabled(ledgerJournalEngine.posted());
      #    }
      #    // </GEEU>
      #
      #    if (postDatedCheckEnabled)
      #    {
      #        printAckReceipt.enabled(CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans));
      #    }
      #
      #}
      #
    ENDSOURCE
    SOURCE #enableButtonsActive_CZ
      #void enableButtonsActive_CZ()
      #{
      #    boolean taxDocumentCreate;
      #
      #    taxDocumentCreate = ledgerJournalEngine.taxDocumentCreateButton_CZ(ledgerJournalTrans);
      #
      #    if (taxDocumentCreate)
      #    {
      #        buttonFunctions.enabled(true);
      #    }
      #
      #    czTaxDocumentCreate_Cust.enabled(taxDocumentCreate);
      #    advanceInvoiceLink_CZ.enabled(ledgerJournalTrans.Prepayment);
      #}
    ENDSOURCE
    SOURCE #enableButtonsActive_RU
      #void enableButtonsActive_RU()
      #{
      #    boolean paymentJourExists;
      #    ;
      #
      #    if (ledgerJournalTrans.Voucher)
      #    {
      #        paymentJourExists = ledgerJournalTrans.existBankPaymentOrderJour_RU();
      #
      #
      #        deleteCustOutPayment.enabled(! ledgerJournalEngine.posted()                    &&
      #                                      paymentJourExists);
      #
      #        custVendOutPaymReport_RU.enabled(ledgerJournalTrans.BankChequeNum != "" && paymentJourExists);
      #    }
      #
      #    commissionTrade_RU.visible(ledgerJournalTrans.Prepayment);
      #}
    ENDSOURCE
    SOURCE #enableDepreciationStartDate
      #//
      #// This method enables or disables the depreciation start date control.
      #//
      #
      #void enableDepreciationStartDate()
      #{
      #    AssetBook assetBook;
      #    ;
      #
      #    assetBook = AssetBook::find(ledgerJournalTrans.getAssetId(), ledgerJournalTrans_Asset.BookId);
      #
      #    if (assetBook &&
      #        (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::Acquisition || ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::AcquisitionAdj) &&
      #        !assetBook.depreciationStarted() &&
      #        assetBook.DepreciationConvention == AssetDepreciationConvention::None)
      #    {
      #        depreciationStartDate.enabled(true);
      #    }
      #    else
      #    {
      #        depreciationStartDate.enabled(false);
      #    }
      #}
      #
      #
    ENDSOURCE
    SOURCE #enablePostDatedChecksTab
      #public void enablePostDatedChecksTab()
      #{
      #    if(postDatedCheckEnabled)
      #    {
      #        custPDCRegister_ds.allowEdit(true);
      #        pdc.visible(true);
      #    }
      #    else
      #    {
      #        custPDCRegister_ds.allowEdit(false);
      #        pdc.visible(false);
      #        printAckReceipt.visible(false);
      #    }
      #
      #}
    ENDSOURCE
    SOURCE #enableReplacementFields
      #public void enableReplacementFields()
      #{
      #    if(custPDCRegister.IsReplacementCheck)
      #    {
      #        replacement_Comments.allowEdit(true);
      #        replacement_OriginalCheck.allowEdit(true);
      #    }
      #    else
      #    {
      #        replacement_Comments.allowEdit(false);
      #        replacement_OriginalCheck.allowEdit(false);
      #    }
      #
      #}
    ENDSOURCE
    SOURCE #enableSettlement
      #/// <summary>
      #/// Enables the settlement related controls.
      #/// </summary>
      #/// <remarks>
      #/// The controls are returned to the state they had before being disabled.
      #/// </remarks>
      #public void enableSettlement()
      #{
      #    ;
      #
      #    buttonSettlement.enabled(previousIsSettlementEnabled);
      #
      #    custPaymEditingButton.enabled(previousIsEditCustPaymEnabled);
      #}
      #
    ENDSOURCE
    SOURCE #firstField
      #void firstField(int flags=1)
      #{
      #    ;
      #    overviewGrid.setFocus();
      #}
    ENDSOURCE
    SOURCE #getShowTax
      #public Tax getShowTax()
      #{
      #    ;
      #    return ledgerJournalEngine.getShowTax(ledgerJournalTrans);
      #}
    ENDSOURCE
    SOURCE #getShowWithholdTax_IN
      #// <GIN>
      #public TaxWithholdJournal_IN getShowWithholdTax_IN()
      #{
      #    return ledgerJournalEngine.getShowWithholdTax_IN(ledgerJournalTrans);
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #init
      #/// <summary>
      #/// Enables and disables certain controls that are managed at the form level.
      #/// </summary>
      #public void init()
      #{
      #     // <GCN>
      #    boolean         allow;
      #    // </GCN>
      #    // <GCN>
      #    chineseVoucher_CN = LedgerParameters::isChineseVoucher_CN();
      #    // </GCN>
      #    // <GEERU>
      #    countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
      #    // </GEERU>
      #    // <GIN>
      #    countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
      #    // </GIN>
      #
      #    journalFormTrans = new LedgerJournalFormTrans_Payment(element);
      #
      #    childForms = new Map(Types::Integer, Types::Class);
      #
      #    super();
      #    FormSecurity::setFormDataSourceMaxAccessRight(this);
      #
      #    norwayEnabled = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]);
      #
      #    dimAccountController = DimensionDynamicAccountController::construct(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType));
      #    dimOffsetAccountController = DimensionDynamicAccountController::construct(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType));
      #    dimPaymentFeeAccountController = DimensionDynamicAccountController::construct(custVendPaymJournalFee_ds, fieldStr(CustVendPaymJournalFee, LedgerDimension), fieldStr(CustVendPaymJournalFee, LedgerJournalACType));
      #
      #    dimAccountController.parmDimensionAutocompleteFilter(
      #        new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
      #    dimOffsetAccountController.parmDimensionAutocompleteFilter(
      #        new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
      #
      #    dimAccountController.parmDimensionAccountStorageUsage(DimensionAccountStorageUsage::Transactional);
      #    dimOffsetAccountController.parmDimensionAccountStorageUsage(DimensionAccountStorageUsage::Transactional);
      #    dimPaymentFeeAccountController.parmDimensionAccountStorageUsage(DimensionAccountStorageUsage::Transactional);
      #
      #    dimAccountController.parmPostingType(LedgerPostingType::LedgerJournal);
      #    dimOffsetAccountController.parmPostingType(LedgerPostingType::LedgerJournal);
      #    dimPaymentFeeAccountController.parmPostingType(LedgerPostingType::LedgerJournal);
      #
      #    dimAccountController.parmValidateBlockedForManualEntry(true);
      #    dimOffsetAccountController.parmValidateBlockedForManualEntry(true);
      #    dimPaymentFeeAccountController.parmValidateBlockedForManualEntry(true);
      #
      #    // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
      #    ledgerJournalTransEntityManager = new LedgerJournalTransEntityManager(ledgerJournalTrans_DS, ledgerJournalTrans_Asset_DS, null);
      #
      #    journalFormTrans.parmCtrlVoucherGrid(ledgerJournalTrans_Voucher);
      #    journalFormTrans.parmCtrlVoucherTab(ledgerJournalTrans_Voucher1);
      #    journalFormTrans.parmCtrlTransDateGrid(ledgerJournalTrans_TransDate);
      #    journalFormTrans.parmCtrlTransDateTab(ledgerJournalTrans_TransDate1);
      #    journalFormTrans.parmCtrlExchRate(fieldExchRate);
      #    journalFormTrans.parmCtrlExchRateSecond(fieldExchrateSecond);
      #    journalFormTrans.parmCtrlTriangulation(fieldTriangulation);
      #    journalFormTrans.parmCtrlBankDepositVoucherGrid(fieldBankDepositVoucherGrid);
      #    journalFormTrans.parmCtrlBankDepositVoucherTab(fieldBankDepositVoucher);
      #    journalFormTrans.parmCtrlSettlementButton(buttonSettlement);
      #    journalFormTrans.parmCtrlDepositSlipButton(buttonDepositSlip);
      #    journalFormTrans.parmCtrlCourseButton(buttonCourse);
      #    journalFormTrans.parmCtrlReportAsReadyButton(buttonReportAsReady);
      #    journalFormTrans.parmCtrlApproveButton(buttonApprove);
      #    journalFormTrans.parmCtrlRejectButton(buttonReject);
      #    journalFormTrans.parmCtrlPostJournalMenu(buttonPostJournal);
      #    journalFormTrans.parmCtrlCheckJournalMenu(buttonCheckJournal);
      #    journalFormTrans.parmCtrlVoucherTransButton(buttonVoucherTrans);
      #    journalFormTrans.parmCtrlDeleteTransactionsButton(buttonDeleteTransactions);
      #    journalFormTrans.parmCtrlBalanceControButton(buttonBalanceControl);
      #    journalFormTrans.parmCtrlCopyPeriodicButton(buttonCopyPeriodicJournal);
      #    journalFormTrans.parmCtrlBankChequeReuseButton(bankChequeReuse);
      #    // <GEERU>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
      #    {
      #        journalFormTrans.parmCtrlOrderPaymentTab_RU(orderPayment_RU);
      #    }
      #    // </GEERU>
      #    journalFormTrans.parmCtrlFunctionMenuButton(buttonFunctions);
      #    journalFormTrans.parmCtrlJournalTextsButton(ledgerJournalTransTxt);
      #    journalFormTrans.parmCtrlCreatePaymentButton(buttonCreatePayment);
      #    journalFormTrans.parmCtrlPaymentReconciliationButton(buttonPaymentReconciliation);
      #    journalFormTrans.parmCtrlPaymentProposalButton(buttonPaymentProposal);
      #    journalFormTrans.parmCtrlImportPaymentsButton(custInpayment);
      #    journalFormTrans.parmCtrlExecutionDateButton(custPaymentExecDate_BE);
      #    journalFormTrans.parmCtrlSalesTaxMenu(taxTransSource);
      #    journalFormTrans.parmCtrlOffsetAccountTypeGrid(ledgerJournalTrans_OffsetAccountType);
      #    journalFormTrans.parmCtrlOffsetAccountTypeTab(ledgerJournalTrans_OffsetAccountType1);
      #    journalFormTrans.parmCtrlOffsetAccountGrid(ledgerJournalTrans_OffsetAccount);
      #    journalFormTrans.parmCtrlOffsetAccountTab(ledgerJournalTrans_OffsetAccount1);
      #    journalFormTrans.parmCtrlAccountDimensionButton(accountDimension);
      #    journalFormTrans.parmCtrlOffsetAccountDimensionButton(offsetAccountDimension);
      #    journalFormTrans.parmCtrlPaymFeeAccountDimensionButton(paymentFeeAccountDimension);
      #    journalFormTrans.parmMCRCtrlDeductionButton(tamDeductionCreate);
      #
      #    journalFormTrans.formInitPost();
      #
      #    this.initLedger();
      #
      #    imageListAppl = new ImageListAppl_LedgerJournal();
      #    errorExist.imageList(imageListAppl.imageList());
      #    if(norwayEnabled)
      #    {
      #        errorPaym.visible(true);
      #        errorPaym.imageList(imageListAppl.imageList());
      #    }
      #    else
      #    {
      #        errorPaym.visible(false);
      #    }
      #
      #    lastEnteredReleaseDate = utcDateTimeNull() ;
      #    // <GEEPL>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]) && ledgerJournalTable.JournalType == journalFormTrans.getJournalTypeId())
      #    {
      #        if (ledgerJournalTable.ledgerJournalTable_W().Prepayment_W)
      #        {
      #            ledgerJournalTrans_MarkedInvoice.allowEdit(false);
      #        }
      #    }
      #    // </GEEPL>
      #    // <GIN>
      #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
      #    {
      #        element.setVisible_IN();
      #        element.setTaxWithholdVisible_IN();
      #        journalFormTrans.parmCtrlExciseManufacture_IN(exciseManufacture_IN);
      #        journalFormTrans.parmCtrlExciseNone_IN(exciseNone_IN);
      #        journalFormTrans.parmCtrlExciseTraders_IN(exciseTraders_IN);
      #
      #        journalFormTrans.parmCtrlECCNumber(taxInformation_IN_ECCNumber);
      #        journalFormTrans.parmCtrlManECCRegistrationNumberTable(taxInformation_IN_ManECCRegistrationNumberTable);
      #        journalFormTrans.parmCtrlTraderECCRegistrationNumberTable(taxInformation_IN_TraderECCRegistrationNumberTable);
      #    }
      #    // </GIN>
      #
      #    // Disable the company accounts field on the general tab and on the grid in the overview tab if Intercompany transactions are disabled
      #    if (!isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
      #    {
      #        ledgerJournalTrans_Company.allowEdit(false);
      #        ledgerJournalTrans_CompanyAccount.allowEdit(false);
      #    }
      #
      #    // <GCN>
      #    if (chineseVoucher_CN)
      #    {
      #        allow = ledgerJournalTable.ledgerJournalName().NewVoucher == NewVoucher::Manually
      #            && ledgerJournalTable.VoucherAllocatedAtPosting == NoYes::No;
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).enabled(allow);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher)).enabled(false);
      #    }
      #    else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
      #    {
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).visible(false);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerVoucherType_CN)).visible(false);
      #    }
      #    // </GCN>
      #    // Post dated checks
      #    postDatedCheckEnabled = BankParameters::find().EnablePDC;
      #    element.enablePostDatedChecksTab();
      #
      #    if (BankLCExportFeatureChecker::checkBankLCExportEnabled())
      #    {
      #        bankLCExportGroup.visible(true);
      #        bankLCExportLineNumController = BankLCExportLineNumController::construct();
      #    }
      #    else
      #    {
      #        bankLCExportGroup.visible(false);
      #    }
      #
      #    if (#PmfEnabled)
      #    {
      #        ledgerJournalTransDSEventNotifier = PCDataSourceEventNotify::construct(this);
      #        // we are interested in extendeding "Active", so form needs to implement "OnActive" interface
      #        ledgerJournalTrans_DS.addNotifyHandler(ledgerJournalTransDSEventNotifier);
      #    }
      #
      #    // <GTH>
      #    if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
      #    {
      #        this.updateDesignForUnrealizedVAT();
      #    }
      #    // </GTH>
      #
      #    // <GBR>
      #    if (BrazilParameters::isEnabled())
      #    {
      #        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, TaxWithholdItemGroupHeading_TH)).visible(false);
      #    }
      #    // </GBR>
      #
      #    // If the current user is not tied to a call center channel, hide the
      #    // payment button
      #    if (isConfigurationkeyEnabled(configurationKeyNum(MCRPayment)))
      #    {
      #        mcrAllowPayment = RetailMCRChannelTable::findForCurrentUser().mcrEnableOrderCompletion;
      #
      #        if (mcrAllowPayment)
      #        {
      #            mcrCustPaymButton.visible(true);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #initLedger
      #void initLedger()
      #{
      #    if (element.args().dataset() == tableNum(LedgerJournalTable))
      #    {
      #        ledgerJournalTable  = element.args().record();
      #        journalNum          = ledgerJournalTable.JournalNum;
      #    }
      #}
    ENDSOURCE
    SOURCE #isPaymEditAllowed
      #/// <summary>
      #/// Returns whether the current payment can be edited.
      #/// </summary>
      #/// <returns>
      #/// true if the current payment can be edited; otherwise, false.
      #/// </returns>
      #public boolean isPaymEditAllowed()
      #{
      #    ;
      #
      #    return ledgerJournalTrans_ds.allowCreate() && // required by workflow
      #        (ledgerJournalTrans.RecId != 0) && // the paym has to exist to be edited
      #        !journalFormTrans.journalTable().Posted; // the paym can't be posted
      #}
    ENDSOURCE
    SOURCE #journalForm
      #JournalForm journalForm()
      #{
      #    return journalFormTrans;
      #}
    ENDSOURCE
    SOURCE #ledgerJournalEngine
      #LedgerJournalEngine ledgerJournalEngine()
      #{
      #    return ledgerJournalEngine;
      #}
    ENDSOURCE
    SOURCE #ledgerJournalTable
      #LedgerJournalTable ledgerJournalTable()
      #{
      #    return ledgerJournalTable;
      #}
    ENDSOURCE
    SOURCE #logisticsAddress
      #/// <summary>
      #/// Reads the <c>LogisticsPostalAddress</c> table for the specified RegistrationLocation (Location Id).
      #/// </summary>
      #/// <returns>
      #/// Return the <c>LogisticsPostalAddress</c> buffer for the specified registration location.
      #/// </returns>
      #//BP Deviation documented
      #display LogisticsAddressing logisticsAddress()
      #{
      #    return LogisticsPostalAddress::findByLocation(ledgerJournalTrans.CompanyLocation_IN).Address;
      #}
    ENDSOURCE
    SOURCE #makeArgs
      #/// <summary>
      #/// Makes an args object containing the form and datasource objects.
      #/// </summary>
      #/// <returns>
      #/// An args object.
      #/// </returns>
      #
      #public Args makeArgs()
      #{
      #    Args args;
      #    ;
      #
      #    args = new Args(formStr(LedgerJournalTransCustPaym));
      #    args.caller(element);
      #    args.record(ledgerJournalTrans);
      #
      #    return args;
      #
      #}
    ENDSOURCE
    SOURCE #onActive
      #public void onActive(FormObjectSet _sender)
      #{
      #    if (_sender
      #        && (_sender.name() == ledgerJournalTrans_DS.name()))
      #    {
      #        element.pdsEnableRebateButton();
      #    }
      #}
    ENDSOURCE
    SOURCE #pdsEnableRebateButton
      #public void pdsEnableRebateButton()
      #{
      #    pdsRebateTableBtn.enabled(ledgerJournalTrans.AccountType == LedgerJournalACType::Cust);
      #}
    ENDSOURCE
    SOURCE #refreshGrid
      #/// <summary>
      #/// Refreshes the grid from the database.
      #/// </summary>
      #/// <remarks>
      #/// Use this when the underlying records have been changed by another form or process.
      #/// </remarks>
      #public void refreshGrid()
      #{
      #    ;
      #
      #    ledgerJournalTrans_ds.executeQuery();
      #}
    ENDSOURCE
    SOURCE #refreshProposal
      #void refreshProposal()
      #{
      #    ledgerJournalTrans_DS.research();
      #    element.bookRefresh();
      #}
    ENDSOURCE
    SOURCE #refreshTotalAmount
      #public void refreshTotalAmount(LedgerJournalTrans _ledgerJournalTrans)
      #{
      #    ledgerJournalEngine.ledgerJournalTableUpdateTotals(ledgerJournalTable, true);
      #    ledgerJournalEngine.voucherTotals(_ledgerJournalTrans, true);
      #}
      #
    ENDSOURCE
    SOURCE #setDebCredProposal
      #void setDebCredProposal(boolean _init)
      #{
      #    if (_init)
      #    {
      #        debCredProposal = DebCredProposal::None;
      #    }
      #
      #    if (debCredProposal != debCredProposalOld)
      #    {
      #        switch(debCredProposal)
      #        {
      #            case DebCredProposal::Credit :
      #                ledgerJournalTrans_AmountCurDebit.skip(true);
      #                amountCurDebit.skip(true);
      #                break;
      #
      #            case DebCredProposal::Debit :
      #                ledgerJournalTrans_AmountCurCredit.skip(true);
      #                amountCurCredit.skip(true);
      #                break;
      #
      #            case DebCredProposal::None :
      #                ledgerJournalTrans_AmountCurCredit.skip(false);
      #                amountCurCredit.skip(false);
      #                ledgerJournalTrans_AmountCurDebit.skip(false);
      #                amountCurDebit.skip(false);
      #                break;
      #        }
      #        debCredProposalOld = debCredProposal;
      #    }
      #}
    ENDSOURCE
    SOURCE #setLookupButton_BR
      #// <GBR>
      #void setLookupButton_BR()
      #{
      #    if (CustPaymModeTable::find(ledgerJournalTrans.PaymMode).ClassId != classNum(CustOutPaym_CNAB_BR))
      #    {
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,DocumentType)).allowEdit(false);
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,BankFolder)).allowEdit(false);
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_1)).allowEdit(false);
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_2)).allowEdit(false);
      #    }
      #    else if (ledgerJournalTrans.RecId)
      #    {
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,DocumentType)).allowEdit(true);
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,BankFolder)).allowEdit(true);
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_1)).allowEdit(true);
      #        custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_2)).allowEdit(true);
      #    }
      #}
      #// </GBR>
    ENDSOURCE
    SOURCE #setPaymentByLetterOfCredit
      #public void setPaymentByLetterOfCredit()
      #{
      #    if (ledgerJournalTrans.getLedgerJournalTransBankLC().BankLCLine)
      #    {
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymMode)).allowEdit(false);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymSpec)).allowEdit(false);
      #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Prepayment)).allowEdit(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #setTaxWithholdEnabled_IN
      #// <GIN>
      #void setTaxWithholdEnabled_IN()
      #{
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tdsGroup_IN)).enabled((!ledgerJournalTrans.tcsGroup_IN));
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tcsGroup_IN)).enabled((!ledgerJournalTrans.tdsGroup_IN));
      #    taxWithhold_IN.enabled(ledgerJournalTrans.tdsGroup_IN || ledgerJournalTrans.tcsGroup_IN);
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #setTaxWithholdVisible_IN
      #// <GIN>
      #void setTaxWithholdVisible_IN()
      #{
      #    TaxWithholdParameters_IN    taxWithholdParameters;
      #
      #    taxWithholdParameters = TaxWithholdParameters_IN::find();
      #    withholdingTax_IN.visible(taxWithholdParameters.tdsPayment || taxWithholdParameters.tcsPayment);
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tdsGroup_IN)).visible(taxWithholdParameters.tdsPayment);
      #    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, tcsGroup_IN)).visible(taxWithholdParameters.tcsPayment);
      #    taxWithhold_IN.visible(taxWithholdParameters.tdsPayment || taxWithholdParameters.tcsPayment);
      #    withholdingTax_TaxInformation_IN.visible(taxWithholdParameters.tdsPayment || taxWithholdParameters.tcsPayment);
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #setVisible_IN
      #// <GIN>
      #private void setVisible_IN()
      #{
      #    TaxParameters       taxParametersLoc = TaxParameters::find();
      #    boolean             isTaxParametersMarked   = TaxParameters::checkTaxParameters_IN();
      #
      #    ledgerJournalTrans_AssessableValue_IN.visible(isTaxParametersMarked);
      #    ledgerJournalTrans_MaximumRetailPrice_IN.visible(isTaxParametersMarked);
      #    tabTaxInformation_IN.visible(isTaxParametersMarked || TaxWithholdParameters_IN::checkTaxParameters());
      #    vat.visible(taxParametersLoc.vat_in);
      #    salesTax.visible(taxParametersLoc.SalesTax_IN);
      #    excise_IN.visible(taxParametersLoc.Excise_IN);
      #    customs_IN.visible(taxParametersLoc.Customs_IN);
      #    serviceTax_IN.visible(taxParametersLoc.ServiceTax_IN);
      #    withholdingTax_IN.visible(TaxWithholdParameters_IN::checkTaxParameters());
      #}
      #// </GIN>
    ENDSOURCE
    SOURCE #updateDesignForUnrealizedVAT
      #/// <summary>
      #/// Sets fields not visible.
      #/// </summary>
      #// <GTH>
      #private void updateDesignForUnrealizedVAT()
      #{
      #    ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceReceiptDate)).visible(false);
      #    ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, TaxInvoiceReceiptDate)).visible(false);
      #    ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, RealVendName)).visible(false);
      #    ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceDate)).visible(false);
      #}
      #// </GTH>
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTrans
          Table               #LedgerJournalTrans
          Index               #NumVoucherIdx
          CounterField        #LineNum
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD AccountType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #//
                #// Handles the AccountType modified event.
                #//
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.accountTypeModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
                #    // The selected invoice and related fields must be cleared so that
                #    // related SpecTrans records are cleared on save.
                #    ledgerJournalTrans.MarkedInvoice        = '';
                #    ledgerJournalTrans.MarkedInvoiceRecId   = 0;
                #    element.enableDepreciationStartDate();
                #
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        journalFormTrans.enableAgreementFields_RU();
                #    }
                #    // </GEERU>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Company
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    if (ledgerJournalTrans.parmLedgerDimension())
                #    {
                #        // Clear AccountNum if already set, not clearing can cause validation errors due to new company
                #        ledgerJournalTrans.parmLedgerDimension(0);
                #        element.accountNumModifiedPost();
                #    }
                #
                #    ret = super();
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.companyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    dimAccountController.setDataAreaId(ledgerJournalTrans.Company, true);
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    //<GIN>
                #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                #    {
                #        ledgerJournalEngine.companyModified_IN(ledgerJournalTrans, LedgerJournalTransTaxExtensionIN);
                #        taxInformation_IN_ds.executeQuery();
                #    }
                #    //</GIN>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountCurDebit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CurrencyCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #//        super(_formControl, _filterStr);
                #    ledgerJournalEngine.currencyLookup(_formControl,ledgerJournalTrans);
                #}
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #    ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                #    journalFormTrans.enableFieldsActive();
                #    super();
                #
                #    if (SpecTrans::getSpecTransCount(ledgerJournalTrans.company(), ledgerJournalTrans.TableId, ledgerJournalTrans.RecId) > 0)
                #    {
                #        ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                #    }
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{;
                #    TaxGroupHeading::taxGroupLookup(_formControl, ledgerJournalTrans.Company);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PostingProfile
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    LedgerJournalEngine::lookupPostingProfileForAccountType(_formControl, _filterStr, ledgerJournalTrans);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Voucher
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.formMethodDataSourceVoucherModified();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AmountCurCredit
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #
                #    // enable/disable mark invoice line button on the basis of Credit field amount.
                #    markInvoiceLine.enabled(CustOpenTransLineManager::setMarkInvoiceButton(element.makeArgs()));
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{;
                #    TaxTable::taxTableLookup(_formControl, ledgerJournalTrans.Company);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankDepositVoucher
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymSpec
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #    // <GBR>
                #    if (BrazilParameters::isEnabled())
                #    {
                #        ledgerJournalTransPayment_BR.setPaymentSetting_BR(ledgerJournalTrans.AccountType, ledgerJournalTrans.RecId, LedgerJournalTrans.PaymSpec, ledgerJournalTrans.PaymMode);
                #        LedgerJournalTransPayment_BR_ds.reread();
                #        LedgerJournalTransPayment_BR_ds.refresh();
                #    }
                #    // </GBR>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PaymMode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
                #    {
                #        // A custom lookup is required for ledger accounts because different tables are
                #        // accessed depending on the calling form. in all other supported cases the table
                #        // relation provides the necessary link.
                #        CustPaymModeTable::lookupPaymMethod(_formControl, _filterStr, ledgerJournalTrans.Company);
                #    }
                #    else
                #    {
                #        super(_formControl, _filterStr);
                #    }
                #}
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #    // <GEERU>
                #    Object obj = ledgerJournalEngine;
                #    // </GEERU>
                #    boolean allowPostDatedChecks;
                #
                #    super();
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        journalFormTrans.enableOrderPaymentFields_RU();
                #        obj.updatePaymentOrderBudgetTrans_RU(ledgerJournalTrans);
                #    }
                #    // </GEERU>
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    custVendNACHAIATInfoTable_US.enabled(
                #                    CustVendNACHAIATInfoTable_US::isValidCustVendNACHAIATInfoTable_US(ledgerJournalTrans));
                #
                #    // Enable/disable PDCs
                #    if(postDatedCheckEnabled)
                #    {
                #        allowPostDatedChecks = CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans);
                #        custPDCRegister_ds.allowEdit(allowPostDatedChecks);
                #        printAckReceipt.visible(allowPostDatedChecks);
                #        printAckReceipt.enabled(allowPostDatedChecks);
                #    }
                #    // <GBR>
                #    if (BrazilParameters::isEnabled())
                #    {
                #        CustEPRemitInfo_BR_ds.reread();
                #        CustEPRemitInfo_BR_ds.refresh();
                #        ledgerJournalTransPayment_BR.setPaymentSetting_BR(ledgerJournalTrans.AccountType, ledgerJournalTrans.RecId, LedgerJournalTrans.PaymSpec, ledgerJournalTrans.PaymMode);
                #        LedgerJournalTransPayment_BR_ds.reread();
                #        LedgerJournalTransPayment_BR_ds.refresh();
                #        element.setLookupButton_BR();
                #    }
                #    // </GBR>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD MarkedInvoice
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #updatePaymentTerms
                #/// <summary>
                #///  Updates the default Payment terms with  posted invoices payment terms.
                #/// </summary>
                #protected void updatePaymentTerms()
                #{
                #    CustTrans           custTrans;
                #    CustInvoiceTable    custInvoiceTable;
                #    CustInvoiceJour     custInvoiceJour;
                #
                #    custTrans = CustTransOpen::find(ledgerJournalTrans.MarkedInvoiceRecId).custTrans();
                #    if (custTrans)
                #    {
                #        if (custTrans.TransType == LedgerTransType::Cust)
                #        {
                #            custInvoiceTable = CustInvoiceTable::findPostedInvoice(custTrans.AccountNum, custTrans.Invoice, custTrans.TransDate);
                #            // for freetext invoice
                #            if (custInvoiceTable.Payment)
                #            {
                #                ledgerJournalTrans.Payment = custInvoiceTable.Payment;
                #            }
                #        }
                #        else if (custTrans.TransType == LedgerTransType::Sales)
                #        {
                #            custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);
                #            // for salesorder invoice
                #            if (custInvoiceJour.Payment)
                #            {
                #                ledgerJournalTrans.Payment = custInvoiceJour.Payment;
                #            }
                #        }
                #    }
                #}
              ENDSOURCE
              SOURCE #calculateWithholdTax_TH
                #private void calculateWithholdTax_TH()
                #{
                #    if ((SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE]) || BrazilParameters::isEnabled())
                #        && ledgerJournalTrans.TaxWithholdCalculate_TH
                #        && ledgerJournalTrans.MarkedInvoice)
                #    {
                #        TaxWithhold::construct(ledgerJournalTrans).createAllTaxWithholdTrans();
                #        ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                #    }
                #}
              ENDSOURCE
              SOURCE #updatePaymentAmount
                #//
                #// Updates AmountCurCredit and AmountCurDebit for the total of the marked invoice.
                #// If the current values are non-zero and are different from the total, the user is
                #// prompted by a message box to update the amounts.
                #//
                #protected void updatePaymentAmount()
                #{
                #    Amount paymentAmount;
                #    boolean updateAmount = false;
                #    // <GBR>
                #    CustTransOpen       custTransOpen;
                #    // </GBR>
                #
                #    if (ledgerJournalTrans.MarkedInvoiceCompany != '' ||
                #        ledgerJournalTrans.MarkedInvoice != '' ||
                #        ledgerJournalTrans.MarkedInvoiceRecId != 0)
                #    {
                #        // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                #        // should be in sync with each other.  All with valid values or all empty.
                #        Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany != '' &&
                #                        ledgerJournalTrans.MarkedInvoice != '' &&
                #                        ledgerJournalTrans.MarkedInvoiceRecId != 0);
                #
                #        paymentAmount = LedgerJournalEngine_CustPayment::calculateOpenInvoiceAmount(ledgerJournalTrans.MarkedInvoiceCompany,
                #                                                                                    ledgerJournalTrans.MarkedInvoiceRecId,
                #                                                                                    ledgerJournalTrans.CurrencyCode,
                #                                                                                    ledgerJournalTrans.Company,
                #                                                                                    ledgerJournalTrans.TransDate,
                #                                                                                    ledgerJournalTrans.ExchRate,
                #                                                                                    ledgerJournalTrans.PaymMode);
                #    }
                #    else
                #    {
                #        // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                #        // should be in sync with each other.  All with valid values or all empty.
                #        Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany == '' &&
                #                        ledgerJournalTrans.MarkedInvoice == '' &&
                #                        ledgerJournalTrans.MarkedInvoiceRecId == 0);
                #
                #        // No invoice is selected so paymentAmount should be 0
                #        paymentAmount = 0;
                #    }
                #
                #    if (paymentAmount != 0 && (ledgerJournalTrans.AmountCurCredit != 0 || ledgerJournalTrans.AmountCurDebit != 0))
                #    {
                #        if (paymentAmount != ledgerJournalTrans.AmountCurCredit || ledgerJournalTrans.AmountCurDebit != 0)
                #        {
                #            // Ask the user if amount should be updated.
                #            updateAmount = Box::yesNo("@SYS58110", DialogButton::Yes, "@SYS8801", "@SYS29050") == DialogButton::Yes;
                #        }
                #    }
                #    else
                #    {
                #        // Need to update the amount.
                #        updateAmount = true;
                #    }
                #
                #    if (updateAmount)
                #    {
                #        ledgerJournalTrans.AmountCurCredit = paymentAmount;
                #        ledgerJournalTrans.AmountCurDebit = 0;
                #        // <GBR>
                #        if (BrazilParameters::isEnabled())
                #        {
                #            if (ledgerJournalTrans.MarkedInvoice)
                #            {
                #                changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                #                {
                #                    // Find open invoice record
                #                    custTransOpen = CustTransOpen::find(ledgerJournalTrans.MarkedInvoiceRecId);
                #                }
                #            }
                #            LedgerJournalTransPayment_BR.FinInterestAmountCur_BR = custTransOpen.InterestAmountPaymCur_BR;
                #            LedgerJournalTransPayment_BR.FineAmountCur_BR = custTransOpen.FineAmountPaymCur_BR;
                #        }
                #        // </GBR>
                #    }
                #}
                #
              ENDSOURCE
              SOURCE #lookup
                #//
                #// Displays a custom lookup form that provides the user with the means of selecting
                #// a MarkedInvoice record filtered by the AccountNum (customer) field.
                #//
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    FormRun formRun;
                #    Args args;
                #    ;
                #
                #    args = new Args(formStr(CustOpenInvoicesLookup));
                #    args.record(ledgerJournalTrans);
                #    args.caller(element);
                #    args.lookupValue(ledgerJournalTrans.MarkedInvoice);
                #
                #    if (_filterStr != '')
                #    {
                #        args.parm(_filterStr);
                #    }
                #
                #    formRun = ClassFactory::formRunClassOnClient(args);
                #    formRun.init();
                #
                #    this.performFormLookup(formRun, _formControl);
                #}
                #
              ENDSOURCE
              SOURCE #initFromMarkedInvoice
                #//
                #// Sets the default currency and accountnum for this LedgerJournalTrans record.
                #//
                #protected void initFromMarkedInvoice()
                #{
                #    CustTrans custTrans;
                #
                #    if (ledgerJournalTrans.MarkedInvoiceCompany != '' ||
                #        ledgerJournalTrans.MarkedInvoice != '' ||
                #        ledgerJournalTrans.MarkedInvoiceRecId != 0)
                #    {
                #        // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                #        // should be in sync with each other.  All with valid values or all empty.
                #        Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany != '' &&
                #                        ledgerJournalTrans.MarkedInvoice != '' &&
                #                        ledgerJournalTrans.MarkedInvoiceRecId != 0);
                #
                #        if (!ledgerJournalTrans.parmLedgerDimension())
                #        {
                #            changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                #            {
                #                custTrans = CustTrans::findFromInvoice(ledgerJournalTrans.MarkedInvoice);
                #
                #                if (custTrans.RecId != 0)
                #                {
                #                    ledgerJournalTrans.Company = ledgerJournalTrans.MarkedInvoiceCompany;
                #                    ledgerJournalTrans.parmAccount(custTrans.AccountNum);
                #
                #                    // Default values based on AccountNum
                #                    ledgerJournalEngine.accountModified(ledgerJournalTrans);
                #                    ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);
                #
                #                    if (ledgerJournalTrans.CurrencyCode != custTrans.CurrencyCode)
                #                    {
                #                        // Override with the invoice currency and default based on it
                #                        ledgerJournalTrans.CurrencyCode = custTrans.CurrencyCode;
                #                        ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                #                    }
                #                }
                #            }
                #        }
                #    }
                #    else
                #    {
                #        // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                #        // should be in sync with each other.  All with valid values or all empty.
                #        Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany == '' &&
                #                        ledgerJournalTrans.MarkedInvoice == '' &&
                #                        ledgerJournalTrans.MarkedInvoiceRecId == 0);
                #
                #        // <GBR>
                #        if (BrazilParameters::isEnabled())
                #        {
                #            LedgerJournalTransPayment_BR.FinInterestAmountCur_BR = 0;
                #            LedgerJournalTransPayment_BR.FineAmountCur_BR        = 0;
                #
                #            // //clear Interest/Fine information from the OpenTrans related to this journal
                #            CustVendOpenTransManager::clearInterestAndFineAmounts_BR(ledgerJournalTrans.company(), ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                #        }
                #        // </GBR>
                #
                #        ledgerJournalTrans.SettleVoucher = SettlementType::None;
                #
                #        // MarkedInvoice fields are not set, delete any existing SpecTrans for this LedgerJournalTrans record
                #        SpecTransManager::construct(ledgerJournalTrans).deleteAll();
                #    }
                #}
                #
              ENDSOURCE
              SOURCE #modified
                #//
                #// Sets defaults for fields related to MarkedInvoice.
                #//
                #public void modified()
                #{
                #    super();
                #    this.initFromMarkedInvoice();
                #
                #    // Update the Payment Terms.
                #    this.updatePaymentTerms();
                #
                #    // Update the amount of the payment.
                #    this.updatePaymentAmount();
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #
                #    ledgerJournalTrans_DS.write();
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    this.calculateWithholdTax_TH();
                #}
                #
              ENDSOURCE
              SOURCE #validate
                #//
                #// Validation for the MarkedInvoice field.
                #//
                #// Remarks: Synchronizes the MarkedInvoice and MarkedInvoiceRecId fields if necessary.
                #//
                #public boolean validate()
                #{
                #    boolean isSpecTransForOtherTrans;
                #    boolean isValid;
                #    boolean doInvoiceAndInvoiceRecIdMatch = false;
                #    boolean matchingCustTransOpenRecFound = false;
                #    boolean sharedServiceCompanyRecordFound = false;
                #    CustTrans custTrans;
                #    SpecTrans specTrans;
                #    CustTransOpen custTransOpen;
                #    DirPartyRecId custTransAccountNumParty;
                #    DirPartyRecId ledgerJournalTransAccountNumParty;
                #    container sharedServiceCompanies;
                #
                #    isValid = super();
                #
                #    if (isValid)
                #    {
                #        if (ledgerJournalTrans.MarkedInvoice != '')
                #        {
                #            // The MarkedInvoice field was updated to some non-empty value, so synchronize
                #            // MarkedInvoiceRecId if necessary and validate that the change is okay.
                #            if (ledgerJournalTrans.MarkedInvoiceRecId != 0 && ledgerJournalTrans.MarkedInvoiceCompany != '')
                #            {
                #                changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                #                {
                #                    if (LedgerJournalEngine_CustPayment::doInvoiceAndOpenRecIdMatchUp(ledgerJournalTrans.MarkedInvoice,
                #                                                                                       ledgerJournalTrans.MarkedInvoiceRecId))
                #                    {
                #                        doInvoiceAndInvoiceRecIdMatch = true;
                #                    }
                #                    else
                #                    {
                #                        doInvoiceAndInvoiceRecIdMatch = false;
                #                        ledgerJournalTrans.MarkedInvoiceRecId = 0;
                #                        ledgerJournalTrans.MarkedInvoiceCompany = '';
                #                    }
                #                }
                #            }
                #
                #            if (doInvoiceAndInvoiceRecIdMatch == false && (ledgerJournalTrans.MarkedInvoiceRecId == 0 || ledgerJournalTrans.MarkedInvoiceCompany == ''))
                #            {
                #                // The MarkedInvoice and MarkedInvoiceRecId fields have fallen out of synchronization; the
                #                // MarkedInvoice field was changed manually.
                #
                #                // Get companies that are in the shared service boundary with the company specified on the transaction.
                #                sharedServiceCompanies = CustVendOpenTransManager::findSharedServiceCompanies(ledgerJournalTrans.Company);
                #
                #                // Get the earliest due CustTransOpen RecId for this invoice.
                #                // Find matching CustTransOpen record, if more than one record is returned then fail.
                #                while select crosscompany:sharedServiceCompanies RecId, DataAreaId from custTransOpen
                #                    order by DueDate asc
                #                    join RecId from custTrans
                #                    where custTrans.RecId   == custTransOpen.RefRecId &&
                #                          custTrans.Invoice == ledgerJournalTrans.MarkedInvoice
                #                {
                #                    if (!matchingCustTransOpenRecFound)
                #                    {
                #                        ledgerJournalTrans.MarkedInvoiceRecId = custTransOpen.RecId;
                #                        ledgerJournalTrans.MarkedInvoiceCompany = custTransOpen.DataAreaId;
                #                        matchingCustTransOpenRecFound = true;
                #                        doInvoiceAndInvoiceRecIdMatch = true;
                #                    }
                #                    else
                #                    {
                #                        // A second record was found, fail.  The lookup will have to be used.
                #                        ledgerJournalTrans.MarkedInvoiceRecId = 0;
                #                        ledgerJournalTrans.MarkedInvoiceCompany = '';
                #                        matchingCustTransOpenRecFound = false;
                #                        doInvoiceAndInvoiceRecIdMatch = false;
                #                        break;
                #                    }
                #                    // An invoice in the shared service boundary was located.
                #                    sharedServiceCompanyRecordFound = true;
                #                }
                #
                #                if (sharedServiceCompanyRecordFound == false)
                #                {
                #                    // Looking for an Invoice that is not in the Shared Service Boundary
                #                    select crosscompany RecId, DataAreaId from custTransOpen
                #                        order by DueDate asc
                #                        join custTrans
                #                        where custTrans.RecId   == custTransOpen.RefRecId &&
                #                              custTrans.Invoice == ledgerJournalTrans.MarkedInvoice;
                #
                #                    if (custTransOpen)
                #                    {
                #                        // The Invoice is for a company that is outside of the Shared Service Boundary.
                #                        isValid = checkFailed("@SYS105827");
                #                        return isValid;
                #                    }
                #                }
                #            }
                #
                #            if (doInvoiceAndInvoiceRecIdMatch)
                #            {
                #                changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                #                {
                #                    // Find existing CustTrans for the MarkedInvoice field.
                #                    custTrans = CustTrans::findFromInvoice(ledgerJournalTrans.MarkedInvoice);
                #                }
                #
                #                // Find existing SpecTrans for the MarkedInvoice field.
                #                specTrans = SpecTrans::findByRef(ledgerJournalTrans.MarkedInvoiceCompany, tableNum(CustTransOpen), ledgerJournalTrans.MarkedInvoiceRecId);
                #
                #                isSpecTransForOtherTrans = specTrans.RecId != 0 && !(specTrans.SpecTableId == tableNum(LedgerJournalTrans) && specTrans.SpecRecId == ledgerJournalTrans.RecId);
                #
                #                if (custTrans.RecId == 0 ||
                #                    ledgerJournalTrans.MarkedInvoiceRecId == 0 ||
                #                    custTrans.remainAmountCur() <= 0 ||
                #                    isSpecTransForOtherTrans)
                #                {
                #                    // The Invoice either does not exist or there is an existing SpecTrans from another transaction.
                #                    isValid = checkFailed("@SYS105400");
                #                }
                #            }
                #            else
                #            {
                #                // Direct the user to use the lookup button to select the Invoice.
                #                isValid = checkFailed("@SYS116479");
                #                return isValid;
                #            }
                #
                #            if (ledgerJournalTrans.parmLedgerDimension())
                #            {
                #                // Retreive the Party for the LedgerJournalTrans AccountNum and the CustTrans AccountNum
                #                custTransAccountNumParty = CustTable::findByCompany(custTrans.company(), custTrans.AccountNum).Party;
                #                ledgerJournalTransAccountNumParty = CustTable::findByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.parmAccount()).Party;
                #
                #                if (custTransAccountNumParty != ledgerJournalTransAccountNumParty)
                #                {
                #                    // The invoice does not fall under the payment customer.
                #                    isValid = checkFailed("@SYS105827");
                #                }
                #            }
                #        }
                #        else
                #        {
                #            // <GBR>
                #            if (BrazilParameters::isEnabled())
                #            {
                #                // Clearing Interest/Fine Amounts
                #                changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                #                {
                #                    // Find open invoice record
                #                    custTransOpen   = CustTransOpen::find(ledgerJournalTrans.MarkedInvoiceRecId);
                #                }
                #
                #                changeCompany(LedgerJournalTrans.company())
                #                {
                #                    custTransOpen.selectForUpdate(true);
                #                    custTransOpen.FineAmount_BR = 0;
                #                    custTransOpen.FineAmountPaymCur_BR = 0;
                #                    custTransOpen.InterestAmount_BR = 0;
                #                    custTransOpen.InterestAmountPaymCur_BR = 0;
                #                    custTransOpen.update();
                #                }
                #                LedgerJournalTransPayment_BR.FinInterestAmountCur_BR = 0;
                #                LedgerJournalTransPayment_BR.FineAmountCur_BR = 0;
                #            }
                #            // </GBR>
                #
                #            // <GBR>
                #            if (BrazilParameters::isEnabled())
                #            {
                #                changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                #                {
                #                    TaxWithhold::uncheckWithholdTrans_BR(ledgerJournalTrans);
                #                }
                #            }
                #            // </GBR>
                #
                #            // The invoice was blanked out or the company was not set, so clear the remaining 'MarkedInvoice' fields.
                #            ledgerJournalTrans.MarkedInvoiceRecId = 0;
                #            ledgerJournalTrans.MarkedInvoiceCompany = '';
                #            LedgerJournalTransBankLC::syncSettlement(ledgerJournalTrans, 0);
                #        }
                #    }
                #
                #    return isValid;
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OffsetAccountType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    LedgerJournalACType offsetACType = this.getValue();
                #
                #//  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                #//  form-specific, and defaulting for asset was moved to the LedgerJournalEngine class and requires multiple table buffers and
                #//  thus cannot be called from the super()
                #//
                #    if (priorOffsetAccountType != offsetACType)
                #    {
                #        priorOffsetAccountType = offsetACType;
                #        ledgerJournalEngine.offsetAccountTypeModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
                #
                #        if (ledgerJournalTrans.modifiedFieldRemovesAccruals(fieldNum(LedgerJournalTrans, OffsetAccountType)))
                #        {
                #            ledgerJournalTrans.removeAccruals();
                #        }
                #    }
                #//  super();
                #
                #    element.enableDepreciationStartDate();
                #
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #    // <GEERU>
                #    if (countryRegion_RU)
                #    {
                #        journalFormTrans.enableAgreementFields_RU();
                #    }
                #    // </GEERU>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OffsetCompany
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.offsetCompanyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    dimOffsetAccountController.setDataAreaId(ledgerJournalTrans.OffsetCompany, true);
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TransDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #    // <GCN>
                #    if (chineseVoucher_CN)
                #    {
                #        ledgerJournalEngine.transDateUpdate_CN(ledgerJournalTrans);
                #    }
                #    // </GCN>
                #    ledgerJournalEngine.transDateModified(ledgerJournalTrans);
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD DocumentDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalEngine.documentDateModified(ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Payment
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalEngine.paymentModified(ledgerJournalTrans);
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CashDiscCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #
                #    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                #
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Triangulation
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #void modified()
                #{
                #
                #    super();
                #    ledgerJournalEngine.triangulationModified(ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxItemGroup
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{;
                #    TaxItemGroupHeading::taxItemGrouplookup(_formControl, ledgerJournalTrans.Company);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Prepayment
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (ledgerJournalTrans.Prepayment &&
                #        CustParameters::find().TaxOnPrepayment &&
                #       !ledgerJournalTrans.ledgerJournalTable().LedgerJournalInclTax)
                #    {
                #        error ("@SYS98399");
                #        ret = false;
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #modified
                #void modified()
                #{
                #    super();
                #    ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);
                #    element.enableButtonsActive();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankCentralBankPurposeCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    ledgerJournalEngine.bankCentralBankPurposeCodeModified(ledgerJournalTrans);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD CustVendBankAccountId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    CustBankAccount::lookupBankAccount(_formControl, ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    Args        args;
                #    FormRun     formRun;
                #    ;
                #    args = new Args(formStr(CustBankAccounts));
                #
                #    args.record(ledgerJournalTrans);
                #
                #    formRun = classfactory.formRunClass(args);
                #    formRun.init();
                #    formRun.run();
                #    formRun.detach();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankRemittanceType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankAccountId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                #    ledgerJournalTrans_ds.refresh();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD LedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    element.accountNumModifiedPost();
                #    journalFormTrans.enableButtonsActive();
                #
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                #    ledgerJournalTrans_ds.rereadReferenceDataSources();
                #
                #    // <GIN>
                #    if (TaxWithholdParameters_IN::checkTaxParameters())
                #    {
                #        element.setTaxWithholdEnabled_IN();
                #    }
                #    // </GIN>
                #}
              ENDSOURCE
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common common = dimAccountController.resolveReference();
                #
                #    return common;
                #}
                #
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    CustTable::jumpRefCustomer(ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD OffsetLedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
                #
                #    if(ledgerJournalTrans.AccountType != LedgerJournalACType::FixedAssets &&
                #       ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets)
                #    {
                #        // The primary account is not of type fixed assets and the offset account was changed
                #        // to a fixed asset account, so redefault the depreciation start date.
                #        ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #        element.enableDepreciationStartDate();
                #    }
                #
                #    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                #}
              ENDSOURCE
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common common = dimOffsetAccountController.resolveReference();
                #
                #    return common;
                #}
                #
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    dimOffsetAccountController.jumpRef();
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD ReleaseDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #/// <summary>
                #/// Handles change of release date field.
                #/// </summary>
                #/// <remarks>
                #/// Gives a warning if the date is in the past. Saves the entered value in internal variable.
                #/// </remarks>
                #public void modified()
                #{
                #    super();
                #    if (ledgerJournalTrans.ReleaseDate != utcDateTimeNull() &&
                #        DateTimeUtil::addDays(ledgerJournalTrans.ReleaseDate, 1) < DateTimeUtil::utcNow())
                #    {
                #        warning(strFmt("@SYS114595"));
                #    }
                #    lastEnteredReleaseDate = ledgerJournalTrans.ReleaseDate;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Voucher_CN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    // <GCN>
                #    if (ret
                #        && chineseVoucher_CN)
                #    {
                #        ret = ledgerJournalEngine.checkVoucher_CN(ledgerJournalTrans);
                #    }
                #    // </GCN>
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TDSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GIN>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans.Company);
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #modified
                #// <GIN>
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.tdsGroup_IN, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TCSGroup_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GIN>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans.Company);
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #modified
                #// <GIN>
                #public void modified()
                #{
                #    super();
                #    element.setTaxWithholdEnabled_IN();
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.tcsGroup_IN, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD CompanyLocation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRefLocationAddressForm(LedgerJournalTrans.CompanyLocation_IN, this);
                #}
                #// </GIN>
                #
              ENDSOURCE
              SOURCE #lookupReference
                #// <GIN>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxInformation_IN::locationLookup(_formReferenceControl, CompanyInfo::findDataArea(ledgerJournalTrans.Company).RecId);
                #}
                #// </GIN>
                #
              ENDSOURCE
              SOURCE #modified
                #// <GIN>
                #public void modified()
                #{
                #    super();
                #
                #    Ledgerjournaltrans_ds.refresh();
                #    LedgerJournalTransTaxExtensionIN.TaxInformation_IN =  TaxInformation_IN::findDefaultByLocation(LedgerJournalTrans.CompanyLocation_IN).RecId;
                #    LedgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, TaxInformation_IN)).modified();
                #    journalFormTrans.enableDisableExciseRecordType_IN();
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD LedgerVoucherType_CN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    // <GCN>
                #    if (chineseVoucher_CN)
                #    {
                #        ledgerJournalEngine.voucherTypeUpdate_CN(ledgerJournalTrans);
                #    }
                #    // </GCN>
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD CustomsTariffCodeTable_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #resolveReference
                #// <GIN>
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return CustomsTariffCodeTable_IN::resolveCustomsTariffCode(_formReferenceControl, ledgerJournalTrans.CustomsTariffDirection_IN);
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #lookupReference
                #// <GIN>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    ret = CustomsTariffCodeTable_IN::lookupDirectionImportExport(_formReferenceControl, enum2str(ledgerJournalTrans.CustomsTariffDirection_IN), ledgerJournalTrans.Company);
                #
                #    return ret;
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          DATAFIELD ExciseType_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    journalFormTrans.enableDisableExciseRecordType_IN();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD AccountAgreementId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    LedgerJournalEngine.setAgreement_RU(ledgerJournalTrans);
                #}
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LedgerJournalEngine.agreementLookup_RU(_formControl, LedgerJournalTrans, _filterStr);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans);
                #}
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD OffsetAccountAgreementId_RU
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    LedgerJournalEngine.agreementLookup_RU(_formControl,
                #        LedgerJournalTrans,
                #        _filterStr,
                #        AccountOffsetaccount::OffsetAccount);
                #}
              ENDSOURCE
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
                #}
              ENDSOURCE
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #    LedgerJournalEngine.setAgreement_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #void init()
          #{
          #    super();
          #
          #    ledgerJournalTransRange = this.query().dataSourceNo(1).addRange(fieldNum(LedgerJournalTrans, Invisible));
          #    ledgerJournalTransRange.value(strFmt('%1', 0));
          #
          #    ledgerJournalEngine = new LedgerJournalEngine_CustPayment(element);
          #    journalFormTrans.datasourceInitPost(ledgerJournalTrans);
          #
          #    this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, accountName));
          #    this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
          #}
          #
        ENDSOURCE
        SOURCE #jumpRefBankLC
          #public void jumpRefBankLC()
          #{
          #    LedgerJournalTransBankLC ledgerJournalTransBankLC;
          #
          #    if (bankLCExportLineNumController)
          #    {
          #        ledgerJournalTransBankLC = ledgerJournalTrans.getLedgerJournalTransBankLC();
          #        if (ledgerJournalTransBankLC.BankLCLine)
          #        {
          #            bankLCExportLineNumController.parmBankLCRecId(ledgerJournalTransBankLC.getBankLCLine().BankLC);
          #        }
          #        bankLCExportLineNumController.jumpRef();
          #    }
          #}
        ENDSOURCE
        SOURCE #leaveRecord
          #public boolean leaveRecord(boolean _forceUpdate = false)
          #{
          #    boolean ret;
          #    ;
          #
          #    ret = super(_forceUpdate);
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
          #    {
          #        // A write was requested on the sibling and the client did not write the entity. This happens
          #        // when focus is removed from a sibling data source (such as LedgerJournalTrans_Asset) as the
          #        // client only calls write on that specific sibling and not on the entire entity.
          #
          #        // Write the entire entity.
          #        ledgerJournalTrans_DS.write();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #errorPaym
          #//BP Deviation Documented
          #display ImageRes errorPaym(LedgerJournalTrans _ledgerJournalTrans)
          #{
          #    ImageRes    res = -1;
          #    #resAppl;
          #    if (norwayEnabled && _ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected)
          #    {
          #        res = imageListAppl.image(#ImageError);
          #    }
          #    return res;
          #}
          #
        ENDSOURCE
        SOURCE #validateDelete
          #public boolean validateDelete()
          #{
          #    boolean isValid = true;
          #    ;
          #
          #    if (!super())
          #    {
          #        // The LedgerJournalTrans' delete method requires an exception to be thrown
          #        // so that the transaction is aborted.
          #        throw Exception::Error;
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #    //<GBR>
          #    TaxWithholdTrans taxWithholdTrans;
          #    //</GBR>
          #
          #    ret = super();
          #
          #    if (ret && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
          #    {
          #        ret = false;
          #    }
          #
          #    // <GCN>
          #    if (ret
          #        && chineseVoucher_CN
          #        && !ledgerJournalTable.VoucherAllocatedAtPosting
          #        && !ledgerJournalTrans.Voucher_CN)
          #    {
          #        // Voucher number must be filled in
          #        ret = checkFailed(strfmt("@SYS26332", "@SYS5732"));
          #    }
          #    // </GCN>
          #
          #    //<GBR>
          #    if (BrazilParameters::isEnabled()
          #        &&  ret
          #        &&  ledgerJournalTrans.orig().TransDate != ledgerJournalTrans.TransDate
          #        &&  ledgerJournalTrans.hasTaxWithholdingTransactions_BR())
          #    {
          #        if (dateStartMth(ledgerJournalTrans.orig().TransDate) == dateStartMth(ledgerJournalTrans.TransDate))
          #        {
          #            update_recordset taxWithholdTrans
          #                setting TransDate = ledgerJournalTrans.TransDate
          #                where taxWithholdTrans.LedgerJourTransRecId_BR == ledgerJournalTrans.RecId;
          #        }
          #        else
          #        {
          #            ret = checkFailed("@GLS2086");
          #        }
          #    }
          #    //</GBR>
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #reread
          #public void reread()
          #{
          #    if (ledgerJournalTrans.RecId != 0)
          #    {
          #        super();
          #    }
          #}
          #
        ENDSOURCE
        SOURCE #exchRateTxt
          #//BP Deviation Documented
          #display ExchRateSecondTxt exchRateTxt()
          #{
          #    return ledgerJournalEngine.exchRateTxt(ledgerJournalTrans);
          #}
          #
        ENDSOURCE
        SOURCE #initValue
          #void initValue()
          #{
          #    if (ledgerJournalEngine.numberSeqFormHandlerJournal())
          #    {
          #        ledgerJournalEngine.numberSeqFormHandlerJournal().formMethodDataSourceCreatePre();
          #    }
          #    super();
          #
          #    ledgerJournalEngine.formMethodDataSourceCreatePost();
          #    ledgerJournalEngine.initValue(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #write
          #/// <summary>
          #/// Handles the write operation for the tables related to the <c>LedgerJournalTrans</c> table.
          #/// </summary>
          #/// <remarks>
          #/// This method controls the write operation for the related tables. This includes
          #/// <c>LedgerJournalTrans</c> table, <c>LedgerJournalTrans_Asset</c> table and
          #/// <c>LedgerJournalTrans_Project</c> table.
          #/// </remarks>
          #public void write()
          #{
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
          #    {
          #        // The kernel calls leaveRecord during the delete event which will cause this method to
          #        // be called if the user had made changes. This causes issues and must be special cased
          #        // until the behavior is changed.
          #        return;
          #    }
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
          #    {
          #        // The entity is already being written. The extra call to write is unnecessary.
          #        return;
          #    }
          #
          #    try
          #    {
          #        ttsbegin;
          #
          #        // Signal the start of the write event.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityWriteEvent();
          #
          #        // Clear out any old snapshots for the write event.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();
          #
          #        ledgerJournalEngine.preWrite(ledgerJournalTrans);
          #        ledgerJournalEngine.preWriteUpdateDefaultDimension(ledgerJournalTrans, ledgerJournalTrans_Asset);
          #        ledgerJournalEngine.formMethodDataSourceWritePre();
          #
          #        // -----------------------------------------------------------------------------------
          #        // Validate and write the entire entity. This must be done because to maintain data integrity
          #        // as we require an "all or nothing" behavior.
          #        // -----------------------------------------------------------------------------------
          #
          #        // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
          #        // the case the transaction is aborted.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
          #
          #        // <GCN>
          #        if (LedgerParameters::isChineseVoucher_CN())
          #        {
          #            ledgerJournalTrans.write();
          #            ledgerJournalTrans.reread();
          #        }
          #        // </GCN>
          #
          #        super();
          #
          #        if (ledgerJournalTrans.isFixedAssetsTransaction())
          #        {
          #            // Synchronize, validate and write the fixed assets sibling record. This call will throw
          #            // an exception if validation fails. A snapshot of the current buffer is taken to support
          #            // in-memory rollback of the buffer in the case the transaction is aborted.
          #            ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Asset();
          #            ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteFixedAssetsSibling();
          #        }
          #        else
          #        {
          #            // If this is not a fixed assets transaction, and it had been, the super() call
          #            // above should have deleted the sibling record in the database. Because of this,
          #            // the RecId of the buffer needs to be cleared out so that it will be inserted if
          #            // it gets changed back to being a fixed assets transaction.
          #            ledgerJournalTrans_Asset.RecId = 0;
          #        }
          #
          #        // -----------------------------------------------------------------------------------
          #
          #        if (ledgerJournalTrans.MarkedInvoice != LedgerJournalEngine_CustPayment::getMarkedInvoiceSettlementIndicator() &&
          #            ledgerJournalTrans.MarkedInvoiceCompany != '')
          #        {
          #            // Synchronize SpecTrans with MarkedInvoice fields.
          #            LedgerJournalEngine_CustPayment::updateMarkedInvoiceSpecTrans(ledgerJournalTrans);
          #        }
          #
          #        ledgerJournalEngine.write(ledgerJournalTrans);
          #
          #        // Signal that the write event is finished.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();
          #
          #        // <GTH>
          #        if (LedgerJournalTransExtensionTH_ds.isNeeded())
          #        {
          #            if (LedgerJournalTransExtensionTH.LedgerJournalTrans == 0)
          #            {
          #                LedgerJournalTransExtensionTH.LedgerJournalTrans = LedgerJournalTrans.RecId;
          #                if (LedgerJournalTransExtensionTH_ds.validateWrite())
          #                {
          #                    LedgerJournalTransExtensionTH_ds.write();
          #                }
          #            }
          #        }
          #        // </GTH>
          #
          #        // <GBR>
          #        if (BrazilParameters::isEnabled())
          #        {
          #            ledgerJournalTransPayment_BR.SysExtensionSerializerExtensionMap::insertAfterBaseTable(LedgerJournalTrans);
          #        }
          #        // </GBR>
          #
          #        // Signal that the write event is finished.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();
          #
          #        ttscommit;
          #    }
          #    catch (Exception::UpdateConflict)
          #    {
          #        // This exception should not be handled by the generic handling logic below, as it assumes
          #        // that a rollback needs to be performed.
          #        // A rollback should not be performed for an update conflict, as the record will never
          #        // be capable of being saved.
          #
          #        // Signal that the write event is finished with a failure by calling endEntityWriteEvent
          #        // and passing in 'true' for the failure parameter.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);
          #
          #        // Chain the exception forward.
          #        throw Exception::UpdateConflict;
          #    }
          #    catch
          #    {
          #        // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
          #        // of the transaction buffers must be handled as the kernel does not perform this automatically.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();
          #
          #        // Signal that the write event is finished with a failure by calling endEntityWriteEvent
          #        // and passing in 'true' for the failure parameter.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);
          #
          #        throw Exception::Error;
          #    }
          #
          #    // <GIN>
          #    if (ledgerJournalTransTaxExtensionIN_ds.isNeeded())
          #    {
          #        TaxModelDocLineExtensionController_IN::insertTaxExtensionRecord(ledgerJournalTransTaxExtensionIN, ledgerJournalTrans);
          #    }
          #    // </GIN>
          #}
        ENDSOURCE
        SOURCE #linkActive
          #void linkActive()
          #{
          #    ;
          #    ledgerJournalEngine.clearVoucher();
          #
          #    ledgerJournalEngine.newJournalActive(ledgerJournalTable);
          #    ledgerJournalEngine.formMethodDataSourceLinkActivePre();
          #    journalFormTrans.datasourceLinkActivePre();
          #
          #    super();
          #
          #    if (ledgerJournalTable.JournalNum != journalNum)
          #    {
          #        // If the stored journalNum has become out of sync with the reference
          #        // to ledgerJournalTable, then we need to rerun initLedger. This
          #        // will occur when the user has switched journals on the parent form.
          #        element.initLedger();
          #    }
          #}
        ENDSOURCE
        SOURCE #delete
          #void delete()
          #{
          #    LedgerJournalTrans  ledgerJournalTrans_Orig;
          #
          #    try
          #    {
          #        ttsbegin;
          #
          #        // The kernel calls leaveRecord during the super call, which will cause write to be called
          #        // on the datasource if there are changes to the buffer. We don't want this to happen,
          #        // so special case around this until the behavior is changed.
          #
          #        // Signal that the entity delete event has started.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityDeleteEvent();
          #
          #        // Clear out any old snapshots for the write event.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();
          #
          #        ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans);
          #        ledgerJournalTrans_Orig = ledgerJournalTrans.data();
          #
          #        ledgerJournalEngine.preDelete(ledgerJournalTrans);
          #        ledgerJournalEngine.formMethodDataSourceDeletePre();
          #
          #        if (!ledgerJournalTrans_Asset_DS.validateDelete())
          #        {
          #            // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
          #            throw Exception::Error;
          #        }
          #
          #        // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
          #        // the case the transaction is aborted.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
          #        super();
          #        // -----------------------------------------------------------------------------------
          #
          #        ledgerJournalEngine.delete(ledgerJournalTrans_Orig);
          #
          #        if (ledgerJournalTrans)
          #        {
          #            element.setDebCredProposal(true);
          #        }
          #
          #        // Signal that the entity delete event has finished.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent();
          #
          #        ttscommit;
          #    }
          #    catch
          #    {
          #        // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
          #        // of the transaction buffers must be handled as the kernel does not perform this automatically.
          #        ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedDelete();
          #
          #        // Signal that the entity delete event is finished with a failure by calling endEntityDeleteEvent
          #        // and passing in 'true' for the failure parameter.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent(true);
          #
          #        throw Exception::Error;
          #    }
          #
          #    buttonSettlement.enabled(false);
          #    custPaymEditingButton.enabled(false);
          #    markInvoiceLine.enabled(false);
          #}
        ENDSOURCE
        SOURCE #create
          #void create(boolean append = false)
          #{
          #
          #    // --------------------------------------------------------------------------------------
          #    // The client mistakingly calls create after a failed write. Add in a check to prevent the
          #    // extra, mistaken, call to create.
          #    // --------------------------------------------------------------------------------------
          #    if (!ledgerJournalTransEntityManager.getFormDataEventManager().isLastWriteAttemptFailed())
          #    {
          #        // The last write attempt was a success, so this is being called in the context of
          #        // record creation.
          #
          #        try
          #        {
          #            ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityCreateEvent();
          #
          #            journalFormTrans.datasourceCreatePre();
          #
          #            element.setDebCredProposal(true);
          #
          #            ledgerJournalEngine.preCreate(ledgerJournalTrans);
          #
          #            super(append);
          #            if (lastEnteredReleaseDate != utcDateTimeNull())
          #            {
          #              ledgerJournalTrans.ReleaseDate =   lastEnteredReleaseDate;
          #            }
          #
          #            // Signal that the create event is finished.
          #            ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
          #
          #        }
          #        catch (Exception::UpdateConflict)
          #        {
          #            // This exception should not be handled by the generic handling logic below.
          #
          #            // Signal that the create event is finished.
          #            ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
          #
          #            // Chain the exception forward.
          #            throw Exception::UpdateConflict;
          #        }
          #        catch
          #        {
          #            // Signal that the create event is finished.
          #            ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
          #
          #            throw Exception::Error;
          #        }
          #    }
          #}
        ENDSOURCE
        SOURCE #active
          #/// <summary>
          #/// Handles the event that is fired each time a record is read by the data source.
          #/// </summary>
          #/// <returns>
          #/// An integer return code.
          #/// </returns>
          #public int active()
          #{
          #    int                 ret;
          #    UserGroupId         approveGroupId = ledgerJournalTable.ledgerJournalName().ApproveGroupId;
          #    boolean             markedInvoice;
          #    MCRCustPaymTable    mcrCustPaymTable;
          #
          #    if (mcrAllowPayment)
          #    {
          #        mcrCustPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(ledgerJournalTrans.RecId,
          #                                                                      ledgerJournalTrans.TableId);
          #        if (mcrCustPaymTable)
          #        {
          #            ledgerJournalTrans_OffsetAccountType.enabled(false);
          #            ledgerJournalTrans_OffsetAccount.enabled(false);
          #        }
          #        else
          #        {
          #            ledgerJournalTrans_OffsetAccountType.enabled(true);
          #            ledgerJournalTrans_OffsetAccount.enabled(true);
          #        }
          #    }
          #
          #    ret = super();
          #
          #    if (ret)
          #    {
          #        ledgerJournalEngine.active(ledgerJournalTrans);
          #        priorOffsetAccountType = ledgerJournalTrans.OffsetAccountType;
          #
          #        ledgerJournalEngine.setChildDataSourceAccess(ledgerJournalTrans,custVendPaymJournalFee);
          #
          #        journalFormTrans.datasourceActivePost();
          #        custVendNACHAIATInfoTable_US.enabled(
          #                    CustVendNACHAIATInfoTable_US::isValidCustVendNACHAIATInfoTable_US(ledgerJournalTrans));
          #    }
          #
          #    journalFormTrans.setDelTransButtonEnabledForJournalLine(ledgerJournalTrans.PaymentStatus);
          #
          #    if (ledgerJournalTable.Approver)
          #    {
          #        if (!UserInfoHelp::userInUserGroup(curUserId(), approveGroupId))
          #        {
          #            buttonDeleteTransactions.enabled(false);
          #            custPaymProposalCreate.enabled(false);
          #        }
          #    }
          #
          #    if (ledgerJournalTable.ledgerJournalName().ApproveActive)
          #    {
          #        if (!UserInfoHelp::userInUserGroup(curUserId(), approveGroupId))
          #        {
          #            buttonApprove.enabled(false);
          #            buttonReject.enabled(false);
          #        }
          #    }
          #
          #    custPaymEditingButton.enabled(element.isPaymEditAllowed());
          #    // <GIN>
          #    if (TaxWithholdParameters_IN::checkTaxParameters())
          #    {
          #        element.setTaxWithholdEnabled_IN();
          #        taxInformation_IN_ds.executeQuery();
          #    }
          #    // </GIN>
          #
          #    element.enableButtonDepositSlip();
          #    // <GIN>
          #    if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
          #    {
          #        journalFormTrans.enableDisableExciseRecordType_IN();
          #        element.setTaxWithholdEnabled_IN();
          #    }
          #    // </GIN>
          #
          #    markInvoiceLine.enabled(CustOpenTransLineManager::setMarkInvoiceButton(element.makeArgs()));
          #
          #    dimAccountController.parmDataAreaId(ledgerJournalTrans.Company);
          #    dimOffsetAccountController.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
          #
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoSA, #isoGB, #isoIE])
          #        && ledgerJournalTrans.LedgerDimension)
          #    {
          #        markedInvoice = (SpecTrans::getSpecTransCount(
          #                                    ledgerJournalTrans.company(),
          #                                    ledgerJournalTrans.TableId,
          #                                    ledgerJournalTrans.RecId) != 0);
          #
          #        // Disable fields below as they were used during calculation of the withholding tax in Open Trans form.
          #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxWithholdCalculate_TH)).allowEdit(!markedInvoice);
          #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,TaxWithholdGroup)).allowEdit(!markedInvoice);
          #    }
          #
          #    element.setPaymentByLetterOfCredit();
          #
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        element.setLookupButton_BR();
          #
          #        if (CustPaymModeTable::find(ledgerJournalTrans.PaymMode).ClassId == classnum(CustOutPaym_CNAB_BR) &&
          #            (ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Recieved ||
          #             ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected))
          #        {
          #            ledgerJournalTrans_DS.object(fieldnum(LedgerJournalTrans, PaymentStatus)).allowEdit(false);
          #        }
          #
          #        element.configureLineStatusButton_BR();
          #
          #        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Due)).allowEdit(!ledgerJournalTrans.hasCustVendTransOpen_BR());
          #    }
          #    // </GBR>
          #
          #    if (mcrAllowPayment)
          #    {
          #        // Only allow users to create/modify the related card if a
          #        //  payment exists for it.
          #        if (ledgerJournalTrans.AmountCurCredit
          #            || ledgerJournalTrans.AmountCurDebit)
          #        {
          #            mcrCustPaymButton.enabled(true);
          #        }
          #        else
          #        {
          #            mcrCustPaymButton.enabled(false);
          #        }
          #    }
          #
          #    // Redraw the form so that changes are reflected back to the user.
          #    element.redraw();
          #
          #    // Enable/disable PDCs
          #    if(postDatedCheckEnabled)
          #    {
          #        custPDCRegister_ds.allowEdit(CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans));
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #errorExist
          #//BP Deviation Documented
          #display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
          #{
          #    ImageRes    res = -1;
          #    #resAppl;
          #
          #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
          #
          #    if (postingResults_Client.errorExists(_ledgerJournalTrans.Voucher) ||
          #        (norwayEnabled && _ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected))
          #    {
          #        res = imageListAppl.image(#ImageError);
          #    }
          #    return res;
          #}
        ENDSOURCE
        SOURCE #errorLog
          #//BP Deviation Documented
          #display LogTxt errorLog()
          #{
          #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
          #
          #    return postingResults_Client.errorLog(ledgerJournalTrans.Voucher);
          #}
        ENDSOURCE
        SOURCE #postedDateTime
          #//BP Deviation Documented
          #display JournalPostedDateTime postedDateTime()
          #{
          #    return ledgerJournalEngine.postedDateTime();
          #}
        ENDSOURCE
        SOURCE #approvedBy
          #//BP Deviation Documented
          #display ApprovedByPersonnelNumber approvedBy()
          #{
          #    return ledgerJournalEngine.approvedBy();
          #}
        ENDSOURCE
        SOURCE #rejectedBy
          #//BP Deviation Documented
          #display UserId rejectedBy()
          #{
          #    return ledgerJournalEngine.rejectedBy();
          #}
        ENDSOURCE
        SOURCE #reportedAsReadyBy
          #//BP Deviation Documented
          #display UserId reportedAsReadyBy()
          #{
          #    return ledgerJournalEngine.reportedAsReadyBy();
          #}
        ENDSOURCE
        SOURCE #journalBalance
          #//BP Deviation Documented
          #display AmountMST journalBalance()
          #{
          #    return ledgerJournalEngine.journalDebit() - ledgerJournalEngine.journalCredit();
          #}
        ENDSOURCE
        SOURCE #journalCredit
          #//BP Deviation Documented
          #display AmountMST journalCredit()
          #{
          #    return ledgerJournalEngine.journalCredit();
          #}
        ENDSOURCE
        SOURCE #journalDebit
          #//BP Deviation Documented
          #display AmountMST journalDebit()
          #{
          #    return ledgerJournalEngine.journalDebit();
          #}
        ENDSOURCE
        SOURCE #voucherTotal
          #//BP Deviation Documented
          #display AmountMST voucherTotal()
          #{
          #
          #    return ledgerJournalEngine.voucherDebit(ledgerJournalTrans) - ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #voucherCredit
          #//BP Deviation Documented
          #display AmountMST voucherCredit()
          #{
          #    return ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #voucherDebit
          #//BP Deviation Documented
          #display AmountMST voucherDebit()
          #{
          #    return ledgerJournalEngine.voucherDebit(ledgerJournalTrans);
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustVendPaymJournalFee
          Table               #CustVendPaymJournalFee
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD LedgerJournalACType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    super();
                #
                #    // Clear the account when the account type changes
                #    custVendPaymJournalFee.parmLedgerDimension(0);
                #
                #    if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Ledger ||
                #        custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust)
                #    {
                #        custPaymJournalFee_CustAccount.enabled(true);
                #    }
                #    else
                #    {
                #        // Disable the account lookup if the value is not Ledger or Customer
                #        custPaymJournalFee_CustAccount.enabled(false);
                #    }
                #    custVendPaymJournalFee_ds.rereadReferenceDataSources();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD LedgerDimension
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                #public boolean validate()
                #{
                #    CompanyId validationCompany;
                #    boolean ret;
                #    ;
                #
                #    // This needs to happen in the correct company context
                #    if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust ||
                #        custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Vend)
                #    {
                #        validationCompany = ledgerJournalTrans.Company;
                #    }
                #    else
                #    {
                #        validationCompany = ledgerJournalTrans.company();
                #    }
                #
                #    changecompany(validationCompany)
                #    {
                #        ret = super();
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
              SOURCE #resolveReference
                #public Common resolveReference(FormReferenceControl _formReferenceControl)
                #{
                #    return dimPaymentFeeAccountController.resolveReference();
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #delete
          #public void delete()
          #{
          #    ;
          #    ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
          #    super();
          #    ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
          #    ledgerJournalEngine.preWriteUpdateDefaultDimensionPaymFee(custVendPaymJournalFee);
          #    super();
          #    ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    super();
          #
          #    custVendPaymJournalFee.Module = ModuleCustVend::Cust;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #PaymentOrderBudgetTrans_RU
          Table               #PaymentOrderBudgetTrans_RU
          AllowCheck          #No
          AllowDelete         #No
          AutoSearch          #No
          JoinSource          #LedgerJournalTrans
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD PeriodCode
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD PeriodNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD year
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TaxPeriodDate
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    Object obj = ledgerJournalEngine;
                #    ;
                #
                #    super();
                #
                #    obj.paymOrderTransTaxPeriodDateModified_RU(paymentOrderBudgetTrans_RU);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean ret;
          #    Object  obj = ledgerJournalEngine;
          #    ;
          #
          #    if(obj.needWritePaymentOrderBudgetTrans_RU())
          #    {
          #        ret = super();
          #    }
          #    else
          #    {
          #        ret = true;
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    Object  obj = ledgerJournalEngine;
          #    ;
          #
          #    if(obj.needWritePaymentOrderBudgetTrans_RU())
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTrans_Asset
          Table               #LedgerJournalTrans_Asset
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD BookId
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    ledgerJournalEngine.assetBookIdModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    super();
                #    if(ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                #    {
                #        ledgerJournalEngine.initFromAssetTable(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    }
                #
                #    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    element.enableDepreciationStartDate();
                #}
                #
              ENDSOURCE
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    ;
                #
                #    AssetBook::lookupOpenBookIdForAsset(_formControl,
                #                                        ledgerJournalTrans_Asset.AssetId,
                #                                        true,  // CurrentOperationsTax must be considered
                #                                        ledgerJournalTable.CurrentOperationsTax,
                #                                        ledgerJournalTrans_Asset.Company);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD TransType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #modified
                #public void modified()
                #{
                #    ;
                #
                #    ledgerJournalEngine.assetTransTypeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                #    super();
                #    element.enableDepreciationStartDate();
                #}
                #
                #
                #
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #    ;
          #
          #    // --------------------------------------------------------------------------------------
          #    // The client mistakingly calls executeQuery after a failed write. Add in a check to
          #    // prevent the extra, mistaken, call to executeQuery.
          #    // --------------------------------------------------------------------------------------
          #    if (!ledgerJournalTransEntityManager.getFormDataEventManager().isLastWriteAttemptFailed())
          #    {
          #        super();
          #    }
          #}
        ENDSOURCE
        SOURCE #create
          #public void create(boolean _append = false)
          #{
          #    ;
          #
          #    // --------------------------------------------------------------------------------------
          #    // The client mistakingly calls create after a failed write. Add in a check to prevent the
          #    // extra, mistaken, call to create.
          #    // --------------------------------------------------------------------------------------
          #    if (!ledgerJournalTransEntityManager.getFormDataEventManager().isLastWriteAttemptFailed())
          #    {
          #        // The last write attempt was a success, so this is being called in the context of
          #        // record creation.
          #
          #        super(_append);
          #        ledgerJournalEngine.formMethodDataSourceFixedAssetsCreate(ledgerJournalTrans, ledgerJournalTrans_Asset);
          #    }
          #}
        ENDSOURCE
        SOURCE #initValue
          #public void initValue()
          #{
          #    ;
          #
          #    super();
          #
          #    ledgerJournalEngine.initValueAsset(ledgerJournalTrans_Asset);
          #    element.enableDepreciationStartDate();
          #}
          #
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    element.enableDepreciationStartDate();
          #
          #    return ret;
          #}
          #
        ENDSOURCE
        SOURCE #validateDelete
          #public boolean validateDelete()
          #{
          #    boolean isValid = true;
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
          #    {
          #        // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.
          #
          #        // Call LedgerJournalTrans_Asset.validateDelete directly as we don't want an extra delete
          #        // confirmation dialog to be shown.
          #        isValid = ledgerJournalTrans_Asset.validateDelete();
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #delete
          #public void delete()
          #{
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
          #    {
          #        // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.
          #
          #        // Call LedgerJournalTrans_Asset.delete directly as super calls validateWrite, which will cause
          #        // an extra delete confirmation dialog to be shown.
          #        ledgerJournalTrans_Asset.delete();
          #    }
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    ;
          #
          #    ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
          #    {
          #        // Only perform the write if called from the LedgerJournalTrans datasource's write event.
          #        super();
          #    }
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #public boolean validateWrite()
          #{
          #    boolean isValid = true;
          #    ;
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
          #    {
          #        // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
          #        isValid = super();
          #    }
          #
          #    return isValid;
          #}
        ENDSOURCE
        SOURCE #linkActive
          #public void linkActive()
          #{
          #    ;
          #
          #    super();
          #
          #    if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
          #    {
          #        // The sibling write can no longer be handled so cancel the request.
          #        ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustPDCRegister
          Table               #CustVendPDCRegister
          AllowCheck          #No
          JoinSource          #LedgerJournalTrans
          LinkType            #Active
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD OriginalCheck
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    CustVendPDCRegister::lookupCheckNumber(_formControl);
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #
          #    ret = super();
          #
          #    element.enableReplacementFields();
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #public void write()
          #{
          #    custPDCRegister.LedgerJournalTrans = ledgerJournalTrans.RecId;
          #    custPDCRegister.AccountType = CustVendACType::Cust;
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #TaxInformation_IN
          Table               #TaxInformation_IN
          AllowCheck          #No
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #LedgerJournalTransTaxExtensionIN
          LinkType            #Active
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD SalesTaxRegistrationNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.SalesTaxRegistrationNumber).RegistrationNumber,
                #        TaxType_IN::SalesTax,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TIN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.TIN).RegistrationNumber,
                #        TaxType_IN::VAT,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TAN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxWithholdRegNumbers_IN::jumpRef(
                #        TaxWithholdRegNumbers_IN::find(taxInformation_IN.TAN).RegistrationNumber,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ManECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.ManECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD TraderECCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.TraderECCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD IECRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.IECRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::Customs,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD STCRegistrationNumberTable
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.STCRegistrationNumberTable).RegistrationNumber,
                #        TaxType_IN::ServiceTax,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
          REFERENCEFIELD ECCNumber
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #// <GIN>
                #public void jumpRef()
                #{
                #    TaxRegistrationNumbers_IN::jumpRef(
                #        TaxRegistrationNumbers_IN::find(taxInformation_IN.ECCNumber).RegistrationNumber,
                #        TaxType_IN::Excise,
                #        LedgerJournalTrans);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransTaxExtensionIN
          Table               #LedgerJournalTransTaxExtensionIN
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD TaxInformation_IN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #jumpRef
                #public void jumpRef()
                #{
                #    TaxInformation_IN::jumpRef(ledgerJournalTransTaxExtensionIN.TaxInformation_IN, this);
                #}
              ENDSOURCE
              SOURCE #modified
                #// <GIN>
                #public void modified()
                #{
                #    super();
                #    TaxInformation_IN_DS.linkActive();
                #    LedgerJournalTransTaxExtensionIN_DS.write();
                #}
                #// </GIN>
              ENDSOURCE
              SOURCE #lookupReference
                #// <GIN>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    return TaxInformation_IN::lookup(_formReferenceControl, LedgerJournalTrans.CompanyLocation_IN);
                #}
                #// </GIN>
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #initValue
          #// <GIN>
          #public void initValue()
          #{
          #    super();
          #    ledgerJournalTransTaxExtensionIN.TaxModelDocLineExtensionIN::init(ledgerJournalTrans);
          #}
          #// <GIN>
        ENDSOURCE
        SOURCE #isNeeded
          #// <GIN>
          #public boolean isNeeded()
          #{
          #    return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
          #}
          #// </GIN>
        ENDSOURCE
        SOURCE #init
          #// <GIN>
          #public void init()
          #{
          #    if (this.isNeeded())
          #    {
          #        this.linkType(FormLinkType::InnerJoin);
          #    }
          #    super();
          #}
          #// </GIN>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransSymbol
          Table               #LedgerJournalTransSymbol
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
          #    {
          #        // Only enable the symbol datasource if the country context is correct
          #        LedgerJournalTransSymbol_DS.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
        ENDSOURCE
        SOURCE #validateWrite
          #// <GEECZ>
          #public boolean validateWrite()
          #{
          #    boolean isValid;
          #
          #    if (!LedgerJournalTransSymbol.LedgerJournalTrans)
          #    {
          #        LedgerJournalTrans_DS.write();
          #        LedgerJournalTransSymbol.LedgerJournalTrans = LedgerJournalTrans.RecId;
          #    }
          #
          #    isValid = super();
          #
          #    return isValid;
          #}
          #// </GEECZ>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LvPaymentOrderInfo
          Table               #LvPaymentOrderInfo
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransPayment_LV
          Table               #LedgerJournalTransPayment_LV
          AllowDelete         #No
          JoinSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    boolean ret = super();
          #
          #    if (ret)
          #    {
          #        ret = ledgerJournalTransPayment_LV_ds.allowEdit(! ledgerJournalEngine.posted() &&
          #                                           ! (ledgerJournalTrans.PaymentStatus  == CustVendPaymStatus::Sent      ||
          #                                              ledgerJournalTrans.PaymentStatus  == CustVendPaymStatus::Confirmed ||
          #                                              (ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected)));
          #    }
          #    return ret;
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustEPRemitInfo_BR
          Table               #CustEPRemitInfo_BR
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD DocumentType
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #/// <summary>
                #/// Constructs a lookup for the document type field.
                #/// </summary>
                #/// <remarks>
                #/// The lookup shows appropriate document types (if any) given the payment mode
                #/// </remarks>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPDocumentTypes_BR::EPDocumentTypeLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Instruction_1
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #/// <summary>
                #/// Constructs a lookup for the instruction 1 field.
                #/// </summary>
                #/// <remarks>
                #/// The lookup shows appropriate instructions (if any) given the payment mode
                #/// </remarks>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPInstructions_BR::EPInstructionsLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD Instruction_2
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #/// <summary>
                #/// Constructs a lookup for the instruction 2 field.
                #/// </summary>
                #/// <remarks>
                #/// The lookup shows appropriate instructions (if any) given the payment mode
                #/// </remarks>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPInstructions_BR::EPInstructionsLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          DATAFIELD BankFolder
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookup
                #// <GBR>
                #/// <summary>
                #/// Constructs a lookup for the bank folder field.
                #/// </summary>
                #/// <remarks>
                #/// The lookup shows appropriate bank folder codes (if any) given the payment mode
                #/// </remarks>
                #public void lookup(FormControl _formControl, str _filterStr)
                #{
                #    EPBankFolders_BR::EPBankFoldersLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
                #}
                #// </GBR>
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        CustEPRemitInfo_BR_ds.linkType(FormLinkType::Active);
          #    }
          #    // </GBR>
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransPayment_BR
          Table               #LedgerJournalTransPayment_BR
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #public void write()
          #{
          #    if (BrazilParameters::isEnabled() && LedgerJournalTransPayment_BR.RefRecId)
          #    {
          #        ledgerJournalTransPayment_BR.EPPaymentType_BR = ledgerJournalTrans.PaymSpec ? CustPaymModeSpec::findSpec(ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec).EPPaymentType_BR : '';
          #        ledgerJournalTransPayment_BR.EPPaymentWay_BR  = ledgerJournalTrans.PaymSpec ? CustPaymModeSpec::findSpec(ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec).EPPaymentWay_BR  : '';
          #        // no-op because a record with an empty FK is not valid
          #        super();
          #    }
          #}
          #
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    // <GBR>
          #    if (BrazilParameters::isEnabled())
          #    {
          #        LedgerJournalTransPayment_BR_ds.linkType(FormLinkType::OuterJoin);
          #    }
          #    // </GBR>
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #LedgerJournalTransExtensionTH
          Table               #LedgerJournalTransExtensionTH
          JoinSource          #LedgerJournalTrans
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #write
          #// <GTH>
          #public void write()
          #{
          #    if (LedgerJournalTransExtensionTH.LedgerJournalTrans)
          #    {
          #        super();
          #    }
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #validateWrite
          #// <GTH>
          #public boolean validateWrite()
          #{
          #    boolean ret= true;
          #
          #    if (LedgerJournalTransExtensionTH.LedgerJournalTrans)
          #    {
          #        ret = super();
          #    }
          #
          #    return ret;
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #init
          #// <GTH>
          #public void init()
          #{
          #    if (this.isNeeded())
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
          #// </GTH>
        ENDSOURCE
        SOURCE #isNeeded
          #/// <summary>
          #/// Checks whether this data sources should be enable or not.
          #/// </summary>
          #/// <returns>
          #/// true if it should be eneabled; otherwise, return false.
          #/// </returns>
          #/// <remarks>
          #/// This data source is joined to its parent data source with join type <c>Passive</c>
          #/// by default. It means this data source is disabled by default.
          #/// If any related feature needs this data source, then add condition(s) here to
          #/// mark that it should be enabled.
          #/// </remarks>
          #// <GTH>
          #public boolean isNeeded()
          #{
          #    boolean ret;
          #
          #    ret = TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled()
          #        || TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled();
          #
          #    return ret;
          #}
          #// </GTH>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #ServiceCodeTable_IN
          Table               #ServiceCodeTable_IN
          JoinSource          #LedgerJournalTrans
          JoinRelation        #ServiceCodeTable_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
  ENDREFERENCEDATASOURCES
  
  JOINS
    CustVendPaymJournalFee LedgerJournalTrans
    PaymentOrderBudgetTrans_RU LedgerJournalTrans
    LedgerJournalTrans_Asset LedgerJournalTrans
    CustPDCRegister LedgerJournalTrans
    TaxInformation_IN LedgerJournalTransTaxExtensionIN
    LedgerJournalTransTaxExtensionIN LedgerJournalTrans
    LedgerJournalTransSymbol LedgerJournalTrans
    LvPaymentOrderInfo LedgerJournalTrans
    LedgerJournalTransPayment_LV LedgerJournalTrans
    CustEPRemitInfo_BR LedgerJournalTrans
    LedgerJournalTransPayment_BR LedgerJournalTrans
    LedgerJournalTransExtensionTH LedgerJournalTrans
    ServiceCodeTable_IN LedgerJournalTrans
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS3096
      Mode                #Edit
      DataSource          #LedgerJournalTrans
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #536870911
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane1
          ElementPosition     #1073741822
          HierarchyParent     #PaymentFee
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab1
          ElementPosition     #1431655764
          HierarchyParent     #ActionPane1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1610612733
          HierarchyParent     #ActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #GAFInformation_MY
          ElementPosition     #1610612733
          HierarchyParent     #ActionPaneTab1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #NewDeleteGroup
          ElementPosition     #1073741822
          HierarchyParent     #ActionPaneTab
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #NewDeleteGroup1
          ElementPosition     #1073741822
          HierarchyParent     #ActionPaneTab1
          DataSource          #CustVendPaymJournalFee
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #GridPaymFee
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          HierarchyParent     #PaymentFee
          DataSource          #CustVendPaymJournalFee
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #overviewGrid
          AutoDeclaration     #Yes
          Width               #Column width
          Height              #Column height
          ElementPosition     #1073741822
          HierarchyParent     #OverView
          VisibleRows         #8
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Account
          ElementPosition     #644245092
          HierarchyParent     #General
          Caption             #@SYS2355
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AddRemittanceInfo
          ElementPosition     #495573147
          HierarchyParent     #Payment
          Caption             #@GLS1164
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Amount
          AllowEdit           #No
          ElementPosition     #1073741823
          HierarchyParent     #PDC
          Caption             #@SYS311147
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Balances
          AllowEdit           #No
          Enabled             #No
          ElementPosition     #1073741822
          FrameType           #None
          DataSource          #LedgerJournalTrans
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BankClientDocumentType_RU
          ElementPosition     #1817101539
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #BankClientDocumentType_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BankLCExportGroup
          AutoDeclaration     #Yes
          ConfigurationKey    #BankDocument
          ElementPosition     #1651910490
          HierarchyParent     #Payment
          Caption             #@SYS316286
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #BudgetClassification
          ElementPosition     #954437176
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #BudgetClassification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CommissionTrade_RU
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ElementPosition     #1073741820
          HierarchyParent     #General
          DataSource          #LedgerJournalTrans
          DataGroup           #CommissionTrade_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CompanyInfo
          AutoDeclaration     #Yes
          ElementPosition     #477218588
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS81121
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CreditBalance
          Enabled             #No
          ElementPosition     #1717986916
          HierarchyParent     #Balances
          Caption             #@SYS24012
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Currency
          ElementPosition     #1073741822
          HierarchyParent     #Group2
          Caption             #@SYS12227
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #CurrentJournal
          AllowEdit           #No
          ElementPosition     #715827882
          HierarchyParent     #History
          Caption             #@SYS24582
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Cust
          ElementPosition     #1431655764
          HierarchyParent     #History
          Caption             #@SYS302
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Customs_IN
          AutoDeclaration     #Yes
          ElementPosition     #1670265058
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5007
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #DebitBalance
          Enabled             #No
          ElementPosition     #1288490187
          HierarchyParent     #Balances
          Caption             #@SYS24011
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Depositslip
          ElementPosition     #920350134
          HierarchyParent     #Bank
          FrameType           #None
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Description
          AllowEdit           #No
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #Group2
          Caption             #@SYS6303
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Document
          ElementPosition     #1908874352
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #Document
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Excise_IN
          AutoDeclaration     #Yes
          ElementPosition     #1431655764
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5005
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ExportPayments
          ElementPosition     #1789569705
          HierarchyParent     #History
          DataSource          #LedgerJournalTrans
          DataGroup           #ExportPayments
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ForeignPayments_LT
          ElementPosition     #1982292588
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #ForeignPayments_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Group
          ElementPosition     #715827882
          HierarchyParent     #GrpPayment1
          FrameType           #None
          Columns             #2
          Columnspace         #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Group2
          ElementPosition     #1503238548
          HierarchyParent     #General
          FrameType           #None
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDocument
          ElementPosition     #1156337343
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
          DataGroup           #Document
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupDocument_TH
          ElementPosition     #1321528392
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTransExtensionTH
          DataGroup           #TaxInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GroupHeader
          Top                 #Bottom edge
          ElementPosition     #1610612733
          HierarchyParent     #OverView
          FrameType           #None
          DataSource          #LedgerJournalTrans
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          AlignChild          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpBank
          ElementPosition     #613566756
          HierarchyParent     #Bank
          DataSource          #LedgerJournalTrans
          DataGroup           #Bank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpCurrency1
          ElementPosition     #660764196
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpDocument
          ElementPosition     #991146294
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #Document
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpDocument_TH
          ElementPosition     #1156337343
          HierarchyParent     #Payment
          FrameType           #None
          DataSource          #LedgerJournalTransExtensionTH
          DataGroup           #TaxInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpDue
          ConfigurationKey    #PaymMan
          ElementPosition     #660764196
          HierarchyParent     #Payment
          Caption             #@SYS14021
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpNames
          ElementPosition     #825955245
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpNotificationToTheCentralBank
          ElementPosition     #1486719441
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTrans
          DataGroup           #NotificationToTheCentralBank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpPayment
          ElementPosition     #330382098
          HierarchyParent     #Payment
          Caption             #@SYS828
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpPayment1
          ElementPosition     #991146294
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #GrpPostingProfile
          ElementPosition     #825955245
          HierarchyParent     #Payment
          Caption             #@SYS12919
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Identification
          ElementPosition     #429496728
          HierarchyParent     #General
          Caption             #@SYS5711
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InterCompany
          AllowEdit           #No
          ElementPosition     #1073741823
          HierarchyParent     #History
          Caption             #@SYS3805
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InterestAndFine_BR
          CountryRegionCodes  #BR
          ElementPosition     #1932735276
          HierarchyParent     #General
          DataSource          #LedgerJournalTransPayment_BR
          DataGroup           #InterestAndFineAmounts
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OffsetAccountInfo
          ElementPosition     #1288490184
          HierarchyParent     #General
          Caption             #@SYS11162
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #OriginPayment
          ElementPosition     #1193046470
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #OriginPayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentOrder
          ElementPosition     #477218588
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #PaymentOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentOrder_LV
          CountryRegionCodes  #LV
          ElementPosition     #1321528392
          HierarchyParent     #Payment
          DataSource          #LedgerJournalTransPayment_LV
          DataGroup           #PaymentOrder_LV
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymentType
          ElementPosition     #1431655764
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #PaymentType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymPeriod
          ElementPosition     #1670265058
          HierarchyParent     #OrderPayment_RU
          Caption             #@SYS40
          DataSource          #PaymentOrderBudgetTrans_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PDCBank
          ElementPosition     #1789569705
          HierarchyParent     #PDC
          DataSource          #CustPDCRegister
          DataGroup           #Bank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PDCGroup
          ElementPosition     #715827882
          HierarchyParent     #PDC
          DataSource          #CustPDCRegister
          DataGroup           #PDC
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PeriodCode
          ElementPosition     #1073741822
          HierarchyParent     #PaymPeriod
          FrameType           #None
          DataSource          #PaymentOrderBudgetTrans_RU
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
          DataGroup           #PeriodCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PeriodDate
          ElementPosition     #1610612733
          HierarchyParent     #PaymPeriod
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #PeriodDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PostingRelease
          ElementPosition     #1717986912
          HierarchyParent     #General
          DataSource          #LedgerJournalTrans
          DataGroup           #PostingRelease
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PostingReleaseOvw
          ElementPosition     #1486719441
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
          DataGroup           #PostingRelease
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PrintPaymentOrder_RU
          ElementPosition     #1840700268
          HierarchyParent     #Bank
          DataSource          #LedgerJournalTrans
          DataGroup           #PrintPaymentOrder_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Replacement
          ElementPosition     #1431655764
          HierarchyParent     #PDC
          DataSource          #CustPDCRegister
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #SalesTax
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5536
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ServiceTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #1908874352
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5006
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Status
          ElementPosition     #715827882
          HierarchyParent     #OrderPayment_RU
          DataSource          #PaymentOrderBudgetTrans_RU
          DataGroup           #Status
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Symbol
          ElementPosition     #1533916890
          HierarchyParent     #Bank
          Caption             #@GLS107997
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Tax
          ElementPosition     #858993456
          HierarchyParent     #General
          DataSource          #LedgerJournalTrans
          DataGroup           #SalesTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TaxWithholdCertificate
          CountryRegionCodes  #TH
          ElementPosition     #1817101539
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTransExtensionTH
          DataGroup           #Certificate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #ThirdPartyBank
          ElementPosition     #1227133512
          HierarchyParent     #Bank
          DataSource          #LedgerJournalTrans
          DataGroup           #ThirdPartyBank
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #TotalBalance
          Enabled             #No
          ElementPosition     #858993458
          HierarchyParent     #Balances
          Caption             #@SYS5804
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VAT
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@GLS5004
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithHoldingTax
          CountryRegionCodes  #TH,SA,GB,IE
          ElementPosition     #1651910490
          HierarchyParent     #GroupHeader
          FrameType           #None
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax_IN
          AutoDeclaration     #Yes
          ElementPosition     #1982292588
          HierarchyParent     #GroupHeader
          DataSource          #LedgerJournalTrans
          DataGroup           #WithHoldingTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingTax_TaxInformation_IN
          AutoDeclaration     #Yes
          ElementPosition     #1193046470
          HierarchyParent     #TabTaxInformation_IN
          Caption             #@SYS7372
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonCheckJournal
          AutoDeclaration     #Yes
          HelpText            #@SYS23471
          ElementPosition     #429496728
          HierarchyParent     #ButtonGroup
          Text                #@SYS53323
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonCourse
          AutoDeclaration     #Yes
          HelpText            #@SYS24580
          ElementPosition     #644245092
          HierarchyParent     #ButtonGroup
          Text                #@SYS2453
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonFunctions
          AutoDeclaration     #Yes
          HelpText            #@SYS28778
          ElementPosition     #1073741820
          HierarchyParent     #ButtonGroup
          Text                #@SYS10340
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonPaymentProposal
          AutoDeclaration     #Yes
          HelpText            #@SYS78096
          ElementPosition     #1288490184
          HierarchyParent     #ButtonGroup
          Text                #@SYS66014
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonPaymentReconciliation
          AutoDeclaration     #Yes
          HelpText            #@SYS67678
          ElementPosition     #1181116002
          HierarchyParent     #ButtonGroup
          Text                #@SYS22176
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    boolean             visible = false;
            #    boolean             enabled = false;
            #    LedgerJournalTrans  localLedgerJournalTrans;
            #    FormDataSource      formDS;
            #    FormButtonControl   ctrlBankChequeReuseButton = bankChequeReuse;
            #    ;
            #
            #    if (ctrlBankChequeReuseButton)
            #    {
            #        visible = BankParameters::find().AllowCheckReuse;
            #        ctrlBankChequeReuseButton.visible(visible);
            #
            #        if (visible)
            #        {
            #            formDS = ledgerJournalTrans.dataSource();
            #            if (formDS)
            #            {
            #                for (localLedgerJournalTrans = getFirstSelection(formDS);
            #                     localLedgerJournalTrans;
            #                     localLedgerJournalTrans = formDS.getNext())
            #                {
            #                    if (localLedgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent
            #                        && localLedgerJournalTrans.PaymReference)
            #                    {
            #                        enabled = true;
            #                        break;
            #                    }
            #                }
            #            }
            #        }
            #
            #        ctrlBankChequeReuseButton.enabled(enabled);
            #    }
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #buttonPostJournal
          AutoDeclaration     #Yes
          HelpText            #@SYS5943
          ElementPosition     #322122546
          HierarchyParent     #ButtonGroup
          Text                #@SYS6098
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #FinancialDimension
          HelpText            #@SYS300590
          ElementPosition     #536870910
          HierarchyParent     #ButtonGroup
          Text                #@SYS138491
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    journalFormTrans.enableDimensionButtonsActive(custVendPaymJournalFee);
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #Inquiries
          HelpText            #@SYS84076
          ElementPosition     #1395864366
          HierarchyParent     #ButtonGroup
          Text                #@SYS3850
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #Print
          HelpText            #@SYS84077
          ElementPosition     #1503238548
          HierarchyParent     #ButtonGroup
          Text                #@SYS920
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #TaxWithhold_IN
          AutoDeclaration     #Yes
          HelpText            #@GLS5864
          ElementPosition     #1825361094
          HierarchyParent     #ButtonGroup
          Text                #@SYS33817
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #TaxWithholdLineStatusMenuButton
          AutoDeclaration     #Yes
          HelpText            #@GLS2078
          ElementPosition     #1932735276
          HierarchyParent     #ButtonGroup
          Text                #@GLS2077
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #Customs_IN_CustomsTariffCodeTable_IN
          ElementPosition     #1840700268
          HierarchyParent     #Customs_IN
          DataSource          #LedgerJournalTrans
          ReferenceField      #CustomsTariffCodeTable_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_CompanyLocation_IN
          HelpText            #@GLS222760
          ElementPosition     #858993458
          HierarchyParent     #CompanyInfo
          DataSource          #LedgerJournalTrans
          ReferenceField      #CompanyLocation_IN
          Label               #@SYS123914
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_ExciseTariffCodes_IN
          ElementPosition     #1288490184
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          ReferenceField      #ExciseTariffCodes_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_LedgerVoucherType_CN
          ElementPosition     #644245092
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          ReferenceField      #LedgerVoucherType_CN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTrans_SalesTaxFormTypes_IN
          ElementPosition     #1610612733
          HierarchyParent     #SalesTax
          DataSource          #LedgerJournalTrans
          ReferenceField      #SalesTaxFormTypes_IN
          Label               #@GLS5179
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTransSymbol_BankConstantSymbol
          ElementPosition     #1073741822
          HierarchyParent     #Symbol
          DataSource          #LedgerJournalTransSymbol
          ReferenceField      #BankConstantSymbol
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #LedgerJournalTransTaxExtensionIN_TaxInformation_IN
          ElementPosition     #1717986916
          HierarchyParent     #CompanyInfo
          DataSource          #LedgerJournalTransTaxExtensionIN
          ReferenceField      #TaxInformation_IN
          Label               #@SYS33652
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PDCGroup_WorkerCollectionAgent
          ElementPosition     #1288490184
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          ReferenceField      #WorkerCollectionAgent
          ReplacementFieldGroup #PersonnelNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PDCGroup_WorkerSalesPerson
          ElementPosition     #1503238548
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          ReferenceField      #WorkerSalesPerson
          ReplacementFieldGroup #PersonnelNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #SalesTax_SalesTaxRegistrationNumber
          ElementPosition     #1073741822
          HierarchyParent     #SalesTax
          DataSource          #TaxInformation_IN
          ReferenceField      #SalesTaxRegistrationNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ECCNumber
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ECCNumber
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_IECRegistrationNumberTable
          ElementPosition     #1227133512
          HierarchyParent     #Customs_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #IECRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_ManECCRegistrationNumberTable
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #ManECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_STCRegistrationNumberTable
          ElementPosition     #715827882
          HierarchyParent     #ServiceTax_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #STCRegistrationNumberTable
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #TaxInformation_IN_TraderECCRegistrationNumberTable
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Excise_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #TraderECCRegistrationNumberTable
          Label               #@GLS5102
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VAT_TIN
          ElementPosition     #1431655764
          HierarchyParent     #VAT
          DataSource          #TaxInformation_IN
          ReferenceField      #TIN
          ReplacementFieldGroup #Identification
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #WithholdingTax_TAN
          ElementPosition     #1610612733
          HierarchyParent     #WithholdingTax_TaxInformation_IN
          DataSource          #TaxInformation_IN
          ReferenceField      #TAN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612733
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #AssetTab
          ElementPosition     #1073741820
          HierarchyParent     #Tab
          Caption             #@SYS12578
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Bank
          ElementPosition     #894784850
          HierarchyParent     #Tab
          Caption             #@SYS22173
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #General
          ElementPosition     #536870910
          HierarchyParent     #Tab
          Caption             #@SYS2952
          DataSource          #LedgerJournalTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #History
          AllowEdit           #No
          ElementPosition     #1252698790
          HierarchyParent     #Tab
          Caption             #@SYS10575
          DataSource          #LedgerJournalTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #OrderPayment_RU
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ConfigurationKey    #Bank
          ElementPosition     #1789569700
          HierarchyParent     #Tab
          Caption             #@GLS102632
          DataSource          #PaymentOrderBudgetTrans_RU
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #OverView
          ElementPosition     #357913940
          HierarchyParent     #Tab
          Caption             #@SYS9039
          DataSource          #LedgerJournalTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Payment
          ElementPosition     #1431655760
          HierarchyParent     #Tab
          Caption             #@SYS828
          DataSource          #LedgerJournalTrans
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #PaymentFee
          ElementPosition     #715827880
          HierarchyParent     #Tab
          Caption             #@SYS57605
          DataSource          #CustVendPaymJournalFee
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #PDC
          AutoDeclaration     #Yes
          ElementPosition     #1610612730
          HierarchyParent     #Tab
          Caption             #@SYS322452
          Columns             #Auto
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #TabTaxInformation_IN
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #1968526670
          HierarchyParent     #Tab
          Caption             #@SYS33652
          Columns             #2
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #BankChequeReuse
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          CountryRegionCodes  #CA,US
          HelpText            #@SYS93952
          SecurityKey         #BankMisc
          ElementPosition     #1073741820
          HierarchyParent     #buttonPaymentReconciliation
          Text                #@SYS93951
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  ledgerJournalTransRecord;
            #    ;
            #    ledgerJournalTransRecord.reuseCheck(ledgerJournalTrans);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #buttonApprove
          AutoDeclaration     #Yes
          HelpText            #@SYS22218
          ElementPosition     #1288490187
          HierarchyParent     #buttonCourse
          Text                #@SYS16449
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #    ledgerJournalEngine.markApproved();
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #buttonReject
          AutoDeclaration     #Yes
          HelpText            #@SYS22330
          ElementPosition     #1717986916
          HierarchyParent     #buttonCourse
          Text                #@SYS22331
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.markRejected();
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #buttonReportAsReady
          AutoDeclaration     #Yes
          HelpText            #@SYS22219
          ElementPosition     #858993458
          HierarchyParent     #buttonCourse
          Text                #@SYS22220
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #    ledgerJournalEngine.markReportAsReady();
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #ButtonSettlement
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS50881
          ElementPosition     #390451572
          HierarchyParent     #buttonFunctions
          Text                #@SYS10163
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  localLedgerJournalTrans;
            #    ;
            #
            #    element.disableSettlement();
            #
            #    element.lock();
            #    localLedgerJournalTrans.data(ledgerJournalTrans);
            #
            #    // <GIN>
            #    if (TaxWithholdParameters_IN::checkTaxParameters())
            #    {
            #        TaxWithholdUncommitted_IN::deleteForInvoice(
            #            tableNum(LedgerJournalTable),
            #            localLedgerJournalTrans.ledgerJournalTable().RecId,
            #            localLedgerJournalTrans.Voucher,
            #            localLedgerJournalTrans.Invoice);
            #    }
            #    // </GIN>
            #
            #    super();
            #    ledgerJournalEngine.settleTrans(ledgerJournalTrans);
            #    ledgerJournalEngine.preWrite(ledgerJournalTrans);
            #
            #    // Update MarkedInvoice fields based on settleTrans() result
            #    ledgerJournalEngine.updateMarkedInvoiceFromSettlement(ledgerJournalTrans);
            #
            #    changecompany(ledgerJournalTrans.company())
            #    {
            #        ledgerJournalTrans.update();
            #        ledgerJournalTrans_ds.active();
            #        ledgerJournalTrans_ds.reread();
            #        ledgerJournalEngine.write(ledgerJournalTrans);
            #
            #        ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
            #    }
            #
            #    ledgerJournalTrans_ds.executeQuery();
            #    //recalculate balances
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            #    ledgerJournalTrans_ds.findRecord(localLedgerJournalTrans);
            #    element.firstField();
            #    element.unLock();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #DeleteCustOutPayment
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          HelpText            #@GLS102870
          ConfigurationKey    #Bank
          ElementPosition     #2145386494
          HierarchyParent     #buttonFunctions
          Text                #@GLS106733
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    if (Box::yesNo("@GLS103017",DialogButton::Yes) != DialogButton::Yes)
            #    {
            #        return;
            #    }
            #
            #    super();
            #
            #    BankPaymentOrderJour_RU::deletePayment_RU(ledgerJournalTrans);
            #
            #    ledgerJournalTrans_ds.reread();
            #    ledgerJournalTrans_ds.active();
            #    //element.setFunctionButton();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #MCRCustPaymButton
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYS116744
          ConfigurationKey    #MCRPayment
          ElementPosition     #878516037
          HierarchyParent     #buttonFunctions
          Text                #@MCR20754
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    Args    paymentArgs;
            #    FormRun paymentFormRun;
            #    MCRCustPaymTable mcrCustPaymTable;
            #    MCRCustPaym mcrCustPaymLocal;
            #    container paymAccounts;
            #
            #    paymentArgs = new Args();
            #
            #    paymentArgs.record(ledgerJournalTrans);
            #
            #    paymentFormRun = new MenuFunction(menuitemDisplayStr(MCRCustPaym),
            #                                        MenuItemType::Display).create(paymentArgs);
            #
            #    paymentFormRun.run();
            #    paymentFormRun.wait();
            #
            #
            #    mcrCustPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(ledgerJournalTrans.RecId,
            #                                                                  ledgerJournalTrans.TableId);
            #    if (mcrCustPaymTable)
            #    {
            #        ttsbegin;
            #        mcrCustPaymLocal = MCRCustPaym::construct(mcrCustPaymTable);
            #        paymAccounts = mcrCustPaymLocal.getPaymAccount();
            #        ledgerJournalTrans.OffsetAccountType = conPeek(paymAccounts,1);
            #        ledgerJournalTrans.OffsetLedgerDimension = conPeek(paymAccounts,2);
            #        if (ledgerJournalTrans.validateWrite())
            #        {
            #            ledgerJournalTrans.update();
            #        }
            #        else
            #        {
            #            throw error("@SYS104318");
            #        }
            #        ledgerJournalTrans_ds.research();
            #        ttscommit;
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #PrintAckReceipt
          AutoDeclaration     #Yes
          HelpText            #@SYS322837
          ElementPosition     #1932735276
          HierarchyParent     #Print
          Text                #@SYS327038
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    Args args                   = new Args();
            #    CustVendPDCReceiptController controller;
            #    MenuFunction                menuFunc;
            #
            #    super();
            #
            #    controller = new CustVendPDCReceiptController();
            #
            #    controller.parmAccountName(ledgerJournalTrans.accountName());
            #    controller.parmAccountType(CustVendACType::Cust);
            #    controller.parmBankBranch(custPDCRegister.BankBranch);
            #    controller.parmBankName(custPDCRegister.BankName);
            #    controller.parmCheckAmount(ledgerJournalTrans.displayCustPaymAmount());
            #    controller.parmCheckNum(custPDCRegister.CheckNumber);
            #    controller.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    controller.parmDateReceived(custPDCRegister.DateReceived);
            #    controller.parmMaturityDate(custPDCRegister.MaturityDate);
            #    args.parmObject(controller);
            #
            #    menuFunc = new MenuFunction(menuitemOutputStr(CustVendPDCReport),MenuItemType::Output);
            #    menuFunc.run(args);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #TaxWithholdClosePaymlLine_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          HelpText            #@GLS2080
          ElementPosition     #1073741822
          HierarchyParent     #TaxWithholdLineStatusMenuButton
          Text                #@GLS2079
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ledgerJournalTrans.closeTaxWithholdEditStatus_BR();
            #    ledgerJournalTransPayment_BR.write();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #TaxWithholdReopenPaymlLine_BR
          AutoDeclaration     #Yes
          CountryRegionCodes  #BR
          HelpText            #@GLS2082
          ElementPosition     #1610612733
          HierarchyParent     #TaxWithholdLineStatusMenuButton
          Text                #@GLS2081
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ledgerJournalTrans.reopenTaxWithholdEditStatus_BR();
            #    ledgerJournalTransPayment_BR.write();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #fieldBankDepositVoucher
          AutoDeclaration     #Yes
          ElementPosition     #1073741822
          HierarchyParent     #Depositslip
          DataSource          #LedgerJournalTrans
          DataField           #BankDepositVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #fieldBankDepositVoucherGrid
          AutoDeclaration     #Yes
          ElementPosition     #1574821336
          HierarchyParent     #overviewGrid
          BackgroundColor     #Window background
          DataSource          #LedgerJournalTrans
          DataField           #BankDepositVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #fieldTriangulation
          AutoDeclaration     #Yes
          ElementPosition     #1073741820
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataField           #Triangulation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #LedgerJournalTrans_CustFactureAutoCreate_RU
          ElementPosition     #1968526670
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #CustFactureAutoCreate_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #LedgerJournalTrans_Prepayment
          ElementPosition     #1073741820
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #Prepayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #LedgerJournalTrans_TaxWithholdCalculate
          ElementPosition     #1610612730
          HierarchyParent     #GrpPayment
          Label               #@SYS316746
          DataSource          #LedgerJournalTrans
          DataField           #TaxWithholdCalculate_TH
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #LedgerJournalTrans_Transfer
          ElementPosition     #1789569705
          HierarchyParent     #Identification
          DataSource          #LedgerJournalTrans
          DataField           #Transfer
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PDCGroup_StopPayment
          ElementPosition     #1932735276
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          DataField           #StopPayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #Replacement_IsReplacementCheck
          ElementPosition     #858993458
          HierarchyParent     #Replacement
          DataSource          #CustPDCRegister
          DataField           #IsReplacementCheck
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    element.enableReplacementFields();
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Customs_IN_CustomsTariffDirection_IN
          ElementPosition     #1533916890
          HierarchyParent     #Customs_IN
          DataSource          #LedgerJournalTrans
          DataField           #CustomsTariffDirection_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #CustVendPaymJournalFee_LedgerJournalACType
          ElementPosition     #1670265058
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #LedgerJournalACType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #Excise_IN_ExciseTypes_IN
          ElementPosition     #429496728
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataField           #ExciseType_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseManufacture_IN
          AutoDeclaration     #Yes
          ElementPosition     #1503238548
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #exciseManufacture_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseNone_IN
          AutoDeclaration     #Yes
          ElementPosition     #1717986912
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #exciseNone_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #ExciseTraders_IN
          AutoDeclaration     #Yes
          ElementPosition     #1932735276
          HierarchyParent     #Excise_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #exciseTraders_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_AccountType1
          ElementPosition     #715827882
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #AccountType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_AssetTransType
          ElementPosition     #858993458
          HierarchyParent     #AssetTab
          DataSource          #LedgerJournalTrans_Asset
          DataField           #TransType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_GTAServiceCategory_IN
          ElementPosition     #1789569705
          HierarchyParent     #ServiceTax_IN
          DataSource          #LedgerJournalTrans
          DataField           #GTAServiceCategory_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_NatureOfAssessee_IN
          ElementPosition     #1073741822
          HierarchyParent     #WithholdingTax_TaxInformation_IN
          DataSource          #LedgerJournalTrans
          DataField           #NatureOfAssessee_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccountType
          AutoDeclaration     #Yes
          ElementPosition     #1717986912
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAccountType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccountType1
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAccountType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_PaymentStatus
          ElementPosition     #1956596207
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #PaymentStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_SettleVoucher
          AllowEdit           #No
          ElementPosition     #1717986916
          HierarchyParent     #GrpPostingProfile
          DataSource          #LedgerJournalTrans
          DataField           #SettleVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTrans_SettleVoucher1
          AllowEdit           #No
          ElementPosition     #1789569705
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #SettleVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #LedgerJournalTransPayment_BR_TaxWithholdEditStatus_BR
          ElementPosition     #2052039926
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #TaxWithholdEditStatus_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #PDCGroup_PDCStatus
          AllowEdit           #No
          ElementPosition     #1073741820
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          DataField           #PDCStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #AddButton
          ElementPosition     #1073741822
          HierarchyParent     #NewDeleteGroup1
          Text                #@sys60080
          ButtonDisplay       #Text & Image left
          NormalImage         #11421
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #buttonCopyPeriodicJournal
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS24590
          ConfigurationKey    #LedgerBasic
          ElementPosition     #966367638
          HierarchyParent     #ButtonGroup
          Text                #@SYS3868
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    Args    args;
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #    ledgerJournalTable = LedgerJournalTable::find(journalNum);
            #    args = new Args();
            #    args.record(ledgerJournalTable);
            #    LedgerJournalCopyPeriodic::main(args);
            #
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            #    ledgerJournalTrans_ds.research();
            #    super();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #DeleteButton
          ElementPosition     #1610612733
          HierarchyParent     #NewDeleteGroup
          Text                #@sys14425
          ButtonDisplay       #Text & Image left
          NormalImage         #10121
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #NewButton
          ElementPosition     #1073741822
          HierarchyParent     #NewDeleteGroup
          ButtonDisplay       #Text & Image left
          NormalImage         #11045
          ImageLocation       #EmbeddedResource
          Primary             #Yes
          Command             #260
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMMANDBUTTON
        PROPERTIES
          Name                #RemoveButton
          ElementPosition     #1610612733
          HierarchyParent     #NewDeleteGroup1
          Text                #@sys26394
          ButtonDisplay       #Text & Image left
          NormalImage         #11438
          ImageLocation       #EmbeddedResource
          SaveRecord          #No
          Primary             #Yes
          Command             #2832
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DepreciationStartDate
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #AssetTab
          DataSource          #LedgerJournalTrans_Asset
          DataField           #DepreciationStartDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #DocumentDate
          ElementPosition     #1610612733
          HierarchyParent     #GrpDocument
          DataSource          #LedgerJournalTrans
          DataField           #DocumentDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #GroupDocument_TaxInvoiceReceiptDate_TH
          ElementPosition     #613566756
          HierarchyParent     #GroupDocument_TH
          Label               #@SYS4082745
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #TaxInvoiceReceiptDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #GrpDocument_TaxInvoiceReceiptDate_TH
          ElementPosition     #613566756
          HierarchyParent     #GrpDocument_TH
          Label               #@SYS4082745
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #TaxInvoiceReceiptDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Due
          ElementPosition     #1431655764
          HierarchyParent     #GrpDue
          DataSource          #LedgerJournalTrans
          DataField           #Due
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_LoadingDate
          ElementPosition     #1431655764
          HierarchyParent     #Cust
          DataSource          #LedgerJournalTrans
          DataField           #LoadingDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TransDate
          AutoDeclaration     #Yes
          ElementPosition     #572662304
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #TransDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_TransDate1
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #Identification
          DataSource          #LedgerJournalTrans
          DataField           #TransDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PDCGroup_DateReceived
          ElementPosition     #644245092
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          DataField           #DateReceived
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #PDCGroup_MaturityDate
          ElementPosition     #429496728
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          DataField           #MaturityDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INTEDIT
        PROPERTIES
          Name                #BankLCLineNum
          ConfigurationKey    #BankDocument
          ElementPosition     #1610612733
          HierarchyParent     #BankLCExportGroup
          DataSource          #LedgerJournalTrans
          DataMethod          #displayBankLCLineNum
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    ledgerJournalTrans_ds.jumpRefBankLC();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AccountDimension
          AutoDeclaration     #Yes
          ElementPosition     #858993458
          HierarchyParent     #FinancialDimension
          MenuItemName        #LedgerJourTransDimLedgerJourTrnCstPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    ledgerJournalEngine.openAccountFinancialDimensionForm(ledgerJournalTrans, accountDimension.menuItemType(), accountDimension.menuItemName());
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AdvanceInvoiceLink_CZ
          AutoDeclaration     #Yes
          ElementPosition     #2147017612
          HierarchyParent     #buttonFunctions
          MenuItemName        #CzCustAdvanceInvoiceLink
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #BankCustPaymProposalSpec
          CountryRegionCodes  #NO
          ElementPosition     #1789569705
          HierarchyParent     #buttonPaymentProposal
          MenuItemName        #BankCustPaymProposalSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #btnPaymFeeInquery
          ElementPosition     #1835007993
          HierarchyParent     #Inquiries
          MenuItemName        #PaymFeeINquery
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonBalanceControl
          AutoDeclaration     #Yes
          ElementPosition     #1310719995
          HierarchyParent     #Inquiries
          MenuItemName        #LedgerBalanceControlLdgrJourTrnCustPaym
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonCreatePayment
          AutoDeclaration     #Yes
          ElementPosition     #732096697
          HierarchyParent     #buttonFunctions
          MenuItemType        #Action
          MenuItemName        #CustSumForPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    boolean ret = true;
            #
            #    ledgerJournalEngine.clearVoucher();
            #
            #    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]))
            #    {
            #        ret = CustVendPaymAbroad_NO::checkForeignCustPaym(ledgerJournalTable.JournalNum);
            #    }
            #
            #    ret = ret && CustVendNACHAIATInfoTable_US::checkValuesIATpaymRecords(ledgerJournalTable.JournalNum);
            #
            #    if (ret)
            #    {
            #        super();
            #
            #        if(ledgerJournalTrans.parmLedgerDimension())
            #        {
            #            postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #            if (postingResults_Client.errorInJournal())
            #            {
            #                errorExist.visible(true);
            #            }
            #            ledgerJournalTrans_ds.research();
            #            ledgerJournalTrans_ds.active();
            #        }
            #    }
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonDeleteTransactions
          AutoDeclaration     #Yes
          ElementPosition     #1560687806
          HierarchyParent     #buttonFunctions
          MenuItemType        #Action
          MenuItemName        #LedgerJourDelTransLJTransCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #    super();
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            #    ledgerJournalTrans_ds.research();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonDepositSlip
          AutoDeclaration     #Yes
          ElementPosition     #1024935376
          HierarchyParent     #buttonFunctions
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #BankDepositSlip
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #
            #    super();
            #    ledgerJournalTrans_ds.research();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #buttonVoucherTrans
          AutoDeclaration     #Yes
          ElementPosition     #786431997
          HierarchyParent     #Inquiries
          SaveRecord          #No
          DataSource          #LedgerJournalTrans
          MenuItemName        #LedgerTransVoucher1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ButtonWithholdTax_IN
          ElementPosition     #1431655764
          HierarchyParent     #TaxWithhold_IN
          Text                #@SYS33817
          DataSource          #LedgerJournalTrans
          MenuItemName        #TaxWithholdTmpWorkTrans_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <GIN>
            #void  clicked()
            #{
            #    if (!ledgerJournalTable.Posted)
            #    {
            #        TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            #    }
            #    else
            #    {
            #        TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), null, element);
            #    }
            #}
            #// </GIN>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CashReport
          ElementPosition     #1054219236
          HierarchyParent     #Print
          ShowShortCut        #No
          MenuItemType        #Output
          MenuItemName        #LedgerJournalCashReport
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CheckJournal
          ElementPosition     #1073741822
          HierarchyParent     #buttonCheckJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourChkLJTransCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #
            #    super();
            #
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CheckVoucher
          ElementPosition     #1610612733
          HierarchyParent     #buttonCheckJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourChk1LJTransCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #
            #    super();
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustEgiroSegmentTrans
          ElementPosition     #1610612730
          HierarchyParent     #ButtonGroup
          MenuItemName        #CustEgiroSegmentTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustInpayment
          AutoDeclaration     #Yes
          ElementPosition     #1755354351
          HierarchyParent     #buttonFunctions
          MenuItemType        #Action
          MenuItemName        #CustInpayment
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    ledgerJournalEngine.clearVoucher();
            #
            #    super();
            #
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.active();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustPaymEditingButton
          AutoDeclaration     #Yes
          Enabled             #No
          ElementPosition     #214748364
          HierarchyParent     #ButtonGroup
          DataSource          #LedgerJournalTrans
          MenuItemName        #CustPaymEditing
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    ;
            #
            #    super();
            #
            #    element.disableSettlement();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #custPaymentExecDate_BE
          AutoDeclaration     #Yes
          ElementPosition     #1950020896
          HierarchyParent     #buttonFunctions
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #custPaymentExecDate_BE
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustPaymentJournal_NA
          ElementPosition     #1581328854
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #CustPaymentJournal_NA
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustPaymProposalCreate
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #buttonPaymentProposal
          MenuItemType        #Action
          MenuItemName        #CustPaymProposalCreate
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    boolean allowEditSave;
            #    boolean allowCreateSave;
            #    boolean allowDeleteSave;
            #    ;
            #
            #    // clear unused vouchers prior to invoking creation process
            #    ledgerJournalEngine.clearVoucher();
            #
            #    allowEditSave   = ledgerJournalTrans_ds.allowEdit();
            #    allowCreateSave = ledgerJournalTrans_ds.allowCreate();
            #    allowDeleteSave = ledgerJournalTrans_ds.allowDelete();
            #
            #    ledgerJournalTrans_ds.allowEdit(false);
            #    ledgerJournalTrans_ds.allowCreate(false);
            #    ledgerJournalTrans_ds.allowDelete(false);
            #
            #    super();
            #
            #    ledgerJournalTrans_ds.allowEdit(allowEditSave);
            #    ledgerJournalTrans_ds.allowCreate(allowCreateSave);
            #    ledgerJournalTrans_ds.allowDelete(allowDeleteSave);
            #
            #    journalFormTrans.researchJournalLines();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustPaymProposalEdit
          ElementPosition     #1431655764
          HierarchyParent     #buttonPaymentProposal
          MultiSelect         #Yes
          MenuItemName        #CustPaymProposalEdit
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #
            #    ledgerJournalEngine.lock();
            #
            #    CustVendPaymProposalEditForm::newLedgerJournalTrans(ledgerJournalTrans).run();
            #
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTrans.ledgerJournalTable(),true);
            #    ledgerJournalEngine.unlock();
            #    ledgerJournalTrans_ds.last();
            #    ledgerJournalTrans_ds.write();
            #    ledgerJournalTrans_ds.active();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustShowSpecifikation
          ElementPosition     #1048575996
          HierarchyParent     #Inquiries
          DataSource          #LedgerJournalTrans
          MenuItemName        #CustShowSpecifikation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendNACHAIATInfoTable_US
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #Group
          ButtonDisplay       #Image only
          NormalImage         #12084
          ImageLocation       #EmbeddedResource
          DataSource          #LedgerJournalTrans
          MenuItemName        #CustVendNACHAIATInfoTable_US
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendOutPaymReport_RU
          AutoDeclaration     #Yes
          ElementPosition     #2144687443
          HierarchyParent     #Print
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #CustVendOutPaymReport_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymProposal
          ElementPosition     #1757032060
          HierarchyParent     #Print
          DataSource          #LedgerJournalTrans
          MenuItemType        #Output
          MenuItemName        #CustVendPaymProposal
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #// <GTH>
            #void clicked()
            #{
            #    CustTrans               custTrans;
            #    CustTransExtensionTH    custTransExtensionTH;
            #    Args                    args = new Args();
            #
            #    args.caller(this);
            #    args.record(ledgerJournalTrans);
            #
            #    if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
            #    {
            #        custTrans               = CustTrans::findVoucherDate(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate);
            #        custTransExtensionTH    = custTrans.custTransExtensionTH();
            #        if (custTransExtensionTH.ReceiptId || custTrans.DocumentNum)
            #        {
            #            if (custTransExtensionTH.ReceiptId && custTrans.DocumentNum)
            #            {
            #                args.parmEnumType(InvoiceTaxType::Both);
            #            }
            #            else if (custTransExtensionTH.ReceiptId)
            #            {
            #                args.parmEnumType(InvoiceTaxType::Realized);
            #            }
            #            else if (custTrans.DocumentNum)
            #            {
            #                args.parmEnumType(InvoiceTaxType::Unrealized);
            #            }
            #
            #            new MenuFunction(menuitemOutputStr(PaymReceiptTaxInv), MenuItemType::Output).run(args);
            #        }
            #        else
            #        {
            #            super();
            #        }
            #    }
            #    else
            #    {
            #        super();
            #    }
            #}
            #// <GTH>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymReconciliationDelete
          ElementPosition     #1610612731
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconDeleteCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymReconciliationDeleted
          ElementPosition     #1968526673
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconDeletedCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustVendPaymReconciliationSentDelete
          ElementPosition     #1789569702
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconSentDeleteCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CzAdvancePaymentProposal_Cust
          ElementPosition     #805306365
          HierarchyParent     #buttonPaymentProposal
          MenuItemType        #Action
          MenuItemName        #CzAdvancePaymentProposal_Cust
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CzTaxDocumentCreate_Cust
          AutoDeclaration     #Yes
          ElementPosition     #2146551578
          HierarchyParent     #buttonFunctions
          Text                #@GLS108299
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #CzTaxDocumentCreate_Cust
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #GAFInformation
          ElementPosition     #858993456
          HierarchyParent     #ButtonGroup
          MenuItemName        #TaxGSTEditTaxInformation_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #GAFInformation_MYButton
          ElementPosition     #1431655764
          HierarchyParent     #GAFInformation_MY
          DataSource          #CustVendPaymJournalFee
          MenuItemName        #TaxGSTEditTaxInformation_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #JounalDetails
          ElementPosition     #702812824
          HierarchyParent     #Print
          Text                #@SYS24010
          ShowShortCut        #No
          MenuItemType        #Output
          MenuItemName        #LedgerJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalPostTransfer
          ElementPosition     #1610612733
          HierarchyParent     #buttonPostJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourPostTrLJTransCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ledgerJournalEngine.clearVoucher();
            #
            #    try
            #    {
            #        super();
            #    }
            #    catch
            #    {
            #        // Swallow the exception because we want finally semantics
            #        curext(); // suppress compiler warning for empty compound statements
            #    }
            #
            #    // finally
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #
            #    ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalPreview
          AutoDeclaration     #Yes
          ElementPosition     #2002453930
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerJournalPreview
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalPrintOutInvoice_Cust
          AutoDeclaration     #Yes
          ElementPosition     #1405625648
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerJournalPrintOutInvoice_Cust
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalTransTxt
          AutoDeclaration     #Yes
          ElementPosition     #1366021261
          HierarchyParent     #buttonFunctions
          MenuItemName        #LedgerJourTrTxtLedgerJourTrCust
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #
            #    super();
            #    element.firstField();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerJournalVoucherPreview
          AutoDeclaration     #Yes
          ElementPosition     #2072172584
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerJournalVoucherPreview
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerTransPerJournal
          ElementPosition     #1229922442
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LedgerTransPerJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LvPaymentOrder
          ElementPosition     #351406412
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #LvPaymentOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkInvoiceLine
          AutoDeclaration     #Yes
          HelpText            #@SYS134239
          ElementPosition     #1717986912
          HierarchyParent     #ButtonGroup
          Text                #@SYS134078
          DataSource          #LedgerJournalTrans
          MenuItemName        #CustPaymEntryByLine
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    Args args;
            #    ;
            #
            #    args = new Args(formStr(LedgerJournalTransCustPaym));
            #    args.caller(element);
            #    args.parmObject(ledgerJournalEngine);
            #    args.record(ledgerJournalTrans);
            #
            #    new MenuFunction(menuitemDisplayStr(CustPaymEntryByLine), MenuItemType::Display).run(args);
            #
            #
            #
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Movements
          ElementPosition     #878516030
          HierarchyParent     #Print
          ShowShortCut        #No
          MenuItemType        #Output
          MenuItemName        #LedgerJournalAccountMovement
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #OffsetAccountDimension
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #FinancialDimension
          MenuItemName        #LedgerJourTrOffDimLedgerrJourTrnCstPay
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    ledgerJournalEngine.openOffsetAccountFinancialDimensionForm(ledgerJournalTrans, offsetAccountDimension.menuItemType(), offsetAccountDimension.menuItemName());
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymentControl
          ElementPosition     #1572863994
          HierarchyParent     #Inquiries
          MenuItemName        #LedgerPaymCntrlLedgerJourTransCust
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymentFeeAccountDimension
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #FinancialDimension
          DataSource          #CustVendPaymJournalFee
          MenuItemName        #LedgerJourTrPayFeeDimLedgerJourTrnCstPay
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #public void clicked()
            #{
            #    ledgerJournalEngine.openPaymFeeAccountFinancialDimensionForm(custVendPaymJournalFee, paymentFeeAccountDimension.menuItemType(), paymentFeeAccountDimension.menuItemName());
            #
            #    custVendPaymJournalFee.write();
            #    custVendPaymJournalFee_ds.reread();
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymentOrderCancel_LV
          ElementPosition     #527109618
          HierarchyParent     #Print
          MenuItemType        #Output
          MenuItemName        #PaymentOrderCancel_LV
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationConfirm
          AutoDeclaration     #Yes
          ElementPosition     #894784850
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconConfirmCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationNone
          AutoDeclaration     #Yes
          ElementPosition     #357913940
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconNoneCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    if (!element.checkSEPAPaymentReject())
            #    {
            #        return;
            #    }
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationRecieved
          AutoDeclaration     #Yes
          ElementPosition     #715827880
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconReceivedCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationReject
          ElementPosition     #1252698790
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconRejectCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    if (!element.checkSEPAPaymentReject())
            #    {
            #        return;
            #    }
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #
            #    // <GEERU>
            #    if (countryRegion_RU)
            #    {
            #        ledgerJournalEngine.refreshWhenPosted();
            #        journalFormTrans.enableButtonsActive();
            #        element.bookRefresh();
            #    }
            #
            #    if ((! countryRegion_RU)
            #        || (countryRegion_RU
            #        && ! ledgerJournalTrans.BankCurrencyTransferLog_RU
            #        && ! ledgerJournalTrans.existBankPaymentOrderJour_RU()))
            #    {
            #    // </GEERU>
            #        paymReconciliationNone.enabled(true);
            #        paymReconciliationConfirm.enabled(true);
            #        paymReconciliationRecieved.enabled(true);
            #        paymReconciliationSent.enabled(true);
            #    // <GEERU>
            #    }
            #    // </GEERU>
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PaymReconciliationSent
          AutoDeclaration     #Yes
          ElementPosition     #536870910
          HierarchyParent     #buttonPaymentReconciliation
          MenuItemType        #Action
          MenuItemName        #PaymReconSentCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    LedgerJournalTrans  findRecord;
            #
            #    findRecord.data(ledgerJournalTrans);
            #    super();
            #    ledgerJournalTrans_ds.research();
            #    ledgerJournalTrans_ds.findRecord(findRecord);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsRebatePayment
          ElementPosition     #2130706430
          HierarchyParent     #Inquiries
          DataSource          #LedgerJournalTrans
          MenuItemName        #PdsRebatePayment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PdsRebateTableBtn
          AutoDeclaration     #Yes
          ElementPosition     #2113929214
          HierarchyParent     #Inquiries
          DataSource          #LedgerJournalTrans
          MenuItemName        #PdsRebateTableDetails
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PostJournal
          ElementPosition     #1073741822
          HierarchyParent     #buttonPostJournal
          DataSource          #LedgerJournalTrans
          MenuItemType        #Action
          MenuItemName        #LedgerJourPostLJTransCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ledgerJournalEngine.clearVoucher();
            #    // If the custPDCregister record is associated with ledgerJournalTrans,
            #    // it needs to be saved before posting
            #    if(postDatedCheckEnabled)
            #    {
            #        custPDCRegister_ds.write();
            #    }
            #
            #    try
            #    {
            #        super();
            #    }
            #    catch
            #    {
            #        // Swallow the exception because we want finally semantics
            #        curext(); // suppress compiler warning for empty compound statements
            #    }
            #
            #    // finally
            #    postingResults_Client = ledgerJournalEngine.getPostingResults_Client();
            #
            #    if (postingResults_Client.errorInJournal())
            #    {
            #        errorExist.visible(true);
            #    }
            #    // Removed call to CustVendPDCManager::postDatedCheckPost because it has been moved to posting code
            #
            #    ledgerJournalEngine.refreshWhenPosted();
            #    journalFormTrans.enableButtonsActive();
            #    element.bookRefresh();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TAMDeductionCreate
          AutoDeclaration     #Yes
          ElementPosition     #2040109458
          HierarchyParent     #ButtonGroup
          MenuItemName        #TAMDeductionCreate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxRegisterBalance_IN
          CountryRegionCodes  #IN
          ElementPosition     #524287998
          HierarchyParent     #Inquiries
          MenuItemName        #TaxRegisterBalance_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxTransSource
          AutoDeclaration     #Yes
          ElementPosition     #751619274
          HierarchyParent     #ButtonGroup
          MenuItemName        #TaxTransSourceLedgerJournalTrnCustPaym
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    ;
            #    if (!ledgerJournalTable.Posted)
            #    {
            #        Tax::showTaxes(menuitemDisplayStr(TaxTmpWorkLedgerJournalTrnCustPaym), element.getShowTax(), ledgerJournalTrans, element);
            #    }
            #    else
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Amount_amountCur
          ElementPosition     #1610612733
          HierarchyParent     #Amount
          DataSource          #LedgerJournalTrans
          DataMethod          #amountCurPdc
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #AmountCurCredit
          AutoDeclaration     #Yes
          ElementPosition     #644245092
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurCredit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #AmountCurDebit
          AutoDeclaration     #Yes
          ElementPosition     #429496728
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurDebit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #crossrate
          HelpText            #@SYS53165
          ElementPosition     #1610612733
          HierarchyParent     #Description
          Label               #@SYS53164
          DataSource          #LedgerJournalTrans
          DataMethod          #crossrate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #CustPaymJournalFee_FeeValue
          ElementPosition     #715827882
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #FeeValue
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #fieldExchRate
          AutoDeclaration     #Yes
          NeededPermission    #Update
          HelpText            #@SYS324259
          ElementPosition     #1288490184
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataMethod          #editExchRate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #fieldExchRateSecond
          AutoDeclaration     #Yes
          NeededPermission    #Manual
          HelpText            #@SYS324259
          ElementPosition     #1932735276
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataMethod          #editExchRateSecond
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #JournalBalance
          Enabled             #No
          ElementPosition     #1073741822
          HierarchyParent     #TotalBalance
          Label               #@SYS24010
          DataSource          #LedgerJournalTrans
          DataMethod          #JournalBalance
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #JournalCredit
          Enabled             #No
          ElementPosition     #1073741822
          HierarchyParent     #CreditBalance
          Label               #@SYS24010
          DataSource          #LedgerJournalTrans
          DataMethod          #JournalCredit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #JournalDebit
          Enabled             #No
          ElementPosition     #1073741822
          HierarchyParent     #DebitBalance
          Label               #@SYS24010
          DataSource          #LedgerJournalTrans
          DataMethod          #JournalDebit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AmountCurCredit
          AutoDeclaration     #Yes
          ElementPosition     #1431655760
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurCredit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #    MCRCustPaymTable custPaymTable;
            #
            #    ret = super();
            #
            #    if (ret
            #        && mcrAllowPayment)
            #    {
            #        ttsbegin;
            #        custPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(ledgerJournalTrans.RecId,
            #                                                        ledgerJournalTrans.TableId, true);
            #        if (custPaymTable)
            #        {
            #            custPaymTable.Amount = abs(ledgerJournalTrans.amount());
            #            custPaymTable.update();
            #        }
            #        ttscommit;
            #    }
            #
            #    return ret;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AmountCurDebit
          AutoDeclaration     #Yes
          ElementPosition     #1288490184
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #AmountCurDebit
        ENDPROPERTIES
        
        METHODS
          SOURCE #gotFocus
            #void gotFocus()
            #{
            #
            #    super();
            #    element.setDebCredProposal(true);
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AssessableValue_IN
          AutoDeclaration     #Yes
          ElementPosition     #1503238548
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataField           #AssessableValue_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_MaximumRetailPrice_IN
          AutoDeclaration     #Yes
          ElementPosition     #1717986912
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataField           #MaximumRetailPrice_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #Tax_TaxBase_W
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1789569704
          HierarchyParent     #Tax
          DataSource          #LedgerJournalTrans
          DataField           #TaxBase_W
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VoucherCredit
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #CreditBalance
          Label               #@SYS11131
          DataSource          #LedgerJournalTrans
          DataMethod          #VoucherCredit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VoucherDebit
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #DebitBalance
          Label               #@SYS11131
          DataSource          #LedgerJournalTrans
          DataMethod          #VoucherDebit
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VoucherTotal
          Enabled             #No
          ElementPosition     #1610612733
          HierarchyParent     #TotalBalance
          Label               #@SYS11131
          DataSource          #LedgerJournalTrans
          DataMethod          #VoucherTotal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #CustPaymJournalFee_CustAccount
          AutoDeclaration     #Yes
          ElementPosition     #1908874352
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimPaymentFeeAccountController.jumpRef();
            #}
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimPaymentFeeAccountController.loadAutoCompleteData(_e);
            #}
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimPaymentFeeAccountController.parmControl(this);
            #    dimPaymentFeeAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimPaymentFeeAccountController.parmCurrency(custVendPaymJournalFee.FeeCurrency);
            #    dimPaymentFeeAccountController.parmDate(ledgerJournalTrans.TransDate);
            #
            #    dimPaymentFeeAccountController.loadSegments();
            #    currentPaymentFeeMainAccountId = dimPaymentFeeAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #}
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Ledger)
            #    {
            #        super();
            #    }
            #    else if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust)
            #    {
            #        CustTable::lookupCustomer(this);
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimPaymentFeeAccountController.segmentValueChanged(_e);
            #    currentPaymentFeeMainAccountId = ledgerJournalEngine.onPrimaryAccountSegmentChanged(dimPaymentFeeAccountController, currentPaymentFeeMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimPaymentFeeAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_AccountNum
          AutoDeclaration     #Yes
          ElementPosition     #858993456
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimAccountController.parmControl(this);
            #    dimAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimAccountController.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            #    dimAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimAccountController.loadSegments();
            #
            #    currentMainAccountId = dimAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #}
            #
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.segmentValueChanged(_e);
            #    currentMainAccountId = ledgerJournalEngine.onPrimaryAccountSegmentChanged(dimAccountController, currentMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_AccountNum1
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          ReferenceField      #LedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimAccountController.parmControl(this);
            #    dimAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimAccountController.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            #    dimAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimAccountController.loadSegments();
            #
            #    currentMainAccountId = dimAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #}
            #
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum1, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimAccountController.segmentValueChanged(_e);
            #    currentMainAccountId = ledgerJournalEngine.onPrimaryAccountSegmentChanged(dimAccountController, currentMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccount
          AutoDeclaration     #Yes
          ElementPosition     #1861152488
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          ReferenceField      #OffsetLedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimOffsetAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimOffsetAccountController.parmControl(this);
            #    dimOffsetAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimOffsetAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimOffsetAccountController.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            #    dimOffsetAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimOffsetAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimOffsetAccountController.loadSegments();
            #
            #    currentOffsetMainAccountId = dimOffsetAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #
            #    // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            #    if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            #    {
            #        dimOffsetAccountController.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
            #    }
            #}
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (!ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.segmentValueChanged(_e);
            #    currentOffsetMainAccountId = ledgerJournalEngine.onOffsetAccountSegmentChanged(dimOffsetAccountController, currentOffsetMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimOffsetAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEGMENTEDENTRY
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccount1
          AutoDeclaration     #Yes
          ElementPosition     #954437176
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          ReferenceField      #OffsetLedgerDimension
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    dimOffsetAccountController.jumpRef();
            #}
            #
          ENDSOURCE
          SOURCE #loadAutoCompleteData
            #public void loadAutoCompleteData(LoadAutoCompleteDataEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.loadAutoCompleteData(_e);
            #}
            #
          ENDSOURCE
          SOURCE #loadSegments
            #public void loadSegments()
            #{
            #    super();
            #
            #    dimOffsetAccountController.parmControl(this);
            #    dimOffsetAccountController.parmJournalName(ledgerJournalTable.JournalName);
            #    dimOffsetAccountController.parmCurrency(ledgerJournalTrans.CurrencyCode);
            #    dimOffsetAccountController.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            #    dimOffsetAccountController.parmDate(ledgerJournalTrans.TransDate);
            #    dimOffsetAccountController.parmTaxCode(ledgerJournalTrans.TaxCode);
            #
            #    dimOffsetAccountController.loadSegments();
            #
            #    currentMainAccountId = dimOffsetAccountController.getValue(DimensionAttribute::getMainAccountDimensionAttribute());
            #
            #    // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            #    if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            #    {
            #        dimOffsetAccountController.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
            #    }
            #}
          ENDSOURCE
          SOURCE #lookup
            #public void lookup()
            #{
            #    if (!ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount1, ledgerJournalTrans))
            #    {
            #        super();
            #    }
            #}
          ENDSOURCE
          SOURCE #segmentValueChanged
            #public void segmentValueChanged(SegmentValueChangedEventArgs _e)
            #{
            #    super(_e);
            #
            #    dimOffsetAccountController.segmentValueChanged(_e);
            #    currentOffsetMainAccountId = ledgerJournalEngine.onOffsetAccountSegmentChanged(dimOffsetAccountController, currentOffsetMainAccountId, ledgerJournalTrans);
            #}
            #
          ENDSOURCE
          SOURCE #validate
            #public boolean validate()
            #{
            #    boolean isValid;
            #
            #    isValid = super();
            #    isValid = dimOffsetAccountController.validate() && isValid;
            #
            #    return isValid;
            #}
            #
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #CzSeparator_TaxDocument
          ElementPosition     #2146085544
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator
          ElementPosition     #1073741823
          HierarchyParent     #buttonPaymentProposal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator1
          ElementPosition     #2144687443
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator2
          ElementPosition     #585677358
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator3
          ElementPosition     #1171354716
          HierarchyParent     #buttonFunctions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator4
          AllowEdit           #No
          CountryRegionCodes  #NO
          ElementPosition     #1431655760
          HierarchyParent     #buttonPaymentReconciliation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator4_RU
          CountryRegionCodes  #RU
          ConfigurationKey    #Bank
          ElementPosition     #2141891240
          HierarchyParent     #Print
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #SeparatorRebate
          ConfigurationKey    #PdsRebate
          ElementPosition     #2097151998
          HierarchyParent     #Inquiries
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #accountAgreementDocumentTitle_RU
          CountryRegionCodes  #RU
          ElementPosition     #1908874352
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataMethod          #accountAgreementDocumentTitle_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #AccountName
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #GrpNames
          DataSource          #LedgerJournalTrans
          DataMethod          #AccountName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Amount_currencyCode
          ElementPosition     #1073741822
          HierarchyParent     #Amount
          DataSource          #LedgerJournalTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ApprovedBy1
          AllowEdit           #No
          HelpText            #@SYS25659
          ConfigurationKey    #LedgerBasic
          ElementPosition     #920350134
          HierarchyParent     #CurrentJournal
          DataSource          #LedgerJournalTrans
          DataMethod          #ApprovedBy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankDepositNum
          ElementPosition     #1610612733
          HierarchyParent     #Depositslip
          DataSource          #LedgerJournalTrans
          DataField           #BankDepositNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankLCNumber
          ConfigurationKey    #BankDocument
          ElementPosition     #1073741822
          HierarchyParent     #BankLCExportGroup
          DataSource          #LedgerJournalTrans
          DataMethod          #displayBankLCNumber
        ENDPROPERTIES
        
        METHODS
          SOURCE #jumpRef
            #public void jumpRef()
            #{
            #    ledgerJournalTrans_ds.jumpRefBankLC();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #BankTransType
          ElementPosition     #858993458
          HierarchyParent     #GrpBank
          DataSource          #LedgerJournalTrans
          DataField           #BankTransType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CompanyAddress
          ElementPosition     #1288490187
          HierarchyParent     #CompanyInfo
          Label               #@SYS36203
          DataSource          #TaxInformation_IN
          DataMethod          #logisticsAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CurrencyCode
          ElementPosition     #858993456
          HierarchyParent     #Currency
          DataSource          #LedgerJournalTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustEPRemitInfo_BR_BankFolder
          ElementPosition     #1840700268
          HierarchyParent     #AddRemittanceInfo
          DataSource          #CustEPRemitInfo_BR
          DataField           #BankFolder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustEPRemitInfo_BR_DocumentType
          ElementPosition     #920350134
          HierarchyParent     #AddRemittanceInfo
          DataSource          #CustEPRemitInfo_BR
          DataField           #DocumentType
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustEPRemitInfo_BR_Instruction_1
          ElementPosition     #1227133512
          HierarchyParent     #AddRemittanceInfo
          DataSource          #CustEPRemitInfo_BR
          DataField           #Instruction_1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustEPRemitInfo_BR_Instruction_2
          ElementPosition     #1533916890
          HierarchyParent     #AddRemittanceInfo
          DataSource          #CustEPRemitInfo_BR
          DataField           #Instruction_2
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Customs_IN_M_displayIECTaxRegistration_IN
          AllowEdit           #No
          HelpText            #@GLS5159
          ElementPosition     #613566756
          HierarchyParent     #Customs_IN
          Label               #@GLS5100
          DataSource          #TaxInformation_IN
          DataMethod          #logisticsAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Customs_IN_M_displayIECTaxRegistration_IN1
          AllowEdit           #No
          HelpText            #@GLS5159
          ElementPosition     #920350134
          HierarchyParent     #Customs_IN
          Label               #@GLS5100
          DataSource          #LedgerJournalTrans
          DataMethod          #displayAddress_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustPaymJournalFee_FeeCurrency
          ElementPosition     #954437176
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #FeeCurrency
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustPaymJournalFee_FeeId
          ElementPosition     #477218588
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #FeeId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustPaymJournalFee_TaxGroup
          ElementPosition     #1193046470
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #CustPaymJournalFee_TaxItemGroup
          ElementPosition     #1431655764
          HierarchyParent     #GridPaymFee
          DataSource          #CustVendPaymJournalFee
          DataField           #TaxItemGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #DocumentNum
          ElementPosition     #1073741822
          HierarchyParent     #GrpDocument
          DataSource          #LedgerJournalTrans
          DataField           #DocumentNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ErrorLog
          ElementPosition     #1840700268
          HierarchyParent     #CurrentJournal
          MultiLine           #Yes
          Label               #@SYS22915
          DataSource          #LedgerJournalTrans
          DataMethod          #ErrorLog
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #exchRateTxt
          ElementPosition     #1073741822
          HierarchyParent     #Description
          DisplayLength       #15
          DataSource          #LedgerJournalTrans
          DataMethod          #exchRateTxt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #GroupDocument_RealVendName_TH
          HelpText            #@SYS4082725
          ElementPosition     #920350134
          HierarchyParent     #GroupDocument_TH
          Label               #@SYS4082724
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #RealVendName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #GrpDocument_RealVendName_TH
          HelpText            #@SYS4082725
          ElementPosition     #920350134
          HierarchyParent     #GrpDocument_TH
          Label               #@SYS4082724
          DataSource          #LedgerJournalTransExtensionTH
          DataField           #RealVendName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AccountAgreementId_RU
          ElementPosition     #1670265058
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #AccountAgreementId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AgreementCompany_RU
          ElementPosition     #1431655764
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #AgreementCompany_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_AssetBookId
          ElementPosition     #1288490187
          HierarchyParent     #AssetTab
          DataSource          #LedgerJournalTrans_Asset
          DataField           #BookId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Company
          AutoDeclaration     #Yes
          ElementPosition     #477218588
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #Company
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_CompanyAccount
          AutoDeclaration     #Yes
          HelpText            #@SYS114383
          ElementPosition     #715827880
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #Company
          Mandatory           #Yes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_CurrencyCode1
          ElementPosition     #1431655764
          HierarchyParent     #GrpCurrency1
          DataSource          #LedgerJournalTrans
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_EPCompanyDocument_BR
          AllowEdit           #No
          ElementPosition     #613566756
          HierarchyParent     #AddRemittanceInfo
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #EPCompanyDocument_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_EPPaymentType_BR
          AllowEdit           #No
          ElementPosition     #715827880
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #EPPaymentType_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_EPPaymentWay_BR
          AllowEdit           #No
          ElementPosition     #894784850
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTransPayment_BR
          DataField           #EPPaymentWay_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_ForeignCompany
          AllowEdit           #No
          ElementPosition     #1073741822
          HierarchyParent     #InterCompany
          DataSource          #LedgerJournalTrans
          DataField           #ForeignCompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_ForeignVoucher
          AllowEdit           #No
          ElementPosition     #1610612733
          HierarchyParent     #InterCompany
          DataSource          #LedgerJournalTrans
          DataField           #ForeignVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_MarkedInvoice
          AutoDeclaration     #Yes
          ElementPosition     #1002159032
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #MarkedInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAccountAgreementId_RU
          ElementPosition     #1670265058
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAccountAgreementId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetAgreementCompany_RU
          ElementPosition     #1431655764
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetAgreementCompany_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetCompany
          ElementPosition     #477218588
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetCompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetPostingProfile_RU
          ElementPosition     #1288490187
          HierarchyParent     #GrpPostingProfile
          DataSource          #LedgerJournalTrans
          DataField           #OffsetPostingProfile_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_OffsetTxt
          ElementPosition     #1193046470
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataField           #OffsetTxt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymentNotes
          ElementPosition     #1431655760
          HierarchyParent     #GrpPayment
          MultiLine           #Yes
          DataSource          #LedgerJournalTrans
          DataField           #PaymentNotes
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymentReference
          ElementPosition     #1431655764
          HierarchyParent     #GrpPayment1
          DataSource          #LedgerJournalTrans
          DataField           #PaymReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymId
          ElementPosition     #1252698790
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #PaymId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymMode
          ElementPosition     #357913940
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #PaymMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymMode1
          ElementPosition     #1073741822
          HierarchyParent     #Group
          DataSource          #LedgerJournalTrans
          DataField           #PaymMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymPurpose_LT
          ElementPosition     #1789569700
          HierarchyParent     #GrpPayment
          DataSource          #LedgerJournalTrans
          DataField           #PaymPurpose_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymSpec
          ElementPosition     #536870910
          HierarchyParent     #GrpPayment
          LookupButton        #Always
          DataSource          #LedgerJournalTrans
          DataField           #PaymSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PaymSpec1
          ElementPosition     #1073741823
          HierarchyParent     #GrpPayment1
          LookupButton        #Always
          DataSource          #LedgerJournalTrans
          DataField           #PaymSpec
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_PostingProfile
          ElementPosition     #858993458
          HierarchyParent     #GrpPostingProfile
          DataSource          #LedgerJournalTrans
          DataField           #PostingProfile
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_ServiceCodeTable_IN_ServiceCode
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          ElementPosition     #1073741823
          HierarchyParent     #ServiceTax_IN
          DataSource          #LedgerJournalTrans
          DataMethod          #editServiceCode_IN
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #// <GIN>
            #public void lookup()
            #{
            #    ledgerJournalTrans.lookupServiceCode_IN(this);
            #}
            #// </GIN>
          ENDSOURCE
          SOURCE #validate
            #// <GIN>
            #public boolean validate()
            #{
            #    boolean isValid = super();
            #
            #    if (isValid)
            #    {
            #        isValid = ledgerJournalTrans.checkServiceCode_IN(ledgerJournalTrans_ServiceCodeTable_IN_ServiceCode.text());
            #    }
            #
            #    return isValid;
            #}
            #// </GIN>
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Txt
          ElementPosition     #1145324608
          HierarchyParent     #overviewGrid
          DataSource          #LedgerJournalTrans
          DataField           #Txt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Txt1
          ElementPosition     #1193046470
          HierarchyParent     #Account
          DataSource          #LedgerJournalTrans
          DataField           #Txt
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher
          AutoDeclaration     #Yes
          ElementPosition     #330382098
          HierarchyParent     #GroupHeader
          DataSource          #LedgerJournalTrans
          DataField           #Voucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher_CN
          ElementPosition     #495573147
          HierarchyParent     #GroupHeader
          DataSource          #LedgerJournalTrans
          DataField           #Voucher_CN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher_CN1
          ElementPosition     #1431655764
          HierarchyParent     #Identification
          DataSource          #LedgerJournalTrans
          DataField           #Voucher_CN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTrans_Voucher1
          AutoDeclaration     #Yes
          ElementPosition     #715827882
          HierarchyParent     #Identification
          DataSource          #LedgerJournalTrans
          DataField           #Voucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #LedgerJournalTransSymbol_SpecificSymbol
          ElementPosition     #1610612733
          HierarchyParent     #Symbol
          DataSource          #LedgerJournalTransSymbol
          DataField           #SpecificSymbol
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #offsetAccountAgreementDocumentTitle_RU
          CountryRegionCodes  #RU
          ElementPosition     #1908874352
          HierarchyParent     #OffsetAccountInfo
          DataSource          #LedgerJournalTrans
          DataMethod          #offsetAccountAgreementDocumentTitle_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #OffsetAccountName
          AllowEdit           #No
          ElementPosition     #1610612733
          HierarchyParent     #GrpNames
          DataSource          #LedgerJournalTrans
          DataMethod          #OffsetAccountName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PaymentReference
          ElementPosition     #1288490187
          HierarchyParent     #GrpBank
          DataSource          #LedgerJournalTrans
          DataField           #PaymReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PDCGroup_CheckNumber
          ElementPosition     #858993456
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          DataField           #CheckNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PDCGroup_ReasonForStop
          ElementPosition     #1717986912
          HierarchyParent     #PDCGroup
          DataSource          #CustPDCRegister
          DataField           #ReasonForStop
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #RejectedBy
          AllowEdit           #No
          HelpText            #@SYS25658
          ConfigurationKey    #LedgerBasic
          ElementPosition     #1227133512
          HierarchyParent     #CurrentJournal
          Label               #@SYS22205
          DataSource          #LedgerJournalTrans
          DataMethod          #RejectedBy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Replacement_Comments
          AutoDeclaration     #Yes
          ElementPosition     #1288490187
          HierarchyParent     #Replacement
          DataSource          #CustPDCRegister
          DataField           #Comments
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Replacement_OriginalCheck
          AutoDeclaration     #Yes
          ElementPosition     #1717986916
          HierarchyParent     #Replacement
          DataSource          #CustPDCRegister
          DataField           #OriginalCheck
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ReportedAsReadyBy
          AllowEdit           #No
          HelpText            #@SYS25657
          ConfigurationKey    #LedgerBasic
          ElementPosition     #613566756
          HierarchyParent     #CurrentJournal
          Label               #@SYS22056
          DataSource          #LedgerJournalTrans
          DataMethod          #ReportedAsReadyBy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #ServiceCodeTable_IN_ServiceAccountingCode
          ElementPosition     #1431655764
          HierarchyParent     #ServiceTax_IN
          DataSource          #ServiceCodeTable_IN
          DataField           #ServiceAccountingCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxCode
          Visible             #No
          ElementPosition     #596523234
          HierarchyParent     #Tax
          DataSource          #LedgerJournalTrans
          DataField           #TaxCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    //STF_ivaValidation DEV::BLB
            #    LedgerJournalTrans.STF_taxAmountJournal = LedgerJournalTrans.taxAmountJournal();
            #    //STF_ivaValidation DEV::BLB
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxGroup
          ElementPosition     #894784851
          HierarchyParent     #Tax
          DataSource          #LedgerJournalTrans
          DataField           #TaxGroup
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    //STF_ivaValidation DEV::BLB
            #    LedgerJournalTrans.STF_taxAmountJournal = LedgerJournalTrans.taxAmountJournal();
            #    //STF_ivaValidation DEV::BLB
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #TaxItemGroup
          ElementPosition     #1193046468
          HierarchyParent     #Tax
          DataSource          #LedgerJournalTrans
          DataField           #TaxItemGroup
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #    //STF_ivaValidation DEV::BLB
            #    LedgerJournalTrans.STF_taxAmountJournal = LedgerJournalTrans.taxAmountJournal();
            #    //STF_ivaValidation DEV::BLB
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #WithholdingTax_IN_TaxWithholdGroup
          Visible             #No
          ElementPosition     #858993458
          HierarchyParent     #WithholdingTax_IN
          DataSource          #LedgerJournalTrans
          DataField           #TaxWithholdGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #WithHoldingTax_TaxWithholdGroup
          ElementPosition     #1431655764
          HierarchyParent     #WithHoldingTax
          DataSource          #LedgerJournalTrans
          DataField           #TaxWithholdGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #PostedDateTime
          AllowEdit           #No
          HelpText            #@SYS22450
          ElementPosition     #1533916890
          HierarchyParent     #CurrentJournal
          DataSource          #LedgerJournalTrans
          DataMethod          #PostedDateTime
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #ErrorExist
          AutoDeclaration     #Yes
          Visible             #No
          AllowEdit           #No
          Width               #14
          Height              #14
          Enabled             #No
          Skip                #Yes
          AlignControl        #No
          ElementPosition     #429496728
          HierarchyParent     #overviewGrid
          Imagemode           #Size to fit
          ShowLabel           #No
          DataSource          #LedgerJournalTrans
          DataMethod          #ErrorExist
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL WINDOW
        PROPERTIES
          Name                #ErrorPaym
          AutoDeclaration     #Yes
          AllowEdit           #No
          CountryRegionCodes  #NO
          Width               #14
          Height              #14
          Enabled             #No
          Skip                #Yes
          AlignControl        #No
          ElementPosition     #286331152
          HierarchyParent     #overviewGrid
          Imagemode           #Size to fit
          ShowLabel           #No
          DataSource          #LedgerJournalTrans
          DataMethod          #errorPaym
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
  ASSOCIATEDFORM #CustOpenInvoicesLookup
    PROPERTIES
      Form                #CustOpenInvoicesLookup
      AccessLevel         #Read
      SystemManaged       #No
      ManagedBy           #Manual
    ENDPROPERTIES
    
  ENDASSOCIATEDFORM
  
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #BANKCHEQUEREUSE
      PROPERTIES
        Control             #BANKCHEQUEREUSE
        EffectiveAccess     #Update
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #BANKCHEQUEREUSE
      PROPERTIES
        Control             #BANKCHEQUEREUSE
        EffectiveAccess     #Create
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
    CONTROL #BANKCHEQUEREUSE
      PROPERTIES
        Control             #BANKCHEQUEREUSE
        EffectiveAccess     #Delete
      ENDPROPERTIES
      
    ENDCONTROL
    
ENDFORM

TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: FRM

; Microsoft Dynamics AX Forms unloaded
; --------------------------------------------------------------------------------
FRMVERSION 12

FORM #VendInvoiceJournal
  PROPERTIES
    Name                #VendInvoiceJournal
    Origin              #{9FBA2915-424D-4154-A07D-41D1D6C89C55}
  ENDPROPERTIES
  
  METHODS
    SOURCE #classDeclaration
      #// Code was merged automatically.
      #final class FormRun extends ObjectRun
      #{
      #    InventDimCtrl_Frm_Mov   inventDimFormSetup;
      #
      #// The following was merged successfully, but should be reviewed.
      #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
      #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
      #    //begin STF_TraceabilityOfInvoice
      #    VatNum                      gVatNum;
      #    CustVendFindSettlements     gcustVendFindSettlements;
      #    LedgerJournalId             gJournalPaym;
      #    TransDate                   gFromDate, gTodate;
      #    //end STF_TraceabilityOfInvoice
      #
      #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
      #// End
      #    Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessagePane   messagePane;
      #    Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar    messageBar;
      #    // <GEERU>
      #    FactureSource_RU        factureSource;
      #    boolean                 countryRegion_RU;
      #    // </GEERU>
      #    // <GIN>
      #    container               conPackingSlipIdDate;
      #    container               conInventReceiveQty;
      #    boolean                 isMatchedPackingSlipInquiryEnabled;
      #    // </GIN>
      #    // <GBR>
      #    FiscalDocument_BR       activeFiscalDocument;
      #    // </GBR>
      #    // <GTH>
      #    boolean                 isVendInvoiceJourExtensionTHEnabled;
      #    // </GTH>
      #    // <GMY>
      #    boolean                 isVendInvoiceJour_WEnabled;
      #    // </GMY>
      #}
    ENDSOURCE
    SOURCE #docCursor
      #public Common docCursor()
      #{
      #    Common docCursor;
      #
      #    docCursor = super();
      #
      #    if (docCursor.TableId == tableNum(InventDim))
      #    {
      #        docCursor = vendInvoiceTrans;
      #    }
      #
      #    return docCursor;
      #}
    ENDSOURCE
    SOURCE #init
      #// Code was merged automatically.
      #void init()
      #{
      #    boolean isFrenchRegulatoryEnabled = PublicSectorUtils::isFrenchRegulatoryEnabled();
      #
      #    // <GEERU>
      #    #ISOCountryRegionCodes
      #    // </GEERU>
      #    // <GIN>
      #    TaxParameters taxParametersLoc;
      #    taxParametersLoc = TaxParameters::find();
      #    // </GIN>
      #
      #    // <GIN>
      #    isMatchedPackingSlipInquiryEnabled = TaxParameters::checkTaxParameters_IN() &&
      #                                         isConfigurationkeyEnabled(configurationkeynum(LedgerBasic)) &&
      #                                         VendParameters::find().MatchedPackingSlipsInquiry;
      #    // </GIN>
      #    // <GEERU>
      #    countryRegion_RU =  SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
      #    if (countryRegion_RU)
      #    {
      #        this.initFactureSource_RU();
      #    }
      #    // </GEERU>
      #
      #    // <GTH>
      #    isVendInvoiceJourExtensionTHEnabled = VendInvoiceJourExtensionTH::isExtensionEnabled();
      #    // </GTH>
      #    // <GMY>
      #    isVendInvoiceJour_WEnabled = SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(VendInvoiceJour_W));
      #    // </GMY>
      #
      #    super();
      #    // <GEERU>
      #    if (countryRegion_RU)
      #    {
      #        this.initDesign_W();
      #    }
      #    // </GEERU>
      #// The following was merged successfully, but should be reviewed.
      #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
      #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
      #//Begin update Project: STF_ElectronicAccounting   Developer: Arly Rubio C.  Date: July/22/2014
      #    this.STF_EnableFields();
      #//End update Project: STF_ElectronicAccounting   Developer: Arly Rubio C.  Date: July/22/2014
      #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
      #// End
      #
      #    if (element.args().record())
      #    {
      #        vendInvoiceJour_ds.object(fieldnum(VendInvoiceJour, InvoiceAccount)).visible(false);
      #    }
      #
      #    element.updateDesign(InventDimFormDesignUpdate::Init);
      #
      #    //Make VendPaymentGroup visible if the AP Payment group feature is enabled
      #    vendInvoiceJour_VendPaymentGroup.visible(VendParameters::find().VendPaymentGroupingEnable == NoYes::Yes);
      #
      #    //make VendInvoiceGroup visible if the AP invoice Group feature is enabled.
      #    invoiceGrouping.visible(VendParameters::find().VendInvoiceGroupingEnable);
      #
      #    // we only want the commitments field to be visible if the French regulatory features are enabled.
      #    purchCommitmentLine_PSN.visible(isFrenchRegulatoryEnabled);
      #
      #    // <PubSect>
      #    // Only show the budget reservation field if the budget reservation document is enabled.
      #    budgetReservation_PSN.visible(PublicSectorUtils::isBudgetReservationEnabled());
      #    // </PubSect>
      #
      #    // We only want the directive tab page to be visible if the French regulatory features are enabled.
      #// The following was merged successfully, but should be reviewed.
      #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
      #//     DirectiveTabPage_PSN.visible(isFrenchRegulatoryEnabled);
      #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
      #    //STF Traceability the below line was commented in order to avoid a break point
      #    //DirectiveTabPage_PSN.visible(isFrenchRegulatoryEnabled);
      #    //STF Traceability
      #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
      #//     DirectiveTabPage_PSN.visible(isFrenchRegulatoryEnabled);
      #// End
      #    PaymDelay_InvoicePaymHold_PSN.visible(isFrenchRegulatoryEnabled);
      #    PaymDelay.visible(isFrenchRegulatoryEnabled);
      #    PaymDelay_M_displayReasonDescription.visible(isFrenchRegulatoryEnabled);
      #    PaymDelay_M_editReasonCode.visible(isFrenchRegulatoryEnabled);
      #    PaymDelay_SecurityRole_PSN.visible(isFrenchRegulatoryEnabled);
      #
      #    if (isFrenchRegulatoryEnabled)
      #    {
      #        this.initMessagePane();
      #    }
      #
      #    //<GIN>
      #    if (isMatchedPackingSlipInquiryEnabled)
      #    {
      #        purchPackingSlips.visible(true);
      #        vendInvoiceTrans_productReceiptId.visible(true);
      #        vendInvoiceTrans_deliveryDate.visible(true);
      #        packingSlip.visible(true);
      #    }
      #
      #    if(TaxParameters::isCustomsEnable_IN())
      #    {
      #        BillOfEntry.visible(true);
      #    }
      #
      #    taxWithholdTransactions.visible(TaxWithholdParameters_IN::checkTaxParameters());
      #// The following was merged successfully, but should be reviewed.
      #// Original (SYS) ++++++++++++++++++++++++++++++++++++++++++++++++
      #//     VATDefermentDetails.visible(taxParametersLoc.vat_in);
      #// Yours (USR) ++++++++++++++++++++++++++++++++++++++++++++++++
      #    TaxDefermentDetails.visible(taxParametersLoc.VAT_IN || taxParametersLoc.Excise_IN);
      #// AX Update (SYP) ++++++++++++++++++++++++++++++++++++++++++++++++
      #//     TaxDefermentDetails.visible(taxParametersLoc.VAT_IN || taxParametersLoc.Excise_IN);
      #// End
      #    // </GIN>
      #
      #    // <GTH>
      #    if (TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled())
      #    {
      #        this.updateDesignForAverageVAT();
      #    }
      #
      #    if (TaxThaiGovCertificationFeatureChecker::isTaxBranchEnabled())
      #    {
      #        displayTaxBranchDimension.visible(true);
      #    }
      #    // </GTH>
      #}
    ENDSOURCE
    SOURCE #initDesign_W
      #void initDesign_W()
      #{
      #    if (factureSource)
      #    {
      #        factureEditLines_RU.visible(false);
      #    }
      #}
    ENDSOURCE
    SOURCE #initFactureSource_RU
      #void initFactureSource_RU()
      #{
      #    if (element.args().caller() &&
      #        SysDictClass::isEqualOrSuperclass(classidget(element.args().caller()), classnum(FactureSource_RU)))
      #    {
      #        factureSource = element.args().caller();
      #    }
      #}
    ENDSOURCE
    SOURCE #initMessagePane
      #public void initMessagePane()
      #{
      #    Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarType messageBarType;
      #
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
      #    {
      #        messagePane = messagePaneHost.control();
      #
      #        messageBarType = Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarType::Warning;
      #
      #        messageBar = new Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar();
      #        messageBar.set_MessageBarType(messageBarType);
      #        messageBar.set_Text(strFmt("@SPS2499"));
      #
      #        messagePane.Add(messageBar);
      #    }
      #}
    ENDSOURCE
    SOURCE #inventDimSetupObject
      #Object inventDimSetupObject()
      #{
      #    return inventDimFormSetup;
      #}
      #
    ENDSOURCE
    SOURCE #printTaxUnrealizedInvoice
      #/// <summary>
      #/// Print Thailand Tax Unrealized Invoice
      #/// </summary>
      #/// <param name="_printCopyOriginal">
      #/// The type of Tax Invoice Report
      #/// </param>
      #public void printTaxUnrealizedInvoice(PrintCopyOriginal _printCopyOriginal = PrintCopyOriginal::Original)
      #{
      #    VendInvoiceJour     vendInvoiceJourLocal;
      #
      #    for (vendInvoiceJourLocal = getFirstSelection(vendInvoiceJour_ds);
      #         vendInvoiceJourLocal;
      #         vendInvoiceJourLocal = vendInvoiceJour_ds.getNext())
      #    {
      #        // <GBR>
      #        TaxUnrealizedInvoice::printFromVendInvoiceJour(vendInvoiceJourLocal, null, null);
      #        // </GBR>
      #    }
      #}
    ENDSOURCE
    SOURCE #setFieldsEditableForDirective
      #/// <summary>
      #/// Disables the Directive tab if the DirectiveId has not been assigned in a public sector France context.
      #/// </summary>
      #void setFieldsEditableForDirective()
      #{
      #    if (CustVendDirective_PSN::isContextPublicSectorFrance())
      #    {
      #        DirectiveTabPage_PSN.allowEdit(VendDirective_PSN.VendDirectiveId != '');
      #    }
      #}
    ENDSOURCE
    SOURCE #setInfoBar
      #/// <summary>
      #/// Sets the info bar visiblitiy.
      #/// </summary>
      #/// <param name="_refRecId">
      #/// The RecId of the table for which payment hold needs to be checked.
      #/// </param>
      #/// <param name="_tableId">
      #/// The TableId of the table for which payment hold needs to be checked.
      #/// </param>
      #public void setInfoBar(RefRecId _refRecId, TableId _tableId)
      #{
      #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
      #    {
      #        if (VendInvoiceHoldHistory::isPlaceInHold(_refRecId, _tableId))
      #        {
      #            messagePaneHost.visible(true);
      #        }
      #        else
      #        {
      #            messagePaneHost.visible(false);
      #        }
      #    }
      #}
    ENDSOURCE
    SOURCE #STF_EnableFields
      #//Project: STF_ElectronicAccounting   Developer: Arly Rubio C.  Date: July/22/2014
      #void STF_EnableFields()
      #{
      #    ;
      # if (LedgerParameters::find().STF_VerifyInvoiceElectronicFile)
      #    {
      #        //STF_VerifyCFDIGrp.visible(true);
      #        STF_SATVerifyCFDIServiceAgent.visible(true);
      #    }
      #    else
      #    {
      #        //STF_VerifyCFDIGrp.visible(false);
      #        STF_SATVerifyCFDIServiceAgent.visible(false);
      #    }
      #
      #
      #}
    ENDSOURCE
    SOURCE #STF_FilterSettlementInvoice
      #void STF_FilterSettlementInvoice()
      #{
      #    Dialog      dialog          = new Dialog("@TRF12");
      #    DialogField vVendRFC        = dialog.addField(extendedTypeStr(VatNum), "@TRF13");
      #    DialogField vJournalPaym    = dialog.addField(extendedTypeStr(JournalId), "@TRF14");
      #    DialogField vfromdate       = dialog.addField(extendedTypeStr(TransDate), "@SYS5209");
      #    DialogField vtodate         = dialog.addField(extendedTypeStr(TransDate), "@TRF15");
      #
      #    ;
      #
      #    dialog.run();
      #
      #    if (dialog.closedOk())
      #    {
      #        if(!vfromdate.value() || !vtodate.value())
      #            throw warning("@TRF16");
      #
      #
      #    }
      #
      #    gVatNum         = vVendRFC.value();
      #    gJournalPaym    = vJournalPaym.value();
      #    gFromDate       = vfromdate.value();
      #    gTodate         = vtodate.value();
      #
      #    vendInvoiceJour_ds.executeQuery();
      #
      #
      #}
    ENDSOURCE
    SOURCE #toggleButtonsWhenAdvance
      #/// <summary>
      #/// Enables or disables the buttons based upon voucher type of advance.
      #/// </summary>
      #/// <param name="_enable">
      #/// A boolean value to toggle enable.
      #/// </param>
      #public void toggleButtonsWhenAdvance(boolean _enable)
      #{
      #    markup.enabled(_enable);
      #    markupTransMenuItemButton.enabled(_enable);
      #    buttonLineInventory.enabled(_enable);
      #}
    ENDSOURCE
    SOURCE #updateDesign
      #void updateDesign(InventDimFormDesignUpdate mode)
      #{
      #    PurchLine       purchLine;
      #    InventMovement  movement = InventMovement::construct(purchLine);
      #
      #    switch (mode)
      #    {
      #        case InventDimFormDesignUpdate::Init        :
      #            if (!inventDimFormSetup)
      #            {
      #                inventDimFormSetup  = InventDimCtrl_Frm_Mov::newFromFormMovement(element, movement);
      #            }
      #
      #        case InventDimFormDesignUpdate::Active      :
      #            inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
      #            inventDimFormSetup.formSetControls(true);
      #            break;
      #
      #        case InventDimFormDesignUpdate::FieldChange :
      #            inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
      #            inventDimFormSetup.formSetControls(false);
      #            break;
      #
      #        default : throw error(strFmt("@SYS54195", funcName()));
      #    }
      #}
    ENDSOURCE
    SOURCE #updateDesignForAverageVAT
      #/// <summary>
      #///     Sets fields visible and changes the labels when Average VAT feature is active.
      #/// </summary>
      #// <GTH>
      #private void updateDesignForAverageVAT()
      #{
      #    vendInvoiceJour_DocumentNum.visible(true);
      #    vendInvoiceJour_DocumentDate.visible(true);
      #    vendInvoiceJour_InvoiceReceiptDate_TH.visible(true);
      #    vendInvoiceJour_RealVendName_TH.visible(true);
      #
      #    // Tax invoice number
      #    vendInvoiceJour_DocumentNum.label("@SYS4082540");
      #    // Number of the tax invoice that generated the transaction.
      #    vendInvoiceJour_DocumentNum.helpText("@SYS4082541");
      #    // Tax invoice date
      #    vendInvoiceJour_DocumentDate.label("@SYS4082542");
      #    // Date of tax invoice.
      #    vendInvoiceJour_DocumentDate.helpText("@SYS4082543");
      #    // Invoice number
      #    vendInvoiceJour_InvoiceNum.label("@SYS4726");
      #}
      #// </GTH>
    ENDSOURCE
  ENDMETHODS
  OBJECTBANK
    PROPERTIES
    ENDPROPERTIES
    
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendInvoiceJour
          Table               #VendInvoiceJour
          Index               #InvoiceAccountIdx
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #STF_UuidEdit
          #public Edit STF_UUID STF_UuidEdit(boolean _set, STF_UUID _UUID)
          #{
          #
          #    VendInvoiceJour     lVendInvoiceJour;
          #    ;
          #
          #    if( _Set )
          #    {
          #        ttsbegin;
          #        select forupdate lVendInvoiceJour
          #        where lVendInvoiceJour.RecId == VendInvoiceJour.RecId;
          #        lVendInvoiceJour.STF_UUID = _UUID;
          #        lVendInvoiceJour.update();
          #        ttscommit;
          #
          #    }
          #
          #    return VendInvoiceJour.STF_UUID;
          #
          #}
        ENDSOURCE
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #    AccountingDistribution  accountingDistribution;
          #    // <GBR>
          #    boolean             isInvoicePrintAvailable;
          #    EFDocument_BR       eFiscalDocument;
          #    EFDocState_BR       eFDocState;
          #    // </GBR>
          #
          #    ret = super();
          #
          #    //disables buttons when invoice is advance otherwise enables.
          #    element.toggleButtonsWhenAdvance(!vendInvoiceJour.isAdvance());
          #
          #    if (vendInvoiceJour.SourceDocumentHeader == 0)
          #    {
          #        subledgerJournalAccountEntries.enabled(false);
          #        accountingDistributionButtonView.enabled(false);
          #    }
          #    else
          #    {
          #        select firstonly RecId from accountingDistribution where accountingDistribution.SourceDocumentHeader == vendInvoiceJour.SourceDocumentHeader;
          #        subledgerJournalAccountEntries.enabled(accountingDistribution.RecId);
          #        accountingDistributionButtonView.enabled(accountingDistribution.RecId);
          #    }
          #
          #    // <GBR>
          #    if (BrazilParameters::isEnabled() &&
          #        activeFiscalDocument.RefRecId != VendInvoiceJour.RecId)
          #    {
          #        activeFiscalDocument = FiscalDocument_BR::findByRef(VendInvoiceJour.TableId, VendInvoiceJour.RecId);
          #        isInvoicePrintAvailable = true;
          #
          #        if(activeFiscalDocument.isElectronic())
          #        {
          #            eFiscalDocument = EFDocument_BR::findByRef(activeFiscalDocument.RecId);
          #            eFDocState = EFDocState_BR::createFromEFdocument(eFiscalDocument);
          #            isInvoicePrintAvailable = eFDocState.canPrintDanfe() || eFDocState.canPrintContingencyDanfe();
          #        }
          #
          #        element.control(element.controlId(formControlStr(VendInvoiceJournal, PurchInvoiceCopy))).enabled(isInvoicePrintAvailable);
          #        element.control(element.controlId(formControlStr(VendInvoiceJournal, PurchInvoiceOriginal))).enabled(isInvoicePrintAvailable);
          #        element.control(element.controlId(formControlStr(VendInvoiceJournal, PurchInvoice))).enabled(isInvoicePrintAvailable);
          #    }
          #    // </GBR>
          #    // <GIN>
          #    if(TaxParameters::isExciseEnable_IN() && VendInvoiceJour.purchTable().isExcisable_IN())
          #    {
          #        PrintExciseInvoice.enabled(true);
          #    }
          #    // </GIN>
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #init
          #public void init()
          #{
          #    QueryBuildDataSource  queryDataSourceLink;
          #    // <GIN>
          #    PurchTable            purchTableLoc;
          #    VendInvoiceJour       vendInvoiceJourLoc;
          #    // </GIN>
          #    ;
          #
          #    super();
          #
          #    if (element.args().dataset() == tableNum(PurchTable))
          #    {
          #        this.query().dataSourceTable(tableNum(VendInvoiceJour)).clearDynalinks();
          #
          #        queryDataSourceLink = this.query().dataSourceTable(tableNum(VendInvoiceJour)).addDataSource(tableNum(VendInvoicePurchLink));
          #        queryDataSourceLink.relations(true);
          #        queryDataSourceLink.addDynalink(fieldNum(VendInvoicePurchLink, OrigPurchId),
          #                                        element.args().record(),
          #                                        fieldNum(PurchTable, PurchId));
          #
          #        // <GIN>
          #        if (isMatchedPackingSlipInquiryEnabled)
          #        {
          #            purchTableLoc = element.args().record();
          #
          #            vendInvoiceJourLoc = VendInvoiceJour::findFromPurchId(purchTableLoc.PurchId);
          #
          #            if (!conlen(conPackingSlipIdDate))
          #            {
          #                conPackingSlipIdDate = vendInvoiceTrans.packingSlipIdAndDate(vendInvoiceJourLoc);
          #                conInventReceiveQty  = vendPackingSlipTrans::inventAndReceiveQty(purchTableLoc.PurchId);
          #            }
          #        }
          #        // </GIN>
          #    }
          #
          #    if (element.args().dataset() == tableNum(VendInvoiceJour)) // Original document
          #    {
          #        // Only add a dynalink if the RecId is specified (It will not be when jumping from a report which only specifies the InvoiceId)
          #        if (element.args().record() && element.args().record().RecId)
          #        {
          #            queryDataSourceLink = this.query().dataSourceTable(tableNum(VendInvoiceJour));
          #            queryDataSourceLink.addDynalink(fieldNum(VendInvoiceJour, RecId),
          #                                            element.args().record(),
          #                                            fieldNum(VendInvoiceJour, RecId));
          #        }
          #    }
          #
          #    if (element.args().dataset() == tableNum(PurchReqLine))
          #    {
          #        this.query().dataSourceTable(tableNum(VendInvoiceJour)).clearDynalinks();
          #
          #        queryDataSourceLink = this.query().dataSourceTable(tableNum(VendInvoiceJour)).addDataSource(tableNum(VendInvoicePurchLink));
          #        queryDataSourceLink.relations(true);
          #        queryDataSourceLink.addDynalink(fieldNum(VendInvoicePurchLink, OrigPurchId),
          #                                        element.args().record(),
          #                                        fieldNum(PurchReqLine, PurchId));
          #        queryDataSourceLink.addDynalink(fieldnum(VendInvoicePurchLink, dataAreaId),
          #                                        element.args().record(),
          #                                        fieldnum(PurchReqLine, PurchIdDataArea));
          #    }
          #
          #    // <GEERU>
          #    // Factures -->
          #    if (countryRegion_RU)
          #    {
          #        if (factureSource)
          #        {
          #            this.query().dataSourceTable(tablenum(VendInvoiceJour)).addRange(fieldnum(VendInvoiceJour, RecId)).value(factureSource.jourRange());
          #        } // Factures <--
          #
          #        this.cacheAddMethod(tablemethodstr(VendInvoiceJour, notClosed_RU));
          #    }
          #    // </GEERU>
          #    this.cacheAddMethod(tableMethodStr(VendInvoiceJour, displayRemittanceLocation));
          #    this.cacheAddMethod(tableMethodStr(VendInvoiceJour, displayRemittanceAddress));
          #}
        ENDSOURCE
        SOURCE #executeQuery
          #public void executeQuery()
          #{
          #
          #    ledgerJournalTrans  lledgerJournalTrans;
          #    tmpCustVendTrans    ltmpCustVendTrans;
          #    VendInvoiceJour     gvendInvoiceJour;
          #    VendTrans           vendTrans;
          #    int                 lcount = 0;
          #    container           invoiceDate, invoiceAccount, invoiceVoucher;
          #    ;
          #
          #    //begin STF_TraceabilityOfInvoice
          #
          #    this.query().dataSourceName("VendInvoiceJour").clearRanges();
          #
          #   if( gVatNum )
          #       this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,vatnum) ).value( gVatNum  );
          #
          #    if( gJournalPaym )
          #    { //BEGIN DEV::BLIZARRAGA
          #        while select * from lledgerJournalTrans where lledgerJournalTrans.JournalNum == gJournalPaym && lledgerJournalTrans.TransDate >= gFromDate && lledgerJournalTrans.TransDate <= gToDate
          #        join vendTrans where lledgerJournalTrans.VendTransId == vendTrans.RecId
          #        {
          #            select * from gvendInvoiceJour where gvendInvoiceJour.InvoiceDate == vendTrans.TransDate && gvendInvoiceJour.InvoiceAccount == vendTrans.AccountNum;
          #             this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceAccount) )
          #                .value(vendTrans.AccountNum);
          #
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,LedgerVoucher) )
          #                .value(gvendInvoiceJour.LedgerVoucher);
          #
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceDate) )
          #                .value(date2Str(vendTrans.TransDate,123,2,1,2,1,4));
          #           /*gcustVendFindSettlements = new CustVendFindSettlements(ModuleCustVend::Vend , lledgerJournalTrans);
          #
          #            if (lledgerJournalTrans.ledgerJournalTable().JournalType == LedgerJournalType::VendPromissoryNoteRedraw ||
          #                lledgerJournalTrans.ledgerJournalTable().JournalType == LedgerJournalType::BankChequeReversal)
          #            {
          #                gcustVendFindSettlements.findSettledSettlements();
          #            }
          #            else
          #            {
          #                gcustVendFindSettlements.findSettlements();
          #            }
          #
          #            ltmpCustVendTrans = gcustVendFindSettlements.tmpCustVendTrans();
          #
          #           this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceAccount) )
          #                .value( ltmpCustVendTrans.AccountNum    );
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,LedgerVoucher) )
          #                .value( ltmpCustVendTrans.Voucher   );
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceDate) )
          #                .value(  date2Str(ltmpCustVendTrans.TransDate,123,2,1,2,1,4 )   ); */
          #            //END DEV::BLIZARRAGA
          #            lcount++;
          #        }
          #
          #        if(lcount == 0)
          #        {
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceAccount) )
          #                .value( "NA" );
          #        }
          #    }
          #
          #    if( gFromDate && gToDate && !gJournalPaym)
          #    {
          #        //BEGIN DEV:BLIZARRAGA
          #        while select vendTrans where vendTrans.TransDate >= gFromDate && vendTrans.TransDate <= gToDate
          #            && vendTrans.TransType == LedgerTransType::Payment
          #        {
          #            select * from gvendInvoiceJour where gvendInvoiceJour.InvoiceDate == vendTrans.TransDate && gvendInvoiceJour.InvoiceAccount == vendTrans.AccountNum;
          #
          #             this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceAccount) )
          #                .value(vendTrans.AccountNum);
          #
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,LedgerVoucher) )
          #                .value(gvendInvoiceJour.LedgerVoucher);
          #
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceDate) )
          #                .value(date2Str(vendTrans.TransDate,123,2,1,2,1,4));
          #
          #            lcount++;
          #        }
          #
          #
          #      /*  while select * from lledgerJournalTrans where lledgerJournalTrans.TransDate >= gFromDate && lledgerJournalTrans.TransDate <= gToDate
          #        {
          #            gcustVendFindSettlements = new CustVendFindSettlements(ModuleCustVend::Vend , lledgerJournalTrans);
          #
          #            if (lledgerJournalTrans.ledgerJournalTable().JournalType == LedgerJournalType::VendPromissoryNoteRedraw ||
          #                lledgerJournalTrans.ledgerJournalTable().JournalType == LedgerJournalType::BankChequeReversal)
          #            {
          #                gcustVendFindSettlements.findSettledSettlements();
          #
          #            }
          #            else
          #            {
          #                gcustVendFindSettlements.findSettlements();
          #
          #            }
          #
          #            ltmpCustVendTrans = gcustVendFindSettlements.tmpCustVendTrans();
          #
          #          /* this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceAccount) )
          #                .value(ltmpCustVendTrans.AccountNum);
          #
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,LedgerVoucher) )
          #                .value(ltmpCustVendTrans.Voucher);
          #
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceDate) )
          #                .value( date2Str(ltmpCustVendTrans.TransDate,123,2,1,2,1,4));*/
          #            lcount++;
          #        }*/
          #        //END DEV:BLIZARRAGA
          #       if(lcount > 0)
          #       {
          #            this.query().dataSourceName("VendInvoiceJour").addRange( fieldNum(VendInvoiceJour,InvoiceDate) )
          #                .value( date2Str(gFromDate,123,2,1,2,1,4 ) + ".." +  date2Str(gToDate,123,2,1,2,1,4 )  );
          #       }
          #
          #    }
          #
          #    //end STF_TraceabilityOfInvoice
          #
          #
          #
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendInvoiceTrans
          Table               #VendInvoiceTrans
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendInvoiceJour
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
          REFERENCEFIELD PurchCommitmentLine_PSN
            PROPERTIES
              AllowEdit           #No
            ENDPROPERTIES
            
            METHODS
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #active
          #public int active()
          #{
          #    int ret;
          #    AccountingDistribution      accountingDistribution;
          #
          #    #ISOCountryRegionCodes
          #
          #    ret = super();
          #
          #    if (vendInvoiceTrans.SourceDocumentLine == 0)
          #    {
          #        accountingDistributionButtonViewLine.enabled(false);
          #    }
          #    else
          #    {
          #        select firstonly RecId from accountingDistribution where accountingDistribution.SourceDocumentLine == vendInvoiceTrans.SourceDocumentLine;
          #        accountingDistributionButtonViewLine.enabled(accountingDistribution.RecId);
          #    }
          #
          #    if (PublicSectorUtils::isFrenchRegulatoryEnabled())
          #    {
          #        vendDirective_PSN_ds.executeQuery();
          #    }
          #
          #    return ret;
          #}
        ENDSOURCE
        SOURCE #write
          #void write()
          #{
          #}
        ENDSOURCE
        SOURCE #delete
          #void delete()
          #{
          #}
        ENDSOURCE
        SOURCE #packingSlipId
          #/// <summary>
          #///    returns PackingSlipId of the <c>VendPackingSlipTrans</c> table.
          #/// </summary>
          #/// <param name="_vendInvoiceTrans">
          #///    The <c>VendInvoiceTrans</c> buffer.
          #/// </param>
          #/// <returns>
          #/// PackingSlipId of the <c>VendPackingSlipTrans</c> table.
          #/// </returns>
          #// <GIN>
          #//BP Deviation Documented
          #public display PackingSlipId packingSlipId(VendInvoiceTrans _vendInvoiceTrans)
          #{
          #    int       pos;
          #
          #    pos = confind(conPackingSlipIdDate, _vendInvoiceTrans.RecId);
          #    return conpeek(conPackingSlipIdDate, pos + 1);
          #}
          #// </GIN>
        ENDSOURCE
        SOURCE #deliveryDate
          #/// <summary>
          #///    returns delivery date of the <c>VendPackingSlipTrans</c> table.
          #/// </summary>
          #/// <param name="_vendInvoiceTrans">
          #///    The <c>VendInvoiceTrans</c> buffer.
          #/// </param>
          #/// <returns>
          #/// Delivery date of the <c>VendPackingSlipTrans</c> table.
          #/// </returns>
          #// <GIN>
          #//BP Deviation Documented
          #public display TransDate deliveryDate(VendInvoiceTrans _vendInvoiceTrans)
          #{
          #    int       pos;
          #
          #    pos = confind(conPackingSlipIdDate, _vendInvoiceTrans.RecId);
          #    return conpeek(conPackingSlipIdDate, pos + 2);
          #}
          #// </GIN>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #InventDim
          Table               #InventDim
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendInvoiceTrans
          LinkType            #InnerJoin
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendPackingSlipTrans
          Table               #VendPackingSlipTrans
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          AutoSearch          #No
          AutoQuery           #No
          OnlyFetchActive     #Yes
          JoinSource          #VendInvoiceTrans
          LinkType            #Active
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #// <GIN>
          #public void init()
          #{
          #    if (isMatchedPackingSlipInquiryEnabled)
          #    {
          #        vendPackingSlipTrans_ds.autoQuery(true);
          #    }
          #    super();
          #}
          #// </GIN>
        ENDSOURCE
        SOURCE #inventQuantity
          #/// <summary>
          #///    returns InventNow Qty of the <c>VendInvoiceInfoSubLine</c> table.
          #/// </summary>
          #/// <param name="_vendPackingSlipTrans">
          #///    The <c>VendPackingSlipTrans</c> buffer.
          #/// </param>
          #/// <returns>
          #/// InventQty value of <c>VendPackingSlipTrans</c> table.
          #/// </returns>
          #// <GIN>
          #//BP deviation documented
          #public display InventQty inventQuantity(VendPackingSlipTrans _vendPackingSlipTrans)
          #{
          #    int       pos;
          #
          #    pos = confind(conInventReceiveQty, _vendPackingSlipTrans.RecId);
          #    return conpeek(conInventReceiveQty, pos + 1);
          #}
          #// </GIN>
        ENDSOURCE
        SOURCE #purchQuantity
          #/// <summary>
          #///    returns Received Qty of the <c>VendInvoiceInfoSubLine</c> table.
          #/// </summary>
          #/// <param name="_vendPackingSlipTrans">
          #///    The <c>VendPackingSlipTrans</c> buffer.
          #/// </param>
          #/// <returns>
          #/// Received qty value of <c>VendPackingSlipTrans</c> table.
          #/// </returns>
          #// <GIN>
          #//BP deviation documented
          #display PurchQty purchQuantity(VendPackingSlipTrans _vendPackingSlipTrans)
          #{
          #    int       pos;
          #
          #    pos = confind(conInventReceiveQty, _vendPackingSlipTrans.RecId);
          #    return conpeek(conInventReceiveQty, pos + 2);
          #}
          #// </GIN>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustomsVendBOETrans_IN
          Table               #CustomsVendBOETrans_IN
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #CustomsVendInvoiceBOETransLink_IN
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #CustomsVendInvoiceBOETransLink_IN
          Table               #CustomsVendInvoiceBOETransLink_IN
          Index               #VendInvoiceTransIdx
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendInvoiceTrans
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #FiscalEstablishmentVendInvoiceJour_BR
          Table               #FiscalEstablishmentVendInvoiceJour_BR
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          AutoQuery           #No
          JoinSource          #VendInvoiceJour
          LinkType            #Active
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #public void init()
          #{
          #    if (BrazilParameters::isEnabled())
          #    {
          #        fiscalEstablishmentVendInvoiceJour_BR_ds.autoQuery(true);
          #        fiscalEstablishmentVendInvoiceJour_BR_ds.linkType(joinMode2LinkType(JoinMode::OuterJoin));
          #    }
          #
          #    super();
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendInvoiceHoldHistory
          Table               #VendInvoiceHoldHistory
          AllowCheck          #No
          JoinSource          #VendInvoiceJour
          LinkType            #OuterJoin
          DelayActive         #No
        ENDPROPERTIES
        
        FIELDLIST
          DATAFIELD InvoicePaymHold_PSN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #validate
                # /// <summary>
                #/// Valids the modification of the field.
                #/// </summary>
                #/// <returns>
                #/// true if the modification is correct; otherwise, false.
                #/// </returns>
                #public boolean validate()
                #{
                #    boolean ret;
                #
                #    ret = super();
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        // Asked the confirmation message.
                #        if (ret && !vendInvoiceHoldHistory.orig().InvoicePaymHold_PSN && vendInvoiceHoldHistory.InvoicePaymHold_PSN)
                #        {
                #            ret = vendInvoiceHoldHistory.confirmInvoicePlaceOnHold(vendInvoiceJour);
                #        }
                #
                #        vendInvoiceHoldHistory.VendInvoiceJour_PSN = vendInvoiceJour.RecId;
                #        vendInvoiceHoldHistory.RefTableId_PSN = tableNum(VendInvoiceJour);
                #        paymDelay_M_editReasonCode.allowEdit(ret && vendInvoiceHoldHistory.InvoicePaymHold_PSN);
                #        paymDelay_SecurityRole_PSN.allowEdit(ret && vendInvoiceHoldHistory.InvoicePaymHold_PSN);
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDDATAFIELD
          
          REFERENCEFIELD SecurityRole_PSN
            PROPERTIES
            ENDPROPERTIES
            
            METHODS
              SOURCE #lookupReference
                #/// <summary>
                #/// Performs the filter look up of security table.
                #/// </summary>
                #/// <param name="_formReferenceControl">
                #/// The control on which look up need to perform.
                #/// </param>
                #/// <returns>
                #/// A table buffer containing the filter data.
                #/// </returns>
                #public Common lookupReference(FormReferenceControl _formReferenceControl)
                #{
                #    Common ret;
                #
                #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                #    {
                #        ret = VendInvoiceHoldHistory::performFormLookup(_formReferenceControl);
                #    }
                #
                #    return ret;
                #}
              ENDSOURCE
            ENDMETHODS
          ENDREFERENCEFIELD
          
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #selectionChanged
          #public void selectionChanged()
          #{
          #    super();
          #    element.setInfoBar(vendInvoiceJour.RecId, tableNum(VendInvoiceJour));
          #    paymDelay_M_editReasonCode.allowEdit(vendInvoiceHoldHistory.InvoicePaymHold_PSN);
          #    paymDelay_SecurityRole_PSN.allowEdit(vendInvoiceHoldHistory.InvoicePaymHold_PSN);
          #}
        ENDSOURCE
        SOURCE #write
          #/// <summary>
          #/// Writes the data in the table.
          #/// </summary>
          #public void write()
          #{
          #    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
          #    {
          #        if (vendInvoiceHoldHistory.HoldBy_PSN && vendInvoiceHoldHistory.SecurityRole_PSN && vendInvoiceHoldHistory.HoldReleasedBy_PSN)
          #        {
          #            super();
          #
          #            vendInvoiceHoldHistory.updateReleaseDate(vendInvoiceJour);
          #            vendInvoiceHoldHistory.clearDataFields();
          #        }
          #        else if (vendInvoiceHoldHistory.HoldBy_PSN
          #                    && vendInvoiceHoldHistory.SecurityRole_PSN
          #                    && !VendInvoiceHoldHistory::isPlaceInHold(vendInvoiceHoldHistory.VendInvoiceJour_PSN, vendInvoiceHoldHistory.RefTableId_PSN))
          #        {
          #           vendInvoiceHoldHistory.insert();
          #        }
          #    }
          #}
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendDirective_PSN
          Table               #VendDirective_PSN
          AllowCheck          #No
          JoinSource          #VendInvoiceTrans
          LinkType            #Passive
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendInvoiceJourExtensionTH
          Table               #VendInvoiceJourExtensionTH
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendInvoiceJour
          LinkType            #Passive
          InsertAtEnd         #No
          InsertIfEmpty       #No
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #// <GTH>
          #public void init()
          #{
          #    if (VendInvoiceJourExtensionTH::isExtensionEnabled())
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #    }
          #
          #    super();
          #}
          #// </GTH>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
    DATASOURCE
      OBJECTPOOL
        PROPERTIES
          Name                #VendInvoiceJour_W
          Table               #VendInvoiceJour_W
          AllowEdit           #No
          AllowCreate         #No
          AllowDelete         #No
          JoinSource          #VendInvoiceJour
          LinkType            #Passive
        ENDPROPERTIES
        
        FIELDLIST
        ENDFIELDLIST
      ENDOBJECTPOOL
      METHODS
        SOURCE #init
          #// <GMY>
          #public void init()
          #{
          #    if (isVendInvoiceJour_WEnabled)
          #    {
          #        this.linkType(FormLinkType::OuterJoin);
          #        this.optionalRecordMode(OptionalRecordMode::None);
          #    }
          #
          #    super();
          #}
          #// </GMY>
        ENDSOURCE
      ENDMETHODS
    ENDDATASOURCE
  ENDOBJECTBANK
  
  REFERENCEDATASOURCES
  ENDREFERENCEDATASOURCES
  
  JOINS
    VendInvoiceTrans VendInvoiceJour
    InventDim VendInvoiceTrans
    VendPackingSlipTrans VendInvoiceTrans
    CustomsVendBOETrans_IN CustomsVendInvoiceBOETransLink_IN
    CustomsVendInvoiceBOETransLink_IN VendInvoiceTrans
    FiscalEstablishmentVendInvoiceJour_BR VendInvoiceJour
    VendInvoiceHoldHistory VendInvoiceJour
    VendDirective_PSN VendInvoiceTrans
    VendInvoiceJourExtensionTH VendInvoiceJour
    VendInvoiceJour_W VendInvoiceJour
  ENDJOINS
  
  PARTREFERENCES
  ENDPARTREFERENCES
  
  DESIGN
    PROPERTIES
      Caption             #@SYS85478
      TitleDatasource     #VendInvoiceJour
      HideIfEmpty         #No
    ENDPROPERTIES
    
    CONTAINER
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane
          ElementPosition     #1073741823
          HierarchyParent     #Overview
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #ActionPane1
          ElementPosition     #1073741823
          HierarchyParent     #InvoiceLines
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANE
        PROPERTIES
          Name                #CustomsBillOfEntryJournalActionPane
          ElementPosition     #954437176
          HierarchyParent     #BillOfEntry
          Style               #Strip
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab
          ElementPosition     #1073741823
          HierarchyParent     #ActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #ActionPaneTab1
          ElementPosition     #1073741823
          HierarchyParent     #ActionPane1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL ACTIONPANETAB
        PROPERTIES
          Name                #CustomsBillOfEntryJournalActionPaneTab
          ElementPosition     #1431655764
          HierarchyParent     #CustomsBillOfEntryJournalActionPane
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #ButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #CustomsBillOfEntryJournalActionPaneTab
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #LinesButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab1
          DataSource          #VendInvoiceTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTONGROUP
        PROPERTIES
          Name                #OverviewButtonGroup
          ElementPosition     #1431655764
          HierarchyParent     #ActionPaneTab
          DataSource          #VendInvoiceJour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #CustomsBillofEntry
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #BillOfEntry
          DataSource          #CustomsVendBOETrans_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #LinesGrid
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #InvoiceLines
          DataSource          #VendInvoiceTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #OverviewGrid
          Width               #Column width
          Height              #Column height
          ElementPosition     #1610612734
          HierarchyParent     #Overview
          DataSource          #VendInvoiceJour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GRID
        PROPERTIES
          Name                #PurchPackingSlip
          Width               #Column width
          Height              #Column height
          ElementPosition     #1431655764
          HierarchyParent     #PackingSlip
          DataSource          #VendPackingSlipTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #AlcoholDeclaration_RU
          ElementPosition     #2147479550
          HierarchyParent     #LinesGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceTrans
          DataGroup           #AlcoholDeclaration_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Directive_PSN
          ElementPosition     #1073741822
          HierarchyParent     #LeftSide_PSN
          Caption             #@GLS223211
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #groupInterCompany
          ElementPosition     #2145386494
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataGroup           #Intercompany
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InventoryDimensions
          ElementPosition     #2113929214
          HierarchyParent     #LinesGrid
          BackgroundColor     #Window background
          DataSource          #InventDim
          DataGroup           #InventoryDimensions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #InvoiceGrouping
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataGroup           #InvoiceGrouping
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #LeftSide_PSN
          ElementPosition     #858993458
          HierarchyParent     #DirectiveTabPage_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #MessagePaneGroup
          Width               #Column width
          Height              #Column height
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #671088639
          HideIfEmpty         #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #PaymDelay
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #2147155966
          HierarchyParent     #OverviewGrid
          FrameType           #None
          BackgroundColor     #Window background
          DataSource          #VendInvoiceHoldHistory
          DataGroup           #VendInvoiceJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RemittanceGroup
          ElementPosition     #1073741823
          HierarchyParent     #Remittance
          Caption             #@sys152838
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #RightSide_PSN
          ElementPosition     #1717986916
          HierarchyParent     #DirectiveTabPage_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #Status_PSN
          ElementPosition     #1288490187
          HierarchyParent     #DirectiveTabPage_PSN
          Caption             #@GLS223220
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #STF_ElectronicAccounting
          AutoDeclaration     #Yes
          ElementPosition     #2147177811
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataGroup           #STF_ElectronicAccounting
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #VendInvoiceDeclaration
          ElementPosition     #2146959358
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataGroup           #VendInvoiceDeclaration
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL GROUP
        PROPERTIES
          Name                #WithholdingDeduction
          ElementPosition     #1610612733
          HierarchyParent     #LeftSide_PSN
          DataSource          #VendDirective_PSN
          DataGroup           #WithholdingDeduction
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MANAGEDHOST
        PROPERTIES
          Name                #MessagePaneHost
          Visible             #No
          Width               #Column width
          Skip                #Yes
          ConfigurationKey    #PublicSector
          ElementPosition     #1431655764
          HierarchyParent     #MessagePaneGroup
          TypeName            #Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessagePane
          AssemblyName        #Microsoft.Dynamics.Framework.UI.WinForms.Controls, Version=1.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #ButtonLineInventory
          AutoDeclaration     #Yes
          HelpText            #@SYS28780
          ElementPosition     #1610612734
          HierarchyParent     #LinesButtonGroup
          Text                #@SYS981
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #FactureEditLines_RU
          AutoDeclaration     #Yes
          HelpText            #@GLS104606
          ElementPosition     #2137696935
          HierarchyParent     #OverviewButtonGroup
          Text                #@GLS112796
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    factureEditLinesVend_Current_RU.enabled(! vendInvoiceJour.FacturedFully_RU);
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #Functions_LT
          CountryRegionCodes  #LT,LV
          HelpText            #@GLS113486
          ElementPosition     #2146784595
          HierarchyParent     #OverviewButtonGroup
          Text                #@SYS10340
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #Markup
          AutoDeclaration     #Yes
          HelpText            #@SYS69515
          ElementPosition     #1811939326
          HierarchyParent     #OverviewButtonGroup
          Text                #@SYS8371
          SaveRecord          #No
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    costAllocation_RU.enabled(vendInvoiceJour && vendInvoiceJour.readyForCostAllocation_RU());
            #    costAllocationHistory_RU.enabled(vendInvoiceJour && vendInvoiceJour.existForCostAllocation_RU());
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #PurchInvoiceShow
          HelpText            #@SYS22766
          ElementPosition     #1073741822
          HierarchyParent     #OverviewButtonGroup
          Text                #@SYS105079
          MultiSelect         #Yes
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    // <GEERU>
            #    boolean showBailee = (vendInvoiceJour.InventProfileType_RU == InventProfileType_RU::Bailee &&
            #                         vendInvoiceJour.hasPositiveTrans_RU());
            #
            #    purchInventBaileeReport_RU.visible(showBailee);
            #    purchInventBaileeReportCopy.visible(showBailee);
            #    purchInventBaileeReportOriginal.visible(showBailee);
            #    SeparatorBailee.visible(showBailee);
            #    // </GEERU>
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUBUTTON
        PROPERTIES
          Name                #STFxIncExcInvoice
          ElementPosition     #2139444561
          HierarchyParent     #OverviewButtonGroup
          Text                #DIOT/IETU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #BudgetReservation_PSN
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYP4990116
          ElementPosition     #1677721598
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          ReferenceField      #BudgetReservationLine_PSN
          Label               #@SYP4990001
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #CustomsVendBOETrans_IN_CustomsBillOfEntryNumberTable
          ElementPosition     #1073741822
          HierarchyParent     #CustomsBillofEntry
          DataSource          #CustomsVendBOETrans_IN
          ReferenceField      #CustomsBillOfEntryNumberTable
          Label               #@GLS5641
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #FiscalEstablishmentVendInvoiceJour_BR_FiscalEstablishment_BR
          ElementPosition     #1342177278
          HierarchyParent     #OverviewGrid
          DataSource          #FiscalEstablishmentVendInvoiceJour_BR
          ReferenceField      #FiscalEstablishment_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PaymDelay_SecurityRole_PSN
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1073741823
          HierarchyParent     #PaymDelay
          DataSource          #VendInvoiceHoldHistory
          ReferenceField      #SecurityRole_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #PurchCommitmentLine_PSN
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1744830462
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          ReferenceField      #PurchCommitmentLine_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VendDirective_PSN_VendRoutingSlip_PSN
          AllowEdit           #No
          ElementPosition     #1288490187
          HierarchyParent     #Directive_PSN
          DataSource          #VendDirective_PSN
          ReferenceField      #VendRoutingSlip_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VendInvoiceTrans_ProcurementCategory
          ElementPosition     #2030043134
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          ReferenceField      #ProcurementCategory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REFERENCEGROUP
        PROPERTIES
          Name                #VendInvoiceTrans_Tax1099Fields
          ElementPosition     #2147155966
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          ReferenceField      #Tax1099Fields
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TAB
        PROPERTIES
          Name                #Tab
          Width               #Column width
          Height              #Column height
          ElementPosition     #1342177278
          Tabs                #2
          DataSource          #VendInvoiceTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #BillOfEntry
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1677721598
          HierarchyParent     #Tab
          Caption             #@GLS5641
          DataSource          #CustomsVendBOETrans_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #DirectiveTabPage_PSN
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #2013265918
          HierarchyParent     #Tab
          Caption             #@GLS223211
          Columns             #3
          ArrangeGuide        
            ARRAY INDEX Columns 
              #0
              #0
              #0
            ENDARRAY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #InvoiceLines
          ElementPosition     #1610612734
          HierarchyParent     #Tab
          Caption             #@SYS15451
          DataSource          #VendInvoiceTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Overview
          ElementPosition     #1073741823
          HierarchyParent     #Tab
          Caption             #@SYS9039
          DataSource          #VendInvoiceJour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #PackingSlip
          AutoDeclaration     #Yes
          Visible             #No
          ConfigurationKey    #LedgerBasic
          ElementPosition     #1778384894
          HierarchyParent     #Tab
          Caption             #@SYS333836
          DataSource          #VendPackingSlipTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL TABPAGE
        PROPERTIES
          Name                #Remittance
          AllowEdit           #No
          ElementPosition     #1879048190
          HierarchyParent     #Tab
          Caption             #@sys152838
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #STF_BtnSelectInvoice
          AutoDeclaration     #Yes
          ElementPosition     #2147352573
          HierarchyParent     #OverviewButtonGroup
          Text                #@TRF8
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    super();
            #
            #    element.STF_filterSettlementInvoice();
            #
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #STF_BtnSettleDetails
          ElementPosition     #2147396264
          HierarchyParent     #OverviewButtonGroup
          Text                #@TRF9
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #
            #
            #     //begin STF_TRaceabiltyOfInvoice
            #    Object              stf_formRun;
            #    Args                stf_args = new Args();
            #    int                 stf_Count = 0;
            #    //end STF_TRaceabiltyOfInvoice
            #
            #    ;
            #
            #    stf_args.name(formstr(STF_SettlementDetailFromInvoiceJour));
            #    stf_formRun = ClassFactory.formRunClass(stf_args);
            #    stf_formRun.parmVendInvoiceJour( VendInvoiceJour );
            #    stf_formRun.init();
            #    stf_formRun.run();
            #    stf_formRun.wait();
            #
            #
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #STF_GetPDF
          ElementPosition     #2147425391
          HierarchyParent     #OverviewButtonGroup
          Text                #@TRF10
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #
            #
            #    STF_ConsumeSharePoint   STF_ConsumeSharePoint;
            #    XML                     response;
            #    str                     Content, sTempPath, sFileName = "Test8.pdf", sFileNametxt = "Invoice" + VendInvoiceJour.VATNum + ".pdf";
            #    System.IO.StreamWriter  sw;
            #    InteropPermission perm = new InteropPermission(InteropKind::ClrInterop);
            #
            #    System.Byte[] pdfDocBuffer;
            #    System.IO.FileInfo fi_pdfDoc;
            #    System.IO.FileStream fs;
            #    //System.Byte byte;
            #    int i, len=0, byte;
            #
            #    System.Text.Encoding code;
            #    ReportRun report;
            #   SysOperationProgress simpleProgress;
            #
            #
            #
            #    #AviFiles
            #    ;
            #
            #    simpleProgress = new SysOperationProgress(1,NoYes::Yes);
            #
            #    simpleProgress.setCaption("Consultando..");
            #    simpleProgress.setAnimation(#AviUpdate);
            #    simpleProgress.setTotal(30000);
            #
            #    simpleProgress.setCount(20000);
            #
            #    STF_ConsumeSharePoint   = new STF_ConsumeSharePoint();
            #    STF_ConsumeSharePoint.parmVendInvoiceJour( VendInvoiceJour );
            #    STF_ConsumeSharePoint.run();
            #    response = STF_ConsumeSharePoint.GetResponseXml();
            #
            #    simpleProgress.setCount(30000);
            #
            #    if( response == "")
            #    {
            #        throw Info("No se encontro el archivo.");
            #    }
            #
            #    perm.assert();
            #
            #    sTempPath = WINAPI::getTempPath();
            #
            #    sFileNametxt = sTempPath + sFileNametxt;
            #
            #    //info("File is at: " + sFileNametxt);
            #
            #    if (WINAPI::fileExists(sFileNametxt))
            #    {
            #        WINAPI::deleteFile(sFileNametxt);
            #    }
            #
            #    pdfDocBuffer = System.Convert::FromBase64String(response);
            #
            #    code = System.Text.Encoding::get_Default();
            #
            #    response = code.GetString(pdfDocBuffer);
            #
            #    fi_pdfDoc = new System.IO.FileInfo(sFileNametxt);
            #
            #    fs= new System.IO.FileStream(fi_pdfDoc.get_FullName(), System.IO.FileMode::Create, System.IO.FileAccess::Write);
            #    fs.Write(pdfDocBuffer, 0, pdfDocBuffer.get_Length());
            #
            #/*    sw = new System.IO.StreamWriter(sFileNametxt);
            #    sw.WriteLine(response);
            #
            #
            #    sw.Flush();
            #    sw.Close();
            #    sw.Dispose();*/
            #
            #    fs.Flush();
            #    fs.Close();
            #    fs.Dispose();
            #
            #    CodeAccessPermission::revertAssert();
            #
            #    WinAPI::shellExecute(sFileNametxt);
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL BUTTON
        PROPERTIES
          Name                #STF_SetUUID
          ElementPosition     #2147454518
          HierarchyParent     #OverviewButtonGroup
          Text                #@TRF11
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #
            #
            #    STF_UploadUUIDToJournal   STF_UploadUUIDToJournal;
            #    XML                     response;
            #    str                     Content, sTempPath, sFileName = "Test8.pdf", sFileNametxt = "Invoice" + VendInvoiceJour.VATNum + ".pdf";
            #    System.IO.StreamWriter  sw;
            #    InteropPermission perm = new InteropPermission(InteropKind::ClrInterop);
            #
            #    System.Byte[] pdfDocBuffer;
            #    System.IO.FileInfo fi_pdfDoc;
            #    System.IO.FileStream fs;
            #    //System.Byte byte;
            #    int i, len=0, byte;
            #
            #    System.Text.Encoding code;
            #    ReportRun report;
            #   SysOperationProgress simpleProgress;
            #
            #
            #    ;
            #
            #
            #    STF_UploadUUIDToJournal = new STF_UploadUUIDToJournal();
            #    if( STF_UploadUUIDToJournal.prompt() )
            #    {
            #        STF_UploadUUIDToJournal.run();
            #    }
            #
            #    vendInvoiceJour_ds.reread();
            #    vendInvoiceJour_ds.research();
            #    vendInvoiceJour_ds.refresh();
            #
            #
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #PaymDelay_InvoicePaymHold_PSN
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #715827882
          HierarchyParent     #PaymDelay
          DataSource          #VendInvoiceHoldHistory
          DataField           #InvoicePaymHold_PSN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #STF_ElectronicAccounting_STF_ValidCFDI
          ElementPosition     #1073741822
          HierarchyParent     #STF_ElectronicAccounting
          Label               #CFDI válido
          DataSource          #VendInvoiceJour
          DataField           #STF_ValidCFDI
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendDirective_PSN_RequisitionOrder
          ElementPosition     #1073741822
          HierarchyParent     #RightSide_PSN
          DataSource          #VendDirective_PSN
          DataField           #RequisitionOrder
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_Correct_RU
          ElementPosition     #2144337918
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataField           #Correct_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_FactureFully_RU
          ElementPosition     #2143813630
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataField           #FacturedFully_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_InvoiceRegister_LT
          ElementPosition     #2147352574
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataField           #InvoiceRegister_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_notClosed_RU
          CountryRegionCodes  #RU
          ElementPosition     #2143551486
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataMethod          #notClosed_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_stf_hasInvoices
          Visible             #No
          ElementPosition     #2147254270
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          Label               #Tiene facturas desglosadas
          DataSource          #VendInvoiceJour
          DataMethod          #stfHasInvoicePO
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_STFxExcludeOfIETU
          ElementPosition     #2147287038
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataField           #STFxExcludeOfIETU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_STFxImportTax
          ElementPosition     #2147319806
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataField           #STFxImportTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_UnitedVATInvoice_LT
          HelpText            #@GLS220218
          ElementPosition     #2144468990
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataField           #UnitedVATInvoice_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL CHECKBOX
        PROPERTIES
          Name                #VendInvoiceJour_VATOnPayment_RU
          ElementPosition     #2144075774
          HierarchyParent     #OverviewGrid
          BackgroundColor     #Window background
          DataSource          #VendInvoiceJour
          DataField           #VATOnPayment_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendDirective_PSN_AccountantApprovalStatus
          ElementPosition     #1342177275
          HierarchyParent     #Status_PSN
          DataSource          #VendDirective_PSN
          DataField           #AccountantApprovalStatus
        ENDPROPERTIES
        
        METHODS
          SOURCE #modified
            #/// <summary>
            #/// Performs any processing that needs to occur when the
            #/// <c>VendDirective_PSN_AccountantApprovalStatus</c> control gets its value changed
            #/// </summary>
            #/// <returns>
            #/// true if the value is succesfully modified; otherwise, false.
            #/// </returns>
            #public boolean modified()
            #{
            #    boolean ret;
            #
            #    ret = super();
            #
            #    if (ret)
            #    {
            #        element.setFieldsEditableForDirective();
            #    }
            #
            #    return ret;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendDirective_PSN_DirectorApprovalStatus
          ElementPosition     #536870910
          HierarchyParent     #Status_PSN
          DataSource          #VendDirective_PSN
          DataField           #DirectorApprovalStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendInvoiceJour_InventProfileType_RU
          ElementPosition     #2145124350
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #InventProfileType_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendInvoiceJour_InvoiceStatus_LT
          ElementPosition     #2147221502
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #InvoiceStatus_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendInvoiceJour_W_InvoiceType_MY
          ElementPosition     #2143420414
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour_W
          DataField           #InvoiceType_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL COMBOBOX
        PROPERTIES
          Name                #VendInvoiceJour_WhoIsAuthor_LT
          ElementPosition     #2147090430
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #WhoIsAuthor_LT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #vatDueDate_W
          ElementPosition     #2035635539
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataMethod          #vatDueDate_W
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceJour_CorrectedInvoiceDate_RU
          ElementPosition     #2144862206
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #CorrectedInvoiceDate_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceJour_DocumentDate
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2068630730
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #DocumentDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceJour_DueDate
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #2147024894
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #DueDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceJour_InvoiceDate
          ElementPosition     #2013265918
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #InvoiceDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceJour_InvoiceReceiptDate_TH
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2079955351
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJourExtensionTH
          DataField           #InvoiceReceiptDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceJour_PurchReceiptDate_W
          ElementPosition     #2058005160
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #PurchReceiptDate_W
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceJour_TaxInvoiceReceiptDate
          ElementPosition     #2091279972
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJourExtensionTH
          DataField           #TaxInvoiceReceiptDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DATEEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_deliveryDate
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1979711486
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataMethod          #deliveryDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL DROPDIALOGBUTTON
        PROPERTIES
          Name                #UpdateImportDeclarationNum_MY
          Visible             #No
          ElementPosition     #2147396264
          HierarchyParent     #OverviewButtonGroup
          NeedsRecord         #Yes
          DataSource          #VendInvoiceJour
          MenuItemName        #vendinvoicejournalupdateImportDeclNum_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL INT64EDIT
        PROPERTIES
          Name                #VendInvoiceTrans_PurchaseLineLineNumber
          ElementPosition     #1610612734
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #PurchaseLineLineNumber
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AccountingDistributionButtonView
          AutoDeclaration     #Yes
          ElementPosition     #1700091219
          HierarchyParent     #OverviewButtonGroup
          MenuItemName        #AccountingDistributionsDocumentView
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #AccountingDistributionButtonViewLine
          AutoDeclaration     #Yes
          ElementPosition     #2080374782
          HierarchyParent     #LinesButtonGroup
          Text                #@SYS323891
          DataSource          #VendInvoiceTrans
          MenuItemName        #AccountingDistributions
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CostAllocation_RU
          AutoDeclaration     #Yes
          ElementPosition     #1789569704
          HierarchyParent     #Markup
          MenuItemName        #CostAllocation_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CostAllocationHistory_RU
          AutoDeclaration     #Yes
          ElementPosition     #2058005160
          HierarchyParent     #Markup
          MenuItemName        #CostAllocationHistory_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #CustomsVendBOESubTrans
          HelpText            #@GLS221543
          ElementPosition     #1431655764
          HierarchyParent     #ButtonGroup
          NeedsRecord         #Yes
          DataSource          #CustomsVendBOETrans_IN
          MenuItemName        #CustomsVendBOESubTrans_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #ExciseManufactureImporterInvoiceLine_IN
          ElementPosition     #715827880
          HierarchyParent     #OverviewButtonGroup
          DataSource          #VendInvoiceJour
          MenuItemName        #ExciseManufactureImporterInvoiceLine_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FactureEditLinesVend_Current_RU
          AutoDeclaration     #Yes
          ElementPosition     #1610612733
          HierarchyParent     #FactureEditLines_RU
          MenuItemName        #FactureEditLinesVend_Current_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FactureEditLinesVend_RU
          ElementPosition     #1073741822
          HierarchyParent     #FactureEditLines_RU
          MenuItemName        #FactureEditLinesVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FactureVend_RU
          AutoDeclaration     #Yes
          ElementPosition     #2141891239
          HierarchyParent     #OverviewButtonGroup
          DataSource          #VendInvoiceJour
          MenuItemName        #FactureJournalVend_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #FiscalReference_BR
          CountryRegionCodes  #BR
          ElementPosition     #2144687442
          HierarchyParent     #OverviewButtonGroup
          MenuItemName        #FiscalReference_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventDimParmFixed
          ElementPosition     #1879048190
          HierarchyParent     #ButtonLineInventory
          MenuItemName        #InventDimParmFixed
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #InventTrans_TransitDlv_BR
          ElementPosition     #2146085544
          HierarchyParent     #OverviewButtonGroup
          DataSource          #VendInvoiceJour
          MenuItemName        #InventTrans_TransitDlv_BR
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LedgerTransactVoucher
          ElementPosition     #1610612734
          HierarchyParent     #OverviewButtonGroup
          SaveRecord          #No
          DataSource          #VendInvoiceJour
          MenuItemName        #LedgerTransVoucher1
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LtCustChangeDocAuthor
          CountryRegionCodes  #LT
          ElementPosition     #1717986916
          HierarchyParent     #Functions_LT
          MenuItemType        #Action
          MenuItemName        #LtVendChangeDocAuthor
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LtCustChangeInvoiceRegister
          CountryRegionCodes  #LT,LV
          ElementPosition     #1288490187
          HierarchyParent     #Functions_LT
          MenuItemType        #Action
          MenuItemName        #LtVendChangeInvoiceRegister
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #LtVendChangeDocStatus
          CountryRegionCodes  #LT,LV
          ElementPosition     #858993458
          HierarchyParent     #Functions_LT
          MenuItemType        #Action
          MenuItemName        #LtVendChangeDocStatus
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupAdjustment
          ElementPosition     #1610612734
          HierarchyParent     #Markup
          SaveRecord          #No
          MenuItemType        #Action
          MenuItemName        #MarkupAdjustment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTrans
          ElementPosition     #1073741823
          HierarchyParent     #Markup
          SaveRecord          #No
          DataSource          #VendInvoiceJour
          MenuItemName        #MarkupTrans_HeadingPurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #MarkupTransMenuItemButton
          AutoDeclaration     #Yes
          ElementPosition     #1073741823
          HierarchyParent     #LinesButtonGroup
          SaveRecord          #No
          DataSource          #VendInvoiceTrans
          MenuItemName        #MarkupTrans_LinePurch
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PrintExciseInvoice
          AutoDeclaration     #Yes
          CountryRegionCodes  #IN
          Enabled             #No
          HelpText            #@SYP4860330
          ElementPosition     #715827882
          HierarchyParent     #PurchInvoiceShow
          Text                #@SYP4860270
          DataSource          #VendInvoiceJour
          MenuItemType        #Output
          MenuItemName        #ExciseInvoicePurchReturn_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchAcceptanceReport_RU
          ElementPosition     #2013265918
          HierarchyParent     #PurchInvoiceShow
          DataSource          #VendInvoiceJour
          MenuItemType        #Output
          MenuItemName        #PurchAcceptanceReport_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchCostTrans
          ElementPosition     #1879048190
          HierarchyParent     #LinesButtonGroup
          DataSource          #VendInvoiceTrans
          MenuItemName        #PurchCostTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchEUVatInvoice
          ElementPosition     #2113929214
          HierarchyParent     #OverviewButtonGroup
          MenuItemType        #Output
          MenuItemName        #VendEUVatInvoice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchIndirectTrans
          ElementPosition     #2013265918
          HierarchyParent     #LinesButtonGroup
          DataSource          #VendInvoiceTrans
          MenuItemName        #PurchIndirectTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchInventBaileeReport_RU
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ElementPosition     #2120640098
          HierarchyParent     #PurchInvoiceShow
          Text                #@SYS70782
          MultiSelect         #Yes
          DataSource          #VendInvoiceJour
          MenuItemType        #Output
          MenuItemName        #PurchInventBaileeReport_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchInventBaileeReportCopy
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ElementPosition     #2066953008
          HierarchyParent     #PurchInvoiceShow
          Text                #@SYS105080
          MultiSelect         #Yes
          MenuItemType        #Output
          MenuItemName        #PurchInventBaileeReportCopy
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchInventBaileeReportOriginal
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ElementPosition     #2093796553
          HierarchyParent     #PurchInvoiceShow
          Text                #@SYS105081
          MultiSelect         #Yes
          MenuItemType        #Output
          MenuItemName        #PurchInventBaileeReportOriginal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchInvoice
          ElementPosition     #1879048190
          HierarchyParent     #PurchInvoiceShow
          Text                #@SYS70782
          SaveRecord          #No
          DataSource          #VendInvoiceJour
          MenuItemType        #Output
          MenuItemName        #VendInvoiceDocument
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.printTaxUnrealizedInvoice();
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchInvoiceCopy
          ElementPosition     #1073741823
          HierarchyParent     #PurchInvoiceShow
          Text                #@SYS105080
          SaveRecord          #No
          DataSource          #VendInvoiceJour
          MenuItemType        #Output
          MenuItemName        #VendInvoiceDocumentCopy
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.printTaxUnrealizedInvoice(PrintCopyOriginal::Copy);
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchInvoiceOriginal
          ElementPosition     #1610612734
          HierarchyParent     #PurchInvoiceShow
          Text                #@SYS105081
          SaveRecord          #No
          DataSource          #VendInvoiceJour
          MenuItemType        #Output
          MenuItemName        #VendInvoiceDocumentOriginal
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #void clicked()
            #{
            #    element.printTaxUnrealizedInvoice();
            #    super();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #PurchPackingSlips
          AutoDeclaration     #Yes
          Visible             #No
          HelpText            #@SYS332888
          ElementPosition     #2119521619
          HierarchyParent     #OverviewButtonGroup
          DataSource          #VendInvoiceJour
          MenuItemName        #VendPackingSlipJournal
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #STF_ElectronicAccountinExtended
          ElementPosition     #2141192187
          HierarchyParent     #OverviewButtonGroup
          Text                #Desglose de facturas
          MenuItemName        #STF_ElectronicInvoiceReferences
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #STF_SATVerifyCFDIServiceAgent
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2130706430
          HierarchyParent     #OverviewButtonGroup
          DataSource          #VendInvoiceJour
          MenuItemType        #Action
          MenuItemName        #STF_SATVerifyCFDIServiceAgent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #STFxExcInvoice
          ElementPosition     #1610612733
          HierarchyParent     #STFxIncExcInvoice
          DataSource          #VendInvoiceJour
          MenuItemType        #Action
          MenuItemName        #STFxExcInvoiceDIOT
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #STFxIncInvoice
          ElementPosition     #1073741822
          HierarchyParent     #STFxIncExcInvoice
          DataSource          #VendInvoiceJour
          MenuItemType        #Action
          MenuItemName        #STFxIncInvoiceDIOT
        ENDPROPERTIES
        
        METHODS
          SOURCE #clicked
            #//STFxDIOT_IETU ArlyRubio 28.8.2012
            #void clicked()
            #{
            #    super();
            #
            #    VendInvoiceJour_ds.reread();
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #SubledgerJournalAccountEntries
          AutoDeclaration     #Yes
          ElementPosition     #1789569704
          HierarchyParent     #OverviewButtonGroup
          MenuItemName        #SubledgerJournalAccountEntries
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxDefermentDetails
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2147308883
          HierarchyParent     #OverviewButtonGroup
          Text                #@SYP4883240
          MenuItemName        #TaxDefermentDetails_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxForms_IN
          ElementPosition     #2147134120
          HierarchyParent     #OverviewButtonGroup
          DataSource          #VendInvoiceTrans
          MenuItemName        #TransitDocumentSalesTaxForm_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxTransactions
          ElementPosition     #2080374782
          HierarchyParent     #OverviewButtonGroup
          SaveRecord          #No
          MenuItemName        #TaxTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TaxWithholdTransactions
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2097151998
          HierarchyParent     #OverviewButtonGroup
          Text                #@SYS81790
          SaveRecord          #No
          MenuItemName        #TaxWithholdTrans_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #Transactions
          ElementPosition     #2013265918
          HierarchyParent     #OverviewButtonGroup
          SaveRecord          #No
          MenuItemName        #VendTrans
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #TransLot
          ElementPosition     #1073741823
          HierarchyParent     #ButtonLineInventory
          SaveRecord          #No
          DataSource          #VendInvoiceTrans
          MenuItemName        #InventTransLot
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VATDefermentDetails
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2125114024
          HierarchyParent     #OverviewButtonGroup
          Text                #@GLS6044
          MenuItemName        #vatdefermentDetails_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendCorrectJour_PL
          ElementPosition     #2146784595
          HierarchyParent     #OverviewButtonGroup
          MenuItemName        #PlVendCorrectJour
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendInvoice4PaymJournal_RU
          ElementPosition     #2133502631
          HierarchyParent     #OverviewButtonGroup
          MenuItemName        #VendInvoice4PaymJournal_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL MENUITEMBUTTON
        PROPERTIES
          Name                #VendInvoiceHoldHistory_MenuItem
          CountryRegionCodes  #FR
          ElementPosition     #2130706430
          HierarchyParent     #OverviewButtonGroup
          Style               #Link
          DataSource          #VendInvoiceJour
          MenuItemName        #VendInvoiceHoldHistory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #CustomsVendBOETrans_IN_BillOfEntryQty
          ElementPosition     #1610612733
          HierarchyParent     #CustomsBillofEntry
          DataSource          #CustomsVendBOETrans_IN
          DataField           #BillOfEntryQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceJour_InvoiceAmount
          ElementPosition     #2143289342
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #InvoiceAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceJour_VAT
          ElementPosition     #2139095038
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #SumTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_DiscAmount
          ElementPosition     #2143289342
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #DiscAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_DiscPercent
          ElementPosition     #2145386494
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #DiscPercent
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_LineAmount
          ElementPosition     #2146435070
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataMethod          #lineAmountInclTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_LineAmountTax
          ElementPosition     #2146959358
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #LineAmountTax
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_PdsCWQty
          ElementPosition     #2122317822
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #PdsCWQty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_PurchPrice
          ElementPosition     #2139095038
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #PurchPrice
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_Qty
          ElementPosition     #2130706430
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #Qty
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_Tax1099Amount
          ElementPosition     #2147352574
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #Tax1099Amount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_Tax1099StateAmount
          ElementPosition     #2147450878
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #Tax1099StateAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendPackingSlipTrans_InventQty
          ElementPosition     #1932735281
          HierarchyParent     #PurchPackingSlip
          DataSource          #VendPackingSlipTrans
          DataMethod          #inventQuantity
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #VendPackingSlipTrans_PurchQty
          ElementPosition     #1717986916
          HierarchyParent     #PurchPackingSlip
          DataSource          #VendPackingSlipTrans
          DataMethod          #purchQuantity
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #WithholdingDeduction_PSN_DeductAmount
          NeededPermission    #Manual
          ElementPosition     #1789569705
          HierarchyParent     #WithholdingDeduction
          DataSource          #VendDirective_PSN
          DataField           #DeductAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL REALEDIT
        PROPERTIES
          Name                #WithholdingDeduction_PSN_WithholdAmount
          NeededPermission    #Manual
          ElementPosition     #1073741823
          HierarchyParent     #WithholdingDeduction
          DataSource          #VendDirective_PSN
          DataField           #WithholdAmount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #ButtonSeparator
          CountryRegionCodes  #RU
          ConfigurationKey    #LedgerBasicSalesTax
          ElementPosition     #2130706429
          HierarchyParent     #OverviewButtonGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator
          ElementPosition     #1610612734
          HierarchyParent     #ButtonLineInventory
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #Separator1
          ElementPosition     #1968526674
          HierarchyParent     #Markup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL SEPARATOR
        PROPERTIES
          Name                #SeparatorBailee
          AutoDeclaration     #Yes
          CountryRegionCodes  #RU
          ElementPosition     #2040109463
          HierarchyParent     #PurchInvoiceShow
          Text                #@GLS115490
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #displayTaxBranchDimension
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2025848830
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataMethod          #displayTaxBranchDimension
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editReasonCode
          ElementPosition     #2147467262
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataMethod          #editReasonCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #editReasonComment
          ElementPosition     #2147475454
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataMethod          #editReasonComment
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PaymDelay_M_displayReasonDescription
          AutoDeclaration     #Yes
          AllowEdit           #No
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1789569705
          HierarchyParent     #PaymDelay
          Label               #@SPS1817
          DataSource          #VendInvoiceHoldHistory
          DataMethod          #DisplayReasonDescription
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #PaymDelay_M_editReasonCode
          AutoDeclaration     #Yes
          ConfigurationKey    #PurchFrenchRegulatory_PSN
          ElementPosition     #1431655764
          HierarchyParent     #PaymDelay
          DataSource          #VendInvoiceHoldHistory
          DataMethod          #editReasonCode
        ENDPROPERTIES
        
        METHODS
          SOURCE #lookup
            #/// <summary>
            #/// Constructs a lookup for the reason code field.
            #/// </summary>
            #public void lookup()
            #{
            #    ReasonFormTable::reasonCodeLookup(
            #        this,
            #        LedgerJournalACType::Vend,
            #        LedgerJournalACType::Vend,
            #        true);
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Remittance_RemittanceAddress
          ElementPosition     #1610612734
          HierarchyParent     #RemittanceGroup
          DataSource          #VendInvoiceJour
          DataMethod          #displayRemittanceAddress
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #Remittance_RemittanceLocation
          ElementPosition     #1073741823
          HierarchyParent     #RemittanceGroup
          DataSource          #VendInvoiceJour
          DataMethod          #displayRemittanceLocation
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #STF_SettleMode
          Visible             #No
          ElementPosition     #2147450878
          HierarchyParent     #OverviewGrid
          Label               #@TRF22
          DataSource          #VendInvoiceJour
          DataMethod          #STF_SettleMode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #STF_SettleReference
          Visible             #No
          ElementPosition     #2147467262
          HierarchyParent     #OverviewGrid
          Label               #@TRF21
          DataSource          #VendInvoiceJour
          DataMethod          #STF_SettleReference
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendDirective_PSN_AccountantUserId
          AllowEdit           #No
          ElementPosition     #1610612730
          HierarchyParent     #Status_PSN
          DataSource          #VendDirective_PSN
          DataField           #AccountantUserId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendDirective_PSN_DirectiveId
          AllowEdit           #No
          ElementPosition     #858993458
          HierarchyParent     #Directive_PSN
          DataSource          #VendDirective_PSN
          DataField           #VendDirectiveId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendDirective_PSN_DirectorUserId
          AllowEdit           #No
          ElementPosition     #805306365
          HierarchyParent     #Status_PSN
          DataSource          #VendDirective_PSN
          DataField           #DirectorUserId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendDirective_PSN_Memo
          ElementPosition     #1610612733
          HierarchyParent     #RightSide_PSN
          DataSource          #VendDirective_PSN
          DataField           #Memo
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_CFDIUUID_MX
          ElementPosition     #2147199656
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #CFDIUUID_MX
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_CorrectedInvoiceId_RU
          ElementPosition     #2144600062
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #CorrectedInvoiceId_RU
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_CurrencyCode
          ElementPosition     #2130706430
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #CurrencyCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_DocumentNum
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2054370096
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #DocumentNum
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_InvoiceAccount
          ElementPosition     #1610612734
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #InvoiceAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_InvoiceNum
          AutoDeclaration     #Yes
          ElementPosition     #2080374782
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #InvoiceId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_LedgerVoucher
          ElementPosition     #2113929214
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #LedgerVoucher
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_PurchNum
          ElementPosition     #1879048190
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #PurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_RealVendName_TH
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #2102604593
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJourExtensionTH
          DataField           #RealVendName
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_STFxPurchId
          ElementPosition     #2147385342
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #STFxPurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_STFxVendAccount
          Visible             #No
          ElementPosition     #2147434494
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #STFxVendAccount
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_TaxSetoffVoucher
          ElementPosition     #2145910782
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #TaxSetoffVoucher_IN
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_VendPaymentGroup
          AutoDeclaration     #Yes
          AllowEdit           #No
          ElementPosition     #2146435070
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour
          DataField           #VendPaymentGroup
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceJour_W_TaxGSTImportDeclarationNo_MY
          Visible             #No
          ElementPosition     #2147418110
          HierarchyParent     #OverviewGrid
          DataSource          #VendInvoiceJour_W
          DataField           #TaxGSTImportDeclarationNo_MY
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_ItemId
          ElementPosition     #1879048190
          HierarchyParent     #LinesGrid
          DisplayLength       #15
          DataSource          #VendInvoiceTrans
          DataField           #ItemId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_Name
          Height              #Column height
          ElementPosition     #2080374782
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #Name
        ENDPROPERTIES
        
        METHODS
          SOURCE #toolTip
            #public str toolTip()
            #{
            #    return vendInvoiceTrans.Name;
            #}
          ENDSOURCE
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_origPurchId
          ElementPosition     #1073741823
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #OrigPurchId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_productReceiptId
          AutoDeclaration     #Yes
          Visible             #No
          ElementPosition     #1929379838
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataMethod          #productReceiptId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendInvoiceTrans_Tax1099State
          ElementPosition     #2147418110
          HierarchyParent     #LinesGrid
          DataSource          #VendInvoiceTrans
          DataField           #Tax1099State
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #VendPackingSlipTrans_PackingSlipId
          HelpText            #@SYS87392
          ElementPosition     #1145324610
          HierarchyParent     #PurchPackingSlip
          Label               #@SYS13864
          DataSource          #VendPackingSlipTrans
          DataField           #PackingSlipId
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #WithholdingDeduction_PSN_DeductCode
          NeededPermission    #Manual
          ElementPosition     #1431655764
          HierarchyParent     #WithholdingDeduction
          DataSource          #VendDirective_PSN
          DataField           #DeductCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL STRINGEDIT
        PROPERTIES
          Name                #WithholdingDeduction_PSN_WithholdCode
          NeededPermission    #Manual
          ElementPosition     #715827882
          HierarchyParent     #WithholdingDeduction
          DataSource          #VendDirective_PSN
          DataField           #WithholdCode
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #VendDirective_PSN_AccountantApprovalDate
          AllowEdit           #No
          ElementPosition     #1879048185
          HierarchyParent     #Status_PSN
          DataSource          #VendDirective_PSN
          DataField           #AccountantApprovalDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #VendDirective_PSN_DirectorApprovalDate
          AllowEdit           #No
          ElementPosition     #1073741820
          HierarchyParent     #Status_PSN
          DataSource          #VendDirective_PSN
          DataField           #DirectorApprovalDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
      CONTROL UTCDATETIMEEDIT
        PROPERTIES
          Name                #VendDirective_PSN_IssueDate
          ElementPosition     #1717986916
          HierarchyParent     #Directive_PSN
          DisplayOption       #Date
          DataSource          #VendDirective_PSN
          DataField           #IssueDate
        ENDPROPERTIES
        
        METHODS
        ENDMETHODS
      ENDCONTROL 
      
    ENDCONTAINER
    
  ENDDESIGN
  
  PERMISSIONS #Permissions
    PROPERTIES
    ENDPROPERTIES
    
    PERMISSIONSET #Read
      PROPERTIES
      ENDPROPERTIES
      
      FORM #Controls
      ENDFORM
      
    TABLES #Tables
    ENDTABLES
    
  SERVERMETHODS #Server Methods
  ENDSERVERMETHODS
  
ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Update
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Create
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

PERMISSIONSET #Delete
  PROPERTIES
  ENDPROPERTIES
  
  FORM #Controls
  ENDFORM
  
TABLES #Tables
ENDTABLES

SERVERMETHODS #Server Methods
ENDSERVERMETHODS

ASSOCIATEDFORMS #Associated Forms
ENDASSOCIATEDFORMS

ENDPERMISSIONSET

ENDPERMISSIONS

ENDFORM


***Element: PRN

; Microsoft Dynamics AX Project : STF_ElectronicAccounting_Extended unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #STF_ElectronicAccounting_Extended
  SHARED
  PROPERTIES
    Name                #STF_ElectronicAccounting_Extended
    Origin              #{9F0AAD81-5CE3-436D-85B8-C1C6B27E6A99}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    GROUP #DataDictionary
      PROPERTIES
        Name                #DataDictionary
        ProjectGroupType    #DataDictionary
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      GROUP #Tables
        PROPERTIES
          Name                #Tables
          ProjectGroupType    #Tables
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 491
          NODETYPE 204
          NAME #VendInvoiceJour
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 340
          NODETYPE 204
          NAME #PurchLine
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 44
          UTILOBJECTID 105691
          NODETYPE 204
          NAME #STF_ElectronicInvoiceReferences
        ENDNODE
        ENDGROUP
        
      ENDGROUP
      
    GROUP #MenuItems
      PROPERTIES
        Name                #MenuItems
        ProjectGroupType    #MenuItems
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      GROUP #Display
        PROPERTIES
          Name                #Display
          ProjectGroupType    #Display
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 1
          UTILOBJECTID 0
          NODETYPE 296
          NAME #STF_EditBankAccountTrans
        ENDNODE
        BEGINNODE
          FILETYPE 0
          UTILTYPE 1
          UTILOBJECTID 0
          NODETYPE 296
          NAME #STF_ElectronicInvoiceReferences
        ENDNODE
        ENDGROUP
        
      GROUP #Action
        PROPERTIES
          Name                #Action
          ProjectGroupType    #Action
          GroupMask           #
          PreventEditProperties #No
        ENDPROPERTIES
        
        BEGINNODE
          FILETYPE 0
          UTILTYPE 3
          UTILOBJECTID 0
          NODETYPE 296
          NAME #STF_SATVerifyCFDIServiceAgent_References
        ENDNODE
        ENDGROUP
        
      ENDGROUP
      
    GROUP #Classes
      PROPERTIES
        Name                #Classes
        ProjectGroupType    #Classes
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028054
        NODETYPE 329
        NAME #STF_SATVerifyCFDIServiceAgent
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028006
        NODETYPE 329
        NAME #STF_CalculateSATVouchersReport
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 45
        UTILOBJECTID 1028055
        NODETYPE 329
        NAME #STF_SATVerifyCFDIServiceAgent_References
      ENDNODE
      ENDGROUP
      
    GROUP #Forms
      PROPERTIES
        Name                #Forms
        ProjectGroupType    #Forms
        GroupMask           #
        PreventEditProperties #No
      ENDPROPERTIES
      
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #PurchTable
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #STF_ElectronicInvoiceReferences
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #STF_EditBankAccountTrans
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #LedgerJournalTransVendPaym
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #LedgerJournalTransCustPaym
      ENDNODE
      BEGINNODE
        FILETYPE 0
        UTILTYPE 11
        UTILOBJECTID 0
        NODETYPE 201
        NAME #VendInvoiceJournal
      ENDNODE
      ENDGROUP
      
  ENDPROJECT
  

***Element: END
